line 1: k=1
line 2: insert (3)
line 3: inorderTraversal
(3) 
line 4: insert (3)
line 5: inorderTraversal
(3) (3) 
line 6: insert (8)
line 7: inorderTraversal
(3) (3) (8) 
line 8: kNearestNeighbour 8 (4)
(3) (3) (8) 
line 9: inorderTraversal
(3) (3) (8) 
line 10: clear
line 11: buildTree 17
(4) (3) (10) (5) (3) (3) (3) (3) (7) (6) (6) (1) (9) (8) (4) (1) (9) 
line 12: inorderTraversal
(1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (6) (6) (7) (8) (9) (9) (10) 
line 13: insert (5)
line 14: inorderTraversal
(1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) 
line 15: insert (10)
line 16: inorderTraversal
(1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) 
line 17: nearestNeighbour (5)
(5) 
line 18: inorderTraversal
(1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) 
line 19: kNearestNeighbour 1 (8)
(8) 
line 20: inorderTraversal
(1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) 
line 21: remove (3)
line 22: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) 
line 23: nearestNeighbour (7)
(7) 
line 24: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) 
line 25: nearestNeighbour (9)
(9) 
line 26: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) 
line 27: nearestNeighbour (10)
(10) 
line 28: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) 
line 29: insert (2)
line 30: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) 
line 31: insert (9)
line 32: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 33: insert (3)
line 34: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 35: kNearestNeighbour 8 (10)
(6) (7) (8) (9) (9) (9) (10) (10) 
line 36: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 37: nearestNeighbour (2)
(2) 
line 38: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 39: insert (8)
line 40: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (10) (10) 
line 41: insert (7)
line 42: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 43: nearestNeighbour (3)
(3) 
line 44: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 45: nearestNeighbour (4)
(4) 
line 46: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 47: remove (8)
line 48: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 49: nearestNeighbour (1)
(1) 
line 50: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 51: kNearestNeighbour 4 (2)
(1) (1) (2) (3) 
line 52: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 53: nearestNeighbour (4)
(4) 
line 54: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 55: insert (1)
line 56: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 57: nearestNeighbour (3)
(3) 
line 58: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 59: kNearestNeighbour 1 (8)
(8) 
line 60: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 61: kNearestNeighbour 5 (5)
(4) (5) (5) (6) (6) 
line 62: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 63: kNearestNeighbour 8 (10)
(7) (7) (8) (9) (9) (9) (10) (10) 
line 64: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 65: nearestNeighbour (5)
(5) 
line 66: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 67: nearestNeighbour (1)
(1) 
line 68: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 69: kNearestNeighbour 4 (1)
(1) (1) (1) (2) 
line 70: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 71: postorderTraversal
(1) (2) (1) (1) (3) (3) (3) (3) (3) (4) (5) (6) (6) (5) (7) (8) (9) (10) (10) (9) (9) (7) (4) 
line 72: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 73: kNearestNeighbour 8 (6)
(4) (5) (5) (6) (6) (7) (7) (8) 
line 74: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 75: remove (10)
line 76: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 77: clear
line 78: buildTree 1
(5) 
line 79: inorderTraversal
(5) 
line 80: insert (1)
line 81: inorderTraversal
(1) (5) 
line 82: kNearestNeighbour 6 (3)
(1) (5) 
line 83: inorderTraversal
(1) (5) 
line 84: insert (10)
line 85: inorderTraversal
(1) (5) (10) 
line 86: clear
line 87: buildTree 15
(8) (9) (2) (4) (10) (6) (5) (7) (10) (4) (1) (8) (8) (6) (9) 
line 88: inorderTraversal
(1) (2) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 89: clear
line 90: buildTree 9
(10) (3) (6) (5) (4) (4) (5) (3) (5) 
line 91: inorderTraversal
(3) (3) (4) (4) (5) (5) (5) (6) (10) 
line 92: search (4)
TRUE
line 93: inorderTraversal
(3) (3) (4) (4) (5) (5) (5) (6) (10) 
line 94: insert (10)
line 95: inorderTraversal
(3) (3) (4) (4) (5) (5) (5) (6) (10) (10) 
line 96: nearestNeighbour (2)
(3) 
line 97: inorderTraversal
(3) (3) (4) (4) (5) (5) (5) (6) (10) (10) 
line 98: remove (5)
line 99: inorderTraversal
(3) (3) (4) (4) (5) (5) (6) (10) (10) 
line 100: insert (2)
line 101: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (6) (10) (10) 
line 102: insert (3)
line 103: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (10) (10) 
line 104: kNearestNeighbour 10 (1)
(2) (3) (3) (3) (4) (4) (5) (5) (6) (10) 
line 105: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (10) (10) 
line 106: insert (10)
line 107: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (10) (10) (10) 
line 108: kNearestNeighbour 5 (1)
(2) (3) (3) (3) (4) 
line 109: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (10) (10) (10) 
line 110: insert (8)
line 111: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (8) (10) (10) (10) 
line 112: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=5
line 113: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (8) (10) (10) (10) 
line 114: insert (1)
line 115: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (8) (10) (10) (10) 
line 116: kNearestNeighbour 1 (4)
(4) 
line 117: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (8) (10) (10) (10) 
line 118: nearestNeighbour (2)
(2) 
line 119: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (8) (10) (10) (10) 
line 120: kNearestNeighbour 6 (4)
(3) (3) (3) (4) (4) (5) 
line 121: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (8) (10) (10) (10) 
line 122: clear
line 123: buildTree 6
(2) (2) (7) (5) (9) (6) 
line 124: inorderTraversal
(2) (2) (5) (6) (7) (9) 
line 125: insert (9)
line 126: inorderTraversal
(2) (2) (5) (6) (7) (9) (9) 
line 127: search (7)
TRUE
line 128: inorderTraversal
(2) (2) (5) (6) (7) (9) (9) 
line 129: insert (4)
line 130: inorderTraversal
(2) (2) (4) (5) (6) (7) (9) (9) 
line 131: kNearestNeighbour 7 (3)
(2) (2) (4) (5) (6) (7) (9) 
line 132: inorderTraversal
(2) (2) (4) (5) (6) (7) (9) (9) 
line 133: insert (9)
line 134: inorderTraversal
(2) (2) (4) (5) (6) (7) (9) (9) (9) 
line 135: clear
line 136: buildTree 7
(9) (5) (8) (5) (6) (3) (10) 
line 137: inorderTraversal
(3) (5) (5) (6) (8) (9) (10) 
line 138: kNearestNeighbour 4 (2)
(3) (5) (5) (6) 
line 139: inorderTraversal
(3) (5) (5) (6) (8) (9) (10) 
line 140: remove (9)
line 141: inorderTraversal
(3) (5) (5) (6) (8) (10) 
line 142: preorderTraversal
(6) (5) (3) (5) (10) (8) 
line 143: inorderTraversal
(3) (5) (5) (6) (8) (10) 
line 144: kNearestNeighbour 8 (1)
(3) (5) (5) (6) (8) (10) 
line 145: inorderTraversal
(3) (5) (5) (6) (8) (10) 
line 146: insert (1)
line 147: inorderTraversal
(1) (3) (5) (5) (6) (8) (10) 
line 148: insert (5)
line 149: inorderTraversal
(1) (3) (5) (5) (5) (6) (8) (10) 
line 150: nearestNeighbour (8)
(8) 
line 151: inorderTraversal
(1) (3) (5) (5) (5) (6) (8) (10) 
line 152: search (5)
TRUE
line 153: inorderTraversal
(1) (3) (5) (5) (5) (6) (8) (10) 
line 154: remove (5)
line 155: inorderTraversal
(1) (3) (5) (5) (6) (8) (10) 
line 156: insert (9)
line 157: inorderTraversal
(1) (3) (5) (5) (6) (8) (9) (10) 
line 158: insert (3)
line 159: inorderTraversal
(1) (3) (3) (5) (5) (6) (8) (9) (10) 
line 160: insert (3)
line 161: inorderTraversal
(1) (3) (3) (3) (5) (5) (6) (8) (9) (10) 
line 162: remove (3)
line 163: inorderTraversal
(1) (3) (3) (5) (5) (6) (8) (9) (10) 
line 164: postorderTraversal
(1) (3) (3) (5) (5) (9) (8) (10) (6) 
line 165: inorderTraversal
(1) (3) (3) (5) (5) (6) (8) (9) (10) 
line 166: insert (1)
line 167: inorderTraversal
(1) (1) (3) (3) (5) (5) (6) (8) (9) (10) 
line 168: nearestNeighbour (4)
(3) 
line 169: inorderTraversal
(1) (1) (3) (3) (5) (5) (6) (8) (9) (10) 
line 170: insert (9)
line 171: inorderTraversal
(1) (1) (3) (3) (5) (5) (6) (8) (9) (9) (10) 
line 172: kNearestNeighbour 5 (5)
(3) (3) (5) (5) (6) 
line 173: inorderTraversal
(1) (1) (3) (3) (5) (5) (6) (8) (9) (9) (10) 
line 174: kNearestNeighbour 6 (4)
(1) (3) (3) (5) (5) (6) 
line 175: inorderTraversal
(1) (1) (3) (3) (5) (5) (6) (8) (9) (9) (10) 
line 176: nearestNeighbour (9)
(9) 
line 177: inorderTraversal
(1) (1) (3) (3) (5) (5) (6) (8) (9) (9) (10) 
line 178: clear
line 179: buildTree 1
(9) 
line 180: inorderTraversal
(9) 
line 181: remove (9)
line 182: inorderTraversal

line 183: kNearestNeighbour 1 (6)

line 184: inorderTraversal

line 185: kNearestNeighbour 3 (6)

line 186: inorderTraversal

line 187: insert (9)
line 188: inorderTraversal
(9) 
line 189: nearestNeighbour (9)
(9) 
line 190: inorderTraversal
(9) 
line 191: clear
line 192: buildTree 12
(4) (4) (9) (2) (9) (7) (2) (10) (5) (8) (3) (2) 
line 193: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (7) (8) (9) (9) (10) 
line 194: insert (2)
line 195: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (5) (7) (8) (9) (9) (10) 
line 196: kNearestNeighbour 4 (7)
(5) (7) (8) (9) 
line 197: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (5) (7) (8) (9) (9) (10) 
line 198: insert (10)
line 199: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (5) (7) (8) (9) (9) (10) (10) 
line 200: insert (5)
line 201: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (9) (9) (10) (10) 
line 202: search (8)
TRUE
line 203: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (9) (9) (10) (10) 
line 204: remove (4)
line 205: inorderTraversal
(2) (2) (2) (2) (3) (4) (5) (5) (7) (8) (9) (9) (10) (10) 
line 206: nearestNeighbour (8)
(8) 
line 207: inorderTraversal
(2) (2) (2) (2) (3) (4) (5) (5) (7) (8) (9) (9) (10) (10) 
line 208: clear
line 209: buildTree 18
(3) (6) (4) (7) (7) (6) (6) (5) (8) (10) (6) (8) (5) (4) (3) (3) (5) (8) 
line 210: inorderTraversal
(3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (10) 
line 211: nearestNeighbour (6)
(6) 
line 212: inorderTraversal
(3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (10) 
line 213: insert (1)
line 214: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (10) 
line 215: insert (8)
line 216: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) 
line 217: kNearestNeighbour 4 (2)
(1) (3) (3) (3) 
line 218: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) 
line 219: preorderTraversal
(6) (4) (3) (1) (3) (3) (5) (4) (5) (5) (7) (6) (6) (6) (8) (7) (8) (8) (10) (8) 
line 220: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) 
line 221: insert (4)
line 222: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) 
line 223: nearestNeighbour (7)
(7) 
line 224: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) 
line 225: insert (9)
line 226: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (9) (10) 
line 227: insert (8)
line 228: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) 
line 229: nearestNeighbour (2)
(1) 
line 230: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) 
line 231: insert (7)
line 232: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (10) 
line 233: nearestNeighbour (10)
(10) 
line 234: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (10) 
line 235: clear
line 236: buildTree 9
(8) (2) (7) (3) (1) (3) (6) (5) (4) 
line 237: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (8) 
line 238: search (8)
TRUE
line 239: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (8) 
line 240: postorderTraversal
(1) (3) (3) (2) (5) (8) (7) (6) (4) 
line 241: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (8) 
line 242: nearestNeighbour (6)
(6) 
line 243: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (8) 
line 244: insert (10)
line 245: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (8) (10) 
line 246: insert (7)
line 247: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (8) (10) 
line 248: kNearestNeighbour 9 (8)
(3) (3) (4) (5) (6) (7) (7) (8) (10) 
line 249: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (8) (10) 
line 250: remove (7)
line 251: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (8) (10) 
line 252: kNearestNeighbour 3 (3)
(2) (3) (3) 
line 253: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (8) (10) 
line 254: clear
line 255: buildTree 7
(9) (10) (3) (7) (3) (4) (10) 
line 256: inorderTraversal
(3) (3) (4) (7) (9) (10) (10) 
line 257: preorderTraversal
(7) (3) (3) (4) (10) (9) (10) 
line 258: inorderTraversal
(3) (3) (4) (7) (9) (10) (10) 
line 259: remove (7)
line 260: inorderTraversal
(3) (3) (4) (9) (10) (10) 
line 261: kNearestNeighbour 4 (5)
(3) (3) (4) (9) 
line 262: inorderTraversal
(3) (3) (4) (9) (10) (10) 
line 263: kNearestNeighbour 3 (2)
(3) (3) (4) 
line 264: inorderTraversal
(3) (3) (4) (9) (10) (10) 
line 265: kNearestNeighbour 1 (10)
(10) 
line 266: inorderTraversal
(3) (3) (4) (9) (10) (10) 
line 267: remove (9)
line 268: inorderTraversal
(3) (3) (4) (10) (10) 
line 269: postorderTraversal
(4) (3) (3) (10) (10) 
line 270: inorderTraversal
(3) (3) (4) (10) (10) 
line 271: remove (10)
line 272: inorderTraversal
(3) (3) (4) (10) 
line 273: nearestNeighbour (6)
(4) 
line 274: inorderTraversal
(3) (3) (4) (10) 
line 275: insert (6)
line 276: inorderTraversal
(3) (3) (4) (6) (10) 
line 277: insert (3)
line 278: inorderTraversal
(3) (3) (3) (4) (6) (10) 
line 279: nearestNeighbour (6)
(6) 
line 280: inorderTraversal
(3) (3) (3) (4) (6) (10) 
line 281: insert (5)
line 282: inorderTraversal
(3) (3) (3) (4) (5) (6) (10) 
line 283: kNearestNeighbour 5 (8)
(3) (4) (5) (6) (10) 
line 284: inorderTraversal
(3) (3) (3) (4) (5) (6) (10) 
line 285: kNearestNeighbour 8 (8)
(3) (3) (3) (4) (5) (6) (10) 
line 286: inorderTraversal
(3) (3) (3) (4) (5) (6) (10) 
line 287: insert (9)
line 288: inorderTraversal
(3) (3) (3) (4) (5) (6) (9) (10) 
line 289: insert (6)
line 290: inorderTraversal
(3) (3) (3) (4) (5) (6) (6) (9) (10) 
line 291: insert (6)
line 292: inorderTraversal
(3) (3) (3) (4) (5) (6) (6) (6) (9) (10) 
line 293: insert (4)
line 294: inorderTraversal
(3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (10) 
line 295: kNearestNeighbour 6 (2)
(3) (3) (3) (4) (4) (5) 
line 296: inorderTraversal
(3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (10) 
line 297: insert (2)
line 298: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (10) 
line 299: nearestNeighbour (4)
(4) 
line 300: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (10) 
line 301: insert (5)
line 302: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (9) (10) 
line 303: nearestNeighbour (9)
(9) 
line 304: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (9) (10) 
line 305: kNearestNeighbour 1 (5)
(5) 
line 306: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (9) (10) 
line 307: insert (6)
line 308: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (9) (10) 
line 309: insert (9)
line 310: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (9) (9) (10) 
line 311: clear
line 312: buildTree 7
(3) (1) (7) (9) (10) (8) (3) 
line 313: inorderTraversal
(1) (3) (3) (7) (8) (9) (10) 
line 314: insert (3)
line 315: inorderTraversal
(1) (3) (3) (3) (7) (8) (9) (10) 
line 316: remove (3)
line 317: inorderTraversal
(1) (3) (3) (7) (8) (9) (10) 
line 318: kNearestNeighbour 9 (6)
(1) (3) (3) (7) (8) (9) (10) 
line 319: inorderTraversal
(1) (3) (3) (7) (8) (9) (10) 
line 320: insert (6)
line 321: inorderTraversal
(1) (3) (3) (6) (7) (8) (9) (10) 
line 322: remove (10)
line 323: inorderTraversal
(1) (3) (3) (6) (7) (8) (9) 
line 324: nearestNeighbour (2)
(1) 
line 325: inorderTraversal
(1) (3) (3) (6) (7) (8) (9) 
line 326: remove (10)
line 327: inorderTraversal
(1) (3) (3) (6) (7) (8) (9) 
line 328: insert (6)
line 329: inorderTraversal
(1) (3) (3) (6) (6) (7) (8) (9) 
line 330: kNearestNeighbour 8 (2)
(1) (3) (3) (6) (6) (7) (8) (9) 
line 331: inorderTraversal
(1) (3) (3) (6) (6) (7) (8) (9) 
line 332: remove (5)
line 333: inorderTraversal
(1) (3) (3) (6) (6) (7) (8) (9) 
line 334: nearestNeighbour (10)
(9) 
line 335: inorderTraversal
(1) (3) (3) (6) (6) (7) (8) (9) 
line 336: kNearestNeighbour 9 (7)
(1) (3) (3) (6) (6) (7) (8) (9) 
line 337: inorderTraversal
(1) (3) (3) (6) (6) (7) (8) (9) 
line 338: insert (9)
line 339: inorderTraversal
(1) (3) (3) (6) (6) (7) (8) (9) (9) 
line 340: preorderTraversal
(7) (3) (1) (3) (6) (6) (9) (8) (9) 
line 341: inorderTraversal
(1) (3) (3) (6) (6) (7) (8) (9) (9) 
line 342: insert (3)
line 343: inorderTraversal
(1) (3) (3) (3) (6) (6) (7) (8) (9) (9) 
line 344: nearestNeighbour (3)
(3) 
line 345: inorderTraversal
(1) (3) (3) (3) (6) (6) (7) (8) (9) (9) 
line 346: clear
line 347: buildTree 2
(5) (6) 
line 348: inorderTraversal
(5) (6) 
line 349: remove (6)
line 350: inorderTraversal
(5) 
line 351: insert (5)
line 352: inorderTraversal
(5) (5) 
line 353: remove (5)
line 354: inorderTraversal
(5) 
line 355: kNearestNeighbour 9 (7)
(5) 
line 356: inorderTraversal
(5) 
line 357: nearestNeighbour (2)
(5) 
line 358: inorderTraversal
(5) 
line 359: clear
line 360: buildTree 17
(6) (6) (7) (4) (6) (5) (7) (5) (8) (2) (2) (3) (7) (6) (10) (3) (3) 
line 361: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (10) 
line 362: kNearestNeighbour 2 (6)
(6) (6) 
line 363: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (10) 
line 364: nearestNeighbour (3)
(3) 
line 365: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (10) 
line 366: kNearestNeighbour 7 (5)
(4) (5) (5) (6) (6) (6) (6) 
line 367: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (10) 
line 368: clear
line 369: buildTree 13
(8) (1) (2) (6) (8) (8) (5) (7) (4) (6) (2) (7) (3) 
line 370: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) 
line 371: remove (2)
line 372: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) 
line 373: insert (8)
line 374: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (8) 
line 375: clear
line 376: buildTree 18
(6) (3) (10) (1) (9) (9) (8) (2) (5) (3) (9) (3) (7) (5) (2) (3) (1) (9) 
line 377: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) 
line 378: insert (9)
line 379: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (7) (8) (9) (9) (9) (9) (9) (10) 
line 380: kNearestNeighbour 6 (7)
(5) (6) (7) (8) (9) (9) 
line 381: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (7) (8) (9) (9) (9) (9) (9) (10) 
line 382: insert (9)
line 383: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (7) (8) (9) (9) (9) (9) (9) (9) (10) 
line 384: nearestNeighbour (2)
(2) 
line 385: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (7) (8) (9) (9) (9) (9) (9) (9) (10) 
line 386: nearestNeighbour (3)
(3) 
line 387: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (7) (8) (9) (9) (9) (9) (9) (9) (10) 
line 388: search (9)
TRUE
line 389: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (7) (8) (9) (9) (9) (9) (9) (9) (10) 
line 390: clear
line 391: buildTree 14
(4) (1) (7) (10) (1) (8) (5) (9) (3) (8) (10) (6) (7) (6) 
line 392: inorderTraversal
(1) (1) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 393: search (6)
TRUE
line 394: inorderTraversal
(1) (1) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 395: insert (4)
line 396: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 397: remove (10)
line 398: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 399: remove (1)
line 400: inorderTraversal
(1) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 401: remove (4)
line 402: inorderTraversal
(1) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 403: nearestNeighbour (8)
(8) 
line 404: inorderTraversal
(1) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 405: insert (3)
line 406: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 407: postorderTraversal
(1) (3) (5) (4) (3) (6) (7) (7) (8) (10) (9) (8) (6) 
line 408: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 409: insert (6)
line 410: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) 
line 411: kNearestNeighbour 2 (5)
(4) (5) 
line 412: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) 
line 413: nearestNeighbour (2)
(1) 
line 414: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) 
line 415: insert (2)
line 416: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) 
line 417: insert (1)
line 418: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) 
line 419: nodeCount_height_leafCount
nodeCount=16;height=5;leafCount=7
line 420: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) 
line 421: preorderTraversal
(6) (3) (1) (2) (1) (4) (3) (5) (8) (7) (6) (6) (7) (9) (8) (10) 
line 422: postorderTraversal
(1) (2) (1) (3) (5) (4) (3) (6) (6) (7) (7) (8) (10) (9) (8) (6) 
line 423: clear
