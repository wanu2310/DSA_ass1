line 1: k=1
line 2: nearestNeighbour (5)

line 3: inorderTraversal

line 4: insert (10)
line 5: inorderTraversal
(10) 
line 6: kNearestNeighbour 5 (7)
(10) 
line 7: inorderTraversal
(10) 
line 8: kNearestNeighbour 1 (8)
(10) 
line 9: inorderTraversal
(10) 
line 10: kNearestNeighbour 10 (10)
(10) 
line 11: inorderTraversal
(10) 
line 12: kNearestNeighbour 2 (10)
(10) 
line 13: inorderTraversal
(10) 
line 14: postorderTraversal
(10) 
line 15: inorderTraversal
(10) 
line 16: insert (5)
line 17: inorderTraversal
(5) (10) 
line 18: insert (3)
line 19: inorderTraversal
(3) (5) (10) 
line 20: search (3)
TRUE
line 21: inorderTraversal
(3) (5) (10) 
line 22: insert (1)
line 23: inorderTraversal
(1) (3) (5) (10) 
line 24: postorderTraversal
(1) (3) (5) (10) 
line 25: inorderTraversal
(1) (3) (5) (10) 
line 26: clear
line 27: buildTree 20
(1) (2) (10) (10) (10) (9) (5) (8) (2) (2) (10) (5) (5) (6) (7) (3) (8) (2) (1) (10) 
line 28: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (5) (5) (5) (6) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 29: remove (10)
line 30: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (5) (5) (5) (6) (7) (8) (8) (9) (10) (10) (10) (10) 
line 31: insert (9)
line 32: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (5) (5) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 33: clear
line 34: buildTree 15
(2) (2) (7) (8) (3) (3) (8) (9) (7) (5) (8) (8) (5) (9) (4) 
line 35: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 36: insert (7)
line 37: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 38: remove (9)
line 39: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) 
line 40: nearestNeighbour (9)
(9) 
line 41: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) 
line 42: nearestNeighbour (9)
(9) 
line 43: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) 
line 44: insert (9)
line 45: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 46: insert (10)
line 47: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 48: nearestNeighbour (8)
(8) 
line 49: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 50: insert (4)
line 51: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 52: remove (8)
line 53: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 54: kNearestNeighbour 5 (10)
(8) (8) (9) (9) (10) 
line 55: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 56: nearestNeighbour (10)
(10) 
line 57: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 58: insert (10)
line 59: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 60: insert (7)
line 61: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 62: insert (9)
line 63: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 64: clear
line 65: buildTree 10
(8) (6) (5) (2) (10) (10) (10) (8) (5) (4) 
line 66: inorderTraversal
(2) (4) (5) (5) (6) (8) (8) (10) (10) (10) 
line 67: remove (6)
line 68: inorderTraversal
(2) (4) (5) (5) (8) (8) (10) (10) (10) 
line 69: nearestNeighbour (10)
(10) 
line 70: inorderTraversal
(2) (4) (5) (5) (8) (8) (10) (10) (10) 
line 71: postorderTraversal
(2) (5) (5) (4) (8) (10) (10) (10) (8) 
line 72: inorderTraversal
(2) (4) (5) (5) (8) (8) (10) (10) (10) 
line 73: insert (6)
line 74: inorderTraversal
(2) (4) (5) (5) (6) (8) (8) (10) (10) (10) 
line 75: insert (8)
line 76: inorderTraversal
(2) (4) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 77: nearestNeighbour (3)
(2) 
line 78: inorderTraversal
(2) (4) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 79: insert (5)
line 80: inorderTraversal
(2) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 81: clear
line 82: buildTree 9
(8) (9) (5) (8) (7) (2) (8) (9) (6) 
line 83: inorderTraversal
(2) (5) (6) (7) (8) (8) (8) (9) (9) 
line 84: nearestNeighbour (9)
(9) 
line 85: inorderTraversal
(2) (5) (6) (7) (8) (8) (8) (9) (9) 
line 86: insert (6)
line 87: inorderTraversal
(2) (5) (6) (6) (7) (8) (8) (8) (9) (9) 
line 88: kNearestNeighbour 5 (2)
(2) (5) (6) (6) (7) 
line 89: inorderTraversal
(2) (5) (6) (6) (7) (8) (8) (8) (9) (9) 
line 90: insert (6)
line 91: inorderTraversal
(2) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) 
line 92: insert (7)
line 93: inorderTraversal
(2) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) 
line 94: search (7)
TRUE
line 95: inorderTraversal
(2) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) 
line 96: insert (1)
line 97: inorderTraversal
(1) (2) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) 
line 98: insert (5)
line 99: inorderTraversal
(1) (2) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) 
line 100: nearestNeighbour (1)
(1) 
line 101: inorderTraversal
(1) (2) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) 
line 102: clear
line 103: buildTree 11
(7) (4) (2) (8) (2) (8) (6) (10) (3) (6) (10) 
line 104: inorderTraversal
(2) (2) (3) (4) (6) (6) (7) (8) (8) (10) (10) 
line 105: kNearestNeighbour 9 (8)
(3) (4) (6) (6) (7) (8) (8) (10) (10) 
line 106: inorderTraversal
(2) (2) (3) (4) (6) (6) (7) (8) (8) (10) (10) 
line 107: insert (10)
line 108: inorderTraversal
(2) (2) (3) (4) (6) (6) (7) (8) (8) (10) (10) (10) 
line 109: clear
line 110: buildTree 5
(1) (3) (8) (2) (8) 
line 111: inorderTraversal
(1) (2) (3) (8) (8) 
line 112: insert (7)
line 113: inorderTraversal
(1) (2) (3) (7) (8) (8) 
line 114: clear
line 115: buildTree 2
(1) (10) 
line 116: inorderTraversal
(1) (10) 
line 117: insert (7)
line 118: inorderTraversal
(1) (7) (10) 
line 119: insert (9)
line 120: inorderTraversal
(1) (7) (9) (10) 
line 121: kNearestNeighbour 4 (10)
(1) (7) (9) (10) 
line 122: inorderTraversal
(1) (7) (9) (10) 
line 123: insert (3)
line 124: inorderTraversal
(1) (3) (7) (9) (10) 
line 125: insert (1)
line 126: inorderTraversal
(1) (1) (3) (7) (9) (10) 
line 127: postorderTraversal
(1) (3) (9) (7) (10) (1) 
line 128: inorderTraversal
(1) (1) (3) (7) (9) (10) 
line 129: clear
line 130: buildTree 7
(7) (4) (3) (3) (3) (4) (8) 
line 131: inorderTraversal
(3) (3) (3) (4) (4) (7) (8) 
line 132: insert (9)
line 133: inorderTraversal
(3) (3) (3) (4) (4) (7) (8) (9) 
line 134: nearestNeighbour (10)
(9) 
line 135: inorderTraversal
(3) (3) (3) (4) (4) (7) (8) (9) 
line 136: nearestNeighbour (6)
(7) 
line 137: inorderTraversal
(3) (3) (3) (4) (4) (7) (8) (9) 
line 138: insert (1)
line 139: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (8) (9) 
line 140: clear
line 141: buildTree 3
(6) (1) (2) 
line 142: inorderTraversal
(1) (2) (6) 
line 143: preorderTraversal
(2) (1) (6) 
line 144: inorderTraversal
(1) (2) (6) 
line 145: nearestNeighbour (4)
(6) 
line 146: inorderTraversal
(1) (2) (6) 
line 147: kNearestNeighbour 3 (1)
(1) (2) (6) 
line 148: inorderTraversal
(1) (2) (6) 
line 149: remove (6)
line 150: inorderTraversal
(1) (2) 
line 151: insert (8)
line 152: inorderTraversal
(1) (2) (8) 
line 153: clear
line 154: buildTree 2
(5) (9) 
line 155: inorderTraversal
(5) (9) 
line 156: kNearestNeighbour 9 (2)
(5) (9) 
line 157: inorderTraversal
(5) (9) 
line 158: insert (2)
line 159: inorderTraversal
(2) (5) (9) 
line 160: remove (2)
line 161: inorderTraversal
(5) (9) 
line 162: remove (5)
line 163: inorderTraversal
(9) 
line 164: preorderTraversal
(9) 
line 165: inorderTraversal
(9) 
line 166: clear
line 167: buildTree 1
(6) 
line 168: inorderTraversal
(6) 
line 169: nearestNeighbour (10)
(6) 
line 170: inorderTraversal
(6) 
line 171: nearestNeighbour (6)
(6) 
line 172: inorderTraversal
(6) 
line 173: insert (8)
line 174: inorderTraversal
(6) (8) 
line 175: insert (5)
line 176: inorderTraversal
(5) (6) (8) 
line 177: kNearestNeighbour 8 (9)
(5) (6) (8) 
line 178: inorderTraversal
(5) (6) (8) 
line 179: insert (3)
line 180: inorderTraversal
(3) (5) (6) (8) 
line 181: insert (6)
line 182: inorderTraversal
(3) (5) (6) (6) (8) 
line 183: insert (8)
line 184: inorderTraversal
(3) (5) (6) (6) (8) (8) 
line 185: nearestNeighbour (10)
(8) 
line 186: inorderTraversal
(3) (5) (6) (6) (8) (8) 
line 187: insert (8)
line 188: inorderTraversal
(3) (5) (6) (6) (8) (8) (8) 
line 189: preorderTraversal
(6) (5) (3) (8) (6) (8) (8) 
line 190: inorderTraversal
(3) (5) (6) (6) (8) (8) (8) 
line 191: insert (2)
line 192: inorderTraversal
(2) (3) (5) (6) (6) (8) (8) (8) 
line 193: insert (3)
line 194: inorderTraversal
(2) (3) (3) (5) (6) (6) (8) (8) (8) 
line 195: preorderTraversal
(6) (5) (3) (2) (3) (8) (6) (8) (8) 
line 196: inorderTraversal
(2) (3) (3) (5) (6) (6) (8) (8) (8) 
line 197: nearestNeighbour (5)
(5) 
line 198: inorderTraversal
(2) (3) (3) (5) (6) (6) (8) (8) (8) 
line 199: insert (10)
line 200: inorderTraversal
(2) (3) (3) (5) (6) (6) (8) (8) (8) (10) 
line 201: nearestNeighbour (9)
(10) 
line 202: inorderTraversal
(2) (3) (3) (5) (6) (6) (8) (8) (8) (10) 
line 203: insert (5)
line 204: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) 
line 205: kNearestNeighbour 4 (5)
(5) (5) (6) (6) 
line 206: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) 
line 207: kNearestNeighbour 2 (5)
(5) (5) 
line 208: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) 
line 209: nearestNeighbour (6)
(6) 
line 210: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) 
line 211: nearestNeighbour (8)
(8) 
line 212: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) 
line 213: kNearestNeighbour 4 (1)
(2) (3) (3) (5) 
line 214: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) 
line 215: insert (5)
line 216: inorderTraversal
(2) (3) (3) (5) (5) (5) (6) (6) (8) (8) (8) (10) 
line 217: kNearestNeighbour 6 (4)
(2) (3) (3) (5) (5) (5) 
line 218: inorderTraversal
(2) (3) (3) (5) (5) (5) (6) (6) (8) (8) (8) (10) 
line 219: clear
line 220: buildTree 5
(6) (7) (10) (4) (2) 
line 221: inorderTraversal
(2) (4) (6) (7) (10) 
line 222: clear
line 223: buildTree 4
(10) (2) (8) (2) 
line 224: inorderTraversal
(2) (2) (8) (10) 
line 225: kNearestNeighbour 9 (4)
(2) (2) (8) (10) 
line 226: inorderTraversal
(2) (2) (8) (10) 
line 227: search (10)
TRUE
line 228: inorderTraversal
(2) (2) (8) (10) 
line 229: nearestNeighbour (10)
(10) 
line 230: inorderTraversal
(2) (2) (8) (10) 
line 231: search (2)
TRUE
line 232: inorderTraversal
(2) (2) (8) (10) 
line 233: kNearestNeighbour 7 (1)
(2) (2) (8) (10) 
line 234: inorderTraversal
(2) (2) (8) (10) 
line 235: insert (8)
line 236: inorderTraversal
(2) (2) (8) (8) (10) 
line 237: insert (6)
line 238: inorderTraversal
(2) (2) (6) (8) (8) (10) 
line 239: postorderTraversal
(6) (2) (8) (10) (8) (2) 
line 240: inorderTraversal
(2) (2) (6) (8) (8) (10) 
line 241: insert (5)
line 242: inorderTraversal
(2) (2) (5) (6) (8) (8) (10) 
line 243: search (8)
TRUE
line 244: inorderTraversal
(2) (2) (5) (6) (8) (8) (10) 
line 245: kNearestNeighbour 2 (9)
(8) (10) 
line 246: inorderTraversal
(2) (2) (5) (6) (8) (8) (10) 
line 247: kNearestNeighbour 6 (5)
(2) (2) (5) (6) (8) (8) 
line 248: inorderTraversal
(2) (2) (5) (6) (8) (8) (10) 
line 249: nearestNeighbour (5)
(5) 
line 250: inorderTraversal
(2) (2) (5) (6) (8) (8) (10) 
line 251: remove (8)
line 252: inorderTraversal
(2) (2) (5) (6) (8) (10) 
line 253: insert (2)
line 254: inorderTraversal
(2) (2) (2) (5) (6) (8) (10) 
line 255: insert (10)
line 256: inorderTraversal
(2) (2) (2) (5) (6) (8) (10) (10) 
line 257: nearestNeighbour (5)
(5) 
line 258: inorderTraversal
(2) (2) (2) (5) (6) (8) (10) (10) 
line 259: clear
line 260: buildTree 15
(7) (1) (10) (6) (1) (8) (8) (9) (6) (8) (8) (10) (1) (9) (4) 
line 261: inorderTraversal
(1) (1) (1) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 262: remove (1)
line 263: inorderTraversal
(1) (1) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 264: remove (1)
line 265: inorderTraversal
(1) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 266: clear
line 267: buildTree 3
(1) (3) (5) 
line 268: inorderTraversal
(1) (3) (5) 
line 269: nearestNeighbour (2)
(1) 
line 270: inorderTraversal
(1) (3) (5) 
line 271: search (3)
TRUE
line 272: inorderTraversal
(1) (3) (5) 
line 273: nearestNeighbour (5)
(5) 
line 274: inorderTraversal
(1) (3) (5) 
line 275: nearestNeighbour (9)
(5) 
line 276: inorderTraversal
(1) (3) (5) 
line 277: clear
line 278: buildTree 15
(7) (1) (3) (4) (7) (4) (2) (10) (3) (5) (1) (4) (7) (7) (10) 
line 279: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (10) (10) 
line 280: insert (1)
line 281: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (10) (10) 
line 282: kNearestNeighbour 5 (10)
(7) (7) (7) (10) (10) 
line 283: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (10) (10) 
line 284: preorderTraversal
(4) (2) (1) (1) (1) (3) (3) (7) (4) (4) (5) (7) (7) (10) (7) (10) 
line 285: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (10) (10) 
line 286: kNearestNeighbour 10 (6)
(3) (3) (4) (4) (4) (5) (7) (7) (7) (7) 
line 287: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (10) (10) 
line 288: kNearestNeighbour 7 (5)
(4) (4) (4) (5) (7) (7) (7) 
line 289: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (10) (10) 
line 290: insert (3)
line 291: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (10) (10) 
line 292: postorderTraversal
(1) (1) (1) (3) (3) (3) (2) (5) (4) (4) (7) (10) (10) (7) (7) (7) (4) 
line 293: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (10) (10) 
line 294: insert (9)
line 295: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (9) (10) (10) 
line 296: insert (6)
line 297: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) (10) 
line 298: remove (1)
line 299: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) (10) 
line 300: remove (5)
line 301: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (7) (9) (10) (10) 
line 302: insert (8)
line 303: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (7) (8) (9) (10) (10) 
line 304: insert (5)
line 305: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (8) (9) (10) (10) 
line 306: kNearestNeighbour 10 (1)
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) 
line 307: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (8) (9) (10) (10) 
line 308: nearestNeighbour (8)
(8) 
line 309: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (8) (9) (10) (10) 
line 310: insert (8)
line 311: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 312: insert (3)
line 313: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 314: search (5)
TRUE
line 315: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 316: insert (5)
line 317: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 318: nearestNeighbour (2)
(2) 
line 319: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 320: nearestNeighbour (5)
(5) 
line 321: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 322: kNearestNeighbour 8 (8)
(7) (7) (7) (7) (8) (8) (9) (10) 
line 323: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 324: insert (5)
line 325: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 326: insert (5)
line 327: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 328: insert (3)
line 329: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 330: clear
line 331: buildTree 15
(5) (9) (1) (7) (7) (1) (2) (5) (7) (1) (3) (5) (9) (7) (2) 
line 332: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (5) (7) (7) (7) (7) (9) (9) 
line 333: kNearestNeighbour 7 (3)
(1) (1) (1) (2) (2) (3) (5) 
line 334: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (5) (7) (7) (7) (7) (9) (9) 
line 335: remove (5)
line 336: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (7) (7) (7) (7) (9) (9) 
line 337: kNearestNeighbour 3 (3)
(2) (2) (3) 
line 338: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (7) (7) (7) (7) (9) (9) 
line 339: nearestNeighbour (2)
(2) 
line 340: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (7) (7) (7) (7) (9) (9) 
line 341: remove (1)
line 342: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (7) (7) (7) (9) (9) 
line 343: insert (1)
line 344: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (7) (7) (7) (7) (9) (9) 
line 345: nearestNeighbour (5)
(5) 
line 346: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (7) (7) (7) (7) (9) (9) 
line 347: remove (1)
line 348: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (7) (7) (7) (9) (9) 
line 349: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=5
line 350: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (7) (7) (7) (9) (9) 
line 351: remove (7)
line 352: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (7) (7) (9) (9) 
line 353: insert (6)
line 354: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (7) (7) (7) (9) (9) 
line 355: insert (6)
line 356: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (7) (9) (9) 
line 357: preorderTraversal
(5) (1) (2) (1) (2) (3) (7) (5) (6) (6) (7) (7) (9) (9) 
line 358: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (7) (9) (9) 
line 359: remove (6)
line 360: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (7) (7) (7) (9) (9) 
line 361: kNearestNeighbour 6 (5)
(5) (5) (6) (7) (7) (7) 
line 362: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (7) (7) (7) (9) (9) 
line 363: nearestNeighbour (3)
(3) 
line 364: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (7) (7) (7) (9) (9) 
line 365: clear
line 366: buildTree 19
(3) (1) (3) (8) (5) (10) (6) (4) (9) (7) (3) (10) (1) (3) (1) (6) (3) (2) (7) 
line 367: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 368: clear
line 369: buildTree 9
(10) (5) (10) (8) (3) (10) (7) (8) (3) 
line 370: inorderTraversal
(3) (3) (5) (7) (8) (8) (10) (10) (10) 
line 371: kNearestNeighbour 4 (4)
(3) (3) (5) (7) 
line 372: inorderTraversal
(3) (3) (5) (7) (8) (8) (10) (10) (10) 
line 373: kNearestNeighbour 3 (6)
(5) (7) (8) 
line 374: inorderTraversal
(3) (3) (5) (7) (8) (8) (10) (10) (10) 
line 375: insert (4)
line 376: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 377: nearestNeighbour (8)
(8) 
line 378: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 379: nearestNeighbour (7)
(7) 
line 380: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 381: postorderTraversal
(4) (3) (7) (5) (3) (8) (10) (10) (10) (8) 
line 382: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 383: kNearestNeighbour 2 (10)
(10) (10) 
line 384: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 385: kNearestNeighbour 3 (2)
(3) (3) (4) 
line 386: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 387: insert (1)
line 388: inorderTraversal
(1) (3) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 389: remove (3)
line 390: inorderTraversal
(1) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 391: insert (3)
line 392: inorderTraversal
(1) (3) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 393: kNearestNeighbour 9 (4)
(1) (3) (3) (4) (5) (7) (8) (8) (10) 
line 394: inorderTraversal
(1) (3) (3) (4) (5) (7) (8) (8) (10) (10) (10) 
line 395: remove (8)
line 396: inorderTraversal
(1) (3) (3) (4) (5) (7) (8) (10) (10) (10) 
line 397: insert (2)
line 398: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (10) (10) (10) 
line 399: nearestNeighbour (9)
(10) 
line 400: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (10) (10) (10) 
line 401: insert (4)
line 402: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (7) (8) (10) (10) (10) 
line 403: insert (2)
line 404: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (7) (8) (10) (10) (10) 
line 405: nearestNeighbour (9)
(10) 
line 406: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (7) (8) (10) (10) (10) 
line 407: remove (4)
line 408: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (7) (8) (10) (10) (10) 
line 409: insert (3)
line 410: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (5) (7) (8) (10) (10) (10) 
line 411: remove (3)
line 412: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (7) (8) (10) (10) (10) 
line 413: search (4)
TRUE
line 414: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (7) (8) (10) (10) (10) 
line 415: clear
line 416: buildTree 2
(4) (2) 
line 417: inorderTraversal
(2) (4) 
line 418: kNearestNeighbour 9 (3)
(2) (4) 
line 419: inorderTraversal
(2) (4) 
line 420: remove (2)
line 421: inorderTraversal
(4) 
line 422: nodeCount_height_leafCount
nodeCount=1;height=1;leafCount=1
line 423: inorderTraversal
(4) 
line 424: preorderTraversal
(4) 
line 425: postorderTraversal
(4) 
line 426: clear
