line 1: k=1
line 2: nearestNeighbour (4)

line 3: inorderTraversal

line 4: remove (1)
line 5: inorderTraversal

line 6: kNearestNeighbour 5 (2)

line 7: inorderTraversal

line 8: kNearestNeighbour 6 (8)

line 9: inorderTraversal

line 10: remove (6)
line 11: inorderTraversal

line 12: insert (5)
line 13: inorderTraversal
(5) 
line 14: remove (5)
line 15: inorderTraversal

line 16: insert (6)
line 17: inorderTraversal
(6) 
line 18: remove (6)
line 19: inorderTraversal

line 20: insert (2)
line 21: inorderTraversal
(2) 
line 22: kNearestNeighbour 5 (3)
(2) 
line 23: inorderTraversal
(2) 
line 24: remove (2)
line 25: inorderTraversal

line 26: remove (6)
line 27: inorderTraversal

line 28: postorderTraversal

line 29: inorderTraversal

line 30: nearestNeighbour (2)

line 31: inorderTraversal

line 32: insert (9)
line 33: inorderTraversal
(9) 
line 34: insert (8)
line 35: inorderTraversal
(8) (9) 
line 36: kNearestNeighbour 7 (10)
(8) (9) 
line 37: inorderTraversal
(8) (9) 
line 38: search (9)
TRUE
line 39: inorderTraversal
(8) (9) 
line 40: kNearestNeighbour 8 (10)
(8) (9) 
line 41: inorderTraversal
(8) (9) 
line 42: insert (4)
line 43: inorderTraversal
(4) (8) (9) 
line 44: remove (2)
line 45: inorderTraversal
(4) (8) (9) 
line 46: insert (7)
line 47: inorderTraversal
(4) (7) (8) (9) 
line 48: kNearestNeighbour 6 (9)
(4) (7) (8) (9) 
line 49: inorderTraversal
(4) (7) (8) (9) 
line 50: nearestNeighbour (10)
(9) 
line 51: inorderTraversal
(4) (7) (8) (9) 
line 52: preorderTraversal
(9) (8) (4) (7) 
line 53: inorderTraversal
(4) (7) (8) (9) 
line 54: clear
line 55: buildTree 7
(4) (5) (2) (1) (4) (6) (9) 
line 56: inorderTraversal
(1) (2) (4) (4) (5) (6) (9) 
line 57: remove (4)
line 58: inorderTraversal
(1) (2) (4) (5) (6) (9) 
line 59: insert (2)
line 60: inorderTraversal
(1) (2) (2) (4) (5) (6) (9) 
line 61: nearestNeighbour (4)
(4) 
line 62: inorderTraversal
(1) (2) (2) (4) (5) (6) (9) 
line 63: kNearestNeighbour 6 (3)
(1) (2) (2) (4) (5) (6) 
line 64: inorderTraversal
(1) (2) (2) (4) (5) (6) (9) 
line 65: insert (7)
line 66: inorderTraversal
(1) (2) (2) (4) (5) (6) (7) (9) 
line 67: kNearestNeighbour 10 (3)
(1) (2) (2) (4) (5) (6) (7) (9) 
line 68: inorderTraversal
(1) (2) (2) (4) (5) (6) (7) (9) 
line 69: kNearestNeighbour 8 (8)
(1) (2) (2) (4) (5) (6) (7) (9) 
line 70: inorderTraversal
(1) (2) (2) (4) (5) (6) (7) (9) 
line 71: insert (1)
line 72: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (9) 
line 73: insert (2)
line 74: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (6) (7) (9) 
line 75: insert (8)
line 76: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (6) (7) (8) (9) 
line 77: insert (3)
line 78: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (9) 
line 79: insert (9)
line 80: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (9) (9) 
line 81: clear
line 82: buildTree 15
(7) (8) (3) (8) (10) (4) (7) (6) (10) (10) (3) (3) (10) (2) (4) 
line 83: inorderTraversal
(2) (3) (3) (3) (4) (4) (6) (7) (7) (8) (8) (10) (10) (10) (10) 
line 84: insert (5)
line 85: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (6) (7) (7) (8) (8) (10) (10) (10) (10) 
line 86: insert (10)
line 87: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 88: kNearestNeighbour 9 (2)
(2) (3) (3) (3) (4) (4) (5) (6) (7) 
line 89: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 90: insert (6)
line 91: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 92: insert (3)
line 93: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 94: clear
line 95: buildTree 15
(2) (6) (5) (7) (9) (10) (1) (3) (8) (10) (3) (1) (6) (8) (2) 
line 96: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 97: kNearestNeighbour 7 (9)
(6) (7) (8) (8) (9) (10) (10) 
line 98: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 99: insert (4)
line 100: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 101: nearestNeighbour (1)
(1) 
line 102: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 103: nearestNeighbour (9)
(9) 
line 104: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 105: clear
line 106: buildTree 12
(7) (5) (1) (2) (6) (10) (8) (6) (10) (5) (3) (9) 
line 107: inorderTraversal
(1) (2) (3) (5) (5) (6) (6) (7) (8) (9) (10) (10) 
line 108: nearestNeighbour (3)
(3) 
line 109: inorderTraversal
(1) (2) (3) (5) (5) (6) (6) (7) (8) (9) (10) (10) 
line 110: clear
line 111: buildTree 10
(4) (1) (7) (3) (1) (3) (3) (7) (5) (2) 
line 112: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (7) (7) 
line 113: insert (7)
line 114: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (7) (7) (7) 
line 115: nodeCount_height_leafCount
nodeCount=11;height=5;leafCount=4
line 116: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (7) (7) (7) 
line 117: nearestNeighbour (5)
(5) 
line 118: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (7) (7) (7) 
line 119: nearestNeighbour (9)
(7) 
line 120: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (7) (7) (7) 
line 121: nearestNeighbour (9)
(7) 
line 122: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (7) (7) (7) 
line 123: insert (6)
line 124: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) 
line 125: nodeCount_height_leafCount
nodeCount=12;height=5;leafCount=4
line 126: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) 
line 127: insert (8)
line 128: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) (8) 
line 129: search (4)
TRUE
line 130: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) (8) 
line 131: remove (3)
line 132: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (8) 
line 133: nearestNeighbour (3)
(3) 
line 134: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (8) 
line 135: insert (3)
line 136: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) (8) 
line 137: remove (3)
line 138: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (8) 
line 139: insert (7)
line 140: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (8) 
line 141: insert (3)
line 142: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) (7) (8) 
line 143: insert (8)
line 144: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) (7) (8) (8) 
line 145: remove (6)
line 146: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) 
line 147: nodeCount_height_leafCount
nodeCount=14;height=7;leafCount=5
line 148: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) 
line 149: insert (2)
line 150: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) 
line 151: insert (8)
line 152: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) 
line 153: nearestNeighbour (3)
(3) 
line 154: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) 
line 155: nearestNeighbour (2)
(2) 
line 156: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) 
line 157: kNearestNeighbour 1 (6)
(5) 
line 158: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) 
line 159: kNearestNeighbour 3 (1)
(1) (1) (2) 
line 160: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) 
line 161: insert (2)
line 162: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) 
line 163: remove (2)
line 164: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) 
line 165: nearestNeighbour (6)
(5) 
line 166: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) 
line 167: insert (8)
line 168: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) 
line 169: nodeCount_height_leafCount
nodeCount=17;height=9;leafCount=5
line 170: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) 
line 171: insert (9)
line 172: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 173: insert (4)
line 174: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 175: kNearestNeighbour 9 (6)
(4) (5) (7) (7) (7) (7) (8) (8) (8) 
line 176: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 177: nearestNeighbour (3)
(3) 
line 178: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 179: insert (3)
line 180: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 181: remove (2)
line 182: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 183: kNearestNeighbour 9 (3)
(1) (2) (3) (3) (3) (3) (4) (4) (5) 
line 184: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 185: nearestNeighbour (3)
(3) 
line 186: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 187: search (3)
TRUE
line 188: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 189: nearestNeighbour (5)
(5) 
line 190: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 191: kNearestNeighbour 5 (8)
(8) (8) (8) (8) (9) 
line 192: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 193: nearestNeighbour (2)
(2) 
line 194: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 195: kNearestNeighbour 6 (2)
(1) (1) (2) (3) (3) (3) 
line 196: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 197: nearestNeighbour (3)
(3) 
line 198: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 199: insert (4)
line 200: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 201: remove (6)
line 202: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 203: kNearestNeighbour 10 (2)
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) 
line 204: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) 
line 205: insert (9)
line 206: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 207: kNearestNeighbour 10 (9)
(7) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 208: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 209: kNearestNeighbour 8 (4)
(3) (3) (3) (3) (4) (4) (4) (5) 
line 210: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 211: nearestNeighbour (4)
(4) 
line 212: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 213: clear
line 214: buildTree 5
(1) (1) (10) (6) (4) 
line 215: inorderTraversal
(1) (1) (4) (6) (10) 
line 216: clear
line 217: buildTree 18
(4) (2) (4) (6) (1) (9) (2) (7) (1) (1) (6) (8) (2) (3) (7) (2) (2) (4) 
line 218: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (7) (7) (8) (9) 
line 219: clear
line 220: buildTree 10
(9) (9) (9) (3) (10) (10) (4) (6) (1) (9) 
line 221: inorderTraversal
(1) (3) (4) (6) (9) (9) (9) (9) (10) (10) 
line 222: nearestNeighbour (1)
(1) 
line 223: inorderTraversal
(1) (3) (4) (6) (9) (9) (9) (9) (10) (10) 
line 224: insert (5)
line 225: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (9) (9) (10) (10) 
line 226: insert (1)
line 227: inorderTraversal
(1) (1) (3) (4) (5) (6) (9) (9) (9) (9) (10) (10) 
line 228: insert (4)
line 229: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (9) (9) (9) (9) (10) (10) 
line 230: insert (8)
line 231: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) 
line 232: remove (5)
line 233: inorderTraversal
(1) (1) (3) (4) (4) (6) (8) (9) (9) (9) (9) (10) (10) 
line 234: insert (10)
line 235: inorderTraversal
(1) (1) (3) (4) (4) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 236: insert (9)
line 237: inorderTraversal
(1) (1) (3) (4) (4) (6) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 238: kNearestNeighbour 9 (8)
(6) (8) (9) (9) (9) (9) (9) (10) (10) 
line 239: inorderTraversal
(1) (1) (3) (4) (4) (6) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 240: remove (7)
line 241: inorderTraversal
(1) (1) (3) (4) (4) (6) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 242: insert (2)
line 243: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 244: insert (10)
line 245: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 246: kNearestNeighbour 5 (5)
(3) (4) (4) (6) (8) 
line 247: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 248: insert (8)
line 249: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 250: postorderTraversal
(2) (1) (1) (4) (8) (8) (6) (4) (3) (9) (9) (10) (10) (10) (10) (9) (9) (9) 
line 251: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 252: kNearestNeighbour 2 (3)
(3) (4) 
line 253: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 254: nearestNeighbour (2)
(2) 
line 255: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 256: kNearestNeighbour 6 (2)
(1) (1) (2) (3) (4) (4) 
line 257: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 258: insert (4)
line 259: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 260: remove (2)
line 261: inorderTraversal
(1) (1) (3) (4) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 262: remove (10)
line 263: inorderTraversal
(1) (1) (3) (4) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 264: kNearestNeighbour 7 (8)
(8) (8) (9) (9) (9) (9) (9) 
line 265: inorderTraversal
(1) (1) (3) (4) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 266: kNearestNeighbour 5 (3)
(1) (3) (4) (4) (4) 
line 267: inorderTraversal
(1) (1) (3) (4) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 268: nearestNeighbour (6)
(6) 
line 269: inorderTraversal
(1) (1) (3) (4) (4) (4) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 270: insert (5)
line 271: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 272: insert (10)
line 273: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 274: insert (6)
line 275: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 276: kNearestNeighbour 4 (8)
(8) (8) (9) (9) 
line 277: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 278: nearestNeighbour (7)
(6) 
line 279: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 280: nearestNeighbour (7)
(6) 
line 281: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 282: insert (2)
line 283: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 284: remove (5)
line 285: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 286: insert (10)
line 287: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) (10) 
line 288: nodeCount_height_leafCount
nodeCount=21;height=8;leafCount=6
line 289: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) (10) 
line 290: insert (4)
line 291: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) (10) 
line 292: insert (10)
line 293: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) (10) (10) 
line 294: insert (6)
line 295: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (6) (6) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) (10) (10) (10) 
line 296: clear
line 297: buildTree 19
(10) (8) (8) (1) (7) (1) (5) (9) (2) (8) (6) (7) (2) (2) (1) (6) (2) (4) (5) 
line 298: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 299: insert (3)
line 300: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 301: nearestNeighbour (4)
(4) 
line 302: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 303: nearestNeighbour (5)
(5) 
line 304: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 305: insert (6)
line 306: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 307: kNearestNeighbour 10 (2)
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) 
line 308: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 309: nearestNeighbour (10)
(10) 
line 310: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 311: nearestNeighbour (2)
(2) 
line 312: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 313: insert (4)
line 314: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 315: nearestNeighbour (3)
(3) 
line 316: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 317: insert (7)
line 318: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) 
line 319: clear
line 320: buildTree 9
(9) (7) (10) (7) (4) (2) (7) (9) (2) 
line 321: inorderTraversal
(2) (2) (4) (7) (7) (7) (9) (9) (10) 
line 322: insert (4)
line 323: inorderTraversal
(2) (2) (4) (4) (7) (7) (7) (9) (9) (10) 
line 324: kNearestNeighbour 3 (8)
(7) (7) (9) 
line 325: inorderTraversal
(2) (2) (4) (4) (7) (7) (7) (9) (9) (10) 
line 326: insert (7)
line 327: inorderTraversal
(2) (2) (4) (4) (7) (7) (7) (7) (9) (9) (10) 
line 328: nearestNeighbour (8)
(7) 
line 329: inorderTraversal
(2) (2) (4) (4) (7) (7) (7) (7) (9) (9) (10) 
line 330: clear
line 331: buildTree 18
(2) (2) (10) (7) (5) (7) (7) (3) (6) (7) (2) (1) (7) (6) (10) (3) (8) (2) 
line 332: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (6) (7) (7) (7) (7) (7) (8) (10) (10) 
line 333: insert (6)
line 334: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (10) (10) 
line 335: kNearestNeighbour 4 (2)
(2) (2) (2) (2) 
line 336: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (10) (10) 
line 337: nearestNeighbour (2)
(2) 
line 338: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (10) (10) 
line 339: insert (7)
line 340: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (7) (8) (10) (10) 
line 341: clear
line 342: buildTree 19
(1) (10) (1) (4) (10) (4) (6) (10) (3) (9) (4) (2) (1) (2) (9) (7) (1) (10) (4) 
line 343: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (6) (7) (9) (9) (10) (10) (10) (10) 
line 344: kNearestNeighbour 10 (3)
(1) (1) (1) (2) (2) (3) (4) (4) (4) (4) 
line 345: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (6) (7) (9) (9) (10) (10) (10) (10) 
line 346: insert (6)
line 347: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (6) (6) (7) (9) (9) (10) (10) (10) (10) 
line 348: nearestNeighbour (10)
(10) 
line 349: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (6) (6) (7) (9) (9) (10) (10) (10) (10) 
line 350: kNearestNeighbour 2 (4)
(4) (4) 
line 351: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (6) (6) (7) (9) (9) (10) (10) (10) (10) 
line 352: insert (4)
line 353: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (4) (6) (6) (7) (9) (9) (10) (10) (10) (10) 
line 354: nearestNeighbour (3)
(3) 
line 355: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (4) (6) (6) (7) (9) (9) (10) (10) (10) (10) 
line 356: nearestNeighbour (4)
(4) 
line 357: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (4) (6) (6) (7) (9) (9) (10) (10) (10) (10) 
line 358: postorderTraversal
(1) (1) (3) (2) (2) (1) (1) (4) (4) (6) (7) (6) (4) (4) (9) (10) (10) (10) (10) (9) (4) 
line 359: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (4) (6) (6) (7) (9) (9) (10) (10) (10) (10) 
line 360: nearestNeighbour (1)
(1) 
line 361: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (4) (6) (6) (7) (9) (9) (10) (10) (10) (10) 
line 362: remove (2)
line 363: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (4) (4) (4) (6) (6) (7) (9) (9) (10) (10) (10) (10) 
line 364: insert (7)
line 365: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (4) (4) (4) (6) (6) (7) (7) (9) (9) (10) (10) (10) (10) 
line 366: clear
line 367: buildTree 1
(5) 
line 368: inorderTraversal
(5) 
line 369: insert (5)
line 370: inorderTraversal
(5) (5) 
line 371: insert (3)
line 372: inorderTraversal
(3) (5) (5) 
line 373: insert (8)
line 374: inorderTraversal
(3) (5) (5) (8) 
line 375: remove (5)
line 376: inorderTraversal
(3) (5) (8) 
line 377: kNearestNeighbour 10 (10)
(3) (5) (8) 
line 378: inorderTraversal
(3) (5) (8) 
line 379: kNearestNeighbour 3 (6)
(3) (5) (8) 
line 380: inorderTraversal
(3) (5) (8) 
line 381: insert (5)
line 382: inorderTraversal
(3) (5) (5) (8) 
line 383: remove (3)
line 384: inorderTraversal
(5) (5) (8) 
line 385: kNearestNeighbour 9 (7)
(5) (5) (8) 
line 386: inorderTraversal
(5) (5) (8) 
line 387: nearestNeighbour (3)
(5) 
line 388: inorderTraversal
(5) (5) (8) 
line 389: remove (8)
line 390: inorderTraversal
(5) (5) 
line 391: insert (5)
line 392: inorderTraversal
(5) (5) (5) 
line 393: search (5)
TRUE
line 394: inorderTraversal
(5) (5) (5) 
line 395: clear
line 396: buildTree 10
(6) (2) (1) (4) (8) (1) (2) (2) (8) (2) 
line 397: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (6) (8) (8) 
line 398: insert (3)
line 399: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (4) (6) (8) (8) 
line 400: insert (5)
line 401: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (4) (5) (6) (8) (8) 
line 402: insert (2)
line 403: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (4) (5) (6) (8) (8) 
line 404: nearestNeighbour (10)
(8) 
line 405: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (4) (5) (6) (8) (8) 
line 406: clear
line 407: buildTree 11
(10) (4) (5) (10) (4) (3) (9) (3) (4) (10) (7) 
line 408: inorderTraversal
(3) (3) (4) (4) (4) (5) (7) (9) (10) (10) (10) 
line 409: insert (3)
line 410: inorderTraversal
(3) (3) (3) (4) (4) (4) (5) (7) (9) (10) (10) (10) 
line 411: insert (9)
line 412: inorderTraversal
(3) (3) (3) (4) (4) (4) (5) (7) (9) (9) (10) (10) (10) 
line 413: kNearestNeighbour 4 (10)
(9) (10) (10) (10) 
line 414: inorderTraversal
(3) (3) (3) (4) (4) (4) (5) (7) (9) (9) (10) (10) (10) 
line 415: kNearestNeighbour 2 (10)
(10) (10) 
line 416: inorderTraversal
(3) (3) (3) (4) (4) (4) (5) (7) (9) (9) (10) (10) (10) 
line 417: nodeCount_height_leafCount
nodeCount=13;height=5;leafCount=4
line 418: inorderTraversal
(3) (3) (3) (4) (4) (4) (5) (7) (9) (9) (10) (10) (10) 
line 419: preorderTraversal
(5) (4) (3) (3) (3) (4) (4) (10) (7) (9) (9) (10) (10) 
line 420: postorderTraversal
(3) (3) (3) (4) (4) (4) (9) (9) (7) (10) (10) (10) (5) 
line 421: clear
