line 1: k=1
line 2: nearestNeighbour (2)

line 3: inorderTraversal

line 4: nodeCount_height_leafCount
nodeCount=0;height=0;leafCount=0
line 5: inorderTraversal

line 6: insert (9)
line 7: inorderTraversal
(9) 
line 8: insert (1)
line 9: inorderTraversal
(1) (9) 
line 10: insert (4)
line 11: inorderTraversal
(1) (4) (9) 
line 12: nearestNeighbour (4)
(4) 
line 13: inorderTraversal
(1) (4) (9) 
line 14: nodeCount_height_leafCount
nodeCount=3;height=3;leafCount=1
line 15: inorderTraversal
(1) (4) (9) 
line 16: remove (10)
line 17: inorderTraversal
(1) (4) (9) 
line 18: remove (1)
line 19: inorderTraversal
(4) (9) 
line 20: kNearestNeighbour 9 (9)
(4) (9) 
line 21: inorderTraversal
(4) (9) 
line 22: nearestNeighbour (8)
(9) 
line 23: inorderTraversal
(4) (9) 
line 24: nearestNeighbour (4)
(4) 
line 25: inorderTraversal
(4) (9) 
line 26: nearestNeighbour (8)
(9) 
line 27: inorderTraversal
(4) (9) 
line 28: kNearestNeighbour 2 (10)
(4) (9) 
line 29: inorderTraversal
(4) (9) 
line 30: insert (4)
line 31: inorderTraversal
(4) (4) (9) 
line 32: nearestNeighbour (2)
(4) 
line 33: inorderTraversal
(4) (4) (9) 
line 34: nearestNeighbour (4)
(4) 
line 35: inorderTraversal
(4) (4) (9) 
line 36: remove (4)
line 37: inorderTraversal
(4) (9) 
line 38: kNearestNeighbour 9 (8)
(4) (9) 
line 39: inorderTraversal
(4) (9) 
line 40: kNearestNeighbour 1 (9)
(9) 
line 41: inorderTraversal
(4) (9) 
line 42: kNearestNeighbour 10 (8)
(4) (9) 
line 43: inorderTraversal
(4) (9) 
line 44: nearestNeighbour (4)
(4) 
line 45: inorderTraversal
(4) (9) 
line 46: preorderTraversal
(9) (4) 
line 47: inorderTraversal
(4) (9) 
line 48: remove (1)
line 49: inorderTraversal
(4) (9) 
line 50: kNearestNeighbour 10 (2)
(4) (9) 
line 51: inorderTraversal
(4) (9) 
line 52: kNearestNeighbour 8 (8)
(4) (9) 
line 53: inorderTraversal
(4) (9) 
line 54: kNearestNeighbour 2 (2)
(4) (9) 
line 55: inorderTraversal
(4) (9) 
line 56: nearestNeighbour (3)
(4) 
line 57: inorderTraversal
(4) (9) 
line 58: insert (10)
line 59: inorderTraversal
(4) (9) (10) 
line 60: nearestNeighbour (4)
(4) 
line 61: inorderTraversal
(4) (9) (10) 
line 62: clear
line 63: buildTree 15
(9) (4) (9) (8) (5) (4) (10) (8) (5) (7) (1) (3) (8) (6) (9) 
line 64: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 65: nearestNeighbour (5)
(5) 
line 66: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 67: insert (1)
line 68: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 69: kNearestNeighbour 7 (3)
(1) (1) (3) (4) (4) (5) (5) 
line 70: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 71: nodeCount_height_leafCount
nodeCount=16;height=5;leafCount=5
line 72: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 73: kNearestNeighbour 8 (7)
(6) (7) (8) (8) (8) (9) (9) (9) 
line 74: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 75: kNearestNeighbour 4 (6)
(5) (5) (6) (7) 
line 76: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 77: clear
line 78: buildTree 13
(2) (10) (7) (6) (4) (4) (3) (4) (10) (9) (10) (2) (8) 
line 79: inorderTraversal
(2) (2) (3) (4) (4) (4) (6) (7) (8) (9) (10) (10) (10) 
line 80: kNearestNeighbour 2 (1)
(2) (2) 
line 81: inorderTraversal
(2) (2) (3) (4) (4) (4) (6) (7) (8) (9) (10) (10) (10) 
line 82: clear
line 83: buildTree 12
(7) (3) (7) (3) (4) (9) (1) (1) (7) (8) (1) (10) 
line 84: inorderTraversal
(1) (1) (1) (3) (3) (4) (7) (7) (7) (8) (9) (10) 
line 85: kNearestNeighbour 3 (4)
(3) (3) (4) 
line 86: inorderTraversal
(1) (1) (1) (3) (3) (4) (7) (7) (7) (8) (9) (10) 
line 87: insert (2)
line 88: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (7) (7) (7) (8) (9) (10) 
line 89: insert (3)
line 90: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (7) (7) (7) (8) (9) (10) 
line 91: insert (3)
line 92: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (7) (7) (7) (8) (9) (10) 
line 93: insert (4)
line 94: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (7) (7) (7) (8) (9) (10) 
line 95: remove (1)
line 96: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (7) (7) (7) (8) (9) (10) 
line 97: insert (2)
line 98: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (7) (7) (8) (9) (10) 
line 99: insert (8)
line 100: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (7) (7) (8) (8) (9) (10) 
line 101: remove (5)
line 102: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (7) (7) (8) (8) (9) (10) 
line 103: kNearestNeighbour 6 (7)
(7) (7) (7) (8) (8) (9) 
line 104: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (7) (7) (8) (8) (9) (10) 
line 105: insert (10)
line 106: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (7) (7) (8) (8) (9) (10) (10) 
line 107: remove (3)
line 108: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (8) (8) (9) (10) (10) 
line 109: kNearestNeighbour 1 (6)
(7) 
line 110: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (8) (8) (9) (10) (10) 
line 111: nearestNeighbour (3)
(3) 
line 112: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (8) (8) (9) (10) (10) 
line 113: insert (4)
line 114: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (7) (8) (8) (9) (10) (10) 
line 115: insert (5)
line 116: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 117: preorderTraversal
(4) (1) (1) (3) (2) (2) (3) (3) (7) (4) (4) (5) (8) (7) (7) (9) (8) (10) (10) 
line 118: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 119: insert (3)
line 120: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 121: kNearestNeighbour 7 (8)
(7) (7) (7) (8) (8) (9) (10) 
line 122: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 123: kNearestNeighbour 10 (6)
(4) (4) (4) (5) (7) (7) (7) (8) (8) (9) 
line 124: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 125: kNearestNeighbour 8 (5)
(3) (4) (4) (4) (5) (7) (7) (7) 
line 126: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 127: insert (1)
line 128: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 129: nearestNeighbour (2)
(2) 
line 130: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 131: nearestNeighbour (6)
(5) 
line 132: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 133: clear
line 134: buildTree 10
(9) (3) (3) (10) (10) (4) (4) (7) (3) (3) 
line 135: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (9) (10) (10) 
line 136: kNearestNeighbour 5 (6)
(3) (4) (4) (7) (9) 
line 137: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (9) (10) (10) 
line 138: remove (7)
line 139: inorderTraversal
(3) (3) (3) (3) (4) (4) (9) (10) (10) 
line 140: insert (2)
line 141: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (9) (10) (10) 
line 142: nearestNeighbour (3)
(3) 
line 143: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (9) (10) (10) 
line 144: insert (5)
line 145: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (5) (9) (10) (10) 
line 146: insert (10)
line 147: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (5) (9) (10) (10) (10) 
line 148: remove (10)
line 149: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (5) (9) (10) (10) 
line 150: insert (2)
line 151: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (9) (10) (10) 
line 152: preorderTraversal
(4) (3) (2) (2) (3) (3) (3) (9) (4) (5) (10) (10) 
line 153: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (9) (10) (10) 
line 154: insert (1)
line 155: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (9) (10) (10) 
line 156: insert (2)
line 157: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (9) (10) (10) 
line 158: insert (7)
line 159: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (7) (9) (10) (10) 
line 160: insert (1)
line 161: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (7) (9) (10) (10) 
line 162: preorderTraversal
(4) (3) (2) (1) (1) (2) (2) (3) (3) (3) (9) (4) (5) (7) (10) (10) 
line 163: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (7) (9) (10) (10) 
line 164: nearestNeighbour (6)
(7) 
line 165: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (7) (9) (10) (10) 
line 166: clear
line 167: buildTree 7
(3) (3) (5) (10) (6) (3) (10) 
line 168: inorderTraversal
(3) (3) (3) (5) (6) (10) (10) 
line 169: clear
line 170: buildTree 4
(4) (10) (2) (2) 
line 171: inorderTraversal
(2) (2) (4) (10) 
line 172: clear
line 173: buildTree 15
(6) (8) (9) (5) (5) (9) (4) (5) (3) (6) (5) (4) (10) (10) (9) 
line 174: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (6) (6) (8) (9) (9) (9) (10) (10) 
line 175: insert (7)
line 176: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 177: insert (3)
line 178: inorderTraversal
(3) (3) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 179: insert (5)
line 180: inorderTraversal
(3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 181: remove (10)
line 182: inorderTraversal
(3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 183: insert (3)
line 184: inorderTraversal
(3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 185: kNearestNeighbour 7 (8)
(6) (7) (8) (9) (9) (9) (10) 
line 186: inorderTraversal
(3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 187: insert (1)
line 188: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 189: kNearestNeighbour 2 (7)
(7) (8) 
line 190: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 191: kNearestNeighbour 10 (10)
(5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 192: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 193: kNearestNeighbour 10 (5)
(3) (4) (4) (5) (5) (5) (5) (5) (6) (6) 
line 194: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 195: insert (5)
line 196: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 197: kNearestNeighbour 2 (6)
(6) (6) 
line 198: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 199: kNearestNeighbour 9 (2)
(1) (3) (3) (3) (4) (4) (5) (5) (5) 
line 200: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 201: insert (5)
line 202: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 203: clear
line 204: buildTree 18
(8) (4) (7) (1) (3) (4) (2) (2) (8) (3) (6) (7) (3) (2) (5) (9) (5) (3) 
line 205: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (9) 
line 206: insert (4)
line 207: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (9) 
line 208: preorderTraversal
(4) (2) (1) (3) (2) (2) (3) (3) (3) (7) (5) (4) (4) (5) (6) (8) (7) (8) (9) 
line 209: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (9) 
line 210: nearestNeighbour (7)
(7) 
line 211: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (9) 
line 212: insert (4)
line 213: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (9) 
line 214: nearestNeighbour (6)
(6) 
line 215: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (9) 
line 216: remove (1)
line 217: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (9) 
line 218: insert (10)
line 219: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) 
line 220: insert (8)
line 221: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (10) 
line 222: nearestNeighbour (6)
(6) 
line 223: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (10) 
line 224: kNearestNeighbour 1 (7)
(7) 
line 225: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (10) 
line 226: search (4)
TRUE
line 227: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (10) 
line 228: clear
line 229: buildTree 5
(8) (7) (6) (5) (5) 
line 230: inorderTraversal
(5) (5) (6) (7) (8) 
line 231: insert (5)
line 232: inorderTraversal
(5) (5) (5) (6) (7) (8) 
line 233: remove (5)
line 234: inorderTraversal
(5) (5) (6) (7) (8) 
line 235: insert (2)
line 236: inorderTraversal
(2) (5) (5) (6) (7) (8) 
line 237: insert (8)
line 238: inorderTraversal
(2) (5) (5) (6) (7) (8) (8) 
line 239: postorderTraversal
(2) (5) (5) (8) (8) (7) (6) 
line 240: inorderTraversal
(2) (5) (5) (6) (7) (8) (8) 
line 241: remove (6)
line 242: inorderTraversal
(2) (5) (5) (7) (8) (8) 
line 243: nodeCount_height_leafCount
nodeCount=6;height=3;leafCount=3
line 244: inorderTraversal
(2) (5) (5) (7) (8) (8) 
line 245: nearestNeighbour (5)
(5) 
line 246: inorderTraversal
(2) (5) (5) (7) (8) (8) 
line 247: kNearestNeighbour 6 (1)
(2) (5) (5) (7) (8) (8) 
line 248: inorderTraversal
(2) (5) (5) (7) (8) (8) 
line 249: kNearestNeighbour 10 (9)
(2) (5) (5) (7) (8) (8) 
line 250: inorderTraversal
(2) (5) (5) (7) (8) (8) 
line 251: insert (9)
line 252: inorderTraversal
(2) (5) (5) (7) (8) (8) (9) 
line 253: nearestNeighbour (9)
(9) 
line 254: inorderTraversal
(2) (5) (5) (7) (8) (8) (9) 
line 255: insert (3)
line 256: inorderTraversal
(2) (3) (5) (5) (7) (8) (8) (9) 
line 257: nearestNeighbour (4)
(3) 
line 258: inorderTraversal
(2) (3) (5) (5) (7) (8) (8) (9) 
line 259: nearestNeighbour (2)
(2) 
line 260: inorderTraversal
(2) (3) (5) (5) (7) (8) (8) (9) 
line 261: insert (6)
line 262: inorderTraversal
(2) (3) (5) (5) (6) (7) (8) (8) (9) 
line 263: clear
line 264: buildTree 4
(2) (4) (3) (9) 
line 265: inorderTraversal
(2) (3) (4) (9) 
line 266: nearestNeighbour (4)
(4) 
line 267: inorderTraversal
(2) (3) (4) (9) 
line 268: insert (6)
line 269: inorderTraversal
(2) (3) (4) (6) (9) 
line 270: insert (10)
line 271: inorderTraversal
(2) (3) (4) (6) (9) (10) 
line 272: clear
line 273: buildTree 18
(9) (6) (4) (1) (6) (5) (2) (4) (8) (7) (6) (1) (8) (4) (7) (4) (6) (3) 
line 274: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 275: nearestNeighbour (1)
(1) 
line 276: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 277: insert (6)
line 278: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 279: nearestNeighbour (7)
(7) 
line 280: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 281: preorderTraversal
(5) (3) (1) (1) (2) (4) (4) (4) (4) (7) (6) (6) (6) (6) (6) (8) (7) (8) (9) 
line 282: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 283: nearestNeighbour (6)
(6) 
line 284: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 285: insert (5)
line 286: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 287: clear
line 288: buildTree 12
(2) (2) (4) (1) (8) (6) (6) (7) (6) (7) (9) (3) 
line 289: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (6) (7) (7) (8) (9) 
line 290: nearestNeighbour (4)
(4) 
line 291: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (6) (7) (7) (8) (9) 
line 292: kNearestNeighbour 5 (10)
(6) (7) (7) (8) (9) 
line 293: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (6) (7) (7) (8) (9) 
line 294: remove (6)
line 295: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) 
line 296: insert (9)
line 297: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) 
line 298: kNearestNeighbour 7 (7)
(6) (6) (7) (7) (8) (9) (9) 
line 299: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) 
line 300: remove (6)
line 301: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (7) (8) (9) (9) 
line 302: kNearestNeighbour 9 (8)
(2) (3) (4) (6) (7) (7) (8) (9) (9) 
line 303: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (7) (8) (9) (9) 
line 304: nearestNeighbour (3)
(3) 
line 305: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (7) (8) (9) (9) 
line 306: insert (9)
line 307: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (7) (8) (9) (9) (9) 
line 308: insert (9)
line 309: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (7) (8) (9) (9) (9) (9) 
line 310: kNearestNeighbour 9 (4)
(1) (2) (2) (3) (4) (6) (7) (7) (8) 
line 311: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (7) (8) (9) (9) (9) (9) 
line 312: insert (6)
line 313: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) 
line 314: nearestNeighbour (6)
(6) 
line 315: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) 
line 316: insert (10)
line 317: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 318: nodeCount_height_leafCount
nodeCount=15;height=8;leafCount=6
line 319: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 320: kNearestNeighbour 2 (9)
(9) (9) 
line 321: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 322: kNearestNeighbour 1 (9)
(9) 
line 323: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 324: insert (1)
line 325: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 326: nearestNeighbour (7)
(7) 
line 327: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 328: insert (4)
line 329: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 330: clear
line 331: buildTree 6
(4) (10) (2) (8) (4) (3) 
line 332: inorderTraversal
(2) (3) (4) (4) (8) (10) 
line 333: remove (4)
line 334: inorderTraversal
(2) (3) (4) (8) (10) 
line 335: kNearestNeighbour 5 (10)
(2) (3) (4) (8) (10) 
line 336: inorderTraversal
(2) (3) (4) (8) (10) 
line 337: kNearestNeighbour 9 (8)
(2) (3) (4) (8) (10) 
line 338: inorderTraversal
(2) (3) (4) (8) (10) 
line 339: remove (4)
line 340: inorderTraversal
(2) (3) (8) (10) 
line 341: kNearestNeighbour 1 (5)
(3) 
line 342: inorderTraversal
(2) (3) (8) (10) 
line 343: kNearestNeighbour 9 (3)
(2) (3) (8) (10) 
line 344: inorderTraversal
(2) (3) (8) (10) 
line 345: insert (7)
line 346: inorderTraversal
(2) (3) (7) (8) (10) 
line 347: kNearestNeighbour 1 (3)
(3) 
line 348: inorderTraversal
(2) (3) (7) (8) (10) 
line 349: remove (7)
line 350: inorderTraversal
(2) (3) (8) (10) 
line 351: kNearestNeighbour 10 (1)
(2) (3) (8) (10) 
line 352: inorderTraversal
(2) (3) (8) (10) 
line 353: search (4)
FALSE
line 354: inorderTraversal
(2) (3) (8) (10) 
line 355: remove (10)
line 356: inorderTraversal
(2) (3) (8) 
line 357: kNearestNeighbour 7 (5)
(2) (3) (8) 
line 358: inorderTraversal
(2) (3) (8) 
line 359: insert (4)
line 360: inorderTraversal
(2) (3) (4) (8) 
line 361: clear
line 362: buildTree 15
(7) (9) (8) (10) (3) (4) (1) (8) (4) (4) (8) (2) (6) (9) (3) 
line 363: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (7) (8) (8) (8) (9) (9) (10) 
line 364: insert (7)
line 365: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (8) (9) (9) (10) 
line 366: clear
line 367: buildTree 7
(8) (1) (7) (8) (2) (1) (1) 
line 368: inorderTraversal
(1) (1) (1) (2) (7) (8) (8) 
line 369: insert (9)
line 370: inorderTraversal
(1) (1) (1) (2) (7) (8) (8) (9) 
line 371: clear
line 372: buildTree 4
(3) (8) (5) (6) 
line 373: inorderTraversal
(3) (5) (6) (8) 
line 374: insert (6)
line 375: inorderTraversal
(3) (5) (6) (6) (8) 
line 376: insert (9)
line 377: inorderTraversal
(3) (5) (6) (6) (8) (9) 
line 378: insert (9)
line 379: inorderTraversal
(3) (5) (6) (6) (8) (9) (9) 
line 380: insert (7)
line 381: inorderTraversal
(3) (5) (6) (6) (7) (8) (9) (9) 
line 382: nearestNeighbour (4)
(3) 
line 383: inorderTraversal
(3) (5) (6) (6) (7) (8) (9) (9) 
line 384: insert (1)
line 385: inorderTraversal
(1) (3) (5) (6) (6) (7) (8) (9) (9) 
line 386: insert (8)
line 387: inorderTraversal
(1) (3) (5) (6) (6) (7) (8) (8) (9) (9) 
line 388: clear
line 389: buildTree 14
(6) (7) (6) (7) (8) (9) (4) (1) (7) (1) (2) (9) (8) (4) 
line 390: inorderTraversal
(1) (1) (2) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 391: remove (1)
line 392: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 393: kNearestNeighbour 1 (6)
(6) 
line 394: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 395: insert (3)
line 396: inorderTraversal
(1) (2) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 397: insert (10)
line 398: inorderTraversal
(1) (2) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 399: clear
line 400: buildTree 10
(6) (1) (2) (8) (4) (6) (4) (9) (3) (6) 
line 401: inorderTraversal
(1) (2) (3) (4) (4) (6) (6) (6) (8) (9) 
line 402: nearestNeighbour (5)
(4) 
line 403: inorderTraversal
(1) (2) (3) (4) (4) (6) (6) (6) (8) (9) 
line 404: remove (10)
line 405: inorderTraversal
(1) (2) (3) (4) (4) (6) (6) (6) (8) (9) 
line 406: insert (5)
line 407: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (8) (9) 
line 408: insert (9)
line 409: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (8) (9) (9) 
line 410: insert (3)
line 411: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (6) (6) (6) (8) (9) (9) 
line 412: insert (8)
line 413: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (6) (6) (6) (8) (8) (9) (9) 
line 414: clear
line 415: buildTree 19
(2) (9) (10) (5) (2) (9) (5) (1) (1) (10) (7) (4) (6) (2) (5) (8) (7) (6) (4) 
line 416: inorderTraversal
(1) (1) (2) (2) (2) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 417: remove (7)
line 418: inorderTraversal
(1) (1) (2) (2) (2) (4) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) 
line 419: insert (8)
line 420: inorderTraversal
(1) (1) (2) (2) (2) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 421: nodeCount_height_leafCount
nodeCount=19;height=5;leafCount=8
line 422: inorderTraversal
(1) (1) (2) (2) (2) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 423: preorderTraversal
(5) (2) (1) (1) (2) (4) (2) (4) (7) (5) (6) (5) (6) (9) (8) (8) (10) (9) (10) 
line 424: postorderTraversal
(1) (1) (2) (4) (4) (2) (2) (5) (6) (6) (5) (8) (8) (9) (10) (10) (9) (7) (5) 
line 425: clear
