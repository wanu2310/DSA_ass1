line 1: k=1
line 2: insert (1)
line 3: inorderTraversal
(1) 
line 4: insert (9)
line 5: inorderTraversal
(1) (9) 
line 6: clear
line 7: buildTree 7
(3) (5) (5) (8) (10) (5) (4) 
line 8: inorderTraversal
(3) (4) (5) (5) (5) (8) (10) 
line 9: insert (9)
line 10: inorderTraversal
(3) (4) (5) (5) (5) (8) (9) (10) 
line 11: insert (7)
line 12: inorderTraversal
(3) (4) (5) (5) (5) (7) (8) (9) (10) 
line 13: insert (7)
line 14: inorderTraversal
(3) (4) (5) (5) (5) (7) (7) (8) (9) (10) 
line 15: clear
line 16: buildTree 11
(8) (5) (5) (6) (1) (7) (9) (7) (8) (5) (1) 
line 17: inorderTraversal
(1) (1) (5) (5) (5) (6) (7) (7) (8) (8) (9) 
line 18: insert (2)
line 19: inorderTraversal
(1) (1) (2) (5) (5) (5) (6) (7) (7) (8) (8) (9) 
line 20: kNearestNeighbour 8 (8)
(5) (5) (6) (7) (7) (8) (8) (9) 
line 21: inorderTraversal
(1) (1) (2) (5) (5) (5) (6) (7) (7) (8) (8) (9) 
line 22: insert (4)
line 23: inorderTraversal
(1) (1) (2) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) 
line 24: search (1)
TRUE
line 25: inorderTraversal
(1) (1) (2) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) 
line 26: remove (8)
line 27: inorderTraversal
(1) (1) (2) (4) (5) (5) (5) (6) (7) (7) (8) (9) 
line 28: remove (2)
line 29: inorderTraversal
(1) (1) (4) (5) (5) (5) (6) (7) (7) (8) (9) 
line 30: kNearestNeighbour 8 (5)
(4) (5) (5) (5) (6) (7) (7) (8) 
line 31: inorderTraversal
(1) (1) (4) (5) (5) (5) (6) (7) (7) (8) (9) 
line 32: insert (9)
line 33: inorderTraversal
(1) (1) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) 
line 34: insert (8)
line 35: inorderTraversal
(1) (1) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) 
line 36: remove (5)
line 37: inorderTraversal
(1) (1) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) 
line 38: insert (10)
line 39: inorderTraversal
(1) (1) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) 
line 40: insert (8)
line 41: inorderTraversal
(1) (1) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) 
line 42: remove (10)
line 43: inorderTraversal
(1) (1) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) 
line 44: kNearestNeighbour 6 (3)
(1) (1) (4) (5) (5) (6) 
line 45: inorderTraversal
(1) (1) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) 
line 46: insert (8)
line 47: inorderTraversal
(1) (1) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (9) 
line 48: insert (7)
line 49: inorderTraversal
(1) (1) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 50: search (2)
FALSE
line 51: inorderTraversal
(1) (1) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 52: clear
line 53: buildTree 1
(1) 
line 54: inorderTraversal
(1) 
line 55: insert (10)
line 56: inorderTraversal
(1) (10) 
line 57: remove (10)
line 58: inorderTraversal
(1) 
line 59: insert (7)
line 60: inorderTraversal
(1) (7) 
line 61: nearestNeighbour (2)
(1) 
line 62: inorderTraversal
(1) (7) 
line 63: kNearestNeighbour 8 (6)
(1) (7) 
line 64: inorderTraversal
(1) (7) 
line 65: insert (3)
line 66: inorderTraversal
(1) (3) (7) 
line 67: insert (10)
line 68: inorderTraversal
(1) (3) (7) (10) 
line 69: nearestNeighbour (10)
(10) 
line 70: inorderTraversal
(1) (3) (7) (10) 
line 71: insert (9)
line 72: inorderTraversal
(1) (3) (7) (9) (10) 
line 73: remove (1)
line 74: inorderTraversal
(3) (7) (9) (10) 
line 75: kNearestNeighbour 5 (9)
(3) (7) (9) (10) 
line 76: inorderTraversal
(3) (7) (9) (10) 
line 77: insert (7)
line 78: inorderTraversal
(3) (7) (7) (9) (10) 
line 79: insert (2)
line 80: inorderTraversal
(2) (3) (7) (7) (9) (10) 
line 81: nearestNeighbour (7)
(7) 
line 82: inorderTraversal
(2) (3) (7) (7) (9) (10) 
line 83: postorderTraversal
(2) (7) (9) (10) (7) (3) 
line 84: inorderTraversal
(2) (3) (7) (7) (9) (10) 
line 85: remove (8)
line 86: inorderTraversal
(2) (3) (7) (7) (9) (10) 
line 87: insert (9)
line 88: inorderTraversal
(2) (3) (7) (7) (9) (9) (10) 
line 89: nearestNeighbour (9)
(9) 
line 90: inorderTraversal
(2) (3) (7) (7) (9) (9) (10) 
line 91: nearestNeighbour (6)
(7) 
line 92: inorderTraversal
(2) (3) (7) (7) (9) (9) (10) 
line 93: kNearestNeighbour 7 (3)
(2) (3) (7) (7) (9) (9) (10) 
line 94: inorderTraversal
(2) (3) (7) (7) (9) (9) (10) 
line 95: kNearestNeighbour 9 (1)
(2) (3) (7) (7) (9) (9) (10) 
line 96: inorderTraversal
(2) (3) (7) (7) (9) (9) (10) 
line 97: clear
line 98: buildTree 15
(10) (4) (1) (5) (7) (8) (5) (2) (8) (2) (3) (1) (1) (9) (5) 
line 99: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (7) (8) (8) (9) (10) 
line 100: insert (10)
line 101: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (7) (8) (8) (9) (10) (10) 
line 102: nearestNeighbour (1)
(1) 
line 103: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (7) (8) (8) (9) (10) (10) 
line 104: nearestNeighbour (8)
(8) 
line 105: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (7) (8) (8) (9) (10) (10) 
line 106: insert (8)
line 107: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (7) (8) (8) (8) (9) (10) (10) 
line 108: clear
line 109: buildTree 7
(7) (3) (1) (10) (4) (9) (9) 
line 110: inorderTraversal
(1) (3) (4) (7) (9) (9) (10) 
line 111: insert (8)
line 112: inorderTraversal
(1) (3) (4) (7) (8) (9) (9) (10) 
line 113: remove (9)
line 114: inorderTraversal
(1) (3) (4) (7) (8) (9) (10) 
line 115: insert (4)
line 116: inorderTraversal
(1) (3) (4) (4) (7) (8) (9) (10) 
line 117: insert (5)
line 118: inorderTraversal
(1) (3) (4) (4) (5) (7) (8) (9) (10) 
line 119: kNearestNeighbour 7 (5)
(1) (3) (4) (4) (5) (7) (8) 
line 120: inorderTraversal
(1) (3) (4) (4) (5) (7) (8) (9) (10) 
line 121: insert (6)
line 122: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 123: insert (3)
line 124: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 125: nodeCount_height_leafCount
nodeCount=11;height=6;leafCount=5
line 126: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 127: nearestNeighbour (3)
(3) 
line 128: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 129: insert (1)
line 130: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 131: kNearestNeighbour 9 (9)
(3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 132: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 133: kNearestNeighbour 5 (5)
(3) (4) (4) (5) (6) 
line 134: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 135: kNearestNeighbour 5 (9)
(6) (7) (8) (9) (10) 
line 136: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 137: search (6)
TRUE
line 138: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 139: kNearestNeighbour 9 (10)
(3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 140: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) 
line 141: insert (10)
line 142: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (7) (8) (9) (10) (10) 
line 143: remove (9)
line 144: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (7) (8) (10) (10) 
line 145: nearestNeighbour (10)
(10) 
line 146: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (7) (8) (10) (10) 
line 147: insert (3)
line 148: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (8) (10) (10) 
line 149: insert (8)
line 150: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (8) (8) (10) (10) 
line 151: insert (10)
line 152: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (8) (8) (10) (10) (10) 
line 153: insert (8)
line 154: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (8) (8) (8) (10) (10) (10) 
line 155: kNearestNeighbour 3 (7)
(7) (8) (8) 
line 156: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (8) (8) (8) (10) (10) (10) 
line 157: nearestNeighbour (4)
(4) 
line 158: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (8) (8) (8) (10) (10) (10) 
line 159: remove (10)
line 160: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (8) (8) (8) (10) (10) 
line 161: nearestNeighbour (9)
(8) 
line 162: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (8) (8) (8) (10) (10) 
line 163: insert (8)
line 164: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (8) (8) (8) (8) (10) (10) 
line 165: insert (3)
line 166: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (5) (6) (7) (8) (8) (8) (8) (10) (10) 
line 167: clear
line 168: buildTree 1
(4) 
line 169: inorderTraversal
(4) 
line 170: kNearestNeighbour 4 (1)
(4) 
line 171: inorderTraversal
(4) 
line 172: insert (9)
line 173: inorderTraversal
(4) (9) 
line 174: postorderTraversal
(9) (4) 
line 175: inorderTraversal
(4) (9) 
line 176: search (9)
TRUE
line 177: inorderTraversal
(4) (9) 
line 178: clear
line 179: buildTree 4
(6) (2) (7) (1) 
line 180: inorderTraversal
(1) (2) (6) (7) 
line 181: search (1)
TRUE
line 182: inorderTraversal
(1) (2) (6) (7) 
line 183: insert (3)
line 184: inorderTraversal
(1) (2) (3) (6) (7) 
line 185: nearestNeighbour (6)
(6) 
line 186: inorderTraversal
(1) (2) (3) (6) (7) 
line 187: insert (1)
line 188: inorderTraversal
(1) (1) (2) (3) (6) (7) 
line 189: insert (2)
line 190: inorderTraversal
(1) (1) (2) (2) (3) (6) (7) 
line 191: clear
line 192: buildTree 20
(5) (4) (7) (3) (1) (6) (2) (4) (6) (2) (5) (3) (10) (5) (8) (3) (8) (4) (4) (5) 
line 193: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (10) 
line 194: clear
line 195: buildTree 7
(7) (3) (9) (8) (9) (9) (8) 
line 196: inorderTraversal
(3) (7) (8) (8) (9) (9) (9) 
line 197: kNearestNeighbour 6 (9)
(7) (8) (8) (9) (9) (9) 
line 198: inorderTraversal
(3) (7) (8) (8) (9) (9) (9) 
line 199: insert (5)
line 200: inorderTraversal
(3) (5) (7) (8) (8) (9) (9) (9) 
line 201: kNearestNeighbour 5 (2)
(3) (5) (7) (8) (8) 
line 202: inorderTraversal
(3) (5) (7) (8) (8) (9) (9) (9) 
line 203: clear
line 204: buildTree 2
(6) (6) 
line 205: inorderTraversal
(6) (6) 
line 206: insert (6)
line 207: inorderTraversal
(6) (6) (6) 
line 208: insert (1)
line 209: inorderTraversal
(1) (6) (6) (6) 
line 210: kNearestNeighbour 4 (2)
(1) (6) (6) (6) 
line 211: inorderTraversal
(1) (6) (6) (6) 
line 212: insert (2)
line 213: inorderTraversal
(1) (2) (6) (6) (6) 
line 214: nearestNeighbour (7)
(6) 
line 215: inorderTraversal
(1) (2) (6) (6) (6) 
line 216: clear
line 217: buildTree 11
(10) (1) (8) (7) (4) (10) (9) (9) (9) (4) (6) 
line 218: inorderTraversal
(1) (4) (4) (6) (7) (8) (9) (9) (9) (10) (10) 
line 219: insert (6)
line 220: inorderTraversal
(1) (4) (4) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 221: remove (7)
line 222: inorderTraversal
(1) (4) (4) (6) (6) (8) (9) (9) (9) (10) (10) 
line 223: remove (9)
line 224: inorderTraversal
(1) (4) (4) (6) (6) (8) (9) (9) (10) (10) 
line 225: insert (9)
line 226: inorderTraversal
(1) (4) (4) (6) (6) (8) (9) (9) (9) (10) (10) 
line 227: postorderTraversal
(1) (4) (6) (6) (4) (9) (10) (10) (9) (9) (8) 
line 228: inorderTraversal
(1) (4) (4) (6) (6) (8) (9) (9) (9) (10) (10) 
line 229: nearestNeighbour (2)
(1) 
line 230: inorderTraversal
(1) (4) (4) (6) (6) (8) (9) (9) (9) (10) (10) 
line 231: kNearestNeighbour 1 (2)
(1) 
line 232: inorderTraversal
(1) (4) (4) (6) (6) (8) (9) (9) (9) (10) (10) 
line 233: insert (7)
line 234: inorderTraversal
(1) (4) (4) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 235: insert (2)
line 236: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 237: nearestNeighbour (3)
(2) 
line 238: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 239: insert (5)
line 240: inorderTraversal
(1) (2) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 241: clear
line 242: buildTree 17
(7) (4) (4) (7) (1) (9) (10) (7) (9) (1) (4) (4) (10) (2) (8) (9) (1) 
line 243: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 244: nearestNeighbour (4)
(4) 
line 245: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 246: nearestNeighbour (4)
(4) 
line 247: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 248: insert (2)
line 249: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 250: insert (9)
line 251: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 252: nearestNeighbour (7)
(7) 
line 253: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 254: kNearestNeighbour 9 (3)
(1) (1) (1) (2) (2) (4) (4) (4) (4) 
line 255: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 256: kNearestNeighbour 6 (7)
(7) (7) (7) (8) (9) (9) 
line 257: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 258: remove (9)
line 259: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 260: preorderTraversal
(7) (2) (1) (1) (1) (4) (2) (4) (4) (4) (9) (7) (7) (8) (9) (10) (9) (10) 
line 261: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 262: nearestNeighbour (2)
(2) 
line 263: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (4) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 264: clear
line 265: buildTree 17
(7) (2) (6) (5) (6) (5) (6) (2) (10) (10) (4) (5) (7) (1) (10) (5) (7) 
line 266: inorderTraversal
(1) (2) (2) (4) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (10) (10) (10) 
line 267: clear
line 268: buildTree 15
(9) (7) (5) (8) (3) (3) (2) (4) (7) (4) (10) (2) (6) (6) (1) 
line 269: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (9) (10) 
line 270: kNearestNeighbour 1 (1)
(1) 
line 271: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (9) (10) 
line 272: kNearestNeighbour 5 (9)
(7) (7) (8) (9) (10) 
line 273: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (9) (10) 
line 274: clear
line 275: buildTree 3
(4) (3) (3) 
line 276: inorderTraversal
(3) (3) (4) 
line 277: insert (2)
line 278: inorderTraversal
(2) (3) (3) (4) 
line 279: kNearestNeighbour 9 (1)
(2) (3) (3) (4) 
line 280: inorderTraversal
(2) (3) (3) (4) 
line 281: nearestNeighbour (5)
(4) 
line 282: inorderTraversal
(2) (3) (3) (4) 
line 283: kNearestNeighbour 7 (9)
(2) (3) (3) (4) 
line 284: inorderTraversal
(2) (3) (3) (4) 
line 285: search (2)
TRUE
line 286: inorderTraversal
(2) (3) (3) (4) 
line 287: kNearestNeighbour 4 (7)
(2) (3) (3) (4) 
line 288: inorderTraversal
(2) (3) (3) (4) 
line 289: nearestNeighbour (7)
(4) 
line 290: inorderTraversal
(2) (3) (3) (4) 
line 291: insert (10)
line 292: inorderTraversal
(2) (3) (3) (4) (10) 
line 293: insert (7)
line 294: inorderTraversal
(2) (3) (3) (4) (7) (10) 
line 295: insert (8)
line 296: inorderTraversal
(2) (3) (3) (4) (7) (8) (10) 
line 297: insert (5)
line 298: inorderTraversal
(2) (3) (3) (4) (5) (7) (8) (10) 
line 299: clear
line 300: buildTree 4
(5) (6) (1) (6) 
line 301: inorderTraversal
(1) (5) (6) (6) 
line 302: remove (6)
line 303: inorderTraversal
(1) (5) (6) 
line 304: nearestNeighbour (5)
(5) 
line 305: inorderTraversal
(1) (5) (6) 
line 306: postorderTraversal
(1) (6) (5) 
line 307: inorderTraversal
(1) (5) (6) 
line 308: kNearestNeighbour 2 (7)
(5) (6) 
line 309: inorderTraversal
(1) (5) (6) 
line 310: nearestNeighbour (1)
(1) 
line 311: inorderTraversal
(1) (5) (6) 
line 312: kNearestNeighbour 8 (4)
(1) (5) (6) 
line 313: inorderTraversal
(1) (5) (6) 
line 314: remove (5)
line 315: inorderTraversal
(1) (6) 
line 316: kNearestNeighbour 10 (1)
(1) (6) 
line 317: inorderTraversal
(1) (6) 
line 318: nearestNeighbour (4)
(6) 
line 319: inorderTraversal
(1) (6) 
line 320: remove (1)
line 321: inorderTraversal
(6) 
line 322: search (10)
FALSE
line 323: inorderTraversal
(6) 
line 324: postorderTraversal
(6) 
line 325: inorderTraversal
(6) 
line 326: clear
line 327: buildTree 17
(3) (2) (7) (5) (6) (1) (10) (9) (2) (8) (2) (5) (3) (8) (7) (4) (3) 
line 328: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) 
line 329: insert (2)
line 330: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) 
line 331: insert (1)
line 332: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) 
line 333: remove (2)
line 334: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) 
line 335: insert (6)
line 336: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 337: insert (10)
line 338: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 339: preorderTraversal
(5) (2) (1) (1) (3) (2) (2) (3) (3) (4) (7) (5) (6) (6) (8) (7) (9) (8) (10) (10) 
line 340: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 341: remove (3)
line 342: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 343: insert (5)
line 344: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 345: insert (1)
line 346: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 347: clear
line 348: buildTree 6
(8) (8) (4) (7) (7) (5) 
line 349: inorderTraversal
(4) (5) (7) (7) (8) (8) 
line 350: remove (2)
line 351: inorderTraversal
(4) (5) (7) (7) (8) (8) 
line 352: insert (5)
line 353: inorderTraversal
(4) (5) (5) (7) (7) (8) (8) 
line 354: nearestNeighbour (9)
(8) 
line 355: inorderTraversal
(4) (5) (5) (7) (7) (8) (8) 
line 356: insert (8)
line 357: inorderTraversal
(4) (5) (5) (7) (7) (8) (8) (8) 
line 358: nearestNeighbour (6)
(5) 
line 359: inorderTraversal
(4) (5) (5) (7) (7) (8) (8) (8) 
line 360: remove (7)
line 361: inorderTraversal
(4) (5) (5) (7) (8) (8) (8) 
line 362: insert (6)
line 363: inorderTraversal
(4) (5) (5) (6) (7) (8) (8) (8) 
line 364: nearestNeighbour (5)
(5) 
line 365: inorderTraversal
(4) (5) (5) (6) (7) (8) (8) (8) 
line 366: kNearestNeighbour 5 (7)
(6) (7) (8) (8) (8) 
line 367: inorderTraversal
(4) (5) (5) (6) (7) (8) (8) (8) 
line 368: insert (5)
line 369: inorderTraversal
(4) (5) (5) (5) (6) (7) (8) (8) (8) 
line 370: nearestNeighbour (6)
(6) 
line 371: inorderTraversal
(4) (5) (5) (5) (6) (7) (8) (8) (8) 
line 372: kNearestNeighbour 9 (9)
(4) (5) (5) (5) (6) (7) (8) (8) (8) 
line 373: inorderTraversal
(4) (5) (5) (5) (6) (7) (8) (8) (8) 
line 374: kNearestNeighbour 7 (6)
(4) (5) (5) (5) (6) (7) (8) 
line 375: inorderTraversal
(4) (5) (5) (5) (6) (7) (8) (8) (8) 
line 376: clear
line 377: buildTree 13
(10) (8) (7) (4) (2) (7) (5) (7) (5) (8) (10) (2) (5) 
line 378: inorderTraversal
(2) (2) (4) (5) (5) (5) (7) (7) (7) (8) (8) (10) (10) 
line 379: insert (9)
line 380: inorderTraversal
(2) (2) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 381: remove (5)
line 382: inorderTraversal
(2) (2) (4) (5) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 383: remove (5)
line 384: inorderTraversal
(2) (2) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 385: kNearestNeighbour 6 (10)
(7) (8) (8) (9) (10) (10) 
line 386: inorderTraversal
(2) (2) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 387: kNearestNeighbour 5 (4)
(2) (2) (4) (5) (7) 
line 388: inorderTraversal
(2) (2) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 389: insert (1)
line 390: inorderTraversal
(1) (2) (2) (4) (5) (7) (7) (7) (8) (8) (9) (10) (10) 
line 391: insert (9)
line 392: inorderTraversal
(1) (2) (2) (4) (5) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 393: insert (6)
line 394: inorderTraversal
(1) (2) (2) (4) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 395: nearestNeighbour (4)
(4) 
line 396: inorderTraversal
(1) (2) (2) (4) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 397: remove (4)
line 398: inorderTraversal
(1) (2) (2) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 399: remove (2)
line 400: inorderTraversal
(1) (2) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 401: kNearestNeighbour 3 (2)
(1) (2) (5) 
line 402: inorderTraversal
(1) (2) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 403: nearestNeighbour (6)
(6) 
line 404: inorderTraversal
(1) (2) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 405: insert (6)
line 406: inorderTraversal
(1) (2) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 407: clear
line 408: buildTree 16
(10) (4) (4) (8) (9) (1) (8) (6) (10) (8) (5) (8) (5) (7) (4) (6) 
line 409: inorderTraversal
(1) (4) (4) (4) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 410: kNearestNeighbour 9 (2)
(1) (4) (4) (4) (5) (5) (6) (6) (7) 
line 411: inorderTraversal
(1) (4) (4) (4) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 412: nearestNeighbour (6)
(6) 
line 413: inorderTraversal
(1) (4) (4) (4) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 414: insert (5)
line 415: inorderTraversal
(1) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 416: insert (5)
line 417: inorderTraversal
(1) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 418: clear
line 419: buildTree 20
(10) (2) (7) (3) (2) (3) (4) (6) (6) (3) (6) (5) (5) (9) (2) (7) (8) (4) (5) (10) 
line 420: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (10) (10) 
line 421: insert (8)
line 422: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 423: nodeCount_height_leafCount
nodeCount=21;height=6;leafCount=7
line 424: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 425: preorderTraversal
(5) (3) (2) (2) (2) (3) (4) (3) (4) (7) (6) (5) (5) (6) (6) (9) (7) (8) (8) (10) (10) 
line 426: postorderTraversal
(2) (2) (2) (3) (4) (4) (3) (3) (5) (5) (6) (6) (6) (8) (8) (7) (10) (10) (9) (7) (5) 
line 427: clear
