line 1: k=1
line 2: kNearestNeighbour 2 (9)

line 3: inorderTraversal

line 4: search (6)
FALSE
line 5: inorderTraversal

line 6: kNearestNeighbour 2 (3)

line 7: inorderTraversal

line 8: insert (10)
line 9: inorderTraversal
(10) 
line 10: kNearestNeighbour 7 (4)
(10) 
line 11: inorderTraversal
(10) 
line 12: insert (3)
line 13: inorderTraversal
(3) (10) 
line 14: nearestNeighbour (3)
(3) 
line 15: inorderTraversal
(3) (10) 
line 16: clear
line 17: buildTree 7
(2) (6) (2) (6) (3) (2) (6) 
line 18: inorderTraversal
(2) (2) (2) (3) (6) (6) (6) 
line 19: search (2)
TRUE
line 20: inorderTraversal
(2) (2) (2) (3) (6) (6) (6) 
line 21: insert (1)
line 22: inorderTraversal
(1) (2) (2) (2) (3) (6) (6) (6) 
line 23: insert (1)
line 24: inorderTraversal
(1) (1) (2) (2) (2) (3) (6) (6) (6) 
line 25: kNearestNeighbour 3 (8)
(6) (6) (6) 
line 26: inorderTraversal
(1) (1) (2) (2) (2) (3) (6) (6) (6) 
line 27: insert (2)
line 28: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (6) (6) (6) 
line 29: insert (4)
line 30: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (4) (6) (6) (6) 
line 31: remove (2)
line 32: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (6) (6) (6) 
line 33: kNearestNeighbour 2 (1)
(1) (1) 
line 34: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (6) (6) (6) 
line 35: search (6)
TRUE
line 36: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (6) (6) (6) 
line 37: search (1)
TRUE
line 38: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (6) (6) (6) 
line 39: insert (5)
line 40: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) 
line 41: kNearestNeighbour 8 (6)
(2) (2) (3) (4) (5) (6) (6) (6) 
line 42: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) 
line 43: insert (1)
line 44: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) 
line 45: nearestNeighbour (7)
(6) 
line 46: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) 
line 47: insert (8)
line 48: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (8) 
line 49: kNearestNeighbour 6 (1)
(1) (1) (1) (2) (2) (2) 
line 50: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (8) 
line 51: nearestNeighbour (6)
(6) 
line 52: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (8) 
line 53: kNearestNeighbour 10 (1)
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) 
line 54: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (8) 
line 55: insert (2)
line 56: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (6) (6) (6) (8) 
line 57: search (5)
TRUE
line 58: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (6) (6) (6) (8) 
line 59: insert (5)
line 60: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (8) 
line 61: nearestNeighbour (2)
(2) 
line 62: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (8) 
line 63: clear
line 64: buildTree 3
(8) (6) (6) 
line 65: inorderTraversal
(6) (6) (8) 
line 66: insert (5)
line 67: inorderTraversal
(5) (6) (6) (8) 
line 68: insert (5)
line 69: inorderTraversal
(5) (5) (6) (6) (8) 
line 70: remove (6)
line 71: inorderTraversal
(5) (5) (6) (8) 
line 72: insert (8)
line 73: inorderTraversal
(5) (5) (6) (8) (8) 
line 74: insert (1)
line 75: inorderTraversal
(1) (5) (5) (6) (8) (8) 
line 76: kNearestNeighbour 10 (7)
(1) (5) (5) (6) (8) (8) 
line 77: inorderTraversal
(1) (5) (5) (6) (8) (8) 
line 78: insert (9)
line 79: inorderTraversal
(1) (5) (5) (6) (8) (8) (9) 
line 80: kNearestNeighbour 6 (9)
(5) (5) (6) (8) (8) (9) 
line 81: inorderTraversal
(1) (5) (5) (6) (8) (8) (9) 
line 82: clear
line 83: buildTree 4
(1) (1) (6) (6) 
line 84: inorderTraversal
(1) (1) (6) (6) 
line 85: insert (4)
line 86: inorderTraversal
(1) (1) (4) (6) (6) 
line 87: nearestNeighbour (9)
(6) 
line 88: inorderTraversal
(1) (1) (4) (6) (6) 
line 89: remove (6)
line 90: inorderTraversal
(1) (1) (4) (6) 
line 91: insert (1)
line 92: inorderTraversal
(1) (1) (1) (4) (6) 
line 93: nearestNeighbour (9)
(6) 
line 94: inorderTraversal
(1) (1) (1) (4) (6) 
line 95: insert (9)
line 96: inorderTraversal
(1) (1) (1) (4) (6) (9) 
line 97: insert (5)
line 98: inorderTraversal
(1) (1) (1) (4) (5) (6) (9) 
line 99: kNearestNeighbour 5 (4)
(1) (1) (4) (5) (6) 
line 100: inorderTraversal
(1) (1) (1) (4) (5) (6) (9) 
line 101: nearestNeighbour (9)
(9) 
line 102: inorderTraversal
(1) (1) (1) (4) (5) (6) (9) 
line 103: insert (6)
line 104: inorderTraversal
(1) (1) (1) (4) (5) (6) (6) (9) 
line 105: insert (1)
line 106: inorderTraversal
(1) (1) (1) (1) (4) (5) (6) (6) (9) 
line 107: nearestNeighbour (2)
(1) 
line 108: inorderTraversal
(1) (1) (1) (1) (4) (5) (6) (6) (9) 
line 109: insert (3)
line 110: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (6) (6) (9) 
line 111: insert (8)
line 112: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (6) (6) (8) (9) 
line 113: search (6)
TRUE
line 114: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (6) (6) (8) (9) 
line 115: kNearestNeighbour 9 (3)
(1) (1) (1) (1) (3) (4) (5) (6) (6) 
line 116: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (6) (6) (8) (9) 
line 117: insert (2)
line 118: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (6) (6) (8) (9) 
line 119: insert (4)
line 120: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (5) (6) (6) (8) (9) 
line 121: nearestNeighbour (5)
(5) 
line 122: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (5) (6) (6) (8) (9) 
line 123: search (6)
TRUE
line 124: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (5) (6) (6) (8) (9) 
line 125: clear
line 126: buildTree 13
(5) (6) (7) (8) (5) (7) (10) (9) (1) (9) (6) (1) (5) 
line 127: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 128: kNearestNeighbour 3 (10)
(9) (9) (10) 
line 129: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 130: nearestNeighbour (7)
(7) 
line 131: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 132: insert (9)
line 133: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 134: nearestNeighbour (10)
(10) 
line 135: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 136: nearestNeighbour (3)
(1) 
line 137: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 138: nearestNeighbour (9)
(9) 
line 139: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 140: insert (7)
line 141: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (10) 
line 142: insert (7)
line 143: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 144: remove (1)
line 145: inorderTraversal
(1) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 146: kNearestNeighbour 9 (10)
(7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 147: inorderTraversal
(1) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 148: kNearestNeighbour 10 (8)
(6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 149: inorderTraversal
(1) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 150: insert (10)
line 151: inorderTraversal
(1) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 152: insert (4)
line 153: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 154: search (5)
TRUE
line 155: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 156: insert (6)
line 157: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 158: kNearestNeighbour 1 (1)
(1) 
line 159: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 160: remove (9)
line 161: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 162: kNearestNeighbour 10 (8)
(6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 163: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 164: insert (3)
line 165: inorderTraversal
(1) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 166: nearestNeighbour (10)
(10) 
line 167: inorderTraversal
(1) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 168: insert (4)
line 169: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 170: kNearestNeighbour 4 (5)
(4) (5) (5) (5) 
line 171: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 172: insert (9)
line 173: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 174: preorderTraversal
(6) (5) (1) (4) (3) (4) (5) (5) (8) (7) (6) (6) (7) (7) (7) (9) (9) (10) (9) (10) 
line 175: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 176: kNearestNeighbour 10 (7)
(6) (6) (6) (7) (7) (7) (7) (8) (9) (9) 
line 177: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 178: insert (1)
line 179: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 180: insert (1)
line 181: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 182: nearestNeighbour (5)
(5) 
line 183: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 184: remove (9)
line 185: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 186: insert (6)
line 187: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 188: postorderTraversal
(1) (1) (3) (4) (4) (1) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (10) (10) (9) (9) (8) (6) 
line 189: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 190: search (10)
TRUE
line 191: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 192: insert (10)
line 193: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 194: preorderTraversal
(6) (5) (1) (4) (3) (1) (1) (4) (5) (5) (8) (7) (6) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 195: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 196: kNearestNeighbour 3 (9)
(9) (9) (10) 
line 197: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 198: insert (10)
line 199: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 200: remove (2)
line 201: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 202: clear
line 203: buildTree 18
(9) (8) (9) (1) (3) (8) (5) (9) (4) (1) (5) (7) (4) (7) (1) (1) (3) (6) 
line 204: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 205: clear
line 206: buildTree 1
(3) 
line 207: inorderTraversal
(3) 
line 208: clear
line 209: buildTree 3
(7) (6) (9) 
line 210: inorderTraversal
(6) (7) (9) 
line 211: insert (6)
line 212: inorderTraversal
(6) (6) (7) (9) 
line 213: kNearestNeighbour 6 (4)
(6) (6) (7) (9) 
line 214: inorderTraversal
(6) (6) (7) (9) 
line 215: clear
line 216: buildTree 5
(1) (5) (8) (2) (4) 
line 217: inorderTraversal
(1) (2) (4) (5) (8) 
line 218: insert (6)
line 219: inorderTraversal
(1) (2) (4) (5) (6) (8) 
line 220: kNearestNeighbour 10 (4)
(1) (2) (4) (5) (6) (8) 
line 221: inorderTraversal
(1) (2) (4) (5) (6) (8) 
line 222: clear
line 223: buildTree 10
(4) (3) (6) (9) (8) (4) (1) (2) (1) (7) 
line 224: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (7) (8) (9) 
line 225: remove (7)
line 226: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (8) (9) 
line 227: insert (7)
line 228: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (7) (8) (9) 
line 229: insert (4)
line 230: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (7) (8) (9) 
line 231: clear
line 232: buildTree 15
(7) (2) (2) (6) (5) (4) (6) (8) (1) (10) (4) (2) (6) (10) (10) 
line 233: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (6) (6) (6) (7) (8) (10) (10) (10) 
line 234: clear
line 235: buildTree 11
(10) (1) (10) (9) (2) (9) (8) (5) (5) (5) (4) 
line 236: inorderTraversal
(1) (2) (4) (5) (5) (5) (8) (9) (9) (10) (10) 
line 237: nodeCount_height_leafCount
nodeCount=11;height=5;leafCount=5
line 238: inorderTraversal
(1) (2) (4) (5) (5) (5) (8) (9) (9) (10) (10) 
line 239: nearestNeighbour (5)
(5) 
line 240: inorderTraversal
(1) (2) (4) (5) (5) (5) (8) (9) (9) (10) (10) 
line 241: insert (2)
line 242: inorderTraversal
(1) (2) (2) (4) (5) (5) (5) (8) (9) (9) (10) (10) 
line 243: kNearestNeighbour 2 (2)
(2) (2) 
line 244: inorderTraversal
(1) (2) (2) (4) (5) (5) (5) (8) (9) (9) (10) (10) 
line 245: insert (5)
line 246: inorderTraversal
(1) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (10) (10) 
line 247: insert (2)
line 248: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (10) (10) 
line 249: kNearestNeighbour 8 (7)
(5) (5) (5) (5) (8) (9) (9) (10) 
line 250: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (10) (10) 
line 251: nearestNeighbour (8)
(8) 
line 252: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (10) (10) 
line 253: kNearestNeighbour 8 (5)
(2) (2) (4) (5) (5) (5) (5) (8) 
line 254: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (10) (10) 
line 255: insert (1)
line 256: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (10) (10) 
line 257: nearestNeighbour (4)
(4) 
line 258: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (10) (10) 
line 259: insert (9)
line 260: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (9) (10) (10) 
line 261: nearestNeighbour (1)
(1) 
line 262: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (9) (10) (10) 
line 263: insert (9)
line 264: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (9) (9) (10) (10) 
line 265: nearestNeighbour (4)
(4) 
line 266: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (5) (5) (8) (9) (9) (9) (9) (10) (10) 
line 267: insert (3)
line 268: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (5) (8) (9) (9) (9) (9) (10) (10) 
line 269: kNearestNeighbour 5 (8)
(8) (9) (9) (9) (9) 
line 270: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (5) (8) (9) (9) (9) (9) (10) (10) 
line 271: insert (9)
line 272: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (5) (8) (9) (9) (9) (9) (9) (10) (10) 
line 273: insert (3)
line 274: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (8) (9) (9) (9) (9) (9) (10) (10) 
line 275: nearestNeighbour (1)
(1) 
line 276: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (8) (9) (9) (9) (9) (9) (10) (10) 
line 277: nearestNeighbour (1)
(1) 
line 278: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (8) (9) (9) (9) (9) (9) (10) (10) 
line 279: nearestNeighbour (5)
(5) 
line 280: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (8) (9) (9) (9) (9) (9) (10) (10) 
line 281: insert (8)
line 282: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 283: nearestNeighbour (1)
(1) 
line 284: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 285: kNearestNeighbour 7 (5)
(3) (3) (4) (5) (5) (5) (5) 
line 286: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 287: insert (6)
line 288: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 289: insert (10)
line 290: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 291: nearestNeighbour (7)
(6) 
line 292: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 293: remove (9)
line 294: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 295: insert (3)
line 296: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 297: remove (9)
line 298: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) (10) 
line 299: nearestNeighbour (4)
(4) 
line 300: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) (10) 
line 301: clear
line 302: buildTree 7
(9) (10) (10) (9) (6) (4) (2) 
line 303: inorderTraversal
(2) (4) (6) (9) (9) (10) (10) 
line 304: insert (8)
line 305: inorderTraversal
(2) (4) (6) (8) (9) (9) (10) (10) 
line 306: insert (9)
line 307: inorderTraversal
(2) (4) (6) (8) (9) (9) (9) (10) (10) 
line 308: kNearestNeighbour 10 (9)
(2) (4) (6) (8) (9) (9) (9) (10) (10) 
line 309: inorderTraversal
(2) (4) (6) (8) (9) (9) (9) (10) (10) 
line 310: remove (8)
line 311: inorderTraversal
(2) (4) (6) (9) (9) (9) (10) (10) 
line 312: remove (4)
line 313: inorderTraversal
(2) (6) (9) (9) (9) (10) (10) 
line 314: remove (9)
line 315: inorderTraversal
(2) (6) (9) (9) (10) (10) 
line 316: insert (6)
line 317: inorderTraversal
(2) (6) (6) (9) (9) (10) (10) 
line 318: insert (5)
line 319: inorderTraversal
(2) (5) (6) (6) (9) (9) (10) (10) 
line 320: kNearestNeighbour 8 (8)
(2) (5) (6) (6) (9) (9) (10) (10) 
line 321: inorderTraversal
(2) (5) (6) (6) (9) (9) (10) (10) 
line 322: insert (1)
line 323: inorderTraversal
(1) (2) (5) (6) (6) (9) (9) (10) (10) 
line 324: nearestNeighbour (2)
(2) 
line 325: inorderTraversal
(1) (2) (5) (6) (6) (9) (9) (10) (10) 
line 326: clear
line 327: buildTree 12
(8) (8) (4) (10) (4) (1) (6) (8) (4) (9) (6) (10) 
line 328: inorderTraversal
(1) (4) (4) (4) (6) (6) (8) (8) (8) (9) (10) (10) 
line 329: nearestNeighbour (4)
(4) 
line 330: inorderTraversal
(1) (4) (4) (4) (6) (6) (8) (8) (8) (9) (10) (10) 
line 331: nearestNeighbour (7)
(6) 
line 332: inorderTraversal
(1) (4) (4) (4) (6) (6) (8) (8) (8) (9) (10) (10) 
line 333: kNearestNeighbour 6 (2)
(1) (4) (4) (4) (6) (6) 
line 334: inorderTraversal
(1) (4) (4) (4) (6) (6) (8) (8) (8) (9) (10) (10) 
line 335: nearestNeighbour (7)
(6) 
line 336: inorderTraversal
(1) (4) (4) (4) (6) (6) (8) (8) (8) (9) (10) (10) 
line 337: insert (1)
line 338: inorderTraversal
(1) (1) (4) (4) (4) (6) (6) (8) (8) (8) (9) (10) (10) 
line 339: nodeCount_height_leafCount
nodeCount=13;height=5;leafCount=5
line 340: inorderTraversal
(1) (1) (4) (4) (4) (6) (6) (8) (8) (8) (9) (10) (10) 
line 341: insert (4)
line 342: inorderTraversal
(1) (1) (4) (4) (4) (4) (6) (6) (8) (8) (8) (9) (10) (10) 
line 343: nodeCount_height_leafCount
nodeCount=14;height=5;leafCount=5
line 344: inorderTraversal
(1) (1) (4) (4) (4) (4) (6) (6) (8) (8) (8) (9) (10) (10) 
line 345: insert (9)
line 346: inorderTraversal
(1) (1) (4) (4) (4) (4) (6) (6) (8) (8) (8) (9) (9) (10) (10) 
line 347: clear
line 348: buildTree 13
(10) (1) (1) (6) (4) (7) (8) (3) (3) (10) (9) (3) (5) 
line 349: inorderTraversal
(1) (1) (3) (3) (3) (4) (5) (6) (7) (8) (9) (10) (10) 
line 350: nearestNeighbour (4)
(4) 
line 351: inorderTraversal
(1) (1) (3) (3) (3) (4) (5) (6) (7) (8) (9) (10) (10) 
line 352: clear
line 353: buildTree 14
(7) (10) (1) (8) (8) (4) (9) (1) (8) (10) (4) (8) (8) (6) 
line 354: inorderTraversal
(1) (1) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 355: remove (8)
line 356: inorderTraversal
(1) (1) (4) (4) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 357: insert (8)
line 358: inorderTraversal
(1) (1) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 359: insert (5)
line 360: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 361: nearestNeighbour (8)
(8) 
line 362: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 363: nearestNeighbour (8)
(8) 
line 364: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 365: insert (10)
line 366: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 367: nearestNeighbour (5)
(5) 
line 368: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 369: insert (10)
line 370: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 371: nearestNeighbour (1)
(1) 
line 372: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 373: kNearestNeighbour 8 (8)
(7) (8) (8) (8) (8) (8) (9) (10) 
line 374: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 375: insert (7)
line 376: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 377: kNearestNeighbour 9 (3)
(1) (1) (4) (4) (5) (6) (7) (7) (8) 
line 378: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 379: kNearestNeighbour 10 (1)
(1) (1) (4) (4) (5) (6) (7) (7) (8) (8) 
line 380: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 381: preorderTraversal
(8) (4) (1) (1) (6) (4) (5) (7) (7) (8) (8) (9) (8) (8) (10) (10) (10) (10) 
line 382: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 383: insert (7)
line 384: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 385: kNearestNeighbour 3 (10)
(10) (10) (10) 
line 386: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 387: kNearestNeighbour 1 (6)
(6) 
line 388: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 389: kNearestNeighbour 2 (7)
(7) (7) 
line 390: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 391: insert (2)
line 392: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) (10) 
line 393: clear
line 394: buildTree 13
(8) (3) (7) (10) (9) (8) (6) (10) (8) (9) (4) (8) (6) 
line 395: inorderTraversal
(3) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 396: kNearestNeighbour 1 (8)
(8) 
line 397: inorderTraversal
(3) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 398: kNearestNeighbour 10 (7)
(4) (6) (6) (7) (8) (8) (8) (8) (9) (9) 
line 399: inorderTraversal
(3) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 400: insert (7)
line 401: inorderTraversal
(3) (4) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 402: search (8)
TRUE
line 403: inorderTraversal
(3) (4) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 404: insert (1)
line 405: inorderTraversal
(1) (3) (4) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 406: clear
line 407: buildTree 1
(10) 
line 408: inorderTraversal
(10) 
line 409: insert (2)
line 410: inorderTraversal
(2) (10) 
line 411: insert (5)
line 412: inorderTraversal
(2) (5) (10) 
line 413: preorderTraversal
(10) (2) (5) 
line 414: inorderTraversal
(2) (5) (10) 
line 415: kNearestNeighbour 4 (4)
(2) (5) (10) 
line 416: inorderTraversal
(2) (5) (10) 
line 417: insert (5)
line 418: inorderTraversal
(2) (5) (5) (10) 
line 419: nodeCount_height_leafCount
nodeCount=4;height=4;leafCount=1
line 420: inorderTraversal
(2) (5) (5) (10) 
line 421: preorderTraversal
(10) (2) (5) (5) 
line 422: postorderTraversal
(5) (5) (2) (10) 
line 423: clear
