line 1: k=1
line 2: remove (4)
line 3: inorderTraversal

line 4: nodeCount_height_leafCount
nodeCount=0;height=0;leafCount=0
line 5: inorderTraversal

line 6: postorderTraversal

line 7: inorderTraversal

line 8: nearestNeighbour (1)

line 9: inorderTraversal

line 10: nearestNeighbour (9)

line 11: inorderTraversal

line 12: nearestNeighbour (2)

line 13: inorderTraversal

line 14: clear
line 15: buildTree 4
(8) (7) (8) (4) 
line 16: inorderTraversal
(4) (7) (8) (8) 
line 17: kNearestNeighbour 7 (5)
(4) (7) (8) (8) 
line 18: inorderTraversal
(4) (7) (8) (8) 
line 19: insert (10)
line 20: inorderTraversal
(4) (7) (8) (8) (10) 
line 21: nearestNeighbour (1)
(4) 
line 22: inorderTraversal
(4) (7) (8) (8) (10) 
line 23: insert (6)
line 24: inorderTraversal
(4) (6) (7) (8) (8) (10) 
line 25: nearestNeighbour (8)
(8) 
line 26: inorderTraversal
(4) (6) (7) (8) (8) (10) 
line 27: nearestNeighbour (3)
(4) 
line 28: inorderTraversal
(4) (6) (7) (8) (8) (10) 
line 29: insert (7)
line 30: inorderTraversal
(4) (6) (7) (7) (8) (8) (10) 
line 31: remove (6)
line 32: inorderTraversal
(4) (7) (7) (8) (8) (10) 
line 33: clear
line 34: buildTree 12
(5) (2) (1) (3) (10) (9) (4) (6) (8) (1) (4) (1) 
line 35: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (8) (9) (10) 
line 36: kNearestNeighbour 8 (3)
(1) (1) (1) (2) (3) (4) (4) (5) 
line 37: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (8) (9) (10) 
line 38: insert (4)
line 39: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (8) (9) (10) 
line 40: remove (3)
line 41: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (5) (6) (8) (9) (10) 
line 42: clear
line 43: buildTree 10
(4) (4) (3) (3) (10) (2) (6) (3) (4) (7) 
line 44: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (6) (7) (10) 
line 45: insert (1)
line 46: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (4) (6) (7) (10) 
line 47: remove (1)
line 48: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (6) (7) (10) 
line 49: kNearestNeighbour 4 (1)
(2) (3) (3) (3) 
line 50: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (6) (7) (10) 
line 51: kNearestNeighbour 6 (4)
(3) (3) (3) (4) (4) (4) 
line 52: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (6) (7) (10) 
line 53: insert (5)
line 54: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (10) 
line 55: insert (10)
line 56: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (10) (10) 
line 57: nearestNeighbour (1)
(2) 
line 58: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (10) (10) 
line 59: clear
line 60: buildTree 1
(3) 
line 61: inorderTraversal
(3) 
line 62: clear
line 63: buildTree 10
(9) (2) (5) (4) (8) (10) (4) (9) (3) (4) 
line 64: inorderTraversal
(2) (3) (4) (4) (4) (5) (8) (9) (9) (10) 
line 65: preorderTraversal
(4) (2) (3) (8) (4) (4) (5) (9) (9) (10) 
line 66: inorderTraversal
(2) (3) (4) (4) (4) (5) (8) (9) (9) (10) 
line 67: nearestNeighbour (8)
(8) 
line 68: inorderTraversal
(2) (3) (4) (4) (4) (5) (8) (9) (9) (10) 
line 69: remove (5)
line 70: inorderTraversal
(2) (3) (4) (4) (4) (8) (9) (9) (10) 
line 71: postorderTraversal
(3) (2) (4) (4) (10) (9) (9) (8) (4) 
line 72: inorderTraversal
(2) (3) (4) (4) (4) (8) (9) (9) (10) 
line 73: insert (2)
line 74: inorderTraversal
(2) (2) (3) (4) (4) (4) (8) (9) (9) (10) 
line 75: insert (2)
line 76: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (8) (9) (9) (10) 
line 77: nearestNeighbour (7)
(8) 
line 78: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (8) (9) (9) (10) 
line 79: nearestNeighbour (9)
(9) 
line 80: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (8) (9) (9) (10) 
line 81: clear
line 82: buildTree 20
(2) (10) (7) (6) (8) (6) (7) (3) (8) (9) (5) (1) (4) (1) (5) (2) (2) (2) (10) (6) 
line 83: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 84: remove (3)
line 85: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 86: kNearestNeighbour 2 (6)
(6) (6) 
line 87: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 88: nearestNeighbour (1)
(1) 
line 89: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 90: nodeCount_height_leafCount
nodeCount=19;height=6;leafCount=7
line 91: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 92: nearestNeighbour (5)
(5) 
line 93: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 94: remove (7)
line 95: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 96: insert (1)
line 97: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 98: kNearestNeighbour 10 (7)
(5) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 99: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 100: insert (6)
line 101: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 102: insert (6)
line 103: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 104: insert (10)
line 105: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 106: nearestNeighbour (1)
(1) 
line 107: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (4) (5) (5) (6) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 108: clear
line 109: buildTree 20
(6) (6) (7) (10) (3) (6) (8) (5) (5) (5) (7) (6) (9) (5) (5) (8) (2) (2) (8) (7) 
line 110: inorderTraversal
(2) (2) (3) (5) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) 
line 111: insert (5)
line 112: inorderTraversal
(2) (2) (3) (5) (5) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) 
line 113: insert (10)
line 114: inorderTraversal
(2) (2) (3) (5) (5) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 115: insert (8)
line 116: inorderTraversal
(2) (2) (3) (5) (5) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 117: clear
line 118: buildTree 19
(5) (5) (2) (2) (4) (3) (8) (8) (6) (5) (10) (3) (7) (5) (9) (9) (7) (3) (2) 
line 119: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) 
line 120: insert (8)
line 121: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) 
line 122: insert (8)
line 123: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 124: insert (9)
line 125: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 126: insert (6)
line 127: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 128: nearestNeighbour (1)
(2) 
line 129: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 130: nodeCount_height_leafCount
nodeCount=23;height=7;leafCount=6
line 131: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 132: kNearestNeighbour 4 (5)
(5) (5) (5) (5) 
line 133: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 134: nearestNeighbour (4)
(4) 
line 135: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 136: nearestNeighbour (4)
(4) 
line 137: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 138: insert (5)
line 139: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 140: remove (1)
line 141: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 142: insert (3)
line 143: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 144: remove (4)
line 145: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 146: remove (8)
line 147: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) 
line 148: insert (4)
line 149: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) 
line 150: nearestNeighbour (2)
(2) 
line 151: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) 
line 152: nearestNeighbour (5)
(5) 
line 153: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) 
line 154: insert (6)
line 155: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) 
line 156: insert (3)
line 157: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) 
line 158: clear
line 159: buildTree 15
(4) (1) (5) (2) (7) (7) (4) (4) (8) (6) (3) (2) (6) (3) (4) 
line 160: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) 
line 161: insert (4)
line 162: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) 
line 163: insert (2)
line 164: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) 
line 165: insert (8)
line 166: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) (8) 
line 167: insert (1)
line 168: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) (8) 
line 169: kNearestNeighbour 5 (2)
(2) (2) (2) (3) (3) 
line 170: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) (8) 
line 171: insert (9)
line 172: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 173: insert (1)
line 174: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 175: kNearestNeighbour 10 (10)
(4) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 176: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 177: postorderTraversal
(1) (1) (1) (2) (2) (3) (3) (2) (4) (5) (4) (4) (4) (6) (9) (8) (8) (7) (7) (6) (4) 
line 178: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 179: insert (5)
line 180: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) 
line 181: kNearestNeighbour 9 (4)
(3) (3) (4) (4) (4) (4) (4) (5) (5) 
line 182: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) 
line 183: clear
line 184: buildTree 16
(6) (10) (8) (1) (5) (10) (5) (8) (8) (1) (9) (5) (8) (9) (6) (7) 
line 185: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 186: insert (8)
line 187: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (8) (9) (9) (10) (10) 
line 188: nearestNeighbour (10)
(10) 
line 189: inorderTraversal
(1) (1) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (8) (9) (9) (10) (10) 
line 190: clear
line 191: buildTree 14
(5) (3) (8) (2) (5) (5) (8) (2) (5) (4) (8) (3) (5) (5) 
line 192: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (5) (5) (5) (8) (8) (8) 
line 193: insert (6)
line 194: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (8) 
line 195: insert (3)
line 196: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (8) 
line 197: postorderTraversal
(2) (2) (3) (4) (3) (3) (6) (5) (5) (8) (8) (8) (5) (5) (5) (5) 
line 198: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (8) 
line 199: nearestNeighbour (4)
(4) 
line 200: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (8) 
line 201: insert (4)
line 202: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (8) 
line 203: remove (4)
line 204: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (8) 
line 205: insert (7)
line 206: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (7) (8) (8) (8) 
line 207: nearestNeighbour (5)
(5) 
line 208: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (7) (8) (8) (8) 
line 209: insert (6)
line 210: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) 
line 211: insert (7)
line 212: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) 
line 213: nearestNeighbour (4)
(4) 
line 214: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) 
line 215: kNearestNeighbour 4 (3)
(3) (3) (3) (4) 
line 216: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) 
line 217: clear
line 218: buildTree 15
(3) (4) (6) (4) (7) (7) (5) (5) (10) (8) (8) (7) (5) (10) (9) 
line 219: inorderTraversal
(3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 220: kNearestNeighbour 9 (6)
(4) (4) (5) (5) (5) (6) (7) (7) (7) 
line 221: inorderTraversal
(3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 222: clear
line 223: buildTree 15
(10) (7) (8) (2) (8) (1) (7) (4) (1) (4) (4) (3) (1) (3) (5) 
line 224: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (7) (7) (8) (8) (10) 
line 225: remove (6)
line 226: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (7) (7) (8) (8) (10) 
line 227: clear
line 228: buildTree 15
(6) (9) (10) (6) (10) (7) (2) (2) (4) (1) (7) (10) (1) (9) (3) 
line 229: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 230: insert (3)
line 231: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 232: insert (5)
line 233: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 234: nearestNeighbour (3)
(3) 
line 235: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 236: nearestNeighbour (5)
(5) 
line 237: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 238: nearestNeighbour (8)
(7) 
line 239: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 240: insert (10)
line 241: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) (10) 
line 242: search (8)
FALSE
line 243: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) (10) 
line 244: clear
line 245: buildTree 6
(8) (1) (5) (8) (4) (1) 
line 246: inorderTraversal
(1) (1) (4) (5) (8) (8) 
line 247: kNearestNeighbour 6 (2)
(1) (1) (4) (5) (8) (8) 
line 248: inorderTraversal
(1) (1) (4) (5) (8) (8) 
line 249: kNearestNeighbour 2 (9)
(8) (8) 
line 250: inorderTraversal
(1) (1) (4) (5) (8) (8) 
line 251: kNearestNeighbour 2 (9)
(8) (8) 
line 252: inorderTraversal
(1) (1) (4) (5) (8) (8) 
line 253: clear
line 254: buildTree 13
(4) (7) (6) (4) (2) (7) (10) (1) (1) (8) (7) (4) (8) 
line 255: inorderTraversal
(1) (1) (2) (4) (4) (4) (6) (7) (7) (7) (8) (8) (10) 
line 256: kNearestNeighbour 10 (5)
(2) (4) (4) (4) (6) (7) (7) (7) (8) (8) 
line 257: inorderTraversal
(1) (1) (2) (4) (4) (4) (6) (7) (7) (7) (8) (8) (10) 
line 258: insert (7)
line 259: inorderTraversal
(1) (1) (2) (4) (4) (4) (6) (7) (7) (7) (7) (8) (8) (10) 
line 260: insert (7)
line 261: inorderTraversal
(1) (1) (2) (4) (4) (4) (6) (7) (7) (7) (7) (7) (8) (8) (10) 
line 262: insert (1)
line 263: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (6) (7) (7) (7) (7) (7) (8) (8) (10) 
line 264: insert (5)
line 265: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (7) (7) (8) (8) (10) 
line 266: remove (8)
line 267: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (7) (7) (8) (10) 
line 268: insert (9)
line 269: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (7) (7) (8) (9) (10) 
line 270: postorderTraversal
(1) (1) (1) (5) (4) (4) (4) (2) (7) (7) (7) (7) (9) (10) (8) (7) (6) 
line 271: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (7) (7) (8) (9) (10) 
line 272: insert (3)
line 273: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (7) (8) (9) (10) 
line 274: insert (2)
line 275: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (7) (8) (9) (10) 
line 276: kNearestNeighbour 10 (5)
(3) (4) (4) (4) (5) (6) (7) (7) (7) (7) 
line 277: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (7) (8) (9) (10) 
line 278: kNearestNeighbour 8 (9)
(7) (7) (7) (7) (7) (8) (9) (10) 
line 279: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (7) (8) (9) (10) 
line 280: clear
line 281: buildTree 10
(2) (5) (10) (4) (10) (6) (4) (6) (1) (1) 
line 282: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (6) (10) (10) 
line 283: kNearestNeighbour 2 (5)
(4) (5) 
line 284: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (6) (10) (10) 
line 285: insert (7)
line 286: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (6) (7) (10) (10) 
line 287: search (1)
TRUE
line 288: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (6) (7) (10) (10) 
line 289: kNearestNeighbour 7 (4)
(2) (4) (4) (5) (6) (6) (7) 
line 290: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (6) (7) (10) (10) 
line 291: remove (1)
line 292: inorderTraversal
(1) (2) (4) (4) (5) (6) (6) (7) (10) (10) 
line 293: insert (2)
line 294: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (7) (10) (10) 
line 295: clear
line 296: buildTree 8
(9) (6) (4) (4) (8) (8) (4) (9) 
line 297: inorderTraversal
(4) (4) (4) (6) (8) (8) (9) (9) 
line 298: clear
line 299: buildTree 14
(6) (1) (3) (1) (8) (1) (7) (9) (8) (7) (10) (10) (5) (7) 
line 300: inorderTraversal
(1) (1) (1) (3) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 301: clear
line 302: buildTree 10
(2) (6) (3) (1) (6) (2) (4) (8) (8) (2) 
line 303: inorderTraversal
(1) (2) (2) (2) (3) (4) (6) (6) (8) (8) 
line 304: nearestNeighbour (9)
(8) 
line 305: inorderTraversal
(1) (2) (2) (2) (3) (4) (6) (6) (8) (8) 
line 306: insert (7)
line 307: inorderTraversal
(1) (2) (2) (2) (3) (4) (6) (6) (7) (8) (8) 
line 308: nearestNeighbour (6)
(6) 
line 309: inorderTraversal
(1) (2) (2) (2) (3) (4) (6) (6) (7) (8) (8) 
line 310: insert (4)
line 311: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (6) (6) (7) (8) (8) 
line 312: remove (2)
line 313: inorderTraversal
(1) (2) (2) (3) (4) (4) (6) (6) (7) (8) (8) 
line 314: insert (3)
line 315: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (6) (6) (7) (8) (8) 
line 316: kNearestNeighbour 9 (10)
(3) (3) (4) (4) (6) (6) (7) (8) (8) 
line 317: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (6) (6) (7) (8) (8) 
line 318: insert (5)
line 319: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (7) (8) (8) 
line 320: kNearestNeighbour 6 (2)
(1) (2) (2) (3) (3) (4) 
line 321: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (7) (8) (8) 
line 322: clear
line 323: buildTree 6
(10) (8) (9) (10) (2) (7) 
line 324: inorderTraversal
(2) (7) (8) (9) (10) (10) 
line 325: clear
line 326: buildTree 1
(7) 
line 327: inorderTraversal
(7) 
line 328: kNearestNeighbour 8 (5)
(7) 
line 329: inorderTraversal
(7) 
line 330: kNearestNeighbour 9 (3)
(7) 
line 331: inorderTraversal
(7) 
line 332: clear
line 333: buildTree 16
(9) (4) (9) (9) (3) (3) (10) (6) (8) (9) (9) (7) (10) (5) (2) (9) 
line 334: inorderTraversal
(2) (3) (3) (4) (5) (6) (7) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 335: insert (6)
line 336: inorderTraversal
(2) (3) (3) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 337: insert (9)
line 338: inorderTraversal
(2) (3) (3) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 339: nearestNeighbour (5)
(5) 
line 340: inorderTraversal
(2) (3) (3) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 341: nearestNeighbour (5)
(5) 
line 342: inorderTraversal
(2) (3) (3) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 343: remove (4)
line 344: inorderTraversal
(2) (3) (3) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 345: kNearestNeighbour 8 (3)
(2) (3) (3) (5) (6) (6) (7) (8) 
line 346: inorderTraversal
(2) (3) (3) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 347: insert (5)
line 348: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 349: remove (9)
line 350: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 351: insert (9)
line 352: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 353: insert (6)
line 354: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 355: insert (1)
line 356: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 357: search (9)
TRUE
line 358: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 359: nearestNeighbour (1)
(1) 
line 360: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 361: insert (8)
line 362: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 363: kNearestNeighbour 2 (4)
(3) (3) 
line 364: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 365: kNearestNeighbour 6 (8)
(8) (8) (9) (9) (9) (9) 
line 366: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 367: insert (2)
line 368: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 369: insert (5)
line 370: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 371: nearestNeighbour (8)
(8) 
line 372: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 373: kNearestNeighbour 10 (8)
(7) (8) (8) (9) (9) (9) (9) (9) (9) (9) 
line 374: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 375: insert (2)
line 376: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 377: remove (2)
line 378: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 379: nearestNeighbour (6)
(6) 
line 380: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 381: insert (7)
line 382: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 383: kNearestNeighbour 7 (6)
(5) (5) (6) (6) (6) (7) (7) 
line 384: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 385: nearestNeighbour (8)
(8) 
line 386: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 387: remove (6)
line 388: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 389: insert (10)
line 390: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) (10) 
line 391: kNearestNeighbour 7 (10)
(9) (9) (9) (9) (10) (10) (10) 
line 392: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) (10) 
line 393: kNearestNeighbour 6 (1)
(1) (2) (2) (3) (3) (5) 
line 394: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) (10) 
line 395: nearestNeighbour (8)
(8) 
line 396: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) (10) 
line 397: remove (10)
line 398: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 399: insert (3)
line 400: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 401: remove (6)
line 402: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 403: nearestNeighbour (7)
(7) 
line 404: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 405: insert (3)
line 406: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 407: kNearestNeighbour 9 (9)
(9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 408: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) (10) 
line 409: clear
line 410: buildTree 17
(5) (8) (6) (10) (3) (9) (1) (8) (10) (1) (6) (7) (5) (6) (2) (6) (9) 
line 411: inorderTraversal
(1) (1) (2) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 412: insert (2)
line 413: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 414: nearestNeighbour (1)
(1) 
line 415: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 416: nearestNeighbour (2)
(2) 
line 417: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 418: insert (7)
line 419: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 420: nearestNeighbour (7)
(7) 
line 421: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 422: kNearestNeighbour 7 (7)
(6) (6) (6) (7) (7) (8) (8) 
line 423: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 424: insert (6)
line 425: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 426: nodeCount_height_leafCount
nodeCount=20;height=7;leafCount=8
line 427: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 428: preorderTraversal
(6) (2) (1) (1) (5) (3) (2) (5) (8) (6) (6) (6) (7) (6) (7) (9) (8) (10) (9) (10) 
line 429: postorderTraversal
(1) (1) (2) (3) (5) (5) (2) (6) (7) (7) (6) (6) (6) (8) (9) (10) (10) (9) (8) (6) 
line 430: clear
