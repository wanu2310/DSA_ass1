line 1: k=1
line 2: insert (8)
line 3: inorderTraversal
(8) 
line 4: postorderTraversal
(8) 
line 5: inorderTraversal
(8) 
line 6: kNearestNeighbour 6 (7)
(8) 
line 7: inorderTraversal
(8) 
line 8: insert (2)
line 9: inorderTraversal
(2) (8) 
line 10: insert (10)
line 11: inorderTraversal
(2) (8) (10) 
line 12: insert (1)
line 13: inorderTraversal
(1) (2) (8) (10) 
line 14: clear
line 15: buildTree 10
(2) (9) (10) (8) (10) (9) (8) (2) (5) (1) 
line 16: inorderTraversal
(1) (2) (2) (5) (8) (8) (9) (9) (10) (10) 
line 17: nearestNeighbour (6)
(5) 
line 18: inorderTraversal
(1) (2) (2) (5) (8) (8) (9) (9) (10) (10) 
line 19: insert (10)
line 20: inorderTraversal
(1) (2) (2) (5) (8) (8) (9) (9) (10) (10) (10) 
line 21: kNearestNeighbour 9 (3)
(1) (2) (2) (5) (8) (8) (9) (9) (10) 
line 22: inorderTraversal
(1) (2) (2) (5) (8) (8) (9) (9) (10) (10) (10) 
line 23: nearestNeighbour (1)
(1) 
line 24: inorderTraversal
(1) (2) (2) (5) (8) (8) (9) (9) (10) (10) (10) 
line 25: insert (7)
line 26: inorderTraversal
(1) (2) (2) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 27: kNearestNeighbour 6 (10)
(8) (9) (9) (10) (10) (10) 
line 28: inorderTraversal
(1) (2) (2) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 29: insert (4)
line 30: inorderTraversal
(1) (2) (2) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 31: insert (2)
line 32: inorderTraversal
(1) (2) (2) (2) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 33: insert (6)
line 34: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 35: insert (7)
line 36: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 37: postorderTraversal
(1) (2) (4) (6) (7) (7) (5) (2) (2) (8) (9) (10) (10) (10) (9) (8) 
line 38: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 39: insert (9)
line 40: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 41: kNearestNeighbour 10 (9)
(7) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 42: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 43: nearestNeighbour (9)
(9) 
line 44: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 45: insert (9)
line 46: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 47: insert (6)
line 48: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 49: insert (9)
line 50: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 51: nearestNeighbour (9)
(9) 
line 52: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 53: preorderTraversal
(8) (2) (1) (2) (5) (4) (2) (7) (6) (6) (7) (9) (8) (10) (9) (9) (9) (9) (10) (10) 
line 54: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 55: kNearestNeighbour 8 (1)
(1) (2) (2) (2) (4) (5) (6) (6) 
line 56: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 57: clear
line 58: buildTree 4
(9) (4) (1) (10) 
line 59: inorderTraversal
(1) (4) (9) (10) 
line 60: kNearestNeighbour 1 (8)
(9) 
line 61: inorderTraversal
(1) (4) (9) (10) 
line 62: nearestNeighbour (3)
(4) 
line 63: inorderTraversal
(1) (4) (9) (10) 
line 64: kNearestNeighbour 2 (2)
(1) (4) 
line 65: inorderTraversal
(1) (4) (9) (10) 
line 66: search (1)
TRUE
line 67: inorderTraversal
(1) (4) (9) (10) 
line 68: insert (8)
line 69: inorderTraversal
(1) (4) (8) (9) (10) 
line 70: nearestNeighbour (3)
(4) 
line 71: inorderTraversal
(1) (4) (8) (9) (10) 
line 72: insert (10)
line 73: inorderTraversal
(1) (4) (8) (9) (10) (10) 
line 74: insert (9)
line 75: inorderTraversal
(1) (4) (8) (9) (9) (10) (10) 
line 76: remove (9)
line 77: inorderTraversal
(1) (4) (8) (9) (10) (10) 
line 78: kNearestNeighbour 4 (4)
(1) (4) (8) (9) 
line 79: inorderTraversal
(1) (4) (8) (9) (10) (10) 
line 80: insert (5)
line 81: inorderTraversal
(1) (4) (5) (8) (9) (10) (10) 
line 82: clear
line 83: buildTree 17
(4) (8) (6) (4) (7) (8) (9) (10) (7) (4) (5) (8) (5) (7) (8) (2) (6) 
line 84: inorderTraversal
(2) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 85: kNearestNeighbour 10 (5)
(4) (4) (4) (5) (5) (6) (6) (7) (7) (7) 
line 86: inorderTraversal
(2) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 87: insert (7)
line 88: inorderTraversal
(2) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 89: nearestNeighbour (4)
(4) 
line 90: inorderTraversal
(2) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 91: preorderTraversal
(7) (4) (2) (5) (4) (4) (6) (5) (6) (8) (7) (7) (7) (8) (8) (9) (8) (10) 
line 92: inorderTraversal
(2) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 93: nearestNeighbour (7)
(7) 
line 94: inorderTraversal
(2) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 95: nearestNeighbour (6)
(6) 
line 96: inorderTraversal
(2) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 97: insert (7)
line 98: inorderTraversal
(2) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 99: insert (5)
line 100: inorderTraversal
(2) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 101: clear
line 102: buildTree 10
(8) (5) (9) (4) (1) (10) (3) (10) (9) (7) 
line 103: inorderTraversal
(1) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 104: kNearestNeighbour 5 (4)
(1) (3) (4) (5) (7) 
line 105: inorderTraversal
(1) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 106: nearestNeighbour (5)
(5) 
line 107: inorderTraversal
(1) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 108: insert (8)
line 109: inorderTraversal
(1) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) 
line 110: kNearestNeighbour 3 (4)
(3) (4) (5) 
line 111: inorderTraversal
(1) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) 
line 112: insert (5)
line 113: inorderTraversal
(1) (3) (4) (5) (5) (7) (8) (8) (9) (9) (10) (10) 
line 114: remove (5)
line 115: inorderTraversal
(1) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) 
line 116: nearestNeighbour (2)
(1) 
line 117: inorderTraversal
(1) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) 
line 118: insert (10)
line 119: inorderTraversal
(1) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 120: insert (2)
line 121: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 122: nearestNeighbour (4)
(4) 
line 123: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 124: nearestNeighbour (1)
(1) 
line 125: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 126: search (3)
TRUE
line 127: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 128: search (1)
TRUE
line 129: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 130: kNearestNeighbour 8 (7)
(5) (7) (8) (8) (9) (9) (10) (10) 
line 131: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 132: insert (1)
line 133: inorderTraversal
(1) (1) (2) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 134: search (10)
TRUE
line 135: inorderTraversal
(1) (1) (2) (3) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 136: insert (4)
line 137: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 138: insert (2)
line 139: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 140: insert (5)
line 141: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 142: nodeCount_height_leafCount
nodeCount=17;height=5;leafCount=7
line 143: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 144: nearestNeighbour (5)
(5) 
line 145: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 146: clear
line 147: buildTree 1
(2) 
line 148: inorderTraversal
(2) 
line 149: kNearestNeighbour 3 (9)
(2) 
line 150: inorderTraversal
(2) 
line 151: insert (9)
line 152: inorderTraversal
(2) (9) 
line 153: nearestNeighbour (2)
(2) 
line 154: inorderTraversal
(2) (9) 
line 155: kNearestNeighbour 9 (6)
(2) (9) 
line 156: inorderTraversal
(2) (9) 
line 157: kNearestNeighbour 4 (2)
(2) (9) 
line 158: inorderTraversal
(2) (9) 
line 159: nearestNeighbour (2)
(2) 
line 160: inorderTraversal
(2) (9) 
line 161: clear
line 162: buildTree 6
(8) (3) (8) (6) (1) (3) 
line 163: inorderTraversal
(1) (3) (3) (6) (8) (8) 
line 164: postorderTraversal
(1) (3) (8) (8) (6) (3) 
line 165: inorderTraversal
(1) (3) (3) (6) (8) (8) 
line 166: nearestNeighbour (2)
(1) 
line 167: inorderTraversal
(1) (3) (3) (6) (8) (8) 
line 168: insert (10)
line 169: inorderTraversal
(1) (3) (3) (6) (8) (8) (10) 
line 170: nearestNeighbour (3)
(3) 
line 171: inorderTraversal
(1) (3) (3) (6) (8) (8) (10) 
line 172: insert (3)
line 173: inorderTraversal
(1) (3) (3) (3) (6) (8) (8) (10) 
line 174: kNearestNeighbour 4 (1)
(1) (3) (3) (3) 
line 175: inorderTraversal
(1) (3) (3) (3) (6) (8) (8) (10) 
line 176: insert (1)
line 177: inorderTraversal
(1) (1) (3) (3) (3) (6) (8) (8) (10) 
line 178: kNearestNeighbour 8 (10)
(1) (3) (3) (3) (6) (8) (8) (10) 
line 179: inorderTraversal
(1) (1) (3) (3) (3) (6) (8) (8) (10) 
line 180: postorderTraversal
(1) (1) (3) (3) (10) (8) (8) (6) (3) 
line 181: inorderTraversal
(1) (1) (3) (3) (3) (6) (8) (8) (10) 
line 182: insert (2)
line 183: inorderTraversal
(1) (1) (2) (3) (3) (3) (6) (8) (8) (10) 
line 184: nearestNeighbour (8)
(8) 
line 185: inorderTraversal
(1) (1) (2) (3) (3) (3) (6) (8) (8) (10) 
line 186: insert (7)
line 187: inorderTraversal
(1) (1) (2) (3) (3) (3) (6) (7) (8) (8) (10) 
line 188: kNearestNeighbour 2 (6)
(6) (7) 
line 189: inorderTraversal
(1) (1) (2) (3) (3) (3) (6) (7) (8) (8) (10) 
line 190: nearestNeighbour (4)
(3) 
line 191: inorderTraversal
(1) (1) (2) (3) (3) (3) (6) (7) (8) (8) (10) 
line 192: insert (10)
line 193: inorderTraversal
(1) (1) (2) (3) (3) (3) (6) (7) (8) (8) (10) (10) 
line 194: kNearestNeighbour 7 (10)
(3) (6) (7) (8) (8) (10) (10) 
line 195: inorderTraversal
(1) (1) (2) (3) (3) (3) (6) (7) (8) (8) (10) (10) 
line 196: nearestNeighbour (1)
(1) 
line 197: inorderTraversal
(1) (1) (2) (3) (3) (3) (6) (7) (8) (8) (10) (10) 
line 198: remove (4)
line 199: inorderTraversal
(1) (1) (2) (3) (3) (3) (6) (7) (8) (8) (10) (10) 
line 200: insert (5)
line 201: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (7) (8) (8) (10) (10) 
line 202: insert (9)
line 203: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (7) (8) (8) (9) (10) (10) 
line 204: nearestNeighbour (9)
(9) 
line 205: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (7) (8) (8) (9) (10) (10) 
line 206: kNearestNeighbour 3 (10)
(9) (10) (10) 
line 207: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (7) (8) (8) (9) (10) (10) 
line 208: kNearestNeighbour 2 (2)
(1) (2) 
line 209: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (7) (8) (8) (9) (10) (10) 
line 210: remove (10)
line 211: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (7) (8) (8) (9) (10) 
line 212: remove (3)
line 213: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (7) (8) (8) (9) (10) 
line 214: insert (7)
line 215: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (7) (7) (8) (8) (9) (10) 
line 216: clear
line 217: buildTree 6
(4) (10) (4) (7) (6) (10) 
line 218: inorderTraversal
(4) (4) (6) (7) (10) (10) 
line 219: kNearestNeighbour 1 (10)
(10) 
line 220: inorderTraversal
(4) (4) (6) (7) (10) (10) 
line 221: insert (8)
line 222: inorderTraversal
(4) (4) (6) (7) (8) (10) (10) 
line 223: postorderTraversal
(4) (4) (8) (7) (10) (10) (6) 
line 224: inorderTraversal
(4) (4) (6) (7) (8) (10) (10) 
line 225: remove (10)
line 226: inorderTraversal
(4) (4) (6) (7) (8) (10) 
line 227: nearestNeighbour (5)
(4) 
line 228: inorderTraversal
(4) (4) (6) (7) (8) (10) 
line 229: nearestNeighbour (3)
(4) 
line 230: inorderTraversal
(4) (4) (6) (7) (8) (10) 
line 231: nearestNeighbour (8)
(8) 
line 232: inorderTraversal
(4) (4) (6) (7) (8) (10) 
line 233: insert (6)
line 234: inorderTraversal
(4) (4) (6) (6) (7) (8) (10) 
line 235: insert (7)
line 236: inorderTraversal
(4) (4) (6) (6) (7) (7) (8) (10) 
line 237: nearestNeighbour (8)
(8) 
line 238: inorderTraversal
(4) (4) (6) (6) (7) (7) (8) (10) 
line 239: postorderTraversal
(4) (4) (6) (7) (8) (7) (10) (6) 
line 240: inorderTraversal
(4) (4) (6) (6) (7) (7) (8) (10) 
line 241: insert (1)
line 242: inorderTraversal
(1) (4) (4) (6) (6) (7) (7) (8) (10) 
line 243: remove (8)
line 244: inorderTraversal
(1) (4) (4) (6) (6) (7) (7) (10) 
line 245: clear
line 246: buildTree 11
(4) (6) (2) (3) (3) (5) (1) (5) (4) (5) (8) 
line 247: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) 
line 248: insert (10)
line 249: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) (10) 
line 250: nodeCount_height_leafCount
nodeCount=12;height=6;leafCount=5
line 251: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) (10) 
line 252: nearestNeighbour (8)
(8) 
line 253: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) (10) 
line 254: kNearestNeighbour 3 (5)
(5) (5) (5) 
line 255: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) (10) 
line 256: nearestNeighbour (8)
(8) 
line 257: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) (10) 
line 258: kNearestNeighbour 9 (7)
(3) (4) (4) (5) (5) (5) (6) (8) (10) 
line 259: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) (10) 
line 260: nodeCount_height_leafCount
nodeCount=12;height=6;leafCount=5
line 261: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) (10) 
line 262: kNearestNeighbour 5 (3)
(2) (3) (3) (4) (4) 
line 263: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) (10) 
line 264: remove (5)
line 265: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (6) (8) (10) 
line 266: clear
line 267: buildTree 10
(6) (2) (3) (10) (10) (4) (2) (5) (9) (8) 
line 268: inorderTraversal
(2) (2) (3) (4) (5) (6) (8) (9) (10) (10) 
line 269: insert (10)
line 270: inorderTraversal
(2) (2) (3) (4) (5) (6) (8) (9) (10) (10) (10) 
line 271: insert (9)
line 272: inorderTraversal
(2) (2) (3) (4) (5) (6) (8) (9) (9) (10) (10) (10) 
line 273: clear
line 274: buildTree 8
(2) (2) (3) (9) (3) (5) (3) (2) 
line 275: inorderTraversal
(2) (2) (2) (3) (3) (3) (5) (9) 
line 276: insert (8)
line 277: inorderTraversal
(2) (2) (2) (3) (3) (3) (5) (8) (9) 
line 278: insert (1)
line 279: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (5) (8) (9) 
line 280: nearestNeighbour (5)
(5) 
line 281: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (5) (8) (9) 
line 282: insert (1)
line 283: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (5) (8) (9) 
line 284: insert (1)
line 285: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (8) (9) 
line 286: remove (3)
line 287: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (5) (8) (9) 
line 288: kNearestNeighbour 8 (5)
(2) (2) (2) (3) (3) (5) (8) (9) 
line 289: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (5) (8) (9) 
line 290: insert (9)
line 291: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (5) (8) (9) (9) 
line 292: insert (8)
line 293: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (5) (8) (8) (9) (9) 
line 294: insert (4)
line 295: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (8) (8) (9) (9) 
line 296: postorderTraversal
(1) (1) (1) (2) (2) (2) (4) (8) (8) (9) (9) (5) (3) (3) 
line 297: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (8) (8) (9) (9) 
line 298: insert (2)
line 299: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (8) (8) (9) (9) 
line 300: insert (4)
line 301: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (8) (8) (9) (9) 
line 302: nodeCount_height_leafCount
nodeCount=16;height=6;leafCount=5
line 303: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (8) (8) (9) (9) 
line 304: kNearestNeighbour 7 (10)
(4) (4) (5) (8) (8) (9) (9) 
line 305: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (8) (8) (9) (9) 
line 306: search (9)
TRUE
line 307: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (8) (8) (9) (9) 
line 308: nearestNeighbour (8)
(8) 
line 309: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (8) (8) (9) (9) 
line 310: kNearestNeighbour 3 (2)
(2) (2) (2) 
line 311: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (8) (8) (9) (9) 
line 312: search (1)
TRUE
line 313: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (8) (8) (9) (9) 
line 314: insert (5)
line 315: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (5) (8) (8) (9) (9) 
line 316: remove (1)
line 317: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (5) (8) (8) (9) (9) 
line 318: clear
line 319: buildTree 6
(9) (5) (10) (9) (3) (9) 
line 320: inorderTraversal
(3) (5) (9) (9) (9) (10) 
line 321: nearestNeighbour (1)
(3) 
line 322: inorderTraversal
(3) (5) (9) (9) (9) (10) 
line 323: insert (8)
line 324: inorderTraversal
(3) (5) (8) (9) (9) (9) (10) 
line 325: insert (10)
line 326: inorderTraversal
(3) (5) (8) (9) (9) (9) (10) (10) 
line 327: kNearestNeighbour 3 (6)
(3) (5) (8) 
line 328: inorderTraversal
(3) (5) (8) (9) (9) (9) (10) (10) 
line 329: remove (3)
line 330: inorderTraversal
(5) (8) (9) (9) (9) (10) (10) 
line 331: kNearestNeighbour 5 (5)
(5) (8) (9) (9) (9) 
line 332: inorderTraversal
(5) (8) (9) (9) (9) (10) (10) 
line 333: insert (9)
line 334: inorderTraversal
(5) (8) (9) (9) (9) (9) (10) (10) 
line 335: remove (2)
line 336: inorderTraversal
(5) (8) (9) (9) (9) (9) (10) (10) 
line 337: search (9)
TRUE
line 338: inorderTraversal
(5) (8) (9) (9) (9) (9) (10) (10) 
line 339: insert (6)
line 340: inorderTraversal
(5) (6) (8) (9) (9) (9) (9) (10) (10) 
line 341: insert (7)
line 342: inorderTraversal
(5) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 343: kNearestNeighbour 9 (7)
(5) (6) (7) (8) (9) (9) (9) (9) (10) 
line 344: inorderTraversal
(5) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 345: insert (5)
line 346: inorderTraversal
(5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 347: insert (4)
line 348: inorderTraversal
(4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 349: insert (7)
line 350: inorderTraversal
(4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 351: preorderTraversal
(9) (5) (4) (8) (6) (5) (7) (7) (9) (9) (10) (9) (10) 
line 352: inorderTraversal
(4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 353: nearestNeighbour (2)
(4) 
line 354: inorderTraversal
(4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 355: remove (5)
line 356: inorderTraversal
(4) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 357: remove (5)
line 358: inorderTraversal
(4) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 359: insert (4)
line 360: inorderTraversal
(4) (4) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 361: insert (6)
line 362: inorderTraversal
(4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 363: clear
line 364: buildTree 5
(1) (6) (10) (9) (7) 
line 365: inorderTraversal
(1) (6) (7) (9) (10) 
line 366: kNearestNeighbour 3 (4)
(1) (6) (7) 
line 367: inorderTraversal
(1) (6) (7) (9) (10) 
line 368: kNearestNeighbour 7 (4)
(1) (6) (7) (9) (10) 
line 369: inorderTraversal
(1) (6) (7) (9) (10) 
line 370: insert (9)
line 371: inorderTraversal
(1) (6) (7) (9) (9) (10) 
line 372: postorderTraversal
(6) (1) (9) (10) (9) (7) 
line 373: inorderTraversal
(1) (6) (7) (9) (9) (10) 
line 374: insert (1)
line 375: inorderTraversal
(1) (1) (6) (7) (9) (9) (10) 
line 376: nearestNeighbour (6)
(6) 
line 377: inorderTraversal
(1) (1) (6) (7) (9) (9) (10) 
line 378: insert (5)
line 379: inorderTraversal
(1) (1) (5) (6) (7) (9) (9) (10) 
line 380: kNearestNeighbour 1 (3)
(5) 
line 381: inorderTraversal
(1) (1) (5) (6) (7) (9) (9) (10) 
line 382: nearestNeighbour (7)
(7) 
line 383: inorderTraversal
(1) (1) (5) (6) (7) (9) (9) (10) 
line 384: insert (4)
line 385: inorderTraversal
(1) (1) (4) (5) (6) (7) (9) (9) (10) 
line 386: insert (2)
line 387: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (9) (9) (10) 
line 388: nearestNeighbour (1)
(1) 
line 389: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (9) (9) (10) 
line 390: search (10)
TRUE
line 391: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (9) (9) (10) 
line 392: insert (6)
line 393: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) (7) (9) (9) (10) 
line 394: insert (4)
line 395: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (6) (7) (9) (9) (10) 
line 396: kNearestNeighbour 7 (6)
(4) (4) (5) (6) (6) (7) (9) 
line 397: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (6) (7) (9) (9) (10) 
line 398: clear
line 399: buildTree 13
(2) (10) (2) (1) (8) (3) (10) (6) (4) (8) (7) (6) (7) 
line 400: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (8) (10) (10) 
line 401: insert (4)
line 402: inorderTraversal
(1) (2) (2) (3) (4) (4) (6) (6) (7) (7) (8) (8) (10) (10) 
line 403: remove (4)
line 404: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (8) (10) (10) 
line 405: kNearestNeighbour 8 (3)
(1) (2) (2) (3) (4) (6) (6) (7) 
line 406: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (8) (10) (10) 
line 407: kNearestNeighbour 9 (6)
(3) (4) (6) (6) (7) (7) (8) (8) (10) 
line 408: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (8) (10) (10) 
line 409: insert (5)
line 410: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (10) (10) 
line 411: kNearestNeighbour 7 (4)
(2) (2) (3) (4) (5) (6) (6) 
line 412: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (10) (10) 
line 413: remove (9)
line 414: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (10) (10) 
line 415: nodeCount_height_leafCount
nodeCount=14;height=5;leafCount=7
line 416: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (10) (10) 
line 417: preorderTraversal
(6) (2) (1) (3) (2) (4) (5) (8) (7) (6) (7) (10) (8) (10) 
line 418: postorderTraversal
(1) (2) (5) (4) (3) (2) (6) (7) (7) (8) (10) (10) (8) (6) 
line 419: clear
