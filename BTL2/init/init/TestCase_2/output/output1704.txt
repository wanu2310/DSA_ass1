line 1: k=1
line 2: nearestNeighbour (4)

line 3: inorderTraversal

line 4: nearestNeighbour (4)

line 5: inorderTraversal

line 6: kNearestNeighbour 9 (5)

line 7: inorderTraversal

line 8: nearestNeighbour (6)

line 9: inorderTraversal

line 10: kNearestNeighbour 7 (1)

line 11: inorderTraversal

line 12: preorderTraversal

line 13: inorderTraversal

line 14: insert (9)
line 15: inorderTraversal
(9) 
line 16: insert (9)
line 17: inorderTraversal
(9) (9) 
line 18: insert (3)
line 19: inorderTraversal
(3) (9) (9) 
line 20: kNearestNeighbour 1 (2)
(3) 
line 21: inorderTraversal
(3) (9) (9) 
line 22: postorderTraversal
(3) (9) (9) 
line 23: inorderTraversal
(3) (9) (9) 
line 24: nearestNeighbour (1)
(3) 
line 25: inorderTraversal
(3) (9) (9) 
line 26: kNearestNeighbour 4 (6)
(3) (9) (9) 
line 27: inorderTraversal
(3) (9) (9) 
line 28: clear
line 29: buildTree 10
(3) (9) (5) (7) (4) (1) (7) (4) (7) (9) 
line 30: inorderTraversal
(1) (3) (4) (4) (5) (7) (7) (7) (9) (9) 
line 31: insert (2)
line 32: inorderTraversal
(1) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) 
line 33: insert (9)
line 34: inorderTraversal
(1) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) 
line 35: kNearestNeighbour 3 (7)
(7) (7) (7) 
line 36: inorderTraversal
(1) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) 
line 37: kNearestNeighbour 5 (2)
(1) (2) (3) (4) (4) 
line 38: inorderTraversal
(1) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) 
line 39: remove (7)
line 40: inorderTraversal
(1) (2) (3) (4) (4) (5) (7) (7) (9) (9) (9) 
line 41: kNearestNeighbour 2 (8)
(9) (9) 
line 42: inorderTraversal
(1) (2) (3) (4) (4) (5) (7) (7) (9) (9) (9) 
line 43: nearestNeighbour (7)
(7) 
line 44: inorderTraversal
(1) (2) (3) (4) (4) (5) (7) (7) (9) (9) (9) 
line 45: insert (4)
line 46: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (7) (7) (9) (9) (9) 
line 47: remove (5)
line 48: inorderTraversal
(1) (2) (3) (4) (4) (4) (7) (7) (9) (9) (9) 
line 49: remove (9)
line 50: inorderTraversal
(1) (2) (3) (4) (4) (4) (7) (7) (9) (9) 
line 51: insert (7)
line 52: inorderTraversal
(1) (2) (3) (4) (4) (4) (7) (7) (7) (9) (9) 
line 53: insert (10)
line 54: inorderTraversal
(1) (2) (3) (4) (4) (4) (7) (7) (7) (9) (9) (10) 
line 55: insert (1)
line 56: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (7) (7) (7) (9) (9) (10) 
line 57: insert (1)
line 58: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (7) (7) (7) (9) (9) (10) 
line 59: insert (2)
line 60: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (7) (7) (7) (9) (9) (10) 
line 61: insert (7)
line 62: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (7) (7) (7) (7) (9) (9) (10) 
line 63: clear
line 64: buildTree 7
(7) (8) (2) (6) (2) (7) (7) 
line 65: inorderTraversal
(2) (2) (6) (7) (7) (7) (8) 
line 66: clear
line 67: buildTree 15
(5) (2) (8) (2) (4) (1) (8) (9) (6) (8) (9) (3) (5) (5) (5) 
line 68: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (5) (6) (8) (8) (8) (9) (9) 
line 69: remove (5)
line 70: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (8) (8) (8) (9) (9) 
line 71: insert (10)
line 72: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (8) (8) (8) (9) (9) (10) 
line 73: kNearestNeighbour 9 (9)
(5) (5) (6) (8) (8) (8) (9) (9) (10) 
line 74: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (8) (8) (8) (9) (9) (10) 
line 75: nearestNeighbour (1)
(1) 
line 76: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (8) (8) (8) (9) (9) (10) 
line 77: insert (3)
line 78: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (8) (8) (8) (9) (9) (10) 
line 79: insert (7)
line 80: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) 
line 81: kNearestNeighbour 10 (2)
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) 
line 82: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) 
line 83: kNearestNeighbour 2 (4)
(3) (4) 
line 84: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) 
line 85: remove (9)
line 86: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (8) (9) (10) 
line 87: kNearestNeighbour 9 (8)
(5) (5) (6) (7) (8) (8) (8) (9) (10) 
line 88: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (8) (9) (10) 
line 89: kNearestNeighbour 5 (8)
(7) (8) (8) (8) (9) 
line 90: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (8) (9) (10) 
line 91: kNearestNeighbour 4 (4)
(3) (3) (4) (5) 
line 92: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (8) (9) (10) 
line 93: insert (6)
line 94: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 95: nearestNeighbour (7)
(7) 
line 96: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 97: nearestNeighbour (3)
(3) 
line 98: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 99: nearestNeighbour (2)
(2) 
line 100: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 101: nearestNeighbour (2)
(2) 
line 102: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 103: insert (9)
line 104: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) 
line 105: clear
line 106: buildTree 16
(3) (7) (6) (8) (1) (7) (4) (7) (6) (7) (10) (6) (4) (5) (2) (9) 
line 107: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (10) 
line 108: insert (10)
line 109: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (10) (10) 
line 110: nodeCount_height_leafCount
nodeCount=17;height=7;leafCount=5
line 111: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (10) (10) 
line 112: insert (10)
line 113: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (10) (10) (10) 
line 114: search (10)
TRUE
line 115: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (10) (10) (10) 
line 116: remove (4)
line 117: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (10) (10) (10) 
line 118: clear
line 119: buildTree 13
(6) (2) (1) (3) (7) (7) (3) (8) (2) (10) (3) (3) (9) 
line 120: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (6) (7) (7) (8) (9) (10) 
line 121: nearestNeighbour (2)
(2) 
line 122: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (6) (7) (7) (8) (9) (10) 
line 123: kNearestNeighbour 4 (10)
(7) (8) (9) (10) 
line 124: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (6) (7) (7) (8) (9) (10) 
line 125: clear
line 126: buildTree 13
(2) (4) (6) (4) (4) (7) (8) (5) (8) (2) (9) (1) (5) 
line 127: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (8) (8) (9) 
line 128: nearestNeighbour (6)
(6) 
line 129: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (8) (8) (9) 
line 130: kNearestNeighbour 4 (1)
(1) (2) (2) (4) 
line 131: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (8) (8) (9) 
line 132: insert (8)
line 133: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) 
line 134: kNearestNeighbour 3 (9)
(8) (8) (9) 
line 135: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) 
line 136: insert (8)
line 137: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (8) (9) 
line 138: nearestNeighbour (8)
(8) 
line 139: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (8) (9) 
line 140: remove (8)
line 141: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) 
line 142: search (4)
TRUE
line 143: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) 
line 144: clear
line 145: buildTree 7
(7) (5) (1) (6) (2) (6) (1) 
line 146: inorderTraversal
(1) (1) (2) (5) (6) (6) (7) 
line 147: kNearestNeighbour 2 (2)
(1) (2) 
line 148: inorderTraversal
(1) (1) (2) (5) (6) (6) (7) 
line 149: remove (7)
line 150: inorderTraversal
(1) (1) (2) (5) (6) (6) 
line 151: insert (4)
line 152: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) 
line 153: clear
line 154: buildTree 9
(7) (5) (2) (1) (3) (8) (6) (5) (8) 
line 155: inorderTraversal
(1) (2) (3) (5) (5) (6) (7) (8) (8) 
line 156: kNearestNeighbour 6 (8)
(5) (5) (6) (7) (8) (8) 
line 157: inorderTraversal
(1) (2) (3) (5) (5) (6) (7) (8) (8) 
line 158: kNearestNeighbour 1 (9)
(8) 
line 159: inorderTraversal
(1) (2) (3) (5) (5) (6) (7) (8) (8) 
line 160: clear
line 161: buildTree 15
(10) (10) (1) (10) (6) (2) (4) (9) (7) (7) (8) (6) (3) (5) (10) 
line 162: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 163: kNearestNeighbour 10 (10)
(6) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 164: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 165: insert (1)
line 166: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 167: clear
line 168: buildTree 8
(10) (4) (5) (6) (9) (8) (3) (5) 
line 169: inorderTraversal
(3) (4) (5) (5) (6) (8) (9) (10) 
line 170: insert (6)
line 171: inorderTraversal
(3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 172: kNearestNeighbour 3 (7)
(6) (6) (8) 
line 173: inorderTraversal
(3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 174: preorderTraversal
(5) (3) (4) (8) (5) (6) (6) (9) (10) 
line 175: inorderTraversal
(3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 176: kNearestNeighbour 1 (7)
(6) 
line 177: inorderTraversal
(3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 178: nearestNeighbour (4)
(4) 
line 179: inorderTraversal
(3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 180: kNearestNeighbour 5 (7)
(5) (6) (6) (8) (9) 
line 181: inorderTraversal
(3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 182: remove (5)
line 183: inorderTraversal
(3) (4) (5) (6) (6) (8) (9) (10) 
line 184: insert (6)
line 185: inorderTraversal
(3) (4) (5) (6) (6) (6) (8) (9) (10) 
line 186: insert (9)
line 187: inorderTraversal
(3) (4) (5) (6) (6) (6) (8) (9) (9) (10) 
line 188: insert (1)
line 189: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (8) (9) (9) (10) 
line 190: nearestNeighbour (2)
(1) 
line 191: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (8) (9) (9) (10) 
line 192: insert (7)
line 193: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 194: kNearestNeighbour 8 (9)
(6) (6) (6) (7) (8) (9) (9) (10) 
line 195: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 196: insert (8)
line 197: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 198: remove (10)
line 199: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) 
line 200: clear
line 201: buildTree 16
(10) (10) (2) (5) (3) (10) (7) (9) (10) (8) (9) (1) (1) (4) (9) (5) 
line 202: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (7) (8) (9) (9) (9) (10) (10) (10) (10) 
line 203: search (9)
TRUE
line 204: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (7) (8) (9) (9) (9) (10) (10) (10) (10) 
line 205: nearestNeighbour (5)
(5) 
line 206: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (7) (8) (9) (9) (9) (10) (10) (10) (10) 
line 207: nearestNeighbour (6)
(5) 
line 208: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (7) (8) (9) (9) (9) (10) (10) (10) (10) 
line 209: insert (9)
line 210: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (7) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 211: clear
line 212: buildTree 14
(1) (1) (4) (9) (2) (5) (3) (3) (10) (5) (3) (8) (4) (4) 
line 213: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (5) (8) (9) (10) 
line 214: insert (6)
line 215: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (5) (6) (8) (9) (10) 
line 216: clear
line 217: buildTree 2
(7) (1) 
line 218: inorderTraversal
(1) (7) 
line 219: insert (5)
line 220: inorderTraversal
(1) (5) (7) 
line 221: insert (3)
line 222: inorderTraversal
(1) (3) (5) (7) 
line 223: insert (4)
line 224: inorderTraversal
(1) (3) (4) (5) (7) 
line 225: insert (6)
line 226: inorderTraversal
(1) (3) (4) (5) (6) (7) 
line 227: nearestNeighbour (2)
(3) 
line 228: inorderTraversal
(1) (3) (4) (5) (6) (7) 
line 229: search (3)
TRUE
line 230: inorderTraversal
(1) (3) (4) (5) (6) (7) 
line 231: insert (8)
line 232: inorderTraversal
(1) (3) (4) (5) (6) (7) (8) 
line 233: nearestNeighbour (4)
(4) 
line 234: inorderTraversal
(1) (3) (4) (5) (6) (7) (8) 
line 235: insert (10)
line 236: inorderTraversal
(1) (3) (4) (5) (6) (7) (8) (10) 
line 237: kNearestNeighbour 3 (9)
(7) (8) (10) 
line 238: inorderTraversal
(1) (3) (4) (5) (6) (7) (8) (10) 
line 239: insert (10)
line 240: inorderTraversal
(1) (3) (4) (5) (6) (7) (8) (10) (10) 
line 241: remove (10)
line 242: inorderTraversal
(1) (3) (4) (5) (6) (7) (8) (10) 
line 243: insert (6)
line 244: inorderTraversal
(1) (3) (4) (5) (6) (6) (7) (8) (10) 
line 245: insert (9)
line 246: inorderTraversal
(1) (3) (4) (5) (6) (6) (7) (8) (9) (10) 
line 247: insert (8)
line 248: inorderTraversal
(1) (3) (4) (5) (6) (6) (7) (8) (8) (9) (10) 
line 249: remove (5)
line 250: inorderTraversal
(1) (3) (4) (6) (6) (7) (8) (8) (9) (10) 
line 251: insert (3)
line 252: inorderTraversal
(1) (3) (3) (4) (6) (6) (7) (8) (8) (9) (10) 
line 253: kNearestNeighbour 3 (6)
(6) (6) (7) 
line 254: inorderTraversal
(1) (3) (3) (4) (6) (6) (7) (8) (8) (9) (10) 
line 255: insert (7)
line 256: inorderTraversal
(1) (3) (3) (4) (6) (6) (7) (7) (8) (8) (9) (10) 
line 257: insert (4)
line 258: inorderTraversal
(1) (3) (3) (4) (4) (6) (6) (7) (7) (8) (8) (9) (10) 
line 259: clear
line 260: buildTree 3
(5) (6) (8) 
line 261: inorderTraversal
(5) (6) (8) 
line 262: insert (5)
line 263: inorderTraversal
(5) (5) (6) (8) 
line 264: insert (7)
line 265: inorderTraversal
(5) (5) (6) (7) (8) 
line 266: nearestNeighbour (6)
(6) 
line 267: inorderTraversal
(5) (5) (6) (7) (8) 
line 268: nearestNeighbour (7)
(7) 
line 269: inorderTraversal
(5) (5) (6) (7) (8) 
line 270: kNearestNeighbour 8 (7)
(5) (5) (6) (7) (8) 
line 271: inorderTraversal
(5) (5) (6) (7) (8) 
line 272: nearestNeighbour (3)
(5) 
line 273: inorderTraversal
(5) (5) (6) (7) (8) 
line 274: insert (2)
line 275: inorderTraversal
(2) (5) (5) (6) (7) (8) 
line 276: insert (3)
line 277: inorderTraversal
(2) (3) (5) (5) (6) (7) (8) 
line 278: insert (4)
line 279: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (8) 
line 280: insert (8)
line 281: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (8) (8) 
line 282: kNearestNeighbour 1 (9)
(8) 
line 283: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (8) (8) 
line 284: insert (9)
line 285: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (8) (8) (9) 
line 286: clear
line 287: buildTree 5
(7) (7) (5) (10) (3) 
line 288: inorderTraversal
(3) (5) (7) (7) (10) 
line 289: search (7)
TRUE
line 290: inorderTraversal
(3) (5) (7) (7) (10) 
line 291: kNearestNeighbour 6 (1)
(3) (5) (7) (7) (10) 
line 292: inorderTraversal
(3) (5) (7) (7) (10) 
line 293: insert (10)
line 294: inorderTraversal
(3) (5) (7) (7) (10) (10) 
line 295: nearestNeighbour (2)
(3) 
line 296: inorderTraversal
(3) (5) (7) (7) (10) (10) 
line 297: insert (6)
line 298: inorderTraversal
(3) (5) (6) (7) (7) (10) (10) 
line 299: kNearestNeighbour 6 (1)
(3) (5) (6) (7) (7) (10) 
line 300: inorderTraversal
(3) (5) (6) (7) (7) (10) (10) 
line 301: clear
line 302: buildTree 1
(2) 
line 303: inorderTraversal
(2) 
line 304: kNearestNeighbour 5 (8)
(2) 
line 305: inorderTraversal
(2) 
line 306: nearestNeighbour (4)
(2) 
line 307: inorderTraversal
(2) 
line 308: nearestNeighbour (8)
(2) 
line 309: inorderTraversal
(2) 
line 310: search (2)
TRUE
line 311: inorderTraversal
(2) 
line 312: remove (2)
line 313: inorderTraversal

line 314: insert (4)
line 315: inorderTraversal
(4) 
line 316: insert (9)
line 317: inorderTraversal
(4) (9) 
line 318: kNearestNeighbour 7 (1)
(4) (9) 
line 319: inorderTraversal
(4) (9) 
line 320: nearestNeighbour (4)
(4) 
line 321: inorderTraversal
(4) (9) 
line 322: insert (7)
line 323: inorderTraversal
(4) (7) (9) 
line 324: insert (1)
line 325: inorderTraversal
(1) (4) (7) (9) 
line 326: kNearestNeighbour 1 (7)
(7) 
line 327: inorderTraversal
(1) (4) (7) (9) 
line 328: kNearestNeighbour 7 (6)
(1) (4) (7) (9) 
line 329: inorderTraversal
(1) (4) (7) (9) 
line 330: remove (4)
line 331: inorderTraversal
(1) (7) (9) 
line 332: nodeCount_height_leafCount
nodeCount=3;height=2;leafCount=2
line 333: inorderTraversal
(1) (7) (9) 
line 334: insert (6)
line 335: inorderTraversal
(1) (6) (7) (9) 
line 336: nearestNeighbour (5)
(6) 
line 337: inorderTraversal
(1) (6) (7) (9) 
line 338: insert (5)
line 339: inorderTraversal
(1) (5) (6) (7) (9) 
line 340: kNearestNeighbour 2 (4)
(5) (6) 
line 341: inorderTraversal
(1) (5) (6) (7) (9) 
line 342: remove (6)
line 343: inorderTraversal
(1) (5) (7) (9) 
line 344: insert (5)
line 345: inorderTraversal
(1) (5) (5) (7) (9) 
line 346: clear
line 347: buildTree 11
(1) (1) (3) (4) (4) (1) (3) (8) (1) (10) (3) 
line 348: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (8) (10) 
line 349: search (10)
TRUE
line 350: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (8) (10) 
line 351: insert (4)
line 352: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (8) (10) 
line 353: clear
line 354: buildTree 2
(5) (5) 
line 355: inorderTraversal
(5) (5) 
line 356: nearestNeighbour (9)
(5) 
line 357: inorderTraversal
(5) (5) 
line 358: nearestNeighbour (6)
(5) 
line 359: inorderTraversal
(5) (5) 
line 360: nearestNeighbour (6)
(5) 
line 361: inorderTraversal
(5) (5) 
line 362: nearestNeighbour (5)
(5) 
line 363: inorderTraversal
(5) (5) 
line 364: nearestNeighbour (8)
(5) 
line 365: inorderTraversal
(5) (5) 
line 366: clear
line 367: buildTree 18
(1) (9) (10) (4) (8) (1) (5) (10) (9) (4) (3) (9) (2) (7) (6) (5) (1) (1) 
line 368: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) 
line 369: insert (9)
line 370: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 371: clear
line 372: buildTree 9
(2) (1) (3) (5) (4) (1) (5) (10) (1) 
line 373: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (10) 
line 374: insert (1)
line 375: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (5) (10) 
line 376: nearestNeighbour (2)
(2) 
line 377: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (5) (10) 
line 378: insert (2)
line 379: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) 
line 380: insert (10)
line 381: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 382: insert (9)
line 383: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (9) (10) (10) 
line 384: remove (9)
line 385: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 386: nearestNeighbour (4)
(4) 
line 387: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 388: kNearestNeighbour 10 (3)
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) 
line 389: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 390: search (3)
TRUE
line 391: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 392: nearestNeighbour (10)
(10) 
line 393: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 394: nearestNeighbour (3)
(3) 
line 395: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 396: nearestNeighbour (10)
(10) 
line 397: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 398: kNearestNeighbour 9 (8)
(1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 399: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 400: kNearestNeighbour 5 (10)
(4) (5) (5) (10) (10) 
line 401: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 402: nearestNeighbour (6)
(5) 
line 403: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 404: preorderTraversal
(3) (1) (1) (1) (2) (1) (2) (5) (4) (5) (10) (10) 
line 405: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 406: nearestNeighbour (7)
(5) 
line 407: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 408: nearestNeighbour (10)
(10) 
line 409: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 410: nearestNeighbour (3)
(3) 
line 411: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (10) (10) 
line 412: insert (3)
line 413: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (4) (5) (5) (10) (10) 
line 414: remove (2)
line 415: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (5) (10) (10) 
line 416: kNearestNeighbour 1 (3)
(3) 
line 417: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (5) (10) (10) 
line 418: nodeCount_height_leafCount
nodeCount=12;height=6;leafCount=3
line 419: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (5) (10) (10) 
line 420: insert (7)
line 421: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (5) (7) (10) (10) 
line 422: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=4
line 423: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (5) (7) (10) (10) 
line 424: preorderTraversal
(3) (1) (1) (1) (2) (1) (5) (4) (3) (5) (10) (7) (10) 
line 425: postorderTraversal
(1) (2) (1) (1) (1) (3) (4) (7) (10) (10) (5) (5) (3) 
line 426: clear
