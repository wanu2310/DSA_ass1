line 1: k=1
line 2: insert (7)
line 3: inorderTraversal
(7) 
line 4: remove (7)
line 5: inorderTraversal

line 6: kNearestNeighbour 6 (4)

line 7: inorderTraversal

line 8: kNearestNeighbour 8 (10)

line 9: inorderTraversal

line 10: search (6)
FALSE
line 11: inorderTraversal

line 12: kNearestNeighbour 1 (9)

line 13: inorderTraversal

line 14: insert (1)
line 15: inorderTraversal
(1) 
line 16: insert (4)
line 17: inorderTraversal
(1) (4) 
line 18: nodeCount_height_leafCount
nodeCount=2;height=2;leafCount=1
line 19: inorderTraversal
(1) (4) 
line 20: remove (7)
line 21: inorderTraversal
(1) (4) 
line 22: preorderTraversal
(1) (4) 
line 23: inorderTraversal
(1) (4) 
line 24: kNearestNeighbour 1 (1)
(1) 
line 25: inorderTraversal
(1) (4) 
line 26: search (1)
TRUE
line 27: inorderTraversal
(1) (4) 
line 28: search (7)
FALSE
line 29: inorderTraversal
(1) (4) 
line 30: nearestNeighbour (8)
(4) 
line 31: inorderTraversal
(1) (4) 
line 32: insert (1)
line 33: inorderTraversal
(1) (1) (4) 
line 34: search (1)
TRUE
line 35: inorderTraversal
(1) (1) (4) 
line 36: insert (9)
line 37: inorderTraversal
(1) (1) (4) (9) 
line 38: remove (3)
line 39: inorderTraversal
(1) (1) (4) (9) 
line 40: insert (7)
line 41: inorderTraversal
(1) (1) (4) (7) (9) 
line 42: insert (1)
line 43: inorderTraversal
(1) (1) (1) (4) (7) (9) 
line 44: kNearestNeighbour 5 (1)
(1) (1) (1) (4) (7) 
line 45: inorderTraversal
(1) (1) (1) (4) (7) (9) 
line 46: insert (9)
line 47: inorderTraversal
(1) (1) (1) (4) (7) (9) (9) 
line 48: insert (6)
line 49: inorderTraversal
(1) (1) (1) (4) (6) (7) (9) (9) 
line 50: kNearestNeighbour 9 (2)
(1) (1) (1) (4) (6) (7) (9) (9) 
line 51: inorderTraversal
(1) (1) (1) (4) (6) (7) (9) (9) 
line 52: insert (2)
line 53: inorderTraversal
(1) (1) (1) (2) (4) (6) (7) (9) (9) 
line 54: nearestNeighbour (4)
(4) 
line 55: inorderTraversal
(1) (1) (1) (2) (4) (6) (7) (9) (9) 
line 56: postorderTraversal
(2) (1) (1) (6) (7) (9) (9) (4) (1) 
line 57: inorderTraversal
(1) (1) (1) (2) (4) (6) (7) (9) (9) 
line 58: clear
line 59: buildTree 19
(2) (8) (1) (9) (1) (5) (2) (4) (6) (9) (3) (2) (3) (8) (5) (6) (9) (7) (1) 
line 60: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) 
line 61: insert (2)
line 62: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) 
line 63: insert (10)
line 64: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (10) 
line 65: clear
line 66: buildTree 6
(3) (1) (10) (7) (7) (1) 
line 67: inorderTraversal
(1) (1) (3) (7) (7) (10) 
line 68: nearestNeighbour (7)
(7) 
line 69: inorderTraversal
(1) (1) (3) (7) (7) (10) 
line 70: insert (4)
line 71: inorderTraversal
(1) (1) (3) (4) (7) (7) (10) 
line 72: preorderTraversal
(3) (1) (1) (7) (4) (7) (10) 
line 73: inorderTraversal
(1) (1) (3) (4) (7) (7) (10) 
line 74: nearestNeighbour (9)
(10) 
line 75: inorderTraversal
(1) (1) (3) (4) (7) (7) (10) 
line 76: clear
line 77: buildTree 14
(6) (4) (7) (6) (1) (6) (8) (5) (8) (5) (2) (10) (10) (10) 
line 78: inorderTraversal
(1) (2) (4) (5) (5) (6) (6) (6) (7) (8) (8) (10) (10) (10) 
line 79: kNearestNeighbour 7 (2)
(1) (2) (4) (5) (5) (6) (6) 
line 80: inorderTraversal
(1) (2) (4) (5) (5) (6) (6) (6) (7) (8) (8) (10) (10) (10) 
line 81: clear
line 82: buildTree 6
(4) (7) (4) (3) (10) (3) 
line 83: inorderTraversal
(3) (3) (4) (4) (7) (10) 
line 84: nearestNeighbour (8)
(7) 
line 85: inorderTraversal
(3) (3) (4) (4) (7) (10) 
line 86: nearestNeighbour (10)
(10) 
line 87: inorderTraversal
(3) (3) (4) (4) (7) (10) 
line 88: insert (7)
line 89: inorderTraversal
(3) (3) (4) (4) (7) (7) (10) 
line 90: nearestNeighbour (8)
(7) 
line 91: inorderTraversal
(3) (3) (4) (4) (7) (7) (10) 
line 92: nearestNeighbour (3)
(3) 
line 93: inorderTraversal
(3) (3) (4) (4) (7) (7) (10) 
line 94: nearestNeighbour (8)
(7) 
line 95: inorderTraversal
(3) (3) (4) (4) (7) (7) (10) 
line 96: nearestNeighbour (2)
(3) 
line 97: inorderTraversal
(3) (3) (4) (4) (7) (7) (10) 
line 98: insert (9)
line 99: inorderTraversal
(3) (3) (4) (4) (7) (7) (9) (10) 
line 100: kNearestNeighbour 8 (6)
(3) (3) (4) (4) (7) (7) (9) (10) 
line 101: inorderTraversal
(3) (3) (4) (4) (7) (7) (9) (10) 
line 102: insert (10)
line 103: inorderTraversal
(3) (3) (4) (4) (7) (7) (9) (10) (10) 
line 104: kNearestNeighbour 4 (9)
(7) (9) (10) (10) 
line 105: inorderTraversal
(3) (3) (4) (4) (7) (7) (9) (10) (10) 
line 106: insert (4)
line 107: inorderTraversal
(3) (3) (4) (4) (4) (7) (7) (9) (10) (10) 
line 108: insert (9)
line 109: inorderTraversal
(3) (3) (4) (4) (4) (7) (7) (9) (9) (10) (10) 
line 110: clear
line 111: buildTree 16
(4) (1) (5) (8) (5) (10) (4) (9) (2) (5) (7) (10) (8) (9) (5) (5) 
line 112: inorderTraversal
(1) (2) (4) (4) (5) (5) (5) (5) (5) (7) (8) (8) (9) (9) (10) (10) 
line 113: clear
line 114: buildTree 4
(5) (4) (6) (5) 
line 115: inorderTraversal
(4) (5) (5) (6) 
line 116: nearestNeighbour (6)
(6) 
line 117: inorderTraversal
(4) (5) (5) (6) 
line 118: insert (6)
line 119: inorderTraversal
(4) (5) (5) (6) (6) 
line 120: kNearestNeighbour 3 (1)
(4) (5) (5) 
line 121: inorderTraversal
(4) (5) (5) (6) (6) 
line 122: insert (4)
line 123: inorderTraversal
(4) (4) (5) (5) (6) (6) 
line 124: kNearestNeighbour 5 (2)
(4) (4) (5) (5) (6) 
line 125: inorderTraversal
(4) (4) (5) (5) (6) (6) 
line 126: remove (10)
line 127: inorderTraversal
(4) (4) (5) (5) (6) (6) 
line 128: clear
line 129: buildTree 6
(6) (8) (6) (9) (4) (5) 
line 130: inorderTraversal
(4) (5) (6) (6) (8) (9) 
line 131: remove (8)
line 132: inorderTraversal
(4) (5) (6) (6) (9) 
line 133: search (6)
TRUE
line 134: inorderTraversal
(4) (5) (6) (6) (9) 
line 135: insert (4)
line 136: inorderTraversal
(4) (4) (5) (6) (6) (9) 
line 137: insert (6)
line 138: inorderTraversal
(4) (4) (5) (6) (6) (6) (9) 
line 139: insert (2)
line 140: inorderTraversal
(2) (4) (4) (5) (6) (6) (6) (9) 
line 141: preorderTraversal
(6) (4) (2) (5) (4) (9) (6) (6) 
line 142: inorderTraversal
(2) (4) (4) (5) (6) (6) (6) (9) 
line 143: preorderTraversal
(6) (4) (2) (5) (4) (9) (6) (6) 
line 144: inorderTraversal
(2) (4) (4) (5) (6) (6) (6) (9) 
line 145: clear
line 146: buildTree 3
(5) (10) (1) 
line 147: inorderTraversal
(1) (5) (10) 
line 148: clear
line 149: buildTree 7
(6) (10) (9) (10) (5) (1) (10) 
line 150: inorderTraversal
(1) (5) (6) (9) (10) (10) (10) 
line 151: clear
line 152: buildTree 1
(2) 
line 153: inorderTraversal
(2) 
line 154: insert (4)
line 155: inorderTraversal
(2) (4) 
line 156: remove (4)
line 157: inorderTraversal
(2) 
line 158: insert (8)
line 159: inorderTraversal
(2) (8) 
line 160: insert (9)
line 161: inorderTraversal
(2) (8) (9) 
line 162: kNearestNeighbour 10 (8)
(2) (8) (9) 
line 163: inorderTraversal
(2) (8) (9) 
line 164: insert (6)
line 165: inorderTraversal
(2) (6) (8) (9) 
line 166: remove (3)
line 167: inorderTraversal
(2) (6) (8) (9) 
line 168: insert (4)
line 169: inorderTraversal
(2) (4) (6) (8) (9) 
line 170: preorderTraversal
(2) (8) (6) (4) (9) 
line 171: inorderTraversal
(2) (4) (6) (8) (9) 
line 172: insert (6)
line 173: inorderTraversal
(2) (4) (6) (6) (8) (9) 
line 174: clear
line 175: buildTree 4
(4) (5) (7) (8) 
line 176: inorderTraversal
(4) (5) (7) (8) 
line 177: nearestNeighbour (3)
(4) 
line 178: inorderTraversal
(4) (5) (7) (8) 
line 179: insert (5)
line 180: inorderTraversal
(4) (5) (5) (7) (8) 
line 181: remove (5)
line 182: inorderTraversal
(4) (5) (7) (8) 
line 183: kNearestNeighbour 6 (7)
(4) (5) (7) (8) 
line 184: inorderTraversal
(4) (5) (7) (8) 
line 185: insert (7)
line 186: inorderTraversal
(4) (5) (7) (7) (8) 
line 187: nearestNeighbour (5)
(5) 
line 188: inorderTraversal
(4) (5) (7) (7) (8) 
line 189: insert (5)
line 190: inorderTraversal
(4) (5) (5) (7) (7) (8) 
line 191: kNearestNeighbour 5 (2)
(4) (5) (5) (7) (7) 
line 192: inorderTraversal
(4) (5) (5) (7) (7) (8) 
line 193: clear
line 194: buildTree 12
(4) (9) (6) (9) (1) (10) (2) (6) (3) (6) (9) (6) 
line 195: inorderTraversal
(1) (2) (3) (4) (6) (6) (6) (6) (9) (9) (9) (10) 
line 196: nearestNeighbour (4)
(4) 
line 197: inorderTraversal
(1) (2) (3) (4) (6) (6) (6) (6) (9) (9) (9) (10) 
line 198: insert (6)
line 199: inorderTraversal
(1) (2) (3) (4) (6) (6) (6) (6) (6) (9) (9) (9) (10) 
line 200: clear
line 201: buildTree 18
(10) (8) (9) (1) (8) (8) (6) (8) (1) (7) (8) (5) (6) (9) (1) (3) (7) (3) 
line 202: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 203: kNearestNeighbour 3 (8)
(8) (8) (8) 
line 204: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 205: preorderTraversal
(7) (3) (1) (1) (1) (5) (3) (6) (6) (8) (7) (8) (8) (9) (8) (8) (9) (10) 
line 206: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 207: nearestNeighbour (4)
(3) 
line 208: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 209: kNearestNeighbour 8 (4)
(1) (1) (1) (3) (3) (5) (6) (6) 
line 210: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 211: insert (7)
line 212: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 213: search (5)
TRUE
line 214: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 215: nearestNeighbour (7)
(7) 
line 216: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 217: kNearestNeighbour 5 (10)
(8) (8) (9) (9) (10) 
line 218: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 219: insert (9)
line 220: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 221: preorderTraversal
(7) (3) (1) (1) (1) (5) (3) (6) (6) (8) (7) (7) (8) (8) (9) (8) (8) (9) (10) (9) 
line 222: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 223: remove (3)
line 224: inorderTraversal
(1) (1) (1) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 225: kNearestNeighbour 4 (3)
(1) (1) (3) (5) 
line 226: inorderTraversal
(1) (1) (1) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 227: kNearestNeighbour 4 (4)
(3) (5) (6) (6) 
line 228: inorderTraversal
(1) (1) (1) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 229: insert (3)
line 230: inorderTraversal
(1) (1) (1) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 231: insert (3)
line 232: inorderTraversal
(1) (1) (1) (3) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 233: remove (10)
line 234: inorderTraversal
(1) (1) (1) (3) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) 
line 235: insert (1)
line 236: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) 
line 237: insert (2)
line 238: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) 
line 239: nearestNeighbour (3)
(3) 
line 240: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) 
line 241: insert (4)
line 242: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) 
line 243: insert (10)
line 244: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 245: clear
line 246: buildTree 17
(3) (8) (3) (2) (2) (9) (5) (9) (6) (2) (1) (4) (6) (6) (1) (8) (2) 
line 247: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (8) (8) (9) (9) 
line 248: remove (9)
line 249: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (8) (8) (9) 
line 250: insert (2)
line 251: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (8) (8) (9) 
line 252: nearestNeighbour (10)
(9) 
line 253: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (8) (8) (9) 
line 254: search (5)
TRUE
line 255: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (8) (8) (9) 
line 256: kNearestNeighbour 8 (10)
(4) (5) (6) (6) (6) (8) (8) (9) 
line 257: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (8) (8) (9) 
line 258: nearestNeighbour (10)
(9) 
line 259: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (8) (8) (9) 
line 260: clear
line 261: buildTree 20
(5) (10) (1) (3) (3) (7) (4) (8) (1) (3) (7) (1) (8) (9) (5) (1) (10) (2) (2) (1) 
line 262: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (10) (10) 
line 263: insert (10)
line 264: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) 
line 265: nearestNeighbour (8)
(8) 
line 266: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) 
line 267: nearestNeighbour (4)
(4) 
line 268: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) 
line 269: search (7)
TRUE
line 270: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) 
line 271: insert (3)
line 272: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) 
line 273: kNearestNeighbour 9 (8)
(5) (7) (7) (8) (8) (9) (10) (10) (10) 
line 274: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) 
line 275: remove (7)
line 276: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (7) (8) (8) (9) (10) (10) (10) 
line 277: kNearestNeighbour 8 (5)
(3) (3) (3) (3) (4) (5) (5) (7) 
line 278: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (7) (8) (8) (9) (10) (10) (10) 
line 279: remove (3)
line 280: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (7) (8) (8) (9) (10) (10) (10) 
line 281: clear
line 282: buildTree 13
(1) (8) (1) (8) (9) (2) (9) (10) (6) (2) (8) (5) (2) 
line 283: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (9) (10) 
line 284: postorderTraversal
(1) (1) (5) (2) (2) (2) (8) (8) (10) (9) (9) (8) (6) 
line 285: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (9) (10) 
line 286: nearestNeighbour (2)
(2) 
line 287: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (9) (10) 
line 288: nearestNeighbour (4)
(5) 
line 289: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (9) (10) 
line 290: remove (9)
line 291: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (10) 
line 292: kNearestNeighbour 8 (4)
(1) (1) (2) (2) (2) (5) (6) (8) 
line 293: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (10) 
line 294: insert (10)
line 295: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (10) (10) 
line 296: preorderTraversal
(6) (2) (1) (1) (2) (2) (5) (8) (9) (8) (8) (10) (10) 
line 297: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (10) (10) 
line 298: nearestNeighbour (2)
(2) 
line 299: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (10) (10) 
line 300: insert (3)
line 301: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (8) (8) (8) (9) (10) (10) 
line 302: insert (8)
line 303: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (8) (8) (8) (8) (9) (10) (10) 
line 304: insert (7)
line 305: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 306: kNearestNeighbour 7 (4)
(1) (2) (2) (2) (3) (5) (6) 
line 307: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 308: insert (7)
line 309: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 310: nearestNeighbour (6)
(6) 
line 311: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 312: search (2)
TRUE
line 313: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 314: insert (4)
line 315: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 316: kNearestNeighbour 1 (2)
(2) 
line 317: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 318: insert (7)
line 319: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 320: postorderTraversal
(1) (1) (4) (3) (5) (2) (2) (2) (7) (7) (7) (8) (8) (8) (10) (10) (9) (8) (6) 
line 321: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 322: nearestNeighbour (7)
(7) 
line 323: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 324: insert (6)
line 325: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 326: insert (1)
line 327: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 328: kNearestNeighbour 9 (1)
(1) (1) (1) (2) (2) (2) (3) (4) (5) 
line 329: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 330: insert (7)
line 331: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 332: kNearestNeighbour 6 (1)
(1) (1) (1) (2) (2) (2) 
line 333: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 334: insert (1)
line 335: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 336: remove (1)
line 337: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 338: insert (4)
line 339: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 340: remove (8)
line 341: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 342: insert (2)
line 343: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 344: remove (9)
line 345: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (10) (10) 
line 346: kNearestNeighbour 7 (10)
(7) (7) (8) (8) (8) (10) (10) 
line 347: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (10) (10) 
line 348: kNearestNeighbour 6 (10)
(7) (8) (8) (8) (10) (10) 
line 349: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (10) (10) 
line 350: clear
line 351: buildTree 5
(2) (6) (10) (9) (9) 
line 352: inorderTraversal
(2) (6) (9) (9) (10) 
line 353: nodeCount_height_leafCount
nodeCount=5;height=3;leafCount=2
line 354: inorderTraversal
(2) (6) (9) (9) (10) 
line 355: nearestNeighbour (8)
(9) 
line 356: inorderTraversal
(2) (6) (9) (9) (10) 
line 357: insert (7)
line 358: inorderTraversal
(2) (6) (7) (9) (9) (10) 
line 359: kNearestNeighbour 4 (10)
(7) (9) (9) (10) 
line 360: inorderTraversal
(2) (6) (7) (9) (9) (10) 
line 361: insert (7)
line 362: inorderTraversal
(2) (6) (7) (7) (9) (9) (10) 
line 363: nodeCount_height_leafCount
nodeCount=7;height=5;leafCount=2
line 364: inorderTraversal
(2) (6) (7) (7) (9) (9) (10) 
line 365: nearestNeighbour (7)
(7) 
line 366: inorderTraversal
(2) (6) (7) (7) (9) (9) (10) 
line 367: kNearestNeighbour 2 (8)
(7) (7) 
line 368: inorderTraversal
(2) (6) (7) (7) (9) (9) (10) 
line 369: remove (9)
line 370: inorderTraversal
(2) (6) (7) (7) (9) (10) 
line 371: clear
line 372: buildTree 7
(8) (1) (8) (3) (7) (3) (4) 
line 373: inorderTraversal
(1) (3) (3) (4) (7) (8) (8) 
line 374: clear
line 375: buildTree 1
(1) 
line 376: inorderTraversal
(1) 
line 377: kNearestNeighbour 9 (8)
(1) 
line 378: inorderTraversal
(1) 
line 379: remove (1)
line 380: inorderTraversal

line 381: kNearestNeighbour 5 (5)

line 382: inorderTraversal

line 383: insert (1)
line 384: inorderTraversal
(1) 
line 385: insert (1)
line 386: inorderTraversal
(1) (1) 
line 387: kNearestNeighbour 2 (7)
(1) (1) 
line 388: inorderTraversal
(1) (1) 
line 389: postorderTraversal
(1) (1) 
line 390: inorderTraversal
(1) (1) 
line 391: kNearestNeighbour 2 (5)
(1) (1) 
line 392: inorderTraversal
(1) (1) 
line 393: nearestNeighbour (9)
(1) 
line 394: inorderTraversal
(1) (1) 
line 395: remove (1)
line 396: inorderTraversal
(1) 
line 397: remove (1)
line 398: inorderTraversal

line 399: insert (1)
line 400: inorderTraversal
(1) 
line 401: preorderTraversal
(1) 
line 402: inorderTraversal
(1) 
line 403: insert (7)
line 404: inorderTraversal
(1) (7) 
line 405: insert (3)
line 406: inorderTraversal
(1) (3) (7) 
line 407: nearestNeighbour (5)
(3) 
line 408: inorderTraversal
(1) (3) (7) 
line 409: clear
line 410: buildTree 2
(7) (3) 
line 411: inorderTraversal
(3) (7) 
line 412: clear
line 413: buildTree 19
(1) (4) (1) (5) (5) (7) (2) (5) (10) (6) (4) (5) (10) (1) (2) (4) (4) (5) (10) 
line 414: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (10) (10) (10) 
line 415: insert (2)
line 416: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (10) (10) (10) 
line 417: insert (10)
line 418: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (10) (10) (10) (10) 
line 419: insert (3)
line 420: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (10) (10) (10) (10) 
line 421: nearestNeighbour (1)
(1) 
line 422: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (10) (10) (10) (10) 
line 423: nodeCount_height_leafCount
nodeCount=22;height=6;leafCount=6
line 424: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (10) (10) (10) (10) 
line 425: preorderTraversal
(5) (2) (1) (1) (1) (4) (2) (2) (3) (4) (4) (4) (6) (5) (5) (5) (5) (10) (7) (10) (10) (10) 
line 426: postorderTraversal
(1) (1) (1) (3) (2) (2) (4) (4) (4) (4) (2) (5) (5) (5) (5) (7) (10) (10) (10) (10) (6) (5) 
line 427: clear
