line 1: k=1
line 2: insert (3)
line 3: inorderTraversal
(3) 
line 4: nearestNeighbour (5)
(3) 
line 5: inorderTraversal
(3) 
line 6: preorderTraversal
(3) 
line 7: inorderTraversal
(3) 
line 8: clear
line 9: buildTree 10
(10) (5) (1) (2) (3) (8) (3) (7) (5) (2) 
line 10: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (7) (8) (10) 
line 11: clear
line 12: buildTree 8
(2) (3) (2) (7) (4) (5) (4) (8) 
line 13: inorderTraversal
(2) (2) (3) (4) (4) (5) (7) (8) 
line 14: insert (6)
line 15: inorderTraversal
(2) (2) (3) (4) (4) (5) (6) (7) (8) 
line 16: remove (2)
line 17: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) 
line 18: kNearestNeighbour 2 (3)
(2) (3) 
line 19: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) 
line 20: insert (8)
line 21: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) (8) 
line 22: insert (9)
line 23: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) (8) (9) 
line 24: insert (7)
line 25: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (7) (8) (8) (9) 
line 26: insert (3)
line 27: inorderTraversal
(2) (3) (3) (4) (4) (5) (6) (7) (7) (8) (8) (9) 
line 28: nearestNeighbour (5)
(5) 
line 29: inorderTraversal
(2) (3) (3) (4) (4) (5) (6) (7) (7) (8) (8) (9) 
line 30: insert (7)
line 31: inorderTraversal
(2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) 
line 32: clear
line 33: buildTree 6
(6) (6) (8) (9) (1) (10) 
line 34: inorderTraversal
(1) (6) (6) (8) (9) (10) 
line 35: insert (1)
line 36: inorderTraversal
(1) (1) (6) (6) (8) (9) (10) 
line 37: remove (6)
line 38: inorderTraversal
(1) (1) (6) (8) (9) (10) 
line 39: remove (8)
line 40: inorderTraversal
(1) (1) (6) (9) (10) 
line 41: insert (1)
line 42: inorderTraversal
(1) (1) (1) (6) (9) (10) 
line 43: kNearestNeighbour 10 (3)
(1) (1) (1) (6) (9) (10) 
line 44: inorderTraversal
(1) (1) (1) (6) (9) (10) 
line 45: insert (2)
line 46: inorderTraversal
(1) (1) (1) (2) (6) (9) (10) 
line 47: kNearestNeighbour 6 (3)
(1) (1) (1) (2) (6) (9) 
line 48: inorderTraversal
(1) (1) (1) (2) (6) (9) (10) 
line 49: remove (6)
line 50: inorderTraversal
(1) (1) (1) (2) (9) (10) 
line 51: insert (8)
line 52: inorderTraversal
(1) (1) (1) (2) (8) (9) (10) 
line 53: clear
line 54: buildTree 7
(10) (2) (3) (9) (7) (2) (10) 
line 55: inorderTraversal
(2) (2) (3) (7) (9) (10) (10) 
line 56: insert (8)
line 57: inorderTraversal
(2) (2) (3) (7) (8) (9) (10) (10) 
line 58: insert (4)
line 59: inorderTraversal
(2) (2) (3) (4) (7) (8) (9) (10) (10) 
line 60: insert (1)
line 61: inorderTraversal
(1) (2) (2) (3) (4) (7) (8) (9) (10) (10) 
line 62: kNearestNeighbour 2 (9)
(8) (9) 
line 63: inorderTraversal
(1) (2) (2) (3) (4) (7) (8) (9) (10) (10) 
line 64: insert (8)
line 65: inorderTraversal
(1) (2) (2) (3) (4) (7) (8) (8) (9) (10) (10) 
line 66: insert (5)
line 67: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (8) (8) (9) (10) (10) 
line 68: clear
line 69: buildTree 9
(2) (2) (4) (9) (9) (4) (6) (4) (10) 
line 70: inorderTraversal
(2) (2) (4) (4) (4) (6) (9) (9) (10) 
line 71: insert (9)
line 72: inorderTraversal
(2) (2) (4) (4) (4) (6) (9) (9) (9) (10) 
line 73: insert (3)
line 74: inorderTraversal
(2) (2) (3) (4) (4) (4) (6) (9) (9) (9) (10) 
line 75: insert (7)
line 76: inorderTraversal
(2) (2) (3) (4) (4) (4) (6) (7) (9) (9) (9) (10) 
line 77: insert (4)
line 78: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (6) (7) (9) (9) (9) (10) 
line 79: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=4
line 80: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (6) (7) (9) (9) (9) (10) 
line 81: nearestNeighbour (2)
(2) 
line 82: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (6) (7) (9) (9) (9) (10) 
line 83: search (7)
TRUE
line 84: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (6) (7) (9) (9) (9) (10) 
line 85: kNearestNeighbour 5 (1)
(2) (2) (3) (4) (4) 
line 86: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (6) (7) (9) (9) (9) (10) 
line 87: nearestNeighbour (9)
(9) 
line 88: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (6) (7) (9) (9) (9) (10) 
line 89: clear
line 90: buildTree 10
(2) (9) (8) (10) (4) (3) (6) (8) (7) (6) 
line 91: inorderTraversal
(2) (3) (4) (6) (6) (7) (8) (8) (9) (10) 
line 92: kNearestNeighbour 4 (2)
(2) (3) (4) (6) 
line 93: inorderTraversal
(2) (3) (4) (6) (6) (7) (8) (8) (9) (10) 
line 94: insert (10)
line 95: inorderTraversal
(2) (3) (4) (6) (6) (7) (8) (8) (9) (10) (10) 
line 96: insert (8)
line 97: inorderTraversal
(2) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 98: remove (10)
line 99: inorderTraversal
(2) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) 
line 100: insert (7)
line 101: inorderTraversal
(2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 102: insert (1)
line 103: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 104: postorderTraversal
(1) (2) (4) (3) (7) (7) (6) (8) (8) (10) (9) (8) (6) 
line 105: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 106: nearestNeighbour (1)
(1) 
line 107: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 108: nearestNeighbour (5)
(4) 
line 109: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 110: nearestNeighbour (10)
(10) 
line 111: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 112: insert (10)
line 113: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 114: postorderTraversal
(1) (2) (4) (3) (7) (7) (6) (8) (8) (10) (10) (9) (8) (6) 
line 115: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 116: insert (10)
line 117: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 118: kNearestNeighbour 3 (2)
(1) (2) (3) 
line 119: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 120: kNearestNeighbour 9 (5)
(2) (3) (4) (6) (6) (7) (7) (8) (8) 
line 121: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 122: insert (5)
line 123: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 124: nearestNeighbour (10)
(10) 
line 125: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 126: insert (10)
line 127: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 128: insert (1)
line 129: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 130: nearestNeighbour (8)
(8) 
line 131: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 132: insert (3)
line 133: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 134: insert (6)
line 135: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 136: insert (5)
line 137: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 138: remove (3)
line 139: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 140: nearestNeighbour (1)
(1) 
line 141: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 142: insert (2)
line 143: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 144: clear
line 145: buildTree 9
(7) (9) (5) (7) (4) (5) (5) (6) (3) 
line 146: inorderTraversal
(3) (4) (5) (5) (5) (6) (7) (7) (9) 
line 147: insert (7)
line 148: inorderTraversal
(3) (4) (5) (5) (5) (6) (7) (7) (7) (9) 
line 149: search (9)
TRUE
line 150: inorderTraversal
(3) (4) (5) (5) (5) (6) (7) (7) (7) (9) 
line 151: kNearestNeighbour 4 (4)
(3) (4) (5) (5) 
line 152: inorderTraversal
(3) (4) (5) (5) (5) (6) (7) (7) (7) (9) 
line 153: insert (7)
line 154: inorderTraversal
(3) (4) (5) (5) (5) (6) (7) (7) (7) (7) (9) 
line 155: nearestNeighbour (10)
(9) 
line 156: inorderTraversal
(3) (4) (5) (5) (5) (6) (7) (7) (7) (7) (9) 
line 157: insert (8)
line 158: inorderTraversal
(3) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) (9) 
line 159: clear
line 160: buildTree 16
(5) (10) (10) (6) (4) (3) (5) (3) (7) (4) (10) (5) (5) (2) (1) (5) 
line 161: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (7) (10) (10) (10) 
line 162: remove (4)
line 163: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (5) (5) (6) (7) (10) (10) (10) 
line 164: clear
line 165: buildTree 2
(10) (10) 
line 166: inorderTraversal
(10) (10) 
line 167: search (10)
TRUE
line 168: inorderTraversal
(10) (10) 
line 169: kNearestNeighbour 9 (6)
(10) (10) 
line 170: inorderTraversal
(10) (10) 
line 171: insert (5)
line 172: inorderTraversal
(5) (10) (10) 
line 173: insert (7)
line 174: inorderTraversal
(5) (7) (10) (10) 
line 175: remove (5)
line 176: inorderTraversal
(7) (10) (10) 
line 177: clear
line 178: buildTree 20
(5) (6) (7) (8) (8) (6) (5) (4) (3) (4) (5) (10) (4) (7) (1) (5) (5) (10) (1) (10) 
line 179: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (10) (10) (10) 
line 180: insert (8)
line 181: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 182: preorderTraversal
(5) (3) (1) (1) (4) (4) (4) (7) (5) (5) (5) (6) (5) (6) (8) (7) (10) (8) (8) (10) (10) 
line 183: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 184: nearestNeighbour (8)
(8) 
line 185: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 186: clear
line 187: buildTree 4
(4) (2) (5) (2) 
line 188: inorderTraversal
(2) (2) (4) (5) 
line 189: nearestNeighbour (6)
(5) 
line 190: inorderTraversal
(2) (2) (4) (5) 
line 191: insert (6)
line 192: inorderTraversal
(2) (2) (4) (5) (6) 
line 193: kNearestNeighbour 1 (1)
(2) 
line 194: inorderTraversal
(2) (2) (4) (5) (6) 
line 195: insert (2)
line 196: inorderTraversal
(2) (2) (2) (4) (5) (6) 
line 197: insert (1)
line 198: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) 
line 199: insert (10)
line 200: inorderTraversal
(1) (2) (2) (2) (4) (5) (6) (10) 
line 201: clear
line 202: buildTree 12
(5) (5) (1) (2) (3) (5) (7) (6) (1) (4) (2) (2) 
line 203: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (6) (7) 
line 204: kNearestNeighbour 2 (7)
(6) (7) 
line 205: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (6) (7) 
line 206: kNearestNeighbour 6 (4)
(3) (4) (5) (5) (5) (6) 
line 207: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (6) (7) 
line 208: insert (7)
line 209: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) 
line 210: remove (4)
line 211: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (6) (7) (7) 
line 212: kNearestNeighbour 5 (8)
(5) (5) (6) (7) (7) 
line 213: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (6) (7) (7) 
line 214: kNearestNeighbour 5 (6)
(5) (5) (6) (7) (7) 
line 215: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (6) (7) (7) 
line 216: clear
line 217: buildTree 17
(3) (4) (4) (5) (5) (1) (4) (6) (7) (10) (8) (10) (3) (7) (6) (10) (7) 
line 218: inorderTraversal
(1) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (10) (10) (10) 
line 219: remove (7)
line 220: inorderTraversal
(1) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (10) (10) (10) 
line 221: kNearestNeighbour 7 (8)
(6) (7) (7) (8) (10) (10) (10) 
line 222: inorderTraversal
(1) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (10) (10) (10) 
line 223: kNearestNeighbour 2 (2)
(1) (3) 
line 224: inorderTraversal
(1) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (10) (10) (10) 
line 225: clear
line 226: buildTree 19
(10) (8) (9) (1) (1) (5) (1) (10) (6) (3) (2) (1) (1) (4) (9) (7) (2) (1) (3) 
line 227: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (3) (4) (5) (6) (7) (8) (9) (9) (10) (10) 
line 228: insert (8)
line 229: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 230: kNearestNeighbour 2 (4)
(4) (5) 
line 231: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 232: search (5)
TRUE
line 233: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 234: insert (2)
line 235: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 236: kNearestNeighbour 2 (1)
(1) (1) 
line 237: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 238: nearestNeighbour (5)
(5) 
line 239: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 240: insert (5)
line 241: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 242: insert (7)
line 243: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 244: clear
line 245: buildTree 15
(1) (8) (6) (7) (7) (6) (3) (8) (1) (3) (7) (8) (10) (8) (7) 
line 246: inorderTraversal
(1) (1) (3) (3) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (10) 
line 247: remove (8)
line 248: inorderTraversal
(1) (1) (3) (3) (6) (6) (7) (7) (7) (7) (8) (8) (8) (10) 
line 249: nearestNeighbour (5)
(6) 
line 250: inorderTraversal
(1) (1) (3) (3) (6) (6) (7) (7) (7) (7) (8) (8) (8) (10) 
line 251: insert (6)
line 252: inorderTraversal
(1) (1) (3) (3) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (10) 
line 253: insert (3)
line 254: inorderTraversal
(1) (1) (3) (3) (3) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (10) 
line 255: kNearestNeighbour 6 (10)
(7) (7) (8) (8) (8) (10) 
line 256: inorderTraversal
(1) (1) (3) (3) (3) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (10) 
line 257: postorderTraversal
(1) (1) (3) (3) (6) (6) (6) (3) (7) (7) (7) (10) (8) (8) (8) (7) 
line 258: inorderTraversal
(1) (1) (3) (3) (3) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (10) 
line 259: clear
line 260: buildTree 19
(3) (2) (10) (3) (2) (6) (3) (1) (1) (2) (8) (9) (6) (10) (7) (8) (1) (7) (9) 
line 261: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 262: nearestNeighbour (10)
(10) 
line 263: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 264: kNearestNeighbour 1 (9)
(9) 
line 265: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 266: nearestNeighbour (8)
(8) 
line 267: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 268: kNearestNeighbour 4 (1)
(1) (1) (1) (2) 
line 269: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 270: kNearestNeighbour 3 (3)
(3) (3) (3) 
line 271: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 272: remove (10)
line 273: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 274: insert (5)
line 275: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 276: kNearestNeighbour 4 (3)
(2) (3) (3) (3) 
line 277: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 278: insert (4)
line 279: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 280: clear
line 281: buildTree 3
(4) (4) (3) 
line 282: inorderTraversal
(3) (4) (4) 
line 283: search (4)
TRUE
line 284: inorderTraversal
(3) (4) (4) 
line 285: kNearestNeighbour 8 (4)
(3) (4) (4) 
line 286: inorderTraversal
(3) (4) (4) 
line 287: kNearestNeighbour 9 (9)
(3) (4) (4) 
line 288: inorderTraversal
(3) (4) (4) 
line 289: insert (3)
line 290: inorderTraversal
(3) (3) (4) (4) 
line 291: nearestNeighbour (9)
(4) 
line 292: inorderTraversal
(3) (3) (4) (4) 
line 293: nearestNeighbour (10)
(4) 
line 294: inorderTraversal
(3) (3) (4) (4) 
line 295: nearestNeighbour (4)
(4) 
line 296: inorderTraversal
(3) (3) (4) (4) 
line 297: clear
line 298: buildTree 4
(9) (3) (5) (8) 
line 299: inorderTraversal
(3) (5) (8) (9) 
line 300: preorderTraversal
(5) (3) (8) (9) 
line 301: inorderTraversal
(3) (5) (8) (9) 
line 302: insert (3)
line 303: inorderTraversal
(3) (3) (5) (8) (9) 
line 304: remove (8)
line 305: inorderTraversal
(3) (3) (5) (9) 
line 306: insert (2)
line 307: inorderTraversal
(2) (3) (3) (5) (9) 
line 308: remove (5)
line 309: inorderTraversal
(2) (3) (3) (9) 
line 310: insert (2)
line 311: inorderTraversal
(2) (2) (3) (3) (9) 
line 312: nearestNeighbour (10)
(9) 
line 313: inorderTraversal
(2) (2) (3) (3) (9) 
line 314: insert (5)
line 315: inorderTraversal
(2) (2) (3) (3) (5) (9) 
line 316: insert (10)
line 317: inorderTraversal
(2) (2) (3) (3) (5) (9) (10) 
line 318: insert (9)
line 319: inorderTraversal
(2) (2) (3) (3) (5) (9) (9) (10) 
line 320: clear
line 321: buildTree 14
(10) (9) (7) (6) (3) (7) (5) (8) (9) (6) (9) (5) (3) (1) 
line 322: inorderTraversal
(1) (3) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 323: insert (10)
line 324: inorderTraversal
(1) (3) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 325: nearestNeighbour (5)
(5) 
line 326: inorderTraversal
(1) (3) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 327: nearestNeighbour (6)
(6) 
line 328: inorderTraversal
(1) (3) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 329: insert (2)
line 330: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 331: nearestNeighbour (2)
(2) 
line 332: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 333: nearestNeighbour (10)
(10) 
line 334: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 335: insert (6)
line 336: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 337: insert (9)
line 338: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 339: insert (2)
line 340: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 341: insert (8)
line 342: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 343: nearestNeighbour (2)
(2) 
line 344: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 345: remove (9)
line 346: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 347: remove (3)
line 348: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 349: insert (5)
line 350: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 351: remove (10)
line 352: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 353: remove (8)
line 354: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 355: nearestNeighbour (9)
(9) 
line 356: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 357: preorderTraversal
(6) (3) (1) (2) (2) (5) (5) (5) (8) (7) (6) (6) (7) (9) (9) (9) (10) 
line 358: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 359: insert (2)
line 360: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 361: insert (1)
line 362: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 363: insert (1)
line 364: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 365: insert (8)
line 366: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 367: clear
line 368: buildTree 8
(2) (3) (8) (3) (3) (10) (5) (9) 
line 369: inorderTraversal
(2) (3) (3) (3) (5) (8) (9) (10) 
line 370: nearestNeighbour (5)
(5) 
line 371: inorderTraversal
(2) (3) (3) (3) (5) (8) (9) (10) 
line 372: remove (3)
line 373: inorderTraversal
(2) (3) (3) (5) (8) (9) (10) 
line 374: preorderTraversal
(3) (2) (5) (3) (9) (8) (10) 
line 375: inorderTraversal
(2) (3) (3) (5) (8) (9) (10) 
line 376: nearestNeighbour (8)
(8) 
line 377: inorderTraversal
(2) (3) (3) (5) (8) (9) (10) 
line 378: nearestNeighbour (9)
(9) 
line 379: inorderTraversal
(2) (3) (3) (5) (8) (9) (10) 
line 380: kNearestNeighbour 10 (8)
(2) (3) (3) (5) (8) (9) (10) 
line 381: inorderTraversal
(2) (3) (3) (5) (8) (9) (10) 
line 382: kNearestNeighbour 8 (1)
(2) (3) (3) (5) (8) (9) (10) 
line 383: inorderTraversal
(2) (3) (3) (5) (8) (9) (10) 
line 384: insert (4)
line 385: inorderTraversal
(2) (3) (3) (4) (5) (8) (9) (10) 
line 386: search (3)
TRUE
line 387: inorderTraversal
(2) (3) (3) (4) (5) (8) (9) (10) 
line 388: nearestNeighbour (4)
(4) 
line 389: inorderTraversal
(2) (3) (3) (4) (5) (8) (9) (10) 
line 390: kNearestNeighbour 9 (5)
(2) (3) (3) (4) (5) (8) (9) (10) 
line 391: inorderTraversal
(2) (3) (3) (4) (5) (8) (9) (10) 
line 392: clear
line 393: buildTree 7
(1) (7) (7) (2) (1) (5) (10) 
line 394: inorderTraversal
(1) (1) (2) (5) (7) (7) (10) 
line 395: remove (6)
line 396: inorderTraversal
(1) (1) (2) (5) (7) (7) (10) 
line 397: insert (7)
line 398: inorderTraversal
(1) (1) (2) (5) (7) (7) (7) (10) 
line 399: kNearestNeighbour 5 (6)
(5) (7) (7) (7) (10) 
line 400: inorderTraversal
(1) (1) (2) (5) (7) (7) (7) (10) 
line 401: insert (10)
line 402: inorderTraversal
(1) (1) (2) (5) (7) (7) (7) (10) (10) 
line 403: insert (5)
line 404: inorderTraversal
(1) (1) (2) (5) (5) (7) (7) (7) (10) (10) 
line 405: clear
line 406: buildTree 13
(2) (9) (3) (7) (1) (4) (2) (9) (5) (8) (8) (8) (7) 
line 407: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (8) (8) (8) (9) (9) 
line 408: kNearestNeighbour 3 (8)
(8) (8) (8) 
line 409: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (8) (8) (8) (9) (9) 
line 410: nearestNeighbour (3)
(3) 
line 411: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (8) (8) (8) (9) (9) 
line 412: insert (8)
line 413: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 414: nearestNeighbour (3)
(3) 
line 415: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 416: nearestNeighbour (1)
(1) 
line 417: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 418: kNearestNeighbour 4 (1)
(1) (2) (2) (3) 
line 419: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 420: insert (4)
line 421: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 422: remove (4)
line 423: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 424: nodeCount_height_leafCount
nodeCount=14;height=6;leafCount=6
line 425: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 426: preorderTraversal
(7) (2) (1) (3) (2) (4) (5) (8) (7) (8) (9) (8) (8) (9) 
line 427: postorderTraversal
(1) (2) (5) (4) (3) (2) (7) (8) (8) (9) (9) (8) (8) (7) 
line 428: clear
