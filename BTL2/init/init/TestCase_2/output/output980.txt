line 1: k=1
line 2: kNearestNeighbour 3 (4)

line 3: inorderTraversal

line 4: nearestNeighbour (3)

line 5: inorderTraversal

line 6: kNearestNeighbour 9 (9)

line 7: inorderTraversal

line 8: preorderTraversal

line 9: inorderTraversal

line 10: search (9)
FALSE
line 11: inorderTraversal

line 12: clear
line 13: buildTree 1
(3) 
line 14: inorderTraversal
(3) 
line 15: search (3)
TRUE
line 16: inorderTraversal
(3) 
line 17: nearestNeighbour (7)
(3) 
line 18: inorderTraversal
(3) 
line 19: insert (7)
line 20: inorderTraversal
(3) (7) 
line 21: search (7)
TRUE
line 22: inorderTraversal
(3) (7) 
line 23: kNearestNeighbour 1 (7)
(7) 
line 24: inorderTraversal
(3) (7) 
line 25: postorderTraversal
(7) (3) 
line 26: inorderTraversal
(3) (7) 
line 27: insert (1)
line 28: inorderTraversal
(1) (3) (7) 
line 29: insert (9)
line 30: inorderTraversal
(1) (3) (7) (9) 
line 31: insert (10)
line 32: inorderTraversal
(1) (3) (7) (9) (10) 
line 33: insert (5)
line 34: inorderTraversal
(1) (3) (5) (7) (9) (10) 
line 35: kNearestNeighbour 10 (7)
(1) (3) (5) (7) (9) (10) 
line 36: inorderTraversal
(1) (3) (5) (7) (9) (10) 
line 37: clear
line 38: buildTree 16
(10) (10) (3) (1) (9) (1) (2) (7) (6) (4) (8) (9) (9) (6) (7) (5) 
line 39: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 40: search (5)
TRUE
line 41: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 42: nearestNeighbour (6)
(6) 
line 43: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 44: nearestNeighbour (7)
(7) 
line 45: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 46: remove (4)
line 47: inorderTraversal
(1) (1) (2) (3) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 48: insert (8)
line 49: inorderTraversal
(1) (1) (2) (3) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 50: insert (2)
line 51: inorderTraversal
(1) (1) (2) (2) (3) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 52: insert (4)
line 53: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 54: insert (1)
line 55: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 56: kNearestNeighbour 2 (7)
(7) (7) 
line 57: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 58: insert (1)
line 59: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 60: kNearestNeighbour 7 (3)
(1) (1) (2) (2) (3) (4) (5) 
line 61: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 62: search (7)
TRUE
line 63: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 64: clear
line 65: buildTree 3
(8) (2) (7) 
line 66: inorderTraversal
(2) (7) (8) 
line 67: kNearestNeighbour 8 (4)
(2) (7) (8) 
line 68: inorderTraversal
(2) (7) (8) 
line 69: nearestNeighbour (2)
(2) 
line 70: inorderTraversal
(2) (7) (8) 
line 71: nearestNeighbour (5)
(7) 
line 72: inorderTraversal
(2) (7) (8) 
line 73: insert (7)
line 74: inorderTraversal
(2) (7) (7) (8) 
line 75: nearestNeighbour (8)
(8) 
line 76: inorderTraversal
(2) (7) (7) (8) 
line 77: nearestNeighbour (4)
(2) 
line 78: inorderTraversal
(2) (7) (7) (8) 
line 79: insert (3)
line 80: inorderTraversal
(2) (3) (7) (7) (8) 
line 81: remove (7)
line 82: inorderTraversal
(2) (3) (7) (8) 
line 83: insert (3)
line 84: inorderTraversal
(2) (3) (3) (7) (8) 
line 85: nearestNeighbour (2)
(2) 
line 86: inorderTraversal
(2) (3) (3) (7) (8) 
line 87: insert (6)
line 88: inorderTraversal
(2) (3) (3) (6) (7) (8) 
line 89: insert (9)
line 90: inorderTraversal
(2) (3) (3) (6) (7) (8) (9) 
line 91: nearestNeighbour (10)
(9) 
line 92: inorderTraversal
(2) (3) (3) (6) (7) (8) (9) 
line 93: clear
line 94: buildTree 6
(4) (9) (1) (5) (3) (5) 
line 95: inorderTraversal
(1) (3) (4) (5) (5) (9) 
line 96: nearestNeighbour (4)
(4) 
line 97: inorderTraversal
(1) (3) (4) (5) (5) (9) 
line 98: nearestNeighbour (10)
(9) 
line 99: inorderTraversal
(1) (3) (4) (5) (5) (9) 
line 100: kNearestNeighbour 3 (3)
(1) (3) (4) 
line 101: inorderTraversal
(1) (3) (4) (5) (5) (9) 
line 102: clear
line 103: buildTree 17
(8) (5) (7) (2) (3) (3) (3) (1) (3) (2) (6) (5) (6) (10) (6) (8) (6) 
line 104: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (10) 
line 105: remove (3)
line 106: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (10) 
line 107: nearestNeighbour (1)
(1) 
line 108: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (10) 
line 109: nodeCount_height_leafCount
nodeCount=16;height=6;leafCount=6
line 110: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (10) 
line 111: insert (1)
line 112: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (10) 
line 113: clear
line 114: buildTree 3
(5) (1) (9) 
line 115: inorderTraversal
(1) (5) (9) 
line 116: insert (10)
line 117: inorderTraversal
(1) (5) (9) (10) 
line 118: insert (6)
line 119: inorderTraversal
(1) (5) (6) (9) (10) 
line 120: insert (9)
line 121: inorderTraversal
(1) (5) (6) (9) (9) (10) 
line 122: insert (8)
line 123: inorderTraversal
(1) (5) (6) (8) (9) (9) (10) 
line 124: nearestNeighbour (5)
(5) 
line 125: inorderTraversal
(1) (5) (6) (8) (9) (9) (10) 
line 126: insert (6)
line 127: inorderTraversal
(1) (5) (6) (6) (8) (9) (9) (10) 
line 128: nearestNeighbour (9)
(9) 
line 129: inorderTraversal
(1) (5) (6) (6) (8) (9) (9) (10) 
line 130: insert (5)
line 131: inorderTraversal
(1) (5) (5) (6) (6) (8) (9) (9) (10) 
line 132: insert (1)
line 133: inorderTraversal
(1) (1) (5) (5) (6) (6) (8) (9) (9) (10) 
line 134: kNearestNeighbour 6 (9)
(6) (6) (8) (9) (9) (10) 
line 135: inorderTraversal
(1) (1) (5) (5) (6) (6) (8) (9) (9) (10) 
line 136: insert (3)
line 137: inorderTraversal
(1) (1) (3) (5) (5) (6) (6) (8) (9) (9) (10) 
line 138: nearestNeighbour (10)
(10) 
line 139: inorderTraversal
(1) (1) (3) (5) (5) (6) (6) (8) (9) (9) (10) 
line 140: kNearestNeighbour 10 (4)
(1) (1) (3) (5) (5) (6) (6) (8) (9) (9) 
line 141: inorderTraversal
(1) (1) (3) (5) (5) (6) (6) (8) (9) (9) (10) 
line 142: kNearestNeighbour 9 (1)
(1) (1) (3) (5) (5) (6) (6) (8) (9) 
line 143: inorderTraversal
(1) (1) (3) (5) (5) (6) (6) (8) (9) (9) (10) 
line 144: nearestNeighbour (3)
(3) 
line 145: inorderTraversal
(1) (1) (3) (5) (5) (6) (6) (8) (9) (9) (10) 
line 146: remove (1)
line 147: inorderTraversal
(1) (3) (5) (5) (6) (6) (8) (9) (9) (10) 
line 148: kNearestNeighbour 4 (1)
(1) (3) (5) (5) 
line 149: inorderTraversal
(1) (3) (5) (5) (6) (6) (8) (9) (9) (10) 
line 150: nearestNeighbour (6)
(6) 
line 151: inorderTraversal
(1) (3) (5) (5) (6) (6) (8) (9) (9) (10) 
line 152: insert (8)
line 153: inorderTraversal
(1) (3) (5) (5) (6) (6) (8) (8) (9) (9) (10) 
line 154: kNearestNeighbour 3 (10)
(9) (9) (10) 
line 155: inorderTraversal
(1) (3) (5) (5) (6) (6) (8) (8) (9) (9) (10) 
line 156: postorderTraversal
(3) (1) (5) (6) (8) (8) (6) (9) (10) (9) (5) 
line 157: inorderTraversal
(1) (3) (5) (5) (6) (6) (8) (8) (9) (9) (10) 
line 158: insert (6)
line 159: inorderTraversal
(1) (3) (5) (5) (6) (6) (6) (8) (8) (9) (9) (10) 
line 160: kNearestNeighbour 4 (1)
(1) (3) (5) (5) 
line 161: inorderTraversal
(1) (3) (5) (5) (6) (6) (6) (8) (8) (9) (9) (10) 
line 162: nearestNeighbour (6)
(6) 
line 163: inorderTraversal
(1) (3) (5) (5) (6) (6) (6) (8) (8) (9) (9) (10) 
line 164: remove (5)
line 165: inorderTraversal
(1) (3) (5) (6) (6) (6) (8) (8) (9) (9) (10) 
line 166: nearestNeighbour (5)
(5) 
line 167: inorderTraversal
(1) (3) (5) (6) (6) (6) (8) (8) (9) (9) (10) 
line 168: remove (5)
line 169: inorderTraversal
(1) (3) (6) (6) (6) (8) (8) (9) (9) (10) 
line 170: kNearestNeighbour 8 (1)
(1) (3) (6) (6) (6) (8) (8) (9) 
line 171: inorderTraversal
(1) (3) (6) (6) (6) (8) (8) (9) (9) (10) 
line 172: insert (10)
line 173: inorderTraversal
(1) (3) (6) (6) (6) (8) (8) (9) (9) (10) (10) 
line 174: insert (8)
line 175: inorderTraversal
(1) (3) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) 
line 176: kNearestNeighbour 9 (4)
(1) (3) (6) (6) (6) (8) (8) (8) (9) 
line 177: inorderTraversal
(1) (3) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) 
line 178: nearestNeighbour (4)
(3) 
line 179: inorderTraversal
(1) (3) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) 
line 180: remove (10)
line 181: inorderTraversal
(1) (3) (6) (6) (6) (8) (8) (8) (9) (9) (10) 
line 182: insert (1)
line 183: inorderTraversal
(1) (1) (3) (6) (6) (6) (8) (8) (8) (9) (9) (10) 
line 184: remove (1)
line 185: inorderTraversal
(1) (3) (6) (6) (6) (8) (8) (8) (9) (9) (10) 
line 186: remove (5)
line 187: inorderTraversal
(1) (3) (6) (6) (6) (8) (8) (8) (9) (9) (10) 
line 188: insert (4)
line 189: inorderTraversal
(1) (3) (4) (6) (6) (6) (8) (8) (8) (9) (9) (10) 
line 190: nearestNeighbour (5)
(4) 
line 191: inorderTraversal
(1) (3) (4) (6) (6) (6) (8) (8) (8) (9) (9) (10) 
line 192: insert (5)
line 193: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) 
line 194: clear
line 195: buildTree 18
(5) (8) (7) (5) (3) (6) (8) (3) (4) (6) (6) (3) (2) (9) (5) (4) (6) (7) 
line 196: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 197: nearestNeighbour (6)
(6) 
line 198: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 199: nearestNeighbour (4)
(4) 
line 200: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 201: kNearestNeighbour 2 (3)
(3) (3) 
line 202: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 203: insert (2)
line 204: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 205: nearestNeighbour (6)
(6) 
line 206: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 207: nearestNeighbour (10)
(9) 
line 208: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 209: insert (6)
line 210: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) 
line 211: clear
line 212: buildTree 6
(7) (5) (10) (2) (5) (7) 
line 213: inorderTraversal
(2) (5) (5) (7) (7) (10) 
line 214: remove (2)
line 215: inorderTraversal
(5) (5) (7) (7) (10) 
line 216: nearestNeighbour (4)
(5) 
line 217: inorderTraversal
(5) (5) (7) (7) (10) 
line 218: insert (5)
line 219: inorderTraversal
(5) (5) (5) (7) (7) (10) 
line 220: insert (3)
line 221: inorderTraversal
(3) (5) (5) (5) (7) (7) (10) 
line 222: preorderTraversal
(5) (3) (7) (5) (5) (7) (10) 
line 223: inorderTraversal
(3) (5) (5) (5) (7) (7) (10) 
line 224: nearestNeighbour (3)
(3) 
line 225: inorderTraversal
(3) (5) (5) (5) (7) (7) (10) 
line 226: clear
line 227: buildTree 2
(3) (2) 
line 228: inorderTraversal
(2) (3) 
line 229: search (2)
TRUE
line 230: inorderTraversal
(2) (3) 
line 231: kNearestNeighbour 10 (9)
(2) (3) 
line 232: inorderTraversal
(2) (3) 
line 233: insert (8)
line 234: inorderTraversal
(2) (3) (8) 
line 235: insert (8)
line 236: inorderTraversal
(2) (3) (8) (8) 
line 237: kNearestNeighbour 9 (7)
(2) (3) (8) (8) 
line 238: inorderTraversal
(2) (3) (8) (8) 
line 239: remove (2)
line 240: inorderTraversal
(3) (8) (8) 
line 241: nearestNeighbour (3)
(3) 
line 242: inorderTraversal
(3) (8) (8) 
line 243: kNearestNeighbour 4 (2)
(3) (8) (8) 
line 244: inorderTraversal
(3) (8) (8) 
line 245: insert (10)
line 246: inorderTraversal
(3) (8) (8) (10) 
line 247: insert (9)
line 248: inorderTraversal
(3) (8) (8) (9) (10) 
line 249: clear
line 250: buildTree 6
(6) (8) (6) (3) (10) (3) 
line 251: inorderTraversal
(3) (3) (6) (6) (8) (10) 
line 252: insert (2)
line 253: inorderTraversal
(2) (3) (3) (6) (6) (8) (10) 
line 254: nearestNeighbour (5)
(6) 
line 255: inorderTraversal
(2) (3) (3) (6) (6) (8) (10) 
line 256: insert (5)
line 257: inorderTraversal
(2) (3) (3) (5) (6) (6) (8) (10) 
line 258: insert (8)
line 259: inorderTraversal
(2) (3) (3) (5) (6) (6) (8) (8) (10) 
line 260: clear
line 261: buildTree 6
(1) (4) (2) (6) (9) (3) 
line 262: inorderTraversal
(1) (2) (3) (4) (6) (9) 
line 263: kNearestNeighbour 2 (6)
(4) (6) 
line 264: inorderTraversal
(1) (2) (3) (4) (6) (9) 
line 265: insert (10)
line 266: inorderTraversal
(1) (2) (3) (4) (6) (9) (10) 
line 267: kNearestNeighbour 3 (6)
(4) (6) (9) 
line 268: inorderTraversal
(1) (2) (3) (4) (6) (9) (10) 
line 269: insert (6)
line 270: inorderTraversal
(1) (2) (3) (4) (6) (6) (9) (10) 
line 271: kNearestNeighbour 4 (5)
(3) (4) (6) (6) 
line 272: inorderTraversal
(1) (2) (3) (4) (6) (6) (9) (10) 
line 273: kNearestNeighbour 5 (10)
(4) (6) (6) (9) (10) 
line 274: inorderTraversal
(1) (2) (3) (4) (6) (6) (9) (10) 
line 275: kNearestNeighbour 6 (8)
(3) (4) (6) (6) (9) (10) 
line 276: inorderTraversal
(1) (2) (3) (4) (6) (6) (9) (10) 
line 277: nearestNeighbour (7)
(6) 
line 278: inorderTraversal
(1) (2) (3) (4) (6) (6) (9) (10) 
line 279: nearestNeighbour (9)
(9) 
line 280: inorderTraversal
(1) (2) (3) (4) (6) (6) (9) (10) 
line 281: clear
line 282: buildTree 5
(8) (5) (9) (9) (9) 
line 283: inorderTraversal
(5) (8) (9) (9) (9) 
line 284: insert (4)
line 285: inorderTraversal
(4) (5) (8) (9) (9) (9) 
line 286: nearestNeighbour (10)
(9) 
line 287: inorderTraversal
(4) (5) (8) (9) (9) (9) 
line 288: insert (7)
line 289: inorderTraversal
(4) (5) (7) (8) (9) (9) (9) 
line 290: remove (5)
line 291: inorderTraversal
(4) (7) (8) (9) (9) (9) 
line 292: nearestNeighbour (5)
(4) 
line 293: inorderTraversal
(4) (7) (8) (9) (9) (9) 
line 294: insert (1)
line 295: inorderTraversal
(1) (4) (7) (8) (9) (9) (9) 
line 296: kNearestNeighbour 7 (4)
(1) (4) (7) (8) (9) (9) (9) 
line 297: inorderTraversal
(1) (4) (7) (8) (9) (9) (9) 
line 298: clear
line 299: buildTree 9
(1) (6) (2) (6) (4) (6) (2) (5) (1) 
line 300: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (6) (6) 
line 301: insert (7)
line 302: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (6) (6) (7) 
line 303: insert (1)
line 304: inorderTraversal
(1) (1) (1) (2) (2) (4) (5) (6) (6) (6) (7) 
line 305: kNearestNeighbour 4 (7)
(6) (6) (6) (7) 
line 306: inorderTraversal
(1) (1) (1) (2) (2) (4) (5) (6) (6) (6) (7) 
line 307: nearestNeighbour (3)
(2) 
line 308: inorderTraversal
(1) (1) (1) (2) (2) (4) (5) (6) (6) (6) (7) 
line 309: remove (4)
line 310: inorderTraversal
(1) (1) (1) (2) (2) (5) (6) (6) (6) (7) 
line 311: nearestNeighbour (1)
(1) 
line 312: inorderTraversal
(1) (1) (1) (2) (2) (5) (6) (6) (6) (7) 
line 313: insert (5)
line 314: inorderTraversal
(1) (1) (1) (2) (2) (5) (5) (6) (6) (6) (7) 
line 315: nodeCount_height_leafCount
nodeCount=11;height=5;leafCount=4
line 316: inorderTraversal
(1) (1) (1) (2) (2) (5) (5) (6) (6) (6) (7) 
line 317: nearestNeighbour (1)
(1) 
line 318: inorderTraversal
(1) (1) (1) (2) (2) (5) (5) (6) (6) (6) (7) 
line 319: insert (2)
line 320: inorderTraversal
(1) (1) (1) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 321: insert (1)
line 322: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 323: insert (1)
line 324: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 325: insert (2)
line 326: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 327: nearestNeighbour (10)
(7) 
line 328: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 329: remove (1)
line 330: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 331: kNearestNeighbour 7 (8)
(2) (5) (5) (6) (6) (6) (7) 
line 332: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 333: nearestNeighbour (9)
(7) 
line 334: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 335: nearestNeighbour (3)
(2) 
line 336: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 337: remove (2)
line 338: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 339: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=4
line 340: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (5) (5) (6) (6) (6) (7) 
line 341: insert (7)
line 342: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (5) (5) (6) (6) (6) (7) (7) 
line 343: insert (3)
line 344: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (7) (7) 
line 345: postorderTraversal
(1) (1) (1) (3) (2) (2) (2) (1) (5) (7) (7) (6) (6) (6) (5) 
line 346: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (7) (7) 
line 347: nearestNeighbour (1)
(1) 
line 348: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (7) (7) 
line 349: insert (8)
line 350: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (7) (7) (8) 
line 351: clear
line 352: buildTree 4
(6) (7) (9) (3) 
line 353: inorderTraversal
(3) (6) (7) (9) 
line 354: insert (7)
line 355: inorderTraversal
(3) (6) (7) (7) (9) 
line 356: kNearestNeighbour 9 (8)
(3) (6) (7) (7) (9) 
line 357: inorderTraversal
(3) (6) (7) (7) (9) 
line 358: clear
line 359: buildTree 13
(3) (3) (2) (1) (8) (4) (6) (5) (3) (6) (8) (1) (3) 
line 360: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (5) (6) (6) (8) (8) 
line 361: remove (6)
line 362: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (5) (6) (8) (8) 
line 363: kNearestNeighbour 6 (9)
(3) (4) (5) (6) (8) (8) 
line 364: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (5) (6) (8) (8) 
line 365: insert (8)
line 366: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (5) (6) (8) (8) (8) 
line 367: nearestNeighbour (7)
(8) 
line 368: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (5) (6) (8) (8) (8) 
line 369: nearestNeighbour (2)
(2) 
line 370: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (5) (6) (8) (8) (8) 
line 371: clear
line 372: buildTree 13
(10) (7) (3) (5) (2) (6) (3) (5) (3) (4) (1) (2) (3) 
line 373: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (10) 
line 374: insert (9)
line 375: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (9) (10) 
line 376: insert (9)
line 377: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (9) (9) (10) 
line 378: insert (10)
line 379: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (9) (9) (10) (10) 
line 380: insert (4)
line 381: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (9) (9) (10) (10) 
line 382: insert (2)
line 383: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (9) (9) (10) (10) 
line 384: nodeCount_height_leafCount
nodeCount=18;height=7;leafCount=6
line 385: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (9) (9) (10) (10) 
line 386: nearestNeighbour (6)
(6) 
line 387: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (9) (9) (10) (10) 
line 388: kNearestNeighbour 6 (7)
(5) (5) (6) (7) (9) (9) 
line 389: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (9) (9) (10) (10) 
line 390: insert (1)
line 391: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (9) (9) (10) (10) 
line 392: insert (4)
line 393: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (9) (9) (10) (10) 
line 394: clear
line 395: buildTree 4
(9) (6) (7) (10) 
line 396: inorderTraversal
(6) (7) (9) (10) 
line 397: insert (10)
line 398: inorderTraversal
(6) (7) (9) (10) (10) 
line 399: nearestNeighbour (2)
(6) 
line 400: inorderTraversal
(6) (7) (9) (10) (10) 
line 401: nearestNeighbour (3)
(6) 
line 402: inorderTraversal
(6) (7) (9) (10) (10) 
line 403: kNearestNeighbour 6 (9)
(6) (7) (9) (10) (10) 
line 404: inorderTraversal
(6) (7) (9) (10) (10) 
line 405: clear
line 406: buildTree 2
(7) (5) 
line 407: inorderTraversal
(5) (7) 
line 408: preorderTraversal
(5) (7) 
line 409: inorderTraversal
(5) (7) 
line 410: kNearestNeighbour 1 (4)
(5) 
line 411: inorderTraversal
(5) (7) 
line 412: clear
line 413: buildTree 6
(5) (3) (8) (10) (5) (8) 
line 414: inorderTraversal
(3) (5) (5) (8) (8) (10) 
line 415: remove (8)
line 416: inorderTraversal
(3) (5) (5) (8) (10) 
line 417: insert (8)
line 418: inorderTraversal
(3) (5) (5) (8) (8) (10) 
line 419: insert (10)
line 420: inorderTraversal
(3) (5) (5) (8) (8) (10) (10) 
line 421: nodeCount_height_leafCount
nodeCount=7;height=4;leafCount=4
line 422: inorderTraversal
(3) (5) (5) (8) (8) (10) (10) 
line 423: preorderTraversal
(5) (3) (8) (5) (10) (8) (10) 
line 424: postorderTraversal
(3) (5) (8) (10) (10) (8) (5) 
line 425: clear
