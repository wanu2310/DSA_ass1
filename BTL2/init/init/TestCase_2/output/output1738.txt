line 1: k=1
line 2: clear
line 3: buildTree 16
(7) (3) (9) (8) (6) (4) (1) (1) (4) (6) (6) (6) (1) (6) (1) (10) 
line 4: inorderTraversal
(1) (1) (1) (1) (3) (4) (4) (6) (6) (6) (6) (6) (7) (8) (9) (10) 
line 5: clear
line 6: buildTree 4
(5) (3) (2) (7) 
line 7: inorderTraversal
(2) (3) (5) (7) 
line 8: clear
line 9: buildTree 9
(9) (5) (1) (9) (2) (5) (8) (1) (4) 
line 10: inorderTraversal
(1) (1) (2) (4) (5) (5) (8) (9) (9) 
line 11: remove (5)
line 12: inorderTraversal
(1) (1) (2) (4) (5) (8) (9) (9) 
line 13: kNearestNeighbour 1 (3)
(4) 
line 14: inorderTraversal
(1) (1) (2) (4) (5) (8) (9) (9) 
line 15: remove (1)
line 16: inorderTraversal
(1) (2) (4) (5) (8) (9) (9) 
line 17: insert (7)
line 18: inorderTraversal
(1) (2) (4) (5) (7) (8) (9) (9) 
line 19: search (4)
TRUE
line 20: inorderTraversal
(1) (2) (4) (5) (7) (8) (9) (9) 
line 21: insert (9)
line 22: inorderTraversal
(1) (2) (4) (5) (7) (8) (9) (9) (9) 
line 23: nearestNeighbour (2)
(2) 
line 24: inorderTraversal
(1) (2) (4) (5) (7) (8) (9) (9) (9) 
line 25: clear
line 26: buildTree 9
(2) (3) (8) (5) (7) (1) (2) (2) (8) 
line 27: inorderTraversal
(1) (2) (2) (2) (3) (5) (7) (8) (8) 
line 28: nodeCount_height_leafCount
nodeCount=9;height=4;leafCount=4
line 29: inorderTraversal
(1) (2) (2) (2) (3) (5) (7) (8) (8) 
line 30: clear
line 31: buildTree 15
(8) (2) (4) (4) (3) (7) (1) (7) (5) (3) (8) (3) (5) (1) (1) 
line 32: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (7) (7) (8) (8) 
line 33: insert (8)
line 34: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (7) (7) (8) (8) (8) 
line 35: nearestNeighbour (5)
(5) 
line 36: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (7) (7) (8) (8) (8) 
line 37: insert (5)
line 38: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) 
line 39: nearestNeighbour (2)
(2) 
line 40: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) 
line 41: remove (3)
line 42: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) 
line 43: nearestNeighbour (10)
(8) 
line 44: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) 
line 45: remove (9)
line 46: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) 
line 47: insert (10)
line 48: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) (10) 
line 49: kNearestNeighbour 9 (4)
(2) (3) (3) (4) (4) (5) (5) (5) (7) 
line 50: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) (10) 
line 51: insert (2)
line 52: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) (10) 
line 53: insert (6)
line 54: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 55: insert (5)
line 56: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 57: nearestNeighbour (7)
(7) 
line 58: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 59: insert (5)
line 60: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 61: clear
line 62: buildTree 2
(8) (10) 
line 63: inorderTraversal
(8) (10) 
line 64: kNearestNeighbour 3 (6)
(8) (10) 
line 65: inorderTraversal
(8) (10) 
line 66: insert (3)
line 67: inorderTraversal
(3) (8) (10) 
line 68: nearestNeighbour (10)
(10) 
line 69: inorderTraversal
(3) (8) (10) 
line 70: insert (3)
line 71: inorderTraversal
(3) (3) (8) (10) 
line 72: insert (7)
line 73: inorderTraversal
(3) (3) (7) (8) (10) 
line 74: insert (4)
line 75: inorderTraversal
(3) (3) (4) (7) (8) (10) 
line 76: postorderTraversal
(4) (7) (3) (3) (10) (8) 
line 77: inorderTraversal
(3) (3) (4) (7) (8) (10) 
line 78: insert (7)
line 79: inorderTraversal
(3) (3) (4) (7) (7) (8) (10) 
line 80: remove (7)
line 81: inorderTraversal
(3) (3) (4) (7) (8) (10) 
line 82: clear
line 83: buildTree 9
(6) (5) (8) (4) (2) (4) (3) (6) (4) 
line 84: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (6) (8) 
line 85: insert (5)
line 86: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (6) (6) (8) 
line 87: insert (1)
line 88: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (8) 
line 89: nearestNeighbour (6)
(6) 
line 90: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (8) 
line 91: clear
line 92: buildTree 6
(10) (4) (3) (9) (3) (3) 
line 93: inorderTraversal
(3) (3) (3) (4) (9) (10) 
line 94: nearestNeighbour (5)
(4) 
line 95: inorderTraversal
(3) (3) (3) (4) (9) (10) 
line 96: nearestNeighbour (7)
(9) 
line 97: inorderTraversal
(3) (3) (3) (4) (9) (10) 
line 98: nearestNeighbour (4)
(4) 
line 99: inorderTraversal
(3) (3) (3) (4) (9) (10) 
line 100: insert (3)
line 101: inorderTraversal
(3) (3) (3) (3) (4) (9) (10) 
line 102: insert (7)
line 103: inorderTraversal
(3) (3) (3) (3) (4) (7) (9) (10) 
line 104: postorderTraversal
(3) (3) (3) (7) (10) (9) (4) (3) 
line 105: inorderTraversal
(3) (3) (3) (3) (4) (7) (9) (10) 
line 106: insert (4)
line 107: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (9) (10) 
line 108: kNearestNeighbour 10 (9)
(3) (3) (3) (3) (4) (4) (7) (9) (10) 
line 109: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (9) (10) 
line 110: nearestNeighbour (5)
(4) 
line 111: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (9) (10) 
line 112: kNearestNeighbour 10 (6)
(3) (3) (3) (3) (4) (4) (7) (9) (10) 
line 113: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (9) (10) 
line 114: kNearestNeighbour 5 (4)
(3) (3) (3) (4) (4) 
line 115: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (9) (10) 
line 116: insert (8)
line 117: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (8) (9) (10) 
line 118: nodeCount_height_leafCount
nodeCount=10;height=5;leafCount=4
line 119: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (8) (9) (10) 
line 120: kNearestNeighbour 5 (4)
(3) (3) (3) (4) (4) 
line 121: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (8) (9) (10) 
line 122: insert (7)
line 123: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (7) (8) (9) (10) 
line 124: nearestNeighbour (3)
(3) 
line 125: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (7) (8) (9) (10) 
line 126: kNearestNeighbour 8 (4)
(3) (3) (3) (3) (4) (4) (7) (7) 
line 127: inorderTraversal
(3) (3) (3) (3) (4) (4) (7) (7) (8) (9) (10) 
line 128: clear
line 129: buildTree 10
(10) (7) (8) (7) (9) (8) (5) (10) (3) (8) 
line 130: inorderTraversal
(3) (5) (7) (7) (8) (8) (8) (9) (10) (10) 
line 131: nearestNeighbour (4)
(3) 
line 132: inorderTraversal
(3) (5) (7) (7) (8) (8) (8) (9) (10) (10) 
line 133: clear
line 134: buildTree 16
(9) (6) (5) (7) (5) (10) (10) (10) (9) (3) (7) (3) (2) (1) (7) (5) 
line 135: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 136: insert (5)
line 137: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 138: nearestNeighbour (5)
(5) 
line 139: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 140: clear
line 141: buildTree 18
(9) (10) (1) (5) (9) (4) (6) (7) (3) (7) (7) (1) (8) (3) (4) (1) (3) (10) 
line 142: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 143: nearestNeighbour (1)
(1) 
line 144: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 145: insert (4)
line 146: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 147: insert (8)
line 148: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 149: insert (2)
line 150: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 151: remove (9)
line 152: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 153: insert (4)
line 154: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 155: nearestNeighbour (9)
(9) 
line 156: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 157: kNearestNeighbour 8 (8)
(7) (7) (7) (8) (8) (9) (10) (10) 
line 158: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 159: insert (2)
line 160: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 161: insert (2)
line 162: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 163: nodeCount_height_leafCount
nodeCount=23;height=8;leafCount=7
line 164: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 165: insert (5)
line 166: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 167: postorderTraversal
(2) (2) (2) (1) (1) (1) (3) (4) (4) (4) (4) (3) (3) (5) (6) (7) (7) (7) (8) (10) (10) (9) (8) (5) 
line 168: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 169: clear
line 170: buildTree 2
(8) (2) 
line 171: inorderTraversal
(2) (8) 
line 172: insert (6)
line 173: inorderTraversal
(2) (6) (8) 
line 174: kNearestNeighbour 9 (5)
(2) (6) (8) 
line 175: inorderTraversal
(2) (6) (8) 
line 176: insert (10)
line 177: inorderTraversal
(2) (6) (8) (10) 
line 178: insert (5)
line 179: inorderTraversal
(2) (5) (6) (8) (10) 
line 180: insert (5)
line 181: inorderTraversal
(2) (5) (5) (6) (8) (10) 
line 182: nearestNeighbour (2)
(2) 
line 183: inorderTraversal
(2) (5) (5) (6) (8) (10) 
line 184: clear
line 185: buildTree 10
(6) (10) (2) (2) (9) (6) (9) (2) (10) (6) 
line 186: inorderTraversal
(2) (2) (2) (6) (6) (6) (9) (9) (10) (10) 
line 187: remove (9)
line 188: inorderTraversal
(2) (2) (2) (6) (6) (6) (9) (10) (10) 
line 189: nearestNeighbour (6)
(6) 
line 190: inorderTraversal
(2) (2) (2) (6) (6) (6) (9) (10) (10) 
line 191: kNearestNeighbour 7 (9)
(2) (6) (6) (6) (9) (10) (10) 
line 192: inorderTraversal
(2) (2) (2) (6) (6) (6) (9) (10) (10) 
line 193: insert (2)
line 194: inorderTraversal
(2) (2) (2) (2) (6) (6) (6) (9) (10) (10) 
line 195: insert (5)
line 196: inorderTraversal
(2) (2) (2) (2) (5) (6) (6) (6) (9) (10) (10) 
line 197: kNearestNeighbour 8 (9)
(2) (5) (6) (6) (6) (9) (10) (10) 
line 198: inorderTraversal
(2) (2) (2) (2) (5) (6) (6) (6) (9) (10) (10) 
line 199: insert (2)
line 200: inorderTraversal
(2) (2) (2) (2) (2) (5) (6) (6) (6) (9) (10) (10) 
line 201: kNearestNeighbour 4 (10)
(6) (9) (10) (10) 
line 202: inorderTraversal
(2) (2) (2) (2) (2) (5) (6) (6) (6) (9) (10) (10) 
line 203: nearestNeighbour (8)
(9) 
line 204: inorderTraversal
(2) (2) (2) (2) (2) (5) (6) (6) (6) (9) (10) (10) 
line 205: kNearestNeighbour 5 (7)
(5) (6) (6) (6) (9) 
line 206: inorderTraversal
(2) (2) (2) (2) (2) (5) (6) (6) (6) (9) (10) (10) 
line 207: postorderTraversal
(2) (5) (2) (2) (2) (2) (6) (6) (10) (10) (9) (6) 
line 208: inorderTraversal
(2) (2) (2) (2) (2) (5) (6) (6) (6) (9) (10) (10) 
line 209: insert (1)
line 210: inorderTraversal
(1) (2) (2) (2) (2) (2) (5) (6) (6) (6) (9) (10) (10) 
line 211: clear
line 212: buildTree 19
(9) (2) (4) (6) (5) (7) (8) (2) (6) (3) (9) (7) (10) (9) (8) (7) (9) (7) (6) 
line 213: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 214: insert (1)
line 215: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 216: insert (3)
line 217: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 218: kNearestNeighbour 10 (2)
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) 
line 219: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 220: nearestNeighbour (6)
(6) 
line 221: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 222: insert (9)
line 223: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 224: nodeCount_height_leafCount
nodeCount=22;height=8;leafCount=7
line 225: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 226: kNearestNeighbour 2 (9)
(9) (9) 
line 227: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 228: insert (7)
line 229: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 230: kNearestNeighbour 6 (1)
(1) (2) (2) (3) (3) (4) 
line 231: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 232: nearestNeighbour (9)
(9) 
line 233: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 234: clear
line 235: buildTree 9
(5) (8) (10) (5) (10) (1) (4) (6) (1) 
line 236: inorderTraversal
(1) (1) (4) (5) (5) (6) (8) (10) (10) 
line 237: remove (8)
line 238: inorderTraversal
(1) (1) (4) (5) (5) (6) (10) (10) 
line 239: insert (10)
line 240: inorderTraversal
(1) (1) (4) (5) (5) (6) (10) (10) (10) 
line 241: insert (1)
line 242: inorderTraversal
(1) (1) (1) (4) (5) (5) (6) (10) (10) (10) 
line 243: insert (8)
line 244: inorderTraversal
(1) (1) (1) (4) (5) (5) (6) (8) (10) (10) (10) 
line 245: insert (5)
line 246: inorderTraversal
(1) (1) (1) (4) (5) (5) (5) (6) (8) (10) (10) (10) 
line 247: remove (5)
line 248: inorderTraversal
(1) (1) (1) (4) (5) (5) (6) (8) (10) (10) (10) 
line 249: insert (4)
line 250: inorderTraversal
(1) (1) (1) (4) (4) (5) (5) (6) (8) (10) (10) (10) 
line 251: postorderTraversal
(1) (4) (4) (1) (1) (8) (6) (5) (10) (10) (10) (5) 
line 252: inorderTraversal
(1) (1) (1) (4) (4) (5) (5) (6) (8) (10) (10) (10) 
line 253: insert (3)
line 254: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (6) (8) (10) (10) (10) 
line 255: insert (8)
line 256: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (6) (8) (8) (10) (10) (10) 
line 257: insert (9)
line 258: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (6) (8) (8) (9) (10) (10) (10) 
line 259: kNearestNeighbour 4 (10)
(9) (10) (10) (10) 
line 260: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (6) (8) (8) (9) (10) (10) (10) 
line 261: insert (2)
line 262: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (6) (8) (8) (9) (10) (10) (10) 
line 263: clear
line 264: buildTree 16
(6) (3) (2) (9) (9) (6) (10) (2) (2) (10) (5) (4) (3) (6) (10) (4) 
line 265: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (9) (9) (10) (10) (10) 
line 266: insert (3)
line 267: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (9) (10) (10) (10) 
line 268: nearestNeighbour (6)
(6) 
line 269: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (9) (10) (10) (10) 
line 270: kNearestNeighbour 10 (2)
(2) (2) (2) (3) (3) (3) (4) (4) (5) (6) 
line 271: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (9) (10) (10) (10) 
line 272: remove (10)
line 273: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (9) (10) (10) 
line 274: nodeCount_height_leafCount
nodeCount=16;height=5;leafCount=6
line 275: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (9) (10) (10) 
line 276: remove (1)
line 277: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (9) (10) (10) 
line 278: nearestNeighbour (1)
(2) 
line 279: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (9) (9) (10) (10) 
line 280: clear
line 281: buildTree 6
(6) (8) (6) (4) (5) (6) 
line 282: inorderTraversal
(4) (5) (6) (6) (6) (8) 
line 283: nearestNeighbour (5)
(5) 
line 284: inorderTraversal
(4) (5) (6) (6) (6) (8) 
line 285: kNearestNeighbour 10 (1)
(4) (5) (6) (6) (6) (8) 
line 286: inorderTraversal
(4) (5) (6) (6) (6) (8) 
line 287: remove (6)
line 288: inorderTraversal
(4) (5) (6) (6) (8) 
line 289: insert (5)
line 290: inorderTraversal
(4) (5) (5) (6) (6) (8) 
line 291: search (7)
FALSE
line 292: inorderTraversal
(4) (5) (5) (6) (6) (8) 
line 293: nearestNeighbour (4)
(4) 
line 294: inorderTraversal
(4) (5) (5) (6) (6) (8) 
line 295: insert (1)
line 296: inorderTraversal
(1) (4) (5) (5) (6) (6) (8) 
line 297: insert (3)
line 298: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (8) 
line 299: insert (10)
line 300: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (8) (10) 
line 301: insert (3)
line 302: inorderTraversal
(1) (3) (3) (4) (5) (5) (6) (6) (8) (10) 
line 303: nearestNeighbour (9)
(10) 
line 304: inorderTraversal
(1) (3) (3) (4) (5) (5) (6) (6) (8) (10) 
line 305: insert (4)
line 306: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (6) (8) (10) 
line 307: insert (2)
line 308: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (6) (6) (8) (10) 
line 309: insert (9)
line 310: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 311: insert (1)
line 312: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 313: kNearestNeighbour 8 (1)
(1) (1) (2) (3) (3) (4) (4) (5) 
line 314: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 315: nearestNeighbour (6)
(6) 
line 316: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 317: insert (9)
line 318: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (6) (6) (8) (9) (9) (10) 
line 319: remove (3)
line 320: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (8) (9) (9) (10) 
line 321: nearestNeighbour (6)
(6) 
line 322: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (8) (9) (9) (10) 
line 323: insert (8)
line 324: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (8) (8) (9) (9) (10) 
line 325: search (8)
TRUE
line 326: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (8) (8) (9) (9) (10) 
line 327: remove (10)
line 328: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (8) (8) (9) (9) 
line 329: kNearestNeighbour 2 (10)
(9) (9) 
line 330: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (8) (8) (9) (9) 
line 331: insert (5)
line 332: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (6) (8) (8) (9) (9) 
line 333: nearestNeighbour (3)
(3) 
line 334: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (6) (8) (8) (9) (9) 
line 335: nearestNeighbour (6)
(6) 
line 336: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (6) (8) (8) (9) (9) 
line 337: nearestNeighbour (9)
(9) 
line 338: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (6) (8) (8) (9) (9) 
line 339: clear
line 340: buildTree 2
(5) (5) 
line 341: inorderTraversal
(5) (5) 
line 342: insert (8)
line 343: inorderTraversal
(5) (5) (8) 
line 344: remove (5)
line 345: inorderTraversal
(5) (8) 
line 346: insert (7)
line 347: inorderTraversal
(5) (7) (8) 
line 348: insert (8)
line 349: inorderTraversal
(5) (7) (8) (8) 
line 350: insert (9)
line 351: inorderTraversal
(5) (7) (8) (8) (9) 
line 352: insert (9)
line 353: inorderTraversal
(5) (7) (8) (8) (9) (9) 
line 354: insert (1)
line 355: inorderTraversal
(1) (5) (7) (8) (8) (9) (9) 
line 356: preorderTraversal
(5) (1) (8) (7) (8) (9) (9) 
line 357: inorderTraversal
(1) (5) (7) (8) (8) (9) (9) 
line 358: insert (3)
line 359: inorderTraversal
(1) (3) (5) (7) (8) (8) (9) (9) 
line 360: insert (2)
line 361: inorderTraversal
(1) (2) (3) (5) (7) (8) (8) (9) (9) 
line 362: remove (2)
line 363: inorderTraversal
(1) (3) (5) (7) (8) (8) (9) (9) 
line 364: insert (7)
line 365: inorderTraversal
(1) (3) (5) (7) (7) (8) (8) (9) (9) 
line 366: insert (5)
line 367: inorderTraversal
(1) (3) (5) (5) (7) (7) (8) (8) (9) (9) 
line 368: nearestNeighbour (3)
(3) 
line 369: inorderTraversal
(1) (3) (5) (5) (7) (7) (8) (8) (9) (9) 
line 370: clear
line 371: buildTree 2
(6) (2) 
line 372: inorderTraversal
(2) (6) 
line 373: search (6)
TRUE
line 374: inorderTraversal
(2) (6) 
line 375: insert (2)
line 376: inorderTraversal
(2) (2) (6) 
line 377: nearestNeighbour (3)
(2) 
line 378: inorderTraversal
(2) (2) (6) 
line 379: kNearestNeighbour 2 (8)
(2) (6) 
line 380: inorderTraversal
(2) (2) (6) 
line 381: insert (1)
line 382: inorderTraversal
(1) (2) (2) (6) 
line 383: remove (2)
line 384: inorderTraversal
(1) (2) (6) 
line 385: insert (7)
line 386: inorderTraversal
(1) (2) (6) (7) 
line 387: kNearestNeighbour 6 (6)
(1) (2) (6) (7) 
line 388: inorderTraversal
(1) (2) (6) (7) 
line 389: remove (8)
line 390: inorderTraversal
(1) (2) (6) (7) 
line 391: kNearestNeighbour 4 (3)
(1) (2) (6) (7) 
line 392: inorderTraversal
(1) (2) (6) (7) 
line 393: insert (7)
line 394: inorderTraversal
(1) (2) (6) (7) (7) 
line 395: nearestNeighbour (8)
(7) 
line 396: inorderTraversal
(1) (2) (6) (7) (7) 
line 397: insert (3)
line 398: inorderTraversal
(1) (2) (3) (6) (7) (7) 
line 399: remove (6)
line 400: inorderTraversal
(1) (2) (3) (7) (7) 
line 401: kNearestNeighbour 9 (8)
(1) (2) (3) (7) (7) 
line 402: inorderTraversal
(1) (2) (3) (7) (7) 
line 403: insert (6)
line 404: inorderTraversal
(1) (2) (3) (6) (7) (7) 
line 405: clear
line 406: buildTree 17
(8) (10) (4) (7) (3) (4) (4) (9) (3) (10) (6) (2) (8) (3) (1) (2) (7) 
line 407: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (9) (10) (10) 
line 408: search (4)
TRUE
line 409: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (9) (10) (10) 
line 410: nearestNeighbour (5)
(6) 
line 411: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (9) (10) (10) 
line 412: kNearestNeighbour 3 (8)
(8) (8) (9) 
line 413: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (9) (10) (10) 
line 414: nearestNeighbour (1)
(1) 
line 415: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (9) (10) (10) 
line 416: postorderTraversal
(1) (2) (3) (3) (3) (2) (6) (4) (4) (7) (8) (10) (10) (9) (8) (7) (4) 
line 417: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (9) (10) (10) 
line 418: insert (2)
line 419: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (9) (10) (10) 
line 420: nearestNeighbour (6)
(6) 
line 421: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (9) (10) (10) 
line 422: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=7
line 423: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (9) (10) (10) 
line 424: preorderTraversal
(4) (2) (1) (3) (2) (2) (3) (3) (7) (4) (4) (6) (8) (7) (9) (8) (10) (10) 
line 425: postorderTraversal
(1) (2) (2) (3) (3) (3) (2) (6) (4) (4) (7) (8) (10) (10) (9) (8) (7) (4) 
line 426: clear
