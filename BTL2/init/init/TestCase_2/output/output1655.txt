line 1: k=1
line 2: insert (10)
line 3: inorderTraversal
(10) 
line 4: kNearestNeighbour 6 (2)
(10) 
line 5: inorderTraversal
(10) 
line 6: kNearestNeighbour 9 (5)
(10) 
line 7: inorderTraversal
(10) 
line 8: insert (3)
line 9: inorderTraversal
(3) (10) 
line 10: nearestNeighbour (7)
(10) 
line 11: inorderTraversal
(3) (10) 
line 12: insert (3)
line 13: inorderTraversal
(3) (3) (10) 
line 14: kNearestNeighbour 9 (3)
(3) (3) (10) 
line 15: inorderTraversal
(3) (3) (10) 
line 16: kNearestNeighbour 3 (1)
(3) (3) (10) 
line 17: inorderTraversal
(3) (3) (10) 
line 18: remove (10)
line 19: inorderTraversal
(3) (3) 
line 20: insert (10)
line 21: inorderTraversal
(3) (3) (10) 
line 22: nearestNeighbour (6)
(3) 
line 23: inorderTraversal
(3) (3) (10) 
line 24: kNearestNeighbour 1 (5)
(3) 
line 25: inorderTraversal
(3) (3) (10) 
line 26: insert (4)
line 27: inorderTraversal
(3) (3) (4) (10) 
line 28: search (10)
TRUE
line 29: inorderTraversal
(3) (3) (4) (10) 
line 30: nearestNeighbour (3)
(3) 
line 31: inorderTraversal
(3) (3) (4) (10) 
line 32: kNearestNeighbour 6 (3)
(3) (3) (4) (10) 
line 33: inorderTraversal
(3) (3) (4) (10) 
line 34: insert (5)
line 35: inorderTraversal
(3) (3) (4) (5) (10) 
line 36: kNearestNeighbour 10 (5)
(3) (3) (4) (5) (10) 
line 37: inorderTraversal
(3) (3) (4) (5) (10) 
line 38: remove (10)
line 39: inorderTraversal
(3) (3) (4) (5) 
line 40: nearestNeighbour (5)
(5) 
line 41: inorderTraversal
(3) (3) (4) (5) 
line 42: clear
line 43: buildTree 9
(10) (6) (10) (7) (3) (3) (1) (7) (10) 
line 44: inorderTraversal
(1) (3) (3) (6) (7) (7) (10) (10) (10) 
line 45: clear
line 46: buildTree 17
(8) (8) (7) (5) (4) (4) (1) (5) (1) (4) (5) (4) (5) (8) (3) (10) (1) 
line 47: inorderTraversal
(1) (1) (1) (3) (4) (4) (4) (4) (5) (5) (5) (5) (7) (8) (8) (8) (10) 
line 48: postorderTraversal
(1) (1) (1) (4) (4) (4) (4) (3) (5) (5) (5) (10) (8) (8) (8) (7) (5) 
line 49: inorderTraversal
(1) (1) (1) (3) (4) (4) (4) (4) (5) (5) (5) (5) (7) (8) (8) (8) (10) 
line 50: clear
line 51: buildTree 7
(8) (9) (3) (10) (6) (2) (5) 
line 52: inorderTraversal
(2) (3) (5) (6) (8) (9) (10) 
line 53: insert (2)
line 54: inorderTraversal
(2) (2) (3) (5) (6) (8) (9) (10) 
line 55: kNearestNeighbour 2 (7)
(6) (8) 
line 56: inorderTraversal
(2) (2) (3) (5) (6) (8) (9) (10) 
line 57: nearestNeighbour (1)
(2) 
line 58: inorderTraversal
(2) (2) (3) (5) (6) (8) (9) (10) 
line 59: nearestNeighbour (10)
(10) 
line 60: inorderTraversal
(2) (2) (3) (5) (6) (8) (9) (10) 
line 61: insert (5)
line 62: inorderTraversal
(2) (2) (3) (5) (5) (6) (8) (9) (10) 
line 63: insert (2)
line 64: inorderTraversal
(2) (2) (2) (3) (5) (5) (6) (8) (9) (10) 
line 65: insert (4)
line 66: inorderTraversal
(2) (2) (2) (3) (4) (5) (5) (6) (8) (9) (10) 
line 67: insert (6)
line 68: inorderTraversal
(2) (2) (2) (3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 69: nearestNeighbour (10)
(10) 
line 70: inorderTraversal
(2) (2) (2) (3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 71: insert (2)
line 72: inorderTraversal
(2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 73: nearestNeighbour (8)
(8) 
line 74: inorderTraversal
(2) (2) (2) (2) (3) (4) (5) (5) (6) (6) (8) (9) (10) 
line 75: clear
line 76: buildTree 18
(6) (9) (8) (1) (8) (1) (9) (1) (7) (2) (6) (10) (2) (9) (2) (6) (4) (8) 
line 77: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 78: nearestNeighbour (4)
(4) 
line 79: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 80: nearestNeighbour (5)
(4) 
line 81: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 82: preorderTraversal
(6) (2) (1) (1) (1) (2) (2) (4) (8) (6) (6) (7) (9) (8) (8) (9) (9) (10) 
line 83: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 84: insert (6)
line 85: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 86: search (8)
TRUE
line 87: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 88: insert (8)
line 89: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 90: nearestNeighbour (8)
(8) 
line 91: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 92: clear
line 93: buildTree 15
(9) (7) (8) (6) (7) (1) (4) (9) (10) (3) (4) (1) (10) (2) (7) 
line 94: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 95: insert (9)
line 96: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 97: insert (5)
line 98: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 99: nearestNeighbour (3)
(3) 
line 100: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 101: insert (7)
line 102: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 103: kNearestNeighbour 4 (7)
(7) (7) (7) (7) 
line 104: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) (10) 
line 105: clear
line 106: buildTree 18
(8) (10) (3) (4) (4) (4) (9) (1) (7) (3) (8) (3) (5) (5) (6) (5) (8) (10) 
line 107: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) 
line 108: insert (6)
line 109: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 110: preorderTraversal
(5) (3) (1) (4) (3) (3) (4) (4) (8) (5) (6) (5) (7) (6) (9) (8) (8) (10) (10) 
line 111: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 112: nearestNeighbour (6)
(6) 
line 113: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 114: nearestNeighbour (6)
(6) 
line 115: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 116: preorderTraversal
(5) (3) (1) (4) (3) (3) (4) (4) (8) (5) (6) (5) (7) (6) (9) (8) (8) (10) (10) 
line 117: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 118: nearestNeighbour (6)
(6) 
line 119: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 120: nearestNeighbour (3)
(3) 
line 121: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 122: kNearestNeighbour 1 (10)
(10) 
line 123: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 124: kNearestNeighbour 1 (7)
(7) 
line 125: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 126: nearestNeighbour (10)
(10) 
line 127: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 128: kNearestNeighbour 8 (9)
(6) (7) (8) (8) (8) (9) (10) (10) 
line 129: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 130: insert (9)
line 131: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 132: remove (1)
line 133: inorderTraversal
(3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 134: clear
line 135: buildTree 7
(8) (8) (3) (3) (5) (3) (6) 
line 136: inorderTraversal
(3) (3) (3) (5) (6) (8) (8) 
line 137: kNearestNeighbour 1 (1)
(3) 
line 138: inorderTraversal
(3) (3) (3) (5) (6) (8) (8) 
line 139: nearestNeighbour (4)
(3) 
line 140: inorderTraversal
(3) (3) (3) (5) (6) (8) (8) 
line 141: insert (4)
line 142: inorderTraversal
(3) (3) (3) (4) (5) (6) (8) (8) 
line 143: kNearestNeighbour 5 (2)
(3) (3) (3) (4) (5) 
line 144: inorderTraversal
(3) (3) (3) (4) (5) (6) (8) (8) 
line 145: kNearestNeighbour 2 (1)
(3) (3) 
line 146: inorderTraversal
(3) (3) (3) (4) (5) (6) (8) (8) 
line 147: kNearestNeighbour 9 (8)
(3) (3) (3) (4) (5) (6) (8) (8) 
line 148: inorderTraversal
(3) (3) (3) (4) (5) (6) (8) (8) 
line 149: nearestNeighbour (4)
(4) 
line 150: inorderTraversal
(3) (3) (3) (4) (5) (6) (8) (8) 
line 151: insert (4)
line 152: inorderTraversal
(3) (3) (3) (4) (4) (5) (6) (8) (8) 
line 153: remove (3)
line 154: inorderTraversal
(3) (3) (4) (4) (5) (6) (8) (8) 
line 155: nearestNeighbour (5)
(5) 
line 156: inorderTraversal
(3) (3) (4) (4) (5) (6) (8) (8) 
line 157: insert (4)
line 158: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (8) (8) 
line 159: nearestNeighbour (3)
(3) 
line 160: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (8) (8) 
line 161: insert (2)
line 162: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (6) (8) (8) 
line 163: nearestNeighbour (1)
(2) 
line 164: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (6) (8) (8) 
line 165: nearestNeighbour (6)
(6) 
line 166: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (6) (8) (8) 
line 167: insert (10)
line 168: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (6) (8) (8) (10) 
line 169: nearestNeighbour (3)
(3) 
line 170: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (6) (8) (8) (10) 
line 171: nearestNeighbour (10)
(10) 
line 172: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (6) (8) (8) (10) 
line 173: preorderTraversal
(5) (3) (2) (3) (4) (4) (4) (8) (6) (8) (10) 
line 174: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (6) (8) (8) (10) 
line 175: search (3)
TRUE
line 176: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (6) (8) (8) (10) 
line 177: kNearestNeighbour 3 (8)
(8) (8) (10) 
line 178: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (6) (8) (8) (10) 
line 179: insert (5)
line 180: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (8) (8) (10) 
line 181: kNearestNeighbour 5 (5)
(4) (4) (5) (5) (6) 
line 182: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (8) (8) (10) 
line 183: insert (7)
line 184: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (10) 
line 185: insert (7)
line 186: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (10) 
line 187: kNearestNeighbour 2 (3)
(3) (3) 
line 188: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (10) 
line 189: remove (1)
line 190: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (10) 
line 191: insert (10)
line 192: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (10) (10) 
line 193: insert (8)
line 194: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) 
line 195: nearestNeighbour (10)
(10) 
line 196: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) 
line 197: insert (6)
line 198: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 199: kNearestNeighbour 6 (3)
(2) (3) (3) (4) (4) (4) 
line 200: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 201: nodeCount_height_leafCount
nodeCount=17;height=6;leafCount=7
line 202: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 203: insert (7)
line 204: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 205: kNearestNeighbour 6 (8)
(7) (7) (7) (8) (8) (8) 
line 206: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 207: insert (1)
line 208: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 209: insert (4)
line 210: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 211: kNearestNeighbour 5 (9)
(8) (8) (8) (10) (10) 
line 212: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 213: insert (10)
line 214: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 215: kNearestNeighbour 10 (8)
(6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 216: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 217: kNearestNeighbour 7 (8)
(7) (7) (7) (8) (8) (8) (10) 
line 218: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 219: remove (9)
line 220: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 221: insert (6)
line 222: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 223: insert (9)
line 224: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 225: nearestNeighbour (2)
(2) 
line 226: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 227: nodeCount_height_leafCount
nodeCount=23;height=7;leafCount=7
line 228: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 229: insert (1)
line 230: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 231: insert (1)
line 232: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 233: nearestNeighbour (1)
(1) 
line 234: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 235: clear
line 236: buildTree 1
(1) 
line 237: inorderTraversal
(1) 
line 238: insert (6)
line 239: inorderTraversal
(1) (6) 
line 240: kNearestNeighbour 6 (3)
(1) (6) 
line 241: inorderTraversal
(1) (6) 
line 242: clear
line 243: buildTree 20
(9) (2) (1) (3) (6) (6) (7) (7) (8) (10) (1) (1) (1) (9) (10) (10) (2) (1) (9) (9) 
line 244: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 245: nodeCount_height_leafCount
nodeCount=20;height=7;leafCount=6
line 246: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 247: insert (1)
line 248: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 249: nearestNeighbour (8)
(8) 
line 250: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 251: kNearestNeighbour 3 (3)
(2) (2) (3) 
line 252: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 253: kNearestNeighbour 7 (9)
(9) (9) (9) (9) (10) (10) (10) 
line 254: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 255: insert (4)
line 256: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 257: insert (3)
line 258: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 259: preorderTraversal
(6) (1) (1) (1) (2) (1) (1) (1) (2) (3) (4) (3) (9) (7) (6) (7) (8) (9) (10) (9) (9) (10) (10) 
line 260: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 261: remove (2)
line 262: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 263: insert (6)
line 264: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 265: nearestNeighbour (1)
(1) 
line 266: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 267: insert (7)
line 268: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 269: insert (8)
line 270: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 271: insert (3)
line 272: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (3) (4) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 273: insert (9)
line 274: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (3) (4) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 275: kNearestNeighbour 10 (2)
(1) (1) (1) (1) (1) (1) (2) (3) (3) (3) 
line 276: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (3) (4) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 277: nearestNeighbour (2)
(2) 
line 278: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (3) (4) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 279: kNearestNeighbour 7 (4)
(2) (3) (3) (3) (4) (6) (6) 
line 280: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (3) (4) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) (10) 
line 281: clear
line 282: buildTree 6
(7) (3) (1) (7) (2) (6) 
line 283: inorderTraversal
(1) (2) (3) (6) (7) (7) 
line 284: insert (2)
line 285: inorderTraversal
(1) (2) (2) (3) (6) (7) (7) 
line 286: insert (1)
line 287: inorderTraversal
(1) (1) (2) (2) (3) (6) (7) (7) 
line 288: insert (7)
line 289: inorderTraversal
(1) (1) (2) (2) (3) (6) (7) (7) (7) 
line 290: insert (4)
line 291: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) 
line 292: kNearestNeighbour 4 (6)
(6) (7) (7) (7) 
line 293: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) 
line 294: kNearestNeighbour 3 (2)
(1) (2) (2) 
line 295: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) 
line 296: search (2)
TRUE
line 297: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) 
line 298: insert (4)
line 299: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (7) (7) (7) 
line 300: remove (7)
line 301: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (7) (7) 
line 302: remove (9)
line 303: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (7) (7) 
line 304: kNearestNeighbour 3 (3)
(3) (4) (4) 
line 305: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (7) (7) 
line 306: insert (10)
line 307: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (7) (7) (10) 
line 308: clear
line 309: buildTree 4
(10) (8) (6) (10) 
line 310: inorderTraversal
(6) (8) (10) (10) 
line 311: clear
line 312: buildTree 12
(1) (5) (7) (2) (4) (10) (9) (5) (9) (7) (2) (6) 
line 313: inorderTraversal
(1) (2) (2) (4) (5) (5) (6) (7) (7) (9) (9) (10) 
line 314: nearestNeighbour (5)
(5) 
line 315: inorderTraversal
(1) (2) (2) (4) (5) (5) (6) (7) (7) (9) (9) (10) 
line 316: insert (8)
line 317: inorderTraversal
(1) (2) (2) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) 
line 318: clear
line 319: buildTree 20
(8) (7) (2) (9) (1) (5) (9) (5) (3) (1) (9) (1) (10) (4) (8) (3) (7) (6) (5) (4) 
line 320: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 321: remove (1)
line 322: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 323: kNearestNeighbour 5 (9)
(8) (9) (9) (9) (10) 
line 324: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 325: insert (6)
line 326: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 327: nearestNeighbour (3)
(3) 
line 328: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 329: nodeCount_height_leafCount
nodeCount=20;height=6;leafCount=8
line 330: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 331: search (9)
TRUE
line 332: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 333: nearestNeighbour (1)
(1) 
line 334: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 335: kNearestNeighbour 8 (3)
(1) (1) (2) (3) (3) (4) (4) (5) 
line 336: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 337: nodeCount_height_leafCount
nodeCount=20;height=6;leafCount=8
line 338: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 339: clear
line 340: buildTree 11
(6) (6) (9) (5) (7) (7) (8) (8) (10) (4) (3) 
line 341: inorderTraversal
(3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 342: insert (7)
line 343: inorderTraversal
(3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 344: insert (7)
line 345: inorderTraversal
(3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) 
line 346: insert (1)
line 347: inorderTraversal
(1) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) 
line 348: insert (2)
line 349: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) 
line 350: insert (9)
line 351: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 352: insert (1)
line 353: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 354: nearestNeighbour (10)
(10) 
line 355: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 356: remove (7)
line 357: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 358: insert (6)
line 359: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 360: insert (8)
line 361: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 362: search (6)
TRUE
line 363: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 364: insert (10)
line 365: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 366: insert (10)
line 367: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 368: insert (8)
line 369: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 370: clear
line 371: buildTree 20
(2) (5) (4) (6) (2) (2) (6) (2) (3) (10) (5) (7) (2) (7) (1) (5) (5) (10) (3) (4) 
line 372: inorderTraversal
(1) (2) (2) (2) (2) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (10) (10) 
line 373: kNearestNeighbour 10 (5)
(4) (4) (5) (5) (5) (5) (6) (6) (7) (7) 
line 374: inorderTraversal
(1) (2) (2) (2) (2) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (10) (10) 
line 375: clear
line 376: buildTree 2
(3) (2) 
line 377: inorderTraversal
(2) (3) 
line 378: remove (3)
line 379: inorderTraversal
(2) 
line 380: postorderTraversal
(2) 
line 381: inorderTraversal
(2) 
line 382: nearestNeighbour (4)
(2) 
line 383: inorderTraversal
(2) 
line 384: insert (2)
line 385: inorderTraversal
(2) (2) 
line 386: insert (2)
line 387: inorderTraversal
(2) (2) (2) 
line 388: insert (1)
line 389: inorderTraversal
(1) (2) (2) (2) 
line 390: kNearestNeighbour 4 (5)
(1) (2) (2) (2) 
line 391: inorderTraversal
(1) (2) (2) (2) 
line 392: clear
line 393: buildTree 5
(7) (1) (1) (5) (8) 
line 394: inorderTraversal
(1) (1) (5) (7) (8) 
line 395: clear
line 396: buildTree 14
(2) (10) (5) (10) (7) (4) (10) (3) (7) (9) (9) (9) (6) (4) 
line 397: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 398: kNearestNeighbour 9 (8)
(6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 399: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 400: insert (2)
line 401: inorderTraversal
(2) (2) (3) (4) (4) (5) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 402: insert (5)
line 403: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 404: nearestNeighbour (8)
(7) 
line 405: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 406: kNearestNeighbour 6 (6)
(4) (5) (5) (6) (7) (7) 
line 407: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 408: insert (9)
line 409: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 410: insert (3)
line 411: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 412: clear
line 413: buildTree 3
(7) (9) (3) 
line 414: inorderTraversal
(3) (7) (9) 
line 415: kNearestNeighbour 1 (9)
(9) 
line 416: inorderTraversal
(3) (7) (9) 
line 417: kNearestNeighbour 9 (2)
(3) (7) (9) 
line 418: inorderTraversal
(3) (7) (9) 
line 419: remove (7)
line 420: inorderTraversal
(3) (9) 
line 421: nodeCount_height_leafCount
nodeCount=2;height=2;leafCount=1
line 422: inorderTraversal
(3) (9) 
line 423: preorderTraversal
(9) (3) 
line 424: postorderTraversal
(3) (9) 
line 425: clear
