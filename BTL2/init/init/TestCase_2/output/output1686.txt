line 1: k=1
line 2: nearestNeighbour (3)

line 3: inorderTraversal

line 4: kNearestNeighbour 5 (10)

line 5: inorderTraversal

line 6: insert (5)
line 7: inorderTraversal
(5) 
line 8: insert (7)
line 9: inorderTraversal
(5) (7) 
line 10: insert (4)
line 11: inorderTraversal
(4) (5) (7) 
line 12: nodeCount_height_leafCount
nodeCount=3;height=2;leafCount=2
line 13: inorderTraversal
(4) (5) (7) 
line 14: nearestNeighbour (9)
(7) 
line 15: inorderTraversal
(4) (5) (7) 
line 16: insert (9)
line 17: inorderTraversal
(4) (5) (7) (9) 
line 18: nearestNeighbour (7)
(7) 
line 19: inorderTraversal
(4) (5) (7) (9) 
line 20: postorderTraversal
(4) (9) (7) (5) 
line 21: inorderTraversal
(4) (5) (7) (9) 
line 22: postorderTraversal
(4) (9) (7) (5) 
line 23: inorderTraversal
(4) (5) (7) (9) 
line 24: kNearestNeighbour 5 (9)
(4) (5) (7) (9) 
line 25: inorderTraversal
(4) (5) (7) (9) 
line 26: nearestNeighbour (1)
(4) 
line 27: inorderTraversal
(4) (5) (7) (9) 
line 28: insert (2)
line 29: inorderTraversal
(2) (4) (5) (7) (9) 
line 30: remove (7)
line 31: inorderTraversal
(2) (4) (5) (9) 
line 32: remove (4)
line 33: inorderTraversal
(2) (5) (9) 
line 34: insert (9)
line 35: inorderTraversal
(2) (5) (9) (9) 
line 36: kNearestNeighbour 10 (9)
(2) (5) (9) (9) 
line 37: inorderTraversal
(2) (5) (9) (9) 
line 38: nearestNeighbour (1)
(2) 
line 39: inorderTraversal
(2) (5) (9) (9) 
line 40: insert (10)
line 41: inorderTraversal
(2) (5) (9) (9) (10) 
line 42: nearestNeighbour (2)
(2) 
line 43: inorderTraversal
(2) (5) (9) (9) (10) 
line 44: insert (9)
line 45: inorderTraversal
(2) (5) (9) (9) (9) (10) 
line 46: clear
line 47: buildTree 5
(10) (2) (6) (6) (3) 
line 48: inorderTraversal
(2) (3) (6) (6) (10) 
line 49: kNearestNeighbour 1 (3)
(3) 
line 50: inorderTraversal
(2) (3) (6) (6) (10) 
line 51: insert (6)
line 52: inorderTraversal
(2) (3) (6) (6) (6) (10) 
line 53: nearestNeighbour (3)
(3) 
line 54: inorderTraversal
(2) (3) (6) (6) (6) (10) 
line 55: clear
line 56: buildTree 6
(7) (5) (8) (1) (5) (9) 
line 57: inorderTraversal
(1) (5) (5) (7) (8) (9) 
line 58: kNearestNeighbour 7 (1)
(1) (5) (5) (7) (8) (9) 
line 59: inorderTraversal
(1) (5) (5) (7) (8) (9) 
line 60: insert (1)
line 61: inorderTraversal
(1) (1) (5) (5) (7) (8) (9) 
line 62: kNearestNeighbour 10 (1)
(1) (1) (5) (5) (7) (8) (9) 
line 63: inorderTraversal
(1) (1) (5) (5) (7) (8) (9) 
line 64: insert (4)
line 65: inorderTraversal
(1) (1) (4) (5) (5) (7) (8) (9) 
line 66: insert (5)
line 67: inorderTraversal
(1) (1) (4) (5) (5) (5) (7) (8) (9) 
line 68: kNearestNeighbour 8 (5)
(1) (4) (5) (5) (5) (7) (8) (9) 
line 69: inorderTraversal
(1) (1) (4) (5) (5) (5) (7) (8) (9) 
line 70: insert (6)
line 71: inorderTraversal
(1) (1) (4) (5) (5) (5) (6) (7) (8) (9) 
line 72: insert (4)
line 73: inorderTraversal
(1) (1) (4) (4) (5) (5) (5) (6) (7) (8) (9) 
line 74: clear
line 75: buildTree 13
(3) (10) (9) (4) (4) (6) (4) (3) (2) (2) (4) (9) (10) 
line 76: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (6) (9) (9) (10) (10) 
line 77: postorderTraversal
(2) (3) (3) (2) (4) (4) (4) (9) (10) (10) (9) (6) (4) 
line 78: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (6) (9) (9) (10) (10) 
line 79: nearestNeighbour (3)
(3) 
line 80: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (6) (9) (9) (10) (10) 
line 81: insert (10)
line 82: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (6) (9) (9) (10) (10) (10) 
line 83: nearestNeighbour (6)
(6) 
line 84: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (6) (9) (9) (10) (10) (10) 
line 85: remove (2)
line 86: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (6) (9) (9) (10) (10) (10) 
line 87: insert (1)
line 88: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (6) (9) (9) (10) (10) (10) 
line 89: insert (7)
line 90: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (6) (7) (9) (9) (10) (10) (10) 
line 91: nearestNeighbour (9)
(9) 
line 92: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (6) (7) (9) (9) (10) (10) (10) 
line 93: insert (2)
line 94: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (4) (6) (7) (9) (9) (10) (10) (10) 
line 95: insert (4)
line 96: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (6) (7) (9) (9) (10) (10) (10) 
line 97: nearestNeighbour (3)
(3) 
line 98: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (6) (7) (9) (9) (10) (10) (10) 
line 99: insert (8)
line 100: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (6) (7) (8) (9) (9) (10) (10) (10) 
line 101: insert (9)
line 102: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 103: search (4)
TRUE
line 104: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 105: insert (4)
line 106: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 107: remove (2)
line 108: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 109: insert (6)
line 110: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 111: nearestNeighbour (2)
(2) 
line 112: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 113: remove (10)
line 114: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 115: insert (7)
line 116: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 117: insert (1)
line 118: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 119: kNearestNeighbour 3 (4)
(4) (4) (4) 
line 120: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 121: kNearestNeighbour 5 (2)
(1) (1) (2) (3) (3) 
line 122: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 123: search (1)
TRUE
line 124: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 125: kNearestNeighbour 8 (2)
(1) (1) (2) (3) (3) (4) (4) (4) 
line 126: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 127: insert (2)
line 128: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 129: insert (3)
line 130: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 131: kNearestNeighbour 4 (8)
(7) (7) (8) (9) 
line 132: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 133: insert (4)
line 134: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 135: kNearestNeighbour 8 (9)
(7) (7) (8) (9) (9) (9) (10) (10) 
line 136: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 137: insert (6)
line 138: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 139: kNearestNeighbour 3 (3)
(3) (3) (3) 
line 140: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 141: insert (5)
line 142: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 143: nearestNeighbour (10)
(10) 
line 144: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 145: nearestNeighbour (2)
(2) 
line 146: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 147: remove (4)
line 148: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 149: kNearestNeighbour 8 (4)
(3) (4) (4) (4) (4) (4) (4) (5) 
line 150: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 151: insert (10)
line 152: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 153: search (4)
TRUE
line 154: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 155: nearestNeighbour (9)
(9) 
line 156: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 157: search (1)
TRUE
line 158: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 159: clear
line 160: buildTree 3
(5) (7) (7) 
line 161: inorderTraversal
(5) (7) (7) 
line 162: insert (1)
line 163: inorderTraversal
(1) (5) (7) (7) 
line 164: postorderTraversal
(1) (5) (7) (7) 
line 165: inorderTraversal
(1) (5) (7) (7) 
line 166: clear
line 167: buildTree 16
(4) (4) (5) (3) (8) (8) (2) (7) (4) (1) (8) (3) (2) (2) (8) (1) 
line 168: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (7) (8) (8) (8) (8) 
line 169: nearestNeighbour (7)
(7) 
line 170: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (7) (8) (8) (8) (8) 
line 171: kNearestNeighbour 9 (6)
(4) (4) (4) (5) (7) (8) (8) (8) (8) 
line 172: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (7) (8) (8) (8) (8) 
line 173: insert (7)
line 174: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (7) (7) (8) (8) (8) (8) 
line 175: nearestNeighbour (4)
(4) 
line 176: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (7) (7) (8) (8) (8) (8) 
line 177: kNearestNeighbour 6 (2)
(1) (2) (2) (2) (3) (3) 
line 178: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (7) (7) (8) (8) (8) (8) 
line 179: kNearestNeighbour 10 (5)
(3) (3) (4) (4) (4) (5) (7) (7) (8) (8) 
line 180: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (7) (7) (8) (8) (8) (8) 
line 181: clear
line 182: buildTree 20
(10) (10) (8) (2) (10) (5) (9) (10) (4) (10) (10) (10) (6) (5) (8) (5) (4) (7) (8) (5) 
line 183: inorderTraversal
(2) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 184: insert (6)
line 185: inorderTraversal
(2) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 186: nearestNeighbour (3)
(2) 
line 187: inorderTraversal
(2) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 188: remove (4)
line 189: inorderTraversal
(2) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 190: nearestNeighbour (7)
(7) 
line 191: inorderTraversal
(2) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 192: preorderTraversal
(8) (5) (4) (2) (5) (5) (6) (5) (7) (6) (10) (8) (8) (9) (10) (10) (10) (10) (10) (10) 
line 193: inorderTraversal
(2) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 194: nearestNeighbour (8)
(8) 
line 195: inorderTraversal
(2) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 196: insert (1)
line 197: inorderTraversal
(1) (2) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 198: kNearestNeighbour 10 (5)
(2) (4) (5) (5) (5) (5) (6) (6) (7) (8) 
line 199: inorderTraversal
(1) (2) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 200: insert (5)
line 201: inorderTraversal
(1) (2) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 202: insert (6)
line 203: inorderTraversal
(1) (2) (4) (5) (5) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 204: nodeCount_height_leafCount
nodeCount=23;height=8;leafCount=5
line 205: inorderTraversal
(1) (2) (4) (5) (5) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 206: nearestNeighbour (6)
(6) 
line 207: inorderTraversal
(1) (2) (4) (5) (5) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 208: insert (3)
line 209: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 210: remove (7)
line 211: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 212: kNearestNeighbour 4 (5)
(5) (5) (5) (5) 
line 213: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 214: kNearestNeighbour 10 (8)
(8) (8) (8) (9) (10) (10) (10) (10) (10) (10) 
line 215: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) (10) 
line 216: remove (10)
line 217: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) 
line 218: insert (6)
line 219: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (6) (8) (8) (8) (9) (10) (10) (10) (10) (10) (10) 
line 220: clear
line 221: buildTree 11
(1) (9) (5) (1) (8) (8) (5) (9) (1) (3) (3) 
line 222: inorderTraversal
(1) (1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 223: kNearestNeighbour 10 (5)
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 224: inorderTraversal
(1) (1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 225: nearestNeighbour (10)
(9) 
line 226: inorderTraversal
(1) (1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 227: kNearestNeighbour 9 (5)
(1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 228: inorderTraversal
(1) (1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 229: remove (1)
line 230: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 231: insert (9)
line 232: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) (9) 
line 233: remove (9)
line 234: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 235: insert (9)
line 236: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) (9) 
line 237: nearestNeighbour (3)
(3) 
line 238: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) (9) 
line 239: nearestNeighbour (7)
(8) 
line 240: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) (9) 
line 241: remove (9)
line 242: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 243: nearestNeighbour (5)
(5) 
line 244: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 245: insert (10)
line 246: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) (10) 
line 247: nearestNeighbour (10)
(10) 
line 248: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) (10) 
line 249: insert (9)
line 250: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) 
line 251: kNearestNeighbour 10 (3)
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) 
line 252: inorderTraversal
(1) (1) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) 
line 253: insert (2)
line 254: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) 
line 255: insert (10)
line 256: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) (10) 
line 257: nodeCount_height_leafCount
nodeCount=14;height=6;leafCount=6
line 258: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) (10) 
line 259: kNearestNeighbour 7 (5)
(2) (3) (3) (5) (5) (8) (8) 
line 260: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) (10) 
line 261: nearestNeighbour (9)
(9) 
line 262: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) (10) 
line 263: nearestNeighbour (4)
(3) 
line 264: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) (10) 
line 265: insert (1)
line 266: inorderTraversal
(1) (1) (1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) (10) 
line 267: insert (1)
line 268: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) (10) 
line 269: insert (3)
line 270: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (8) (8) (9) (9) (9) (10) (10) 
line 271: insert (7)
line 272: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (7) (8) (8) (9) (9) (9) (10) (10) 
line 273: nearestNeighbour (3)
(3) 
line 274: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (7) (8) (8) (9) (9) (9) (10) (10) 
line 275: kNearestNeighbour 6 (5)
(3) (3) (3) (5) (5) (7) 
line 276: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (7) (8) (8) (9) (9) (9) (10) (10) 
line 277: kNearestNeighbour 1 (10)
(10) 
line 278: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (7) (8) (8) (9) (9) (9) (10) (10) 
line 279: insert (5)
line 280: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (5) (7) (8) (8) (9) (9) (9) (10) (10) 
line 281: remove (10)
line 282: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (5) (7) (8) (8) (9) (9) (9) (10) 
line 283: insert (9)
line 284: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (5) (7) (8) (8) (9) (9) (9) (9) (10) 
line 285: insert (6)
line 286: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (5) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 287: insert (5)
line 288: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (5) (5) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 289: insert (2)
line 290: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (5) (5) (5) (5) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 291: kNearestNeighbour 7 (8)
(7) (8) (8) (9) (9) (9) (9) 
line 292: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (5) (5) (5) (5) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 293: insert (6)
line 294: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (5) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 295: clear
line 296: buildTree 2
(6) (5) 
line 297: inorderTraversal
(5) (6) 
line 298: kNearestNeighbour 6 (9)
(5) (6) 
line 299: inorderTraversal
(5) (6) 
line 300: kNearestNeighbour 4 (5)
(5) (6) 
line 301: inorderTraversal
(5) (6) 
line 302: search (5)
TRUE
line 303: inorderTraversal
(5) (6) 
line 304: insert (6)
line 305: inorderTraversal
(5) (6) (6) 
line 306: nearestNeighbour (8)
(6) 
line 307: inorderTraversal
(5) (6) (6) 
line 308: nearestNeighbour (9)
(6) 
line 309: inorderTraversal
(5) (6) (6) 
line 310: kNearestNeighbour 2 (7)
(6) (6) 
line 311: inorderTraversal
(5) (6) (6) 
line 312: clear
line 313: buildTree 9
(5) (8) (10) (1) (2) (1) (7) (6) (7) 
line 314: inorderTraversal
(1) (1) (2) (5) (6) (7) (7) (8) (10) 
line 315: insert (6)
line 316: inorderTraversal
(1) (1) (2) (5) (6) (6) (7) (7) (8) (10) 
line 317: remove (6)
line 318: inorderTraversal
(1) (1) (2) (5) (6) (7) (7) (8) (10) 
line 319: nearestNeighbour (2)
(2) 
line 320: inorderTraversal
(1) (1) (2) (5) (6) (7) (7) (8) (10) 
line 321: remove (1)
line 322: inorderTraversal
(1) (2) (5) (6) (7) (7) (8) (10) 
line 323: search (10)
TRUE
line 324: inorderTraversal
(1) (2) (5) (6) (7) (7) (8) (10) 
line 325: nearestNeighbour (5)
(5) 
line 326: inorderTraversal
(1) (2) (5) (6) (7) (7) (8) (10) 
line 327: kNearestNeighbour 6 (1)
(1) (2) (5) (6) (7) (7) 
line 328: inorderTraversal
(1) (2) (5) (6) (7) (7) (8) (10) 
line 329: insert (4)
line 330: inorderTraversal
(1) (2) (4) (5) (6) (7) (7) (8) (10) 
line 331: insert (7)
line 332: inorderTraversal
(1) (2) (4) (5) (6) (7) (7) (7) (8) (10) 
line 333: preorderTraversal
(6) (1) (2) (5) (4) (7) (8) (7) (7) (10) 
line 334: inorderTraversal
(1) (2) (4) (5) (6) (7) (7) (7) (8) (10) 
line 335: search (6)
TRUE
line 336: inorderTraversal
(1) (2) (4) (5) (6) (7) (7) (7) (8) (10) 
line 337: clear
line 338: buildTree 5
(1) (3) (3) (3) (3) 
line 339: inorderTraversal
(1) (3) (3) (3) (3) 
line 340: postorderTraversal
(1) (3) (3) (3) (3) 
line 341: inorderTraversal
(1) (3) (3) (3) (3) 
line 342: kNearestNeighbour 6 (7)
(1) (3) (3) (3) (3) 
line 343: inorderTraversal
(1) (3) (3) (3) (3) 
line 344: nearestNeighbour (7)
(3) 
line 345: inorderTraversal
(1) (3) (3) (3) (3) 
line 346: insert (4)
line 347: inorderTraversal
(1) (3) (3) (3) (3) (4) 
line 348: insert (7)
line 349: inorderTraversal
(1) (3) (3) (3) (3) (4) (7) 
line 350: nearestNeighbour (2)
(1) 
line 351: inorderTraversal
(1) (3) (3) (3) (3) (4) (7) 
line 352: remove (9)
line 353: inorderTraversal
(1) (3) (3) (3) (3) (4) (7) 
line 354: kNearestNeighbour 10 (10)
(1) (3) (3) (3) (3) (4) (7) 
line 355: inorderTraversal
(1) (3) (3) (3) (3) (4) (7) 
line 356: insert (10)
line 357: inorderTraversal
(1) (3) (3) (3) (3) (4) (7) (10) 
line 358: preorderTraversal
(3) (1) (3) (3) (3) (4) (7) (10) 
line 359: inorderTraversal
(1) (3) (3) (3) (3) (4) (7) (10) 
line 360: kNearestNeighbour 2 (3)
(3) (3) 
line 361: inorderTraversal
(1) (3) (3) (3) (3) (4) (7) (10) 
line 362: nearestNeighbour (7)
(7) 
line 363: inorderTraversal
(1) (3) (3) (3) (3) (4) (7) (10) 
line 364: insert (6)
line 365: inorderTraversal
(1) (3) (3) (3) (3) (4) (6) (7) (10) 
line 366: insert (3)
line 367: inorderTraversal
(1) (3) (3) (3) (3) (3) (4) (6) (7) (10) 
line 368: kNearestNeighbour 5 (6)
(3) (3) (4) (6) (7) 
line 369: inorderTraversal
(1) (3) (3) (3) (3) (3) (4) (6) (7) (10) 
line 370: insert (6)
line 371: inorderTraversal
(1) (3) (3) (3) (3) (3) (4) (6) (6) (7) (10) 
line 372: kNearestNeighbour 7 (5)
(3) (3) (3) (4) (6) (6) (7) 
line 373: inorderTraversal
(1) (3) (3) (3) (3) (3) (4) (6) (6) (7) (10) 
line 374: preorderTraversal
(3) (1) (3) (3) (3) (4) (3) (7) (6) (6) (10) 
line 375: inorderTraversal
(1) (3) (3) (3) (3) (3) (4) (6) (6) (7) (10) 
line 376: clear
line 377: buildTree 12
(7) (2) (3) (3) (3) (7) (5) (4) (5) (5) (2) (1) 
line 378: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (5) (5) (5) (7) (7) 
line 379: clear
line 380: buildTree 19
(6) (8) (9) (8) (2) (3) (1) (9) (7) (3) (6) (8) (3) (8) (9) (10) (7) (2) (8) 
line 381: inorderTraversal
(1) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 382: nearestNeighbour (1)
(1) 
line 383: inorderTraversal
(1) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 384: kNearestNeighbour 7 (7)
(7) (7) (8) (8) (8) (8) (8) 
line 385: inorderTraversal
(1) (2) (2) (3) (3) (3) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 386: insert (3)
line 387: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 388: nearestNeighbour (8)
(8) 
line 389: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 390: insert (3)
line 391: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 392: insert (2)
line 393: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (3) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 394: nearestNeighbour (7)
(7) 
line 395: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (3) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 396: insert (4)
line 397: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (3) (4) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 398: clear
line 399: buildTree 7
(7) (7) (7) (1) (9) (5) (2) 
line 400: inorderTraversal
(1) (2) (5) (7) (7) (7) (9) 
line 401: kNearestNeighbour 7 (10)
(1) (2) (5) (7) (7) (7) (9) 
line 402: inorderTraversal
(1) (2) (5) (7) (7) (7) (9) 
line 403: remove (5)
line 404: inorderTraversal
(1) (2) (7) (7) (7) (9) 
line 405: kNearestNeighbour 2 (6)
(7) (7) 
line 406: inorderTraversal
(1) (2) (7) (7) (7) (9) 
line 407: kNearestNeighbour 3 (7)
(7) (7) (7) 
line 408: inorderTraversal
(1) (2) (7) (7) (7) (9) 
line 409: insert (9)
line 410: inorderTraversal
(1) (2) (7) (7) (7) (9) (9) 
line 411: insert (3)
line 412: inorderTraversal
(1) (2) (3) (7) (7) (7) (9) (9) 
line 413: insert (1)
line 414: inorderTraversal
(1) (1) (2) (3) (7) (7) (7) (9) (9) 
line 415: nodeCount_height_leafCount
nodeCount=9;height=5;leafCount=3
line 416: inorderTraversal
(1) (1) (2) (3) (7) (7) (7) (9) (9) 
line 417: preorderTraversal
(7) (2) (1) (1) (3) (7) (7) (9) (9) 
line 418: postorderTraversal
(1) (1) (3) (2) (9) (9) (7) (7) (7) 
line 419: clear
