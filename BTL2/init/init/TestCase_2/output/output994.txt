line 1: k=1
line 2: kNearestNeighbour 3 (7)

line 3: inorderTraversal

line 4: nearestNeighbour (4)

line 5: inorderTraversal

line 6: postorderTraversal

line 7: inorderTraversal

line 8: clear
line 9: buildTree 13
(10) (8) (10) (5) (8) (8) (4) (7) (4) (1) (10) (3) (10) 
line 10: inorderTraversal
(1) (3) (4) (4) (5) (7) (8) (8) (8) (10) (10) (10) (10) 
line 11: remove (3)
line 12: inorderTraversal
(1) (4) (4) (5) (7) (8) (8) (8) (10) (10) (10) (10) 
line 13: kNearestNeighbour 6 (7)
(4) (5) (7) (8) (8) (8) 
line 14: inorderTraversal
(1) (4) (4) (5) (7) (8) (8) (8) (10) (10) (10) (10) 
line 15: insert (10)
line 16: inorderTraversal
(1) (4) (4) (5) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 17: insert (1)
line 18: inorderTraversal
(1) (1) (4) (4) (5) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 19: nearestNeighbour (1)
(1) 
line 20: inorderTraversal
(1) (1) (4) (4) (5) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 21: kNearestNeighbour 2 (8)
(8) (8) 
line 22: inorderTraversal
(1) (1) (4) (4) (5) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 23: insert (3)
line 24: inorderTraversal
(1) (1) (3) (4) (4) (5) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 25: insert (1)
line 26: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 27: insert (5)
line 28: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 29: insert (7)
line 30: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (7) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 31: insert (6)
line 32: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 33: nodeCount_height_leafCount
nodeCount=19;height=6;leafCount=6
line 34: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 35: insert (5)
line 36: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 37: clear
line 38: buildTree 8
(9) (7) (10) (5) (8) (4) (5) (6) 
line 39: inorderTraversal
(4) (5) (5) (6) (7) (8) (9) (10) 
line 40: remove (8)
line 41: inorderTraversal
(4) (5) (5) (6) (7) (9) (10) 
line 42: insert (5)
line 43: inorderTraversal
(4) (5) (5) (5) (6) (7) (9) (10) 
line 44: insert (6)
line 45: inorderTraversal
(4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 46: search (4)
TRUE
line 47: inorderTraversal
(4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 48: nearestNeighbour (3)
(4) 
line 49: inorderTraversal
(4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 50: kNearestNeighbour 2 (2)
(4) (5) 
line 51: inorderTraversal
(4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 52: kNearestNeighbour 9 (3)
(4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 53: inorderTraversal
(4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 54: kNearestNeighbour 10 (8)
(4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 55: inorderTraversal
(4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 56: search (5)
TRUE
line 57: inorderTraversal
(4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 58: insert (1)
line 59: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (7) (9) (10) 
line 60: insert (7)
line 61: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (7) (7) (9) (10) 
line 62: remove (9)
line 63: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (7) (7) (10) 
line 64: nearestNeighbour (2)
(1) 
line 65: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (7) (7) (10) 
line 66: kNearestNeighbour 1 (7)
(7) 
line 67: inorderTraversal
(1) (4) (5) (5) (5) (6) (6) (7) (7) (10) 
line 68: clear
line 69: buildTree 1
(2) 
line 70: inorderTraversal
(2) 
line 71: insert (9)
line 72: inorderTraversal
(2) (9) 
line 73: kNearestNeighbour 8 (5)
(2) (9) 
line 74: inorderTraversal
(2) (9) 
line 75: insert (10)
line 76: inorderTraversal
(2) (9) (10) 
line 77: remove (10)
line 78: inorderTraversal
(2) (9) 
line 79: nearestNeighbour (3)
(2) 
line 80: inorderTraversal
(2) (9) 
line 81: nearestNeighbour (2)
(2) 
line 82: inorderTraversal
(2) (9) 
line 83: nearestNeighbour (7)
(9) 
line 84: inorderTraversal
(2) (9) 
line 85: kNearestNeighbour 6 (8)
(2) (9) 
line 86: inorderTraversal
(2) (9) 
line 87: clear
line 88: buildTree 20
(7) (6) (5) (3) (6) (4) (3) (4) (10) (2) (5) (7) (8) (10) (2) (4) (5) (6) (6) (7) 
line 89: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (10) (10) 
line 90: insert (4)
line 91: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (10) (10) 
line 92: search (9)
FALSE
line 93: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (10) (10) 
line 94: insert (8)
line 95: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) 
line 96: insert (5)
line 97: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) 
line 98: kNearestNeighbour 9 (3)
(2) (2) (3) (3) (4) (4) (4) (4) (5) 
line 99: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) 
line 100: nearestNeighbour (4)
(4) 
line 101: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) 
line 102: nodeCount_height_leafCount
nodeCount=23;height=6;leafCount=8
line 103: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) 
line 104: kNearestNeighbour 2 (5)
(5) (5) 
line 105: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) 
line 106: nearestNeighbour (6)
(6) 
line 107: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) 
line 108: insert (9)
line 109: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 110: kNearestNeighbour 6 (4)
(3) (3) (4) (4) (4) (4) 
line 111: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 112: clear
line 113: buildTree 18
(5) (4) (1) (8) (6) (8) (4) (2) (2) (1) (6) (5) (1) (2) (3) (7) (2) (1) 
line 114: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) 
line 115: insert (9)
line 116: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) 
line 117: clear
line 118: buildTree 18
(10) (5) (10) (4) (3) (9) (5) (4) (8) (2) (2) (4) (9) (9) (10) (9) (7) (6) 
line 119: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 120: nearestNeighbour (2)
(2) 
line 121: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 122: insert (4)
line 123: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 124: kNearestNeighbour 3 (2)
(2) (2) (3) 
line 125: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 126: insert (4)
line 127: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 128: kNearestNeighbour 6 (9)
(9) (9) (9) (9) (10) (10) 
line 129: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 130: kNearestNeighbour 4 (2)
(2) (2) (3) (4) 
line 131: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 132: kNearestNeighbour 5 (5)
(4) (4) (4) (5) (5) 
line 133: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 134: insert (2)
line 135: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 136: nearestNeighbour (3)
(3) 
line 137: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) 
line 138: remove (9)
line 139: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 140: postorderTraversal
(2) (3) (2) (2) (4) (4) (4) (5) (5) (4) (4) (8) (7) (9) (10) (10) (10) (9) (9) (6) 
line 141: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 142: kNearestNeighbour 3 (9)
(9) (9) (9) 
line 143: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 144: nearestNeighbour (3)
(3) 
line 145: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 146: insert (7)
line 147: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 148: nearestNeighbour (7)
(7) 
line 149: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 150: nearestNeighbour (8)
(8) 
line 151: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 152: kNearestNeighbour 5 (7)
(6) (7) (7) (8) (9) 
line 153: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 154: insert (1)
line 155: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 156: nearestNeighbour (2)
(2) 
line 157: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 158: search (1)
TRUE
line 159: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 160: remove (9)
line 161: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 162: kNearestNeighbour 6 (7)
(6) (7) (7) (8) (9) (9) 
line 163: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 164: preorderTraversal
(6) (4) (2) (1) (2) (3) (2) (4) (5) (4) (4) (4) (5) (9) (7) (8) (7) (9) (10) (10) (10) 
line 165: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 166: kNearestNeighbour 3 (1)
(1) (2) (2) 
line 167: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 168: insert (3)
line 169: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 170: insert (10)
line 171: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 172: remove (9)
line 173: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 174: insert (3)
line 175: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 176: preorderTraversal
(6) (4) (2) (1) (2) (3) (2) (3) (3) (4) (5) (4) (4) (4) (5) (9) (7) (8) (7) (10) (10) (10) (10) 
line 177: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 178: nearestNeighbour (10)
(10) 
line 179: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 180: nearestNeighbour (9)
(9) 
line 181: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 182: kNearestNeighbour 8 (7)
(5) (5) (6) (7) (7) (8) (9) (10) 
line 183: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 184: nearestNeighbour (1)
(1) 
line 185: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 186: remove (3)
line 187: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 188: kNearestNeighbour 9 (10)
(6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 189: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 190: search (10)
TRUE
line 191: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) 
line 192: insert (10)
line 193: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) (10) (10) 
line 194: insert (6)
line 195: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) (10) (10) (10) 
line 196: remove (8)
line 197: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (9) (10) (10) (10) (10) (10) 
line 198: search (1)
TRUE
line 199: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (9) (10) (10) (10) (10) (10) 
line 200: kNearestNeighbour 1 (2)
(2) 
line 201: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (9) (10) (10) (10) (10) (10) 
line 202: remove (8)
line 203: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (9) (10) (10) (10) (10) (10) 
line 204: kNearestNeighbour 8 (3)
(2) (2) (2) (3) (3) (4) (4) (4) 
line 205: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (9) (10) (10) (10) (10) (10) 
line 206: insert (5)
line 207: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (9) (10) (10) (10) (10) (10) 
line 208: insert (2)
line 209: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (9) (10) (10) (10) (10) (10) 
line 210: clear
line 211: buildTree 11
(3) (6) (10) (6) (8) (9) (10) (6) (6) (10) (7) 
line 212: inorderTraversal
(3) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) 
line 213: clear
line 214: buildTree 16
(10) (6) (1) (3) (6) (4) (9) (1) (4) (10) (10) (3) (1) (1) (8) (7) 
line 215: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (7) (8) (9) (10) (10) (10) 
line 216: nearestNeighbour (4)
(4) 
line 217: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (7) (8) (9) (10) (10) (10) 
line 218: kNearestNeighbour 4 (7)
(6) (6) (7) (8) 
line 219: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (7) (8) (9) (10) (10) (10) 
line 220: insert (1)
line 221: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (7) (8) (9) (10) (10) (10) 
line 222: insert (9)
line 223: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (7) (8) (9) (9) (10) (10) (10) 
line 224: remove (9)
line 225: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (7) (8) (9) (10) (10) (10) 
line 226: kNearestNeighbour 2 (4)
(4) (4) 
line 227: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (7) (8) (9) (10) (10) (10) 
line 228: nearestNeighbour (10)
(10) 
line 229: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (7) (8) (9) (10) (10) (10) 
line 230: remove (7)
line 231: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (8) (9) (10) (10) (10) 
line 232: nearestNeighbour (6)
(6) 
line 233: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (6) (6) (8) (9) (10) (10) (10) 
line 234: insert (5)
line 235: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (8) (9) (10) (10) (10) 
line 236: nearestNeighbour (10)
(10) 
line 237: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (8) (9) (10) (10) (10) 
line 238: insert (6)
line 239: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 240: kNearestNeighbour 7 (6)
(4) (4) (5) (6) (6) (6) (8) 
line 241: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 242: preorderTraversal
(4) (1) (1) (1) (3) (1) (1) (3) (8) (6) (4) (5) (6) (6) (10) (9) (10) (10) 
line 243: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 244: insert (4)
line 245: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (4) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 246: nearestNeighbour (10)
(10) 
line 247: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (4) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 248: preorderTraversal
(4) (1) (1) (1) (3) (1) (1) (3) (8) (6) (4) (5) (4) (6) (6) (10) (9) (10) (10) 
line 249: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (4) (4) (4) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 250: clear
line 251: buildTree 14
(10) (7) (2) (4) (2) (5) (10) (5) (3) (9) (5) (7) (10) (7) 
line 252: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (7) (7) (7) (9) (10) (10) (10) 
line 253: nearestNeighbour (10)
(10) 
line 254: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (7) (7) (7) (9) (10) (10) (10) 
line 255: insert (9)
line 256: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (10) (10) (10) 
line 257: kNearestNeighbour 9 (2)
(2) (2) (3) (4) (5) (5) (5) (7) (7) 
line 258: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (10) (10) (10) 
line 259: nodeCount_height_leafCount
nodeCount=15;height=6;leafCount=6
line 260: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (10) (10) (10) 
line 261: nearestNeighbour (5)
(5) 
line 262: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (10) (10) (10) 
line 263: insert (4)
line 264: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (5) (7) (7) (7) (9) (9) (10) (10) (10) 
line 265: clear
line 266: buildTree 1
(3) 
line 267: inorderTraversal
(3) 
line 268: insert (10)
line 269: inorderTraversal
(3) (10) 
line 270: insert (6)
line 271: inorderTraversal
(3) (6) (10) 
line 272: insert (4)
line 273: inorderTraversal
(3) (4) (6) (10) 
line 274: insert (9)
line 275: inorderTraversal
(3) (4) (6) (9) (10) 
line 276: insert (10)
line 277: inorderTraversal
(3) (4) (6) (9) (10) (10) 
line 278: nearestNeighbour (7)
(6) 
line 279: inorderTraversal
(3) (4) (6) (9) (10) (10) 
line 280: nearestNeighbour (9)
(9) 
line 281: inorderTraversal
(3) (4) (6) (9) (10) (10) 
line 282: kNearestNeighbour 6 (3)
(3) (4) (6) (9) (10) (10) 
line 283: inorderTraversal
(3) (4) (6) (9) (10) (10) 
line 284: nodeCount_height_leafCount
nodeCount=6;height=4;leafCount=3
line 285: inorderTraversal
(3) (4) (6) (9) (10) (10) 
line 286: insert (2)
line 287: inorderTraversal
(2) (3) (4) (6) (9) (10) (10) 
line 288: kNearestNeighbour 8 (9)
(2) (3) (4) (6) (9) (10) (10) 
line 289: inorderTraversal
(2) (3) (4) (6) (9) (10) (10) 
line 290: search (3)
TRUE
line 291: inorderTraversal
(2) (3) (4) (6) (9) (10) (10) 
line 292: postorderTraversal
(2) (4) (9) (6) (10) (10) (3) 
line 293: inorderTraversal
(2) (3) (4) (6) (9) (10) (10) 
line 294: search (10)
TRUE
line 295: inorderTraversal
(2) (3) (4) (6) (9) (10) (10) 
line 296: kNearestNeighbour 4 (3)
(2) (3) (4) (6) 
line 297: inorderTraversal
(2) (3) (4) (6) (9) (10) (10) 
line 298: insert (6)
line 299: inorderTraversal
(2) (3) (4) (6) (6) (9) (10) (10) 
line 300: kNearestNeighbour 3 (10)
(9) (10) (10) 
line 301: inorderTraversal
(2) (3) (4) (6) (6) (9) (10) (10) 
line 302: remove (6)
line 303: inorderTraversal
(2) (3) (4) (6) (9) (10) (10) 
line 304: kNearestNeighbour 9 (8)
(2) (3) (4) (6) (9) (10) (10) 
line 305: inorderTraversal
(2) (3) (4) (6) (9) (10) (10) 
line 306: insert (4)
line 307: inorderTraversal
(2) (3) (4) (4) (6) (9) (10) (10) 
line 308: kNearestNeighbour 2 (4)
(4) (4) 
line 309: inorderTraversal
(2) (3) (4) (4) (6) (9) (10) (10) 
line 310: nearestNeighbour (2)
(2) 
line 311: inorderTraversal
(2) (3) (4) (4) (6) (9) (10) (10) 
line 312: remove (7)
line 313: inorderTraversal
(2) (3) (4) (4) (6) (9) (10) (10) 
line 314: postorderTraversal
(2) (4) (4) (9) (6) (10) (10) (3) 
line 315: inorderTraversal
(2) (3) (4) (4) (6) (9) (10) (10) 
line 316: kNearestNeighbour 1 (5)
(4) 
line 317: inorderTraversal
(2) (3) (4) (4) (6) (9) (10) (10) 
line 318: clear
line 319: buildTree 7
(2) (9) (10) (9) (6) (6) (8) 
line 320: inorderTraversal
(2) (6) (6) (8) (9) (9) (10) 
line 321: search (6)
TRUE
line 322: inorderTraversal
(2) (6) (6) (8) (9) (9) (10) 
line 323: search (6)
TRUE
line 324: inorderTraversal
(2) (6) (6) (8) (9) (9) (10) 
line 325: preorderTraversal
(8) (6) (2) (6) (9) (9) (10) 
line 326: inorderTraversal
(2) (6) (6) (8) (9) (9) (10) 
line 327: clear
line 328: buildTree 11
(1) (1) (2) (2) (6) (5) (8) (1) (9) (9) (6) 
line 329: inorderTraversal
(1) (1) (1) (2) (2) (5) (6) (6) (8) (9) (9) 
line 330: insert (2)
line 331: inorderTraversal
(1) (1) (1) (2) (2) (2) (5) (6) (6) (8) (9) (9) 
line 332: nearestNeighbour (1)
(1) 
line 333: inorderTraversal
(1) (1) (1) (2) (2) (2) (5) (6) (6) (8) (9) (9) 
line 334: kNearestNeighbour 10 (8)
(1) (2) (2) (2) (5) (6) (6) (8) (9) (9) 
line 335: inorderTraversal
(1) (1) (1) (2) (2) (2) (5) (6) (6) (8) (9) (9) 
line 336: kNearestNeighbour 4 (9)
(6) (8) (9) (9) 
line 337: inorderTraversal
(1) (1) (1) (2) (2) (2) (5) (6) (6) (8) (9) (9) 
line 338: insert (9)
line 339: inorderTraversal
(1) (1) (1) (2) (2) (2) (5) (6) (6) (8) (9) (9) (9) 
line 340: nearestNeighbour (7)
(6) 
line 341: inorderTraversal
(1) (1) (1) (2) (2) (2) (5) (6) (6) (8) (9) (9) (9) 
line 342: kNearestNeighbour 4 (3)
(1) (2) (2) (2) 
line 343: inorderTraversal
(1) (1) (1) (2) (2) (2) (5) (6) (6) (8) (9) (9) (9) 
line 344: insert (4)
line 345: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (5) (6) (6) (8) (9) (9) (9) 
line 346: remove (2)
line 347: inorderTraversal
(1) (1) (1) (2) (2) (4) (5) (6) (6) (8) (9) (9) (9) 
line 348: insert (1)
line 349: inorderTraversal
(1) (1) (1) (1) (2) (2) (4) (5) (6) (6) (8) (9) (9) (9) 
line 350: insert (8)
line 351: inorderTraversal
(1) (1) (1) (1) (2) (2) (4) (5) (6) (6) (8) (8) (9) (9) (9) 
line 352: insert (3)
line 353: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (8) (8) (9) (9) (9) 
line 354: clear
line 355: buildTree 4
(8) (4) (6) (7) 
line 356: inorderTraversal
(4) (6) (7) (8) 
line 357: insert (10)
line 358: inorderTraversal
(4) (6) (7) (8) (10) 
line 359: kNearestNeighbour 3 (4)
(4) (6) (7) 
line 360: inorderTraversal
(4) (6) (7) (8) (10) 
line 361: preorderTraversal
(6) (4) (7) (8) (10) 
line 362: inorderTraversal
(4) (6) (7) (8) (10) 
line 363: nearestNeighbour (9)
(10) 
line 364: inorderTraversal
(4) (6) (7) (8) (10) 
line 365: clear
line 366: buildTree 16
(3) (2) (4) (6) (5) (2) (4) (7) (2) (2) (9) (1) (8) (2) (1) (4) 
line 367: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (4) (4) (4) (5) (6) (7) (8) (9) 
line 368: kNearestNeighbour 9 (4)
(2) (2) (2) (3) (4) (4) (4) (5) (6) 
line 369: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (4) (4) (4) (5) (6) (7) (8) (9) 
line 370: nearestNeighbour (5)
(5) 
line 371: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (4) (4) (4) (5) (6) (7) (8) (9) 
line 372: clear
line 373: buildTree 9
(8) (2) (7) (4) (9) (6) (2) (5) (5) 
line 374: inorderTraversal
(2) (2) (4) (5) (5) (6) (7) (8) (9) 
line 375: insert (6)
line 376: inorderTraversal
(2) (2) (4) (5) (5) (6) (6) (7) (8) (9) 
line 377: insert (3)
line 378: inorderTraversal
(2) (2) (3) (4) (5) (5) (6) (6) (7) (8) (9) 
line 379: insert (4)
line 380: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) 
line 381: preorderTraversal
(5) (2) (2) (4) (3) (4) (7) (5) (6) (6) (8) (9) 
line 382: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) 
line 383: kNearestNeighbour 6 (8)
(5) (6) (6) (7) (8) (9) 
line 384: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) 
line 385: nearestNeighbour (8)
(8) 
line 386: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) 
line 387: insert (4)
line 388: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) 
line 389: insert (8)
line 390: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) 
line 391: remove (4)
line 392: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) 
line 393: nearestNeighbour (1)
(2) 
line 394: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) 
line 395: clear
line 396: buildTree 10
(2) (7) (7) (10) (4) (8) (7) (4) (7) (2) 
line 397: inorderTraversal
(2) (2) (4) (4) (7) (7) (7) (7) (8) (10) 
line 398: search (7)
TRUE
line 399: inorderTraversal
(2) (2) (4) (4) (7) (7) (7) (7) (8) (10) 
line 400: nearestNeighbour (1)
(2) 
line 401: inorderTraversal
(2) (2) (4) (4) (7) (7) (7) (7) (8) (10) 
line 402: nearestNeighbour (7)
(7) 
line 403: inorderTraversal
(2) (2) (4) (4) (7) (7) (7) (7) (8) (10) 
line 404: nearestNeighbour (9)
(10) 
line 405: inorderTraversal
(2) (2) (4) (4) (7) (7) (7) (7) (8) (10) 
line 406: insert (4)
line 407: inorderTraversal
(2) (2) (4) (4) (4) (7) (7) (7) (7) (8) (10) 
line 408: nearestNeighbour (2)
(2) 
line 409: inorderTraversal
(2) (2) (4) (4) (4) (7) (7) (7) (7) (8) (10) 
line 410: insert (3)
line 411: inorderTraversal
(2) (2) (3) (4) (4) (4) (7) (7) (7) (7) (8) (10) 
line 412: insert (3)
line 413: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (7) (7) (7) (7) (8) (10) 
line 414: insert (2)
line 415: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (4) (7) (7) (7) (7) (8) (10) 
line 416: insert (3)
line 417: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (7) (7) (8) (10) 
line 418: nodeCount_height_leafCount
nodeCount=15;height=7;leafCount=5
line 419: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (7) (7) (8) (10) 
line 420: preorderTraversal
(7) (2) (4) (2) (3) (2) (3) (3) (4) (4) (7) (7) (8) (7) (10) 
line 421: postorderTraversal
(2) (3) (3) (3) (2) (4) (4) (4) (2) (7) (10) (8) (7) (7) (7) 
line 422: clear
