line 1: k=1
line 2: clear
line 3: buildTree 11
(3) (7) (6) (10) (9) (6) (8) (5) (6) (5) (9) 
line 4: inorderTraversal
(3) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 5: kNearestNeighbour 1 (9)
(9) 
line 6: inorderTraversal
(3) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 7: nearestNeighbour (5)
(5) 
line 8: inorderTraversal
(3) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 9: insert (4)
line 10: inorderTraversal
(3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 11: kNearestNeighbour 5 (7)
(6) (6) (6) (7) (8) 
line 12: inorderTraversal
(3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 13: kNearestNeighbour 7 (5)
(3) (4) (5) (5) (6) (6) (6) 
line 14: inorderTraversal
(3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 15: nearestNeighbour (3)
(3) 
line 16: inorderTraversal
(3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 17: clear
line 18: buildTree 12
(5) (2) (4) (7) (9) (5) (10) (1) (1) (8) (4) (6) 
line 19: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (7) (8) (9) (10) 
line 20: insert (3)
line 21: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (7) (8) (9) (10) 
line 22: insert (6)
line 23: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (10) 
line 24: nearestNeighbour (9)
(9) 
line 25: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (10) 
line 26: kNearestNeighbour 6 (7)
(5) (6) (6) (7) (8) (9) 
line 27: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (10) 
line 28: kNearestNeighbour 4 (4)
(3) (4) (4) (5) 
line 29: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (10) 
line 30: remove (7)
line 31: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 32: insert (4)
line 33: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 34: insert (2)
line 35: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 36: kNearestNeighbour 1 (8)
(8) 
line 37: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 38: insert (1)
line 39: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 40: insert (4)
line 41: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 42: nearestNeighbour (4)
(4) 
line 43: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 44: kNearestNeighbour 5 (7)
(5) (6) (6) (8) (9) 
line 45: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 46: kNearestNeighbour 4 (4)
(4) (4) (4) (4) 
line 47: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 48: insert (1)
line 49: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 50: nearestNeighbour (7)
(6) 
line 51: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (8) (9) (10) 
line 52: clear
line 53: buildTree 19
(4) (10) (3) (10) (5) (2) (4) (6) (5) (7) (5) (4) (3) (3) (5) (9) (5) (8) (9) 
line 54: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) (10) (10) 
line 55: nearestNeighbour (8)
(8) 
line 56: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) (10) (10) 
line 57: clear
line 58: buildTree 16
(9) (3) (4) (8) (10) (2) (7) (9) (7) (1) (6) (9) (5) (7) (5) (9) 
line 59: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 60: nearestNeighbour (6)
(6) 
line 61: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 62: clear
line 63: buildTree 4
(3) (7) (8) (5) 
line 64: inorderTraversal
(3) (5) (7) (8) 
line 65: insert (1)
line 66: inorderTraversal
(1) (3) (5) (7) (8) 
line 67: nearestNeighbour (10)
(8) 
line 68: inorderTraversal
(1) (3) (5) (7) (8) 
line 69: insert (1)
line 70: inorderTraversal
(1) (1) (3) (5) (7) (8) 
line 71: insert (6)
line 72: inorderTraversal
(1) (1) (3) (5) (6) (7) (8) 
line 73: nearestNeighbour (5)
(5) 
line 74: inorderTraversal
(1) (1) (3) (5) (6) (7) (8) 
line 75: remove (7)
line 76: inorderTraversal
(1) (1) (3) (5) (6) (8) 
line 77: insert (10)
line 78: inorderTraversal
(1) (1) (3) (5) (6) (8) (10) 
line 79: kNearestNeighbour 1 (6)
(6) 
line 80: inorderTraversal
(1) (1) (3) (5) (6) (8) (10) 
line 81: clear
line 82: buildTree 5
(10) (3) (1) (8) (6) 
line 83: inorderTraversal
(1) (3) (6) (8) (10) 
line 84: insert (7)
line 85: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 86: kNearestNeighbour 10 (9)
(1) (3) (6) (7) (8) (10) 
line 87: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 88: insert (10)
line 89: inorderTraversal
(1) (3) (6) (7) (8) (10) (10) 
line 90: clear
line 91: buildTree 9
(8) (7) (3) (2) (6) (7) (1) (6) (1) 
line 92: inorderTraversal
(1) (1) (2) (3) (6) (6) (7) (7) (8) 
line 93: clear
line 94: buildTree 7
(6) (3) (10) (5) (9) (3) (6) 
line 95: inorderTraversal
(3) (3) (5) (6) (6) (9) (10) 
line 96: nearestNeighbour (2)
(3) 
line 97: inorderTraversal
(3) (3) (5) (6) (6) (9) (10) 
line 98: search (3)
TRUE
line 99: inorderTraversal
(3) (3) (5) (6) (6) (9) (10) 
line 100: kNearestNeighbour 6 (7)
(3) (5) (6) (6) (9) (10) 
line 101: inorderTraversal
(3) (3) (5) (6) (6) (9) (10) 
line 102: search (3)
TRUE
line 103: inorderTraversal
(3) (3) (5) (6) (6) (9) (10) 
line 104: insert (2)
line 105: inorderTraversal
(2) (3) (3) (5) (6) (6) (9) (10) 
line 106: remove (5)
line 107: inorderTraversal
(2) (3) (3) (6) (6) (9) (10) 
line 108: nearestNeighbour (3)
(3) 
line 109: inorderTraversal
(2) (3) (3) (6) (6) (9) (10) 
line 110: nearestNeighbour (9)
(9) 
line 111: inorderTraversal
(2) (3) (3) (6) (6) (9) (10) 
line 112: nearestNeighbour (1)
(2) 
line 113: inorderTraversal
(2) (3) (3) (6) (6) (9) (10) 
line 114: search (10)
TRUE
line 115: inorderTraversal
(2) (3) (3) (6) (6) (9) (10) 
line 116: insert (2)
line 117: inorderTraversal
(2) (2) (3) (3) (6) (6) (9) (10) 
line 118: nearestNeighbour (2)
(2) 
line 119: inorderTraversal
(2) (2) (3) (3) (6) (6) (9) (10) 
line 120: insert (8)
line 121: inorderTraversal
(2) (2) (3) (3) (6) (6) (8) (9) (10) 
line 122: nearestNeighbour (2)
(2) 
line 123: inorderTraversal
(2) (2) (3) (3) (6) (6) (8) (9) (10) 
line 124: insert (3)
line 125: inorderTraversal
(2) (2) (3) (3) (3) (6) (6) (8) (9) (10) 
line 126: postorderTraversal
(2) (2) (3) (3) (3) (8) (6) (10) (9) (6) 
line 127: inorderTraversal
(2) (2) (3) (3) (3) (6) (6) (8) (9) (10) 
line 128: insert (9)
line 129: inorderTraversal
(2) (2) (3) (3) (3) (6) (6) (8) (9) (9) (10) 
line 130: search (3)
TRUE
line 131: inorderTraversal
(2) (2) (3) (3) (3) (6) (6) (8) (9) (9) (10) 
line 132: insert (6)
line 133: inorderTraversal
(2) (2) (3) (3) (3) (6) (6) (6) (8) (9) (9) (10) 
line 134: nearestNeighbour (7)
(6) 
line 135: inorderTraversal
(2) (2) (3) (3) (3) (6) (6) (6) (8) (9) (9) (10) 
line 136: clear
line 137: buildTree 6
(8) (2) (2) (8) (10) (10) 
line 138: inorderTraversal
(2) (2) (8) (8) (10) (10) 
line 139: insert (2)
line 140: inorderTraversal
(2) (2) (2) (8) (8) (10) (10) 
line 141: nodeCount_height_leafCount
nodeCount=7;height=4;leafCount=3
line 142: inorderTraversal
(2) (2) (2) (8) (8) (10) (10) 
line 143: clear
line 144: buildTree 4
(5) (1) (8) (8) 
line 145: inorderTraversal
(1) (5) (8) (8) 
line 146: insert (3)
line 147: inorderTraversal
(1) (3) (5) (8) (8) 
line 148: insert (9)
line 149: inorderTraversal
(1) (3) (5) (8) (8) (9) 
line 150: insert (9)
line 151: inorderTraversal
(1) (3) (5) (8) (8) (9) (9) 
line 152: kNearestNeighbour 2 (4)
(3) (5) 
line 153: inorderTraversal
(1) (3) (5) (8) (8) (9) (9) 
line 154: clear
line 155: buildTree 18
(1) (2) (1) (8) (9) (2) (9) (3) (1) (8) (8) (10) (6) (4) (1) (8) (5) (9) 
line 156: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (8) (8) (8) (8) (9) (9) (9) (10) 
line 157: nearestNeighbour (5)
(5) 
line 158: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (8) (8) (8) (8) (9) (9) (9) (10) 
line 159: nearestNeighbour (7)
(6) 
line 160: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (8) (8) (8) (8) (9) (9) (9) (10) 
line 161: search (8)
TRUE
line 162: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (8) (8) (8) (8) (9) (9) (9) (10) 
line 163: kNearestNeighbour 9 (3)
(1) (1) (1) (1) (2) (2) (3) (4) (5) 
line 164: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (8) (8) (8) (8) (9) (9) (9) (10) 
line 165: remove (6)
line 166: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (8) (8) (8) (8) (9) (9) (9) (10) 
line 167: remove (1)
line 168: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (8) (8) (8) (8) (9) (9) (9) (10) 
line 169: kNearestNeighbour 8 (8)
(8) (8) (8) (8) (9) (9) (9) (10) 
line 170: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (8) (8) (8) (8) (9) (9) (9) (10) 
line 171: insert (3)
line 172: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (5) (8) (8) (8) (8) (9) (9) (9) (10) 
line 173: clear
line 174: buildTree 17
(4) (8) (1) (7) (7) (1) (6) (9) (6) (1) (6) (5) (5) (4) (9) (4) (1) 
line 175: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) 
line 176: insert (8)
line 177: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) 
line 178: remove (8)
line 179: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) 
line 180: postorderTraversal
(1) (1) (4) (4) (4) (1) (1) (5) (6) (6) (6) (7) (9) (9) (8) (7) (5) 
line 181: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) 
line 182: insert (5)
line 183: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) 
line 184: nearestNeighbour (7)
(7) 
line 185: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) 
line 186: insert (6)
line 187: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 188: kNearestNeighbour 7 (4)
(4) (4) (4) (5) (5) (5) (6) 
line 189: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 190: kNearestNeighbour 4 (10)
(7) (8) (9) (9) 
line 191: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 192: insert (6)
line 193: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 194: nearestNeighbour (4)
(4) 
line 195: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 196: remove (3)
line 197: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 198: insert (5)
line 199: inorderTraversal
(1) (1) (1) (1) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 200: insert (2)
line 201: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 202: nearestNeighbour (6)
(6) 
line 203: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (4) (5) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 204: clear
line 205: buildTree 20
(8) (2) (6) (2) (1) (9) (3) (4) (2) (8) (5) (10) (8) (2) (4) (6) (5) (1) (5) (7) 
line 206: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 207: kNearestNeighbour 3 (9)
(8) (9) (10) 
line 208: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 209: nearestNeighbour (6)
(6) 
line 210: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 211: insert (5)
line 212: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 213: kNearestNeighbour 1 (5)
(5) 
line 214: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 215: clear
line 216: buildTree 17
(5) (9) (5) (6) (2) (2) (9) (4) (8) (9) (1) (3) (5) (1) (3) (3) (6) 
line 217: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (5) (6) (6) (8) (9) (9) (9) 
line 218: kNearestNeighbour 2 (2)
(2) (2) 
line 219: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (5) (6) (6) (8) (9) (9) (9) 
line 220: clear
line 221: buildTree 18
(1) (6) (8) (4) (1) (7) (7) (3) (8) (10) (3) (1) (3) (7) (2) (5) (6) (9) 
line 222: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 223: postorderTraversal
(1) (1) (1) (4) (3) (3) (3) (2) (6) (6) (7) (7) (8) (10) (9) (8) (7) (5) 
line 224: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 225: clear
line 226: buildTree 17
(1) (7) (10) (4) (10) (5) (7) (4) (7) (6) (3) (8) (3) (1) (5) (6) (3) 
line 227: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (10) (10) 
line 228: insert (5)
line 229: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (10) (10) 
line 230: search (10)
TRUE
line 231: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (10) (10) 
line 232: nearestNeighbour (1)
(1) 
line 233: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (10) (10) 
line 234: insert (3)
line 235: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (10) (10) 
line 236: insert (9)
line 237: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (10) (10) 
line 238: clear
line 239: buildTree 13
(4) (4) (9) (5) (2) (3) (2) (5) (4) (8) (2) (4) (5) 
line 240: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (5) (5) (5) (8) (9) 
line 241: nearestNeighbour (10)
(9) 
line 242: inorderTraversal
(2) (2) (2) (3) (4) (4) (4) (4) (5) (5) (5) (8) (9) 
line 243: clear
line 244: buildTree 7
(7) (4) (9) (7) (8) (3) (6) 
line 245: inorderTraversal
(3) (4) (6) (7) (7) (8) (9) 
line 246: kNearestNeighbour 10 (1)
(3) (4) (6) (7) (7) (8) (9) 
line 247: inorderTraversal
(3) (4) (6) (7) (7) (8) (9) 
line 248: preorderTraversal
(7) (4) (3) (6) (8) (7) (9) 
line 249: inorderTraversal
(3) (4) (6) (7) (7) (8) (9) 
line 250: insert (4)
line 251: inorderTraversal
(3) (4) (4) (6) (7) (7) (8) (9) 
line 252: search (8)
TRUE
line 253: inorderTraversal
(3) (4) (4) (6) (7) (7) (8) (9) 
line 254: nearestNeighbour (1)
(3) 
line 255: inorderTraversal
(3) (4) (4) (6) (7) (7) (8) (9) 
line 256: insert (1)
line 257: inorderTraversal
(1) (3) (4) (4) (6) (7) (7) (8) (9) 
line 258: insert (7)
line 259: inorderTraversal
(1) (3) (4) (4) (6) (7) (7) (7) (8) (9) 
line 260: nearestNeighbour (8)
(8) 
line 261: inorderTraversal
(1) (3) (4) (4) (6) (7) (7) (7) (8) (9) 
line 262: insert (5)
line 263: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) 
line 264: kNearestNeighbour 3 (1)
(1) (3) (4) 
line 265: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) 
line 266: clear
line 267: buildTree 15
(5) (5) (7) (9) (1) (5) (5) (1) (8) (7) (2) (9) (8) (5) (8) 
line 268: inorderTraversal
(1) (1) (2) (5) (5) (5) (5) (5) (7) (7) (8) (8) (8) (9) (9) 
line 269: nearestNeighbour (2)
(2) 
line 270: inorderTraversal
(1) (1) (2) (5) (5) (5) (5) (5) (7) (7) (8) (8) (8) (9) (9) 
line 271: kNearestNeighbour 9 (4)
(1) (1) (2) (5) (5) (5) (5) (5) (7) 
line 272: inorderTraversal
(1) (1) (2) (5) (5) (5) (5) (5) (7) (7) (8) (8) (8) (9) (9) 
line 273: clear
line 274: buildTree 20
(8) (10) (8) (3) (10) (5) (3) (7) (3) (5) (2) (2) (6) (10) (5) (3) (10) (7) (9) (9) 
line 275: inorderTraversal
(2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 276: nearestNeighbour (1)
(2) 
line 277: inorderTraversal
(2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 278: remove (2)
line 279: inorderTraversal
(2) (3) (3) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 280: insert (4)
line 281: inorderTraversal
(2) (3) (3) (3) (3) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 282: clear
line 283: buildTree 17
(8) (6) (9) (4) (2) (5) (1) (7) (7) (9) (3) (3) (2) (8) (8) (10) (5) 
line 284: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) 
line 285: remove (8)
line 286: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) 
line 287: kNearestNeighbour 9 (10)
(5) (6) (7) (7) (8) (8) (9) (9) (10) 
line 288: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) 
line 289: insert (7)
line 290: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 291: clear
line 292: buildTree 8
(5) (10) (10) (3) (5) (8) (5) (8) 
line 293: inorderTraversal
(3) (5) (5) (5) (8) (8) (10) (10) 
line 294: remove (8)
line 295: inorderTraversal
(3) (5) (5) (5) (8) (10) (10) 
line 296: clear
line 297: buildTree 3
(1) (2) (4) 
line 298: inorderTraversal
(1) (2) (4) 
line 299: remove (1)
line 300: inorderTraversal
(2) (4) 
line 301: insert (9)
line 302: inorderTraversal
(2) (4) (9) 
line 303: insert (5)
line 304: inorderTraversal
(2) (4) (5) (9) 
line 305: insert (9)
line 306: inorderTraversal
(2) (4) (5) (9) (9) 
line 307: kNearestNeighbour 9 (9)
(2) (4) (5) (9) (9) 
line 308: inorderTraversal
(2) (4) (5) (9) (9) 
line 309: postorderTraversal
(5) (9) (9) (4) (2) 
line 310: inorderTraversal
(2) (4) (5) (9) (9) 
line 311: insert (7)
line 312: inorderTraversal
(2) (4) (5) (7) (9) (9) 
line 313: kNearestNeighbour 5 (8)
(4) (5) (7) (9) (9) 
line 314: inorderTraversal
(2) (4) (5) (7) (9) (9) 
line 315: kNearestNeighbour 9 (8)
(2) (4) (5) (7) (9) (9) 
line 316: inorderTraversal
(2) (4) (5) (7) (9) (9) 
line 317: nearestNeighbour (9)
(9) 
line 318: inorderTraversal
(2) (4) (5) (7) (9) (9) 
line 319: kNearestNeighbour 7 (10)
(2) (4) (5) (7) (9) (9) 
line 320: inorderTraversal
(2) (4) (5) (7) (9) (9) 
line 321: remove (1)
line 322: inorderTraversal
(2) (4) (5) (7) (9) (9) 
line 323: insert (5)
line 324: inorderTraversal
(2) (4) (5) (5) (7) (9) (9) 
line 325: nearestNeighbour (9)
(9) 
line 326: inorderTraversal
(2) (4) (5) (5) (7) (9) (9) 
line 327: kNearestNeighbour 6 (2)
(2) (4) (5) (5) (7) (9) 
line 328: inorderTraversal
(2) (4) (5) (5) (7) (9) (9) 
line 329: insert (5)
line 330: inorderTraversal
(2) (4) (5) (5) (5) (7) (9) (9) 
line 331: remove (5)
line 332: inorderTraversal
(2) (4) (5) (5) (7) (9) (9) 
line 333: nearestNeighbour (5)
(5) 
line 334: inorderTraversal
(2) (4) (5) (5) (7) (9) (9) 
line 335: nearestNeighbour (1)
(2) 
line 336: inorderTraversal
(2) (4) (5) (5) (7) (9) (9) 
line 337: insert (3)
line 338: inorderTraversal
(2) (3) (4) (5) (5) (7) (9) (9) 
line 339: remove (5)
line 340: inorderTraversal
(2) (3) (4) (5) (7) (9) (9) 
line 341: insert (5)
line 342: inorderTraversal
(2) (3) (4) (5) (5) (7) (9) (9) 
line 343: kNearestNeighbour 3 (5)
(4) (5) (5) 
line 344: inorderTraversal
(2) (3) (4) (5) (5) (7) (9) (9) 
line 345: nodeCount_height_leafCount
nodeCount=8;height=6;leafCount=3
line 346: inorderTraversal
(2) (3) (4) (5) (5) (7) (9) (9) 
line 347: nearestNeighbour (8)
(7) 
line 348: inorderTraversal
(2) (3) (4) (5) (5) (7) (9) (9) 
line 349: insert (9)
line 350: inorderTraversal
(2) (3) (4) (5) (5) (7) (9) (9) (9) 
line 351: kNearestNeighbour 10 (1)
(2) (3) (4) (5) (5) (7) (9) (9) (9) 
line 352: inorderTraversal
(2) (3) (4) (5) (5) (7) (9) (9) (9) 
line 353: insert (2)
line 354: inorderTraversal
(2) (2) (3) (4) (5) (5) (7) (9) (9) (9) 
line 355: remove (5)
line 356: inorderTraversal
(2) (2) (3) (4) (5) (7) (9) (9) (9) 
line 357: insert (7)
line 358: inorderTraversal
(2) (2) (3) (4) (5) (7) (7) (9) (9) (9) 
line 359: nearestNeighbour (1)
(2) 
line 360: inorderTraversal
(2) (2) (3) (4) (5) (7) (7) (9) (9) (9) 
line 361: insert (4)
line 362: inorderTraversal
(2) (2) (3) (4) (4) (5) (7) (7) (9) (9) (9) 
line 363: insert (7)
line 364: inorderTraversal
(2) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) 
line 365: insert (1)
line 366: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) 
line 367: nearestNeighbour (3)
(3) 
line 368: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) 
line 369: postorderTraversal
(1) (2) (3) (4) (7) (7) (7) (5) (9) (9) (9) (4) (2) 
line 370: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) 
line 371: insert (9)
line 372: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) (9) 
line 373: kNearestNeighbour 3 (10)
(9) (9) (9) 
line 374: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) (9) 
line 375: kNearestNeighbour 7 (2)
(1) (2) (2) (3) (4) (4) (5) 
line 376: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) (9) 
line 377: nearestNeighbour (5)
(5) 
line 378: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (7) (9) (9) (9) (9) 
line 379: insert (7)
line 380: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (7) (7) (9) (9) (9) (9) 
line 381: kNearestNeighbour 2 (8)
(7) (7) 
line 382: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (7) (7) (7) (7) (9) (9) (9) (9) 
line 383: insert (5)
line 384: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (7) (7) (7) (7) (9) (9) (9) (9) 
line 385: search (3)
TRUE
line 386: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (7) (7) (7) (7) (9) (9) (9) (9) 
line 387: insert (9)
line 388: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (7) (7) (7) (7) (9) (9) (9) (9) (9) 
line 389: nearestNeighbour (9)
(9) 
line 390: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (7) (7) (7) (7) (9) (9) (9) (9) (9) 
line 391: nearestNeighbour (1)
(1) 
line 392: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (7) (7) (7) (7) (9) (9) (9) (9) (9) 
line 393: nearestNeighbour (10)
(9) 
line 394: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (7) (7) (7) (7) (9) (9) (9) (9) (9) 
line 395: search (5)
TRUE
line 396: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (7) (7) (7) (7) (9) (9) (9) (9) (9) 
line 397: clear
line 398: buildTree 16
(3) (10) (3) (2) (8) (9) (10) (6) (7) (9) (7) (8) (4) (10) (5) (1) 
line 399: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 400: insert (3)
line 401: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 402: nodeCount_height_leafCount
nodeCount=17;height=5;leafCount=7
line 403: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 404: insert (5)
line 405: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 406: nearestNeighbour (8)
(8) 
line 407: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 408: insert (3)
line 409: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 410: search (3)
TRUE
line 411: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 412: insert (3)
line 413: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 414: kNearestNeighbour 5 (1)
(1) (2) (3) (3) (3) 
line 415: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 416: remove (9)
line 417: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) (10) 
line 418: insert (10)
line 419: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) (10) (10) 
line 420: insert (10)
line 421: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 422: kNearestNeighbour 5 (9)
(9) (10) (10) (10) (10) 
line 423: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 424: remove (3)
line 425: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 426: nodeCount_height_leafCount
nodeCount=20;height=7;leafCount=6
line 427: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 428: preorderTraversal
(7) (3) (1) (2) (4) (3) (3) (3) (5) (6) (5) (9) (8) (7) (8) (10) (10) (10) (10) (10) 
line 429: postorderTraversal
(2) (1) (3) (3) (3) (5) (6) (5) (4) (3) (7) (8) (8) (10) (10) (10) (10) (10) (9) (7) 
line 430: clear
