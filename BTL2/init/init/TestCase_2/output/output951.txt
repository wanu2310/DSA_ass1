line 1: k=1
line 2: insert (8)
line 3: inorderTraversal
(8) 
line 4: search (8)
TRUE
line 5: inorderTraversal
(8) 
line 6: insert (1)
line 7: inorderTraversal
(1) (8) 
line 8: nearestNeighbour (3)
(1) 
line 9: inorderTraversal
(1) (8) 
line 10: kNearestNeighbour 9 (9)
(1) (8) 
line 11: inorderTraversal
(1) (8) 
line 12: insert (4)
line 13: inorderTraversal
(1) (4) (8) 
line 14: nearestNeighbour (1)
(1) 
line 15: inorderTraversal
(1) (4) (8) 
line 16: nearestNeighbour (5)
(4) 
line 17: inorderTraversal
(1) (4) (8) 
line 18: postorderTraversal
(4) (1) (8) 
line 19: inorderTraversal
(1) (4) (8) 
line 20: nearestNeighbour (7)
(8) 
line 21: inorderTraversal
(1) (4) (8) 
line 22: insert (1)
line 23: inorderTraversal
(1) (1) (4) (8) 
line 24: nearestNeighbour (5)
(4) 
line 25: inorderTraversal
(1) (1) (4) (8) 
line 26: insert (6)
line 27: inorderTraversal
(1) (1) (4) (6) (8) 
line 28: insert (4)
line 29: inorderTraversal
(1) (1) (4) (4) (6) (8) 
line 30: nearestNeighbour (3)
(4) 
line 31: inorderTraversal
(1) (1) (4) (4) (6) (8) 
line 32: clear
line 33: buildTree 19
(7) (3) (6) (5) (9) (2) (10) (4) (6) (10) (4) (10) (4) (10) (9) (10) (8) (5) (6) 
line 34: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 35: remove (9)
line 36: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) (10) 
line 37: insert (5)
line 38: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) (10) 
line 39: insert (6)
line 40: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) (10) 
line 41: nearestNeighbour (2)
(2) 
line 42: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) (10) 
line 43: nearestNeighbour (5)
(5) 
line 44: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) (10) 
line 45: kNearestNeighbour 10 (2)
(2) (3) (4) (4) (4) (5) (5) (5) (6) (6) 
line 46: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) (10) 
line 47: clear
line 48: buildTree 1
(9) 
line 49: inorderTraversal
(9) 
line 50: kNearestNeighbour 4 (4)
(9) 
line 51: inorderTraversal
(9) 
line 52: nearestNeighbour (8)
(9) 
line 53: inorderTraversal
(9) 
line 54: insert (2)
line 55: inorderTraversal
(2) (9) 
line 56: nearestNeighbour (5)
(2) 
line 57: inorderTraversal
(2) (9) 
line 58: kNearestNeighbour 9 (2)
(2) (9) 
line 59: inorderTraversal
(2) (9) 
line 60: nearestNeighbour (10)
(9) 
line 61: inorderTraversal
(2) (9) 
line 62: search (2)
TRUE
line 63: inorderTraversal
(2) (9) 
line 64: kNearestNeighbour 10 (2)
(2) (9) 
line 65: inorderTraversal
(2) (9) 
line 66: nearestNeighbour (7)
(9) 
line 67: inorderTraversal
(2) (9) 
line 68: nearestNeighbour (9)
(9) 
line 69: inorderTraversal
(2) (9) 
line 70: kNearestNeighbour 3 (10)
(2) (9) 
line 71: inorderTraversal
(2) (9) 
line 72: insert (6)
line 73: inorderTraversal
(2) (6) (9) 
line 74: nearestNeighbour (8)
(9) 
line 75: inorderTraversal
(2) (6) (9) 
line 76: insert (7)
line 77: inorderTraversal
(2) (6) (7) (9) 
line 78: remove (2)
line 79: inorderTraversal
(6) (7) (9) 
line 80: nearestNeighbour (5)
(6) 
line 81: inorderTraversal
(6) (7) (9) 
line 82: insert (7)
line 83: inorderTraversal
(6) (7) (7) (9) 
line 84: nearestNeighbour (9)
(9) 
line 85: inorderTraversal
(6) (7) (7) (9) 
line 86: insert (4)
line 87: inorderTraversal
(4) (6) (7) (7) (9) 
line 88: kNearestNeighbour 9 (2)
(4) (6) (7) (7) (9) 
line 89: inorderTraversal
(4) (6) (7) (7) (9) 
line 90: kNearestNeighbour 1 (6)
(6) 
line 91: inorderTraversal
(4) (6) (7) (7) (9) 
line 92: clear
line 93: buildTree 1
(3) 
line 94: inorderTraversal
(3) 
line 95: search (3)
TRUE
line 96: inorderTraversal
(3) 
line 97: insert (10)
line 98: inorderTraversal
(3) (10) 
line 99: insert (8)
line 100: inorderTraversal
(3) (8) (10) 
line 101: kNearestNeighbour 2 (3)
(3) (8) 
line 102: inorderTraversal
(3) (8) (10) 
line 103: clear
line 104: buildTree 3
(10) (5) (10) 
line 105: inorderTraversal
(5) (10) (10) 
line 106: remove (10)
line 107: inorderTraversal
(5) (10) 
line 108: insert (6)
line 109: inorderTraversal
(5) (6) (10) 
line 110: insert (5)
line 111: inorderTraversal
(5) (5) (6) (10) 
line 112: insert (3)
line 113: inorderTraversal
(3) (5) (5) (6) (10) 
line 114: nearestNeighbour (10)
(10) 
line 115: inorderTraversal
(3) (5) (5) (6) (10) 
line 116: clear
line 117: buildTree 19
(10) (10) (6) (3) (7) (10) (4) (10) (2) (6) (8) (5) (3) (3) (10) (10) (5) (10) (3) 
line 118: inorderTraversal
(2) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (10) (10) (10) (10) (10) (10) (10) 
line 119: nearestNeighbour (7)
(7) 
line 120: inorderTraversal
(2) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (10) (10) (10) (10) (10) (10) (10) 
line 121: insert (1)
line 122: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (10) (10) (10) (10) (10) (10) (10) 
line 123: remove (3)
line 124: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (10) (10) (10) (10) (10) (10) (10) 
line 125: nearestNeighbour (1)
(1) 
line 126: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (10) (10) (10) (10) (10) (10) (10) 
line 127: insert (1)
line 128: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (10) (10) (10) (10) (10) (10) (10) 
line 129: clear
line 130: buildTree 13
(3) (6) (6) (3) (4) (9) (5) (2) (6) (5) (8) (1) (2) 
line 131: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (8) (9) 
line 132: insert (5)
line 133: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (8) (9) 
line 134: remove (9)
line 135: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (8) 
line 136: kNearestNeighbour 6 (9)
(5) (5) (6) (6) (6) (8) 
line 137: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (8) 
line 138: kNearestNeighbour 9 (1)
(1) (2) (2) (3) (3) (4) (5) (5) (5) 
line 139: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (8) 
line 140: kNearestNeighbour 5 (3)
(2) (2) (3) (3) (4) 
line 141: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (8) 
line 142: clear
line 143: buildTree 4
(7) (6) (5) (5) 
line 144: inorderTraversal
(5) (5) (6) (7) 
line 145: kNearestNeighbour 8 (2)
(5) (5) (6) (7) 
line 146: inorderTraversal
(5) (5) (6) (7) 
line 147: kNearestNeighbour 7 (3)
(5) (5) (6) (7) 
line 148: inorderTraversal
(5) (5) (6) (7) 
line 149: remove (7)
line 150: inorderTraversal
(5) (5) (6) 
line 151: kNearestNeighbour 6 (4)
(5) (5) (6) 
line 152: inorderTraversal
(5) (5) (6) 
line 153: remove (5)
line 154: inorderTraversal
(5) (6) 
line 155: kNearestNeighbour 6 (10)
(5) (6) 
line 156: inorderTraversal
(5) (6) 
line 157: nearestNeighbour (9)
(6) 
line 158: inorderTraversal
(5) (6) 
line 159: preorderTraversal
(5) (6) 
line 160: inorderTraversal
(5) (6) 
line 161: kNearestNeighbour 4 (10)
(5) (6) 
line 162: inorderTraversal
(5) (6) 
line 163: nearestNeighbour (6)
(6) 
line 164: inorderTraversal
(5) (6) 
line 165: insert (1)
line 166: inorderTraversal
(1) (5) (6) 
line 167: insert (3)
line 168: inorderTraversal
(1) (3) (5) (6) 
line 169: postorderTraversal
(3) (1) (6) (5) 
line 170: inorderTraversal
(1) (3) (5) (6) 
line 171: kNearestNeighbour 9 (7)
(1) (3) (5) (6) 
line 172: inorderTraversal
(1) (3) (5) (6) 
line 173: insert (2)
line 174: inorderTraversal
(1) (2) (3) (5) (6) 
line 175: nearestNeighbour (10)
(6) 
line 176: inorderTraversal
(1) (2) (3) (5) (6) 
line 177: nearestNeighbour (7)
(6) 
line 178: inorderTraversal
(1) (2) (3) (5) (6) 
line 179: insert (6)
line 180: inorderTraversal
(1) (2) (3) (5) (6) (6) 
line 181: insert (3)
line 182: inorderTraversal
(1) (2) (3) (3) (5) (6) (6) 
line 183: search (3)
TRUE
line 184: inorderTraversal
(1) (2) (3) (3) (5) (6) (6) 
line 185: insert (8)
line 186: inorderTraversal
(1) (2) (3) (3) (5) (6) (6) (8) 
line 187: clear
line 188: buildTree 7
(6) (6) (7) (6) (2) (9) (3) 
line 189: inorderTraversal
(2) (3) (6) (6) (6) (7) (9) 
line 190: kNearestNeighbour 6 (5)
(2) (3) (6) (6) (6) (7) 
line 191: inorderTraversal
(2) (3) (6) (6) (6) (7) (9) 
line 192: insert (10)
line 193: inorderTraversal
(2) (3) (6) (6) (6) (7) (9) (10) 
line 194: insert (2)
line 195: inorderTraversal
(2) (2) (3) (6) (6) (6) (7) (9) (10) 
line 196: remove (2)
line 197: inorderTraversal
(2) (3) (6) (6) (6) (7) (9) (10) 
line 198: insert (7)
line 199: inorderTraversal
(2) (3) (6) (6) (6) (7) (7) (9) (10) 
line 200: insert (9)
line 201: inorderTraversal
(2) (3) (6) (6) (6) (7) (7) (9) (9) (10) 
line 202: insert (3)
line 203: inorderTraversal
(2) (3) (3) (6) (6) (6) (7) (7) (9) (9) (10) 
line 204: kNearestNeighbour 8 (7)
(6) (6) (6) (7) (7) (9) (9) (10) 
line 205: inorderTraversal
(2) (3) (3) (6) (6) (6) (7) (7) (9) (9) (10) 
line 206: search (6)
TRUE
line 207: inorderTraversal
(2) (3) (3) (6) (6) (6) (7) (7) (9) (9) (10) 
line 208: nearestNeighbour (4)
(3) 
line 209: inorderTraversal
(2) (3) (3) (6) (6) (6) (7) (7) (9) (9) (10) 
line 210: search (6)
TRUE
line 211: inorderTraversal
(2) (3) (3) (6) (6) (6) (7) (7) (9) (9) (10) 
line 212: clear
line 213: buildTree 17
(3) (1) (4) (9) (2) (8) (1) (2) (2) (8) (8) (9) (2) (4) (3) (4) (7) 
line 214: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (4) (7) (8) (8) (8) (9) (9) 
line 215: insert (2)
line 216: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (4) (4) (7) (8) (8) (8) (9) (9) 
line 217: insert (6)
line 218: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (4) (4) (6) (7) (8) (8) (8) (9) (9) 
line 219: clear
line 220: buildTree 19
(8) (7) (4) (9) (9) (8) (7) (5) (7) (1) (10) (4) (5) (6) (9) (5) (5) (6) (4) 
line 221: inorderTraversal
(1) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 222: kNearestNeighbour 1 (3)
(4) 
line 223: inorderTraversal
(1) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 224: insert (9)
line 225: inorderTraversal
(1) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 226: remove (5)
line 227: inorderTraversal
(1) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 228: insert (10)
line 229: inorderTraversal
(1) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 230: remove (5)
line 231: inorderTraversal
(1) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 232: insert (6)
line 233: inorderTraversal
(1) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 234: insert (7)
line 235: inorderTraversal
(1) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 236: remove (1)
line 237: inorderTraversal
(4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 238: kNearestNeighbour 6 (1)
(4) (4) (4) (5) (5) (6) 
line 239: inorderTraversal
(4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 240: kNearestNeighbour 6 (9)
(9) (9) (9) (9) (10) (10) 
line 241: inorderTraversal
(4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 242: insert (9)
line 243: inorderTraversal
(4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 244: kNearestNeighbour 7 (3)
(4) (4) (4) (5) (5) (6) (6) 
line 245: inorderTraversal
(4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 246: kNearestNeighbour 8 (4)
(4) (4) (4) (5) (5) (6) (6) (6) 
line 247: inorderTraversal
(4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 248: remove (5)
line 249: inorderTraversal
(4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 250: remove (10)
line 251: inorderTraversal
(4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 252: insert (9)
line 253: inorderTraversal
(4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (10) 
line 254: clear
line 255: buildTree 15
(1) (6) (2) (5) (5) (7) (8) (7) (9) (1) (2) (10) (2) (10) (4) 
line 256: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 257: nearestNeighbour (9)
(9) 
line 258: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 259: kNearestNeighbour 5 (3)
(1) (2) (2) (2) (4) 
line 260: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 261: kNearestNeighbour 5 (6)
(5) (5) (6) (7) (7) 
line 262: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 263: insert (10)
line 264: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) 
line 265: remove (10)
line 266: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 267: insert (5)
line 268: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 269: kNearestNeighbour 4 (9)
(8) (9) (10) (10) 
line 270: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 271: insert (2)
line 272: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 273: postorderTraversal
(1) (1) (2) (4) (2) (2) (2) (5) (6) (5) (8) (7) (10) (10) (9) (7) (5) 
line 274: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 275: nearestNeighbour (2)
(2) 
line 276: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 277: clear
line 278: buildTree 20
(4) (7) (7) (4) (10) (3) (1) (7) (5) (2) (6) (4) (8) (4) (5) (7) (10) (9) (3) (3) 
line 279: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (8) (9) (10) (10) 
line 280: preorderTraversal
(5) (3) (1) (2) (4) (3) (3) (4) (4) (4) (7) (5) (6) (8) (7) (7) (7) (10) (9) (10) 
line 281: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (8) (9) (10) (10) 
line 282: insert (8)
line 283: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 284: clear
line 285: buildTree 10
(4) (3) (4) (10) (8) (2) (4) (4) (4) (10) 
line 286: inorderTraversal
(2) (3) (4) (4) (4) (4) (4) (8) (10) (10) 
line 287: insert (5)
line 288: inorderTraversal
(2) (3) (4) (4) (4) (4) (4) (5) (8) (10) (10) 
line 289: insert (5)
line 290: inorderTraversal
(2) (3) (4) (4) (4) (4) (4) (5) (5) (8) (10) (10) 
line 291: nearestNeighbour (8)
(8) 
line 292: inorderTraversal
(2) (3) (4) (4) (4) (4) (4) (5) (5) (8) (10) (10) 
line 293: insert (1)
line 294: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (5) (5) (8) (10) (10) 
line 295: kNearestNeighbour 1 (10)
(10) 
line 296: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (5) (5) (8) (10) (10) 
line 297: insert (5)
line 298: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (5) (5) (5) (8) (10) (10) 
line 299: insert (5)
line 300: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (5) (5) (5) (5) (8) (10) (10) 
line 301: insert (8)
line 302: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (5) (5) (5) (5) (8) (8) (10) (10) 
line 303: insert (4)
line 304: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (5) (8) (8) (10) (10) 
line 305: remove (5)
line 306: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (8) (8) (10) (10) 
line 307: kNearestNeighbour 4 (9)
(8) (8) (10) (10) 
line 308: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (8) (8) (10) (10) 
line 309: nearestNeighbour (5)
(5) 
line 310: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (8) (8) (10) (10) 
line 311: insert (8)
line 312: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (8) (8) (8) (10) (10) 
line 313: kNearestNeighbour 9 (6)
(4) (4) (4) (5) (5) (5) (8) (8) (8) 
line 314: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (8) (8) (8) (10) (10) 
line 315: insert (1)
line 316: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (8) (8) (8) (10) (10) 
line 317: clear
line 318: buildTree 12
(7) (5) (10) (1) (3) (3) (1) (3) (8) (7) (8) (8) 
line 319: inorderTraversal
(1) (1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (10) 
line 320: insert (6)
line 321: inorderTraversal
(1) (1) (3) (3) (3) (5) (6) (7) (7) (8) (8) (8) (10) 
line 322: clear
line 323: buildTree 5
(9) (5) (5) (6) (6) 
line 324: inorderTraversal
(5) (5) (6) (6) (9) 
line 325: nearestNeighbour (9)
(9) 
line 326: inorderTraversal
(5) (5) (6) (6) (9) 
line 327: insert (7)
line 328: inorderTraversal
(5) (5) (6) (6) (7) (9) 
line 329: kNearestNeighbour 5 (7)
(5) (6) (6) (7) (9) 
line 330: inorderTraversal
(5) (5) (6) (6) (7) (9) 
line 331: kNearestNeighbour 6 (5)
(5) (5) (6) (6) (7) (9) 
line 332: inorderTraversal
(5) (5) (6) (6) (7) (9) 
line 333: remove (5)
line 334: inorderTraversal
(5) (6) (6) (7) (9) 
line 335: nearestNeighbour (2)
(5) 
line 336: inorderTraversal
(5) (6) (6) (7) (9) 
line 337: search (9)
TRUE
line 338: inorderTraversal
(5) (6) (6) (7) (9) 
line 339: nearestNeighbour (5)
(5) 
line 340: inorderTraversal
(5) (6) (6) (7) (9) 
line 341: preorderTraversal
(6) (5) (6) (9) (7) 
line 342: inorderTraversal
(5) (6) (6) (7) (9) 
line 343: nearestNeighbour (7)
(7) 
line 344: inorderTraversal
(5) (6) (6) (7) (9) 
line 345: clear
line 346: buildTree 11
(6) (8) (7) (5) (1) (6) (10) (2) (9) (6) (4) 
line 347: inorderTraversal
(1) (2) (4) (5) (6) (6) (6) (7) (8) (9) (10) 
line 348: nearestNeighbour (3)
(4) 
line 349: inorderTraversal
(1) (2) (4) (5) (6) (6) (6) (7) (8) (9) (10) 
line 350: search (9)
TRUE
line 351: inorderTraversal
(1) (2) (4) (5) (6) (6) (6) (7) (8) (9) (10) 
line 352: kNearestNeighbour 4 (8)
(7) (8) (9) (10) 
line 353: inorderTraversal
(1) (2) (4) (5) (6) (6) (6) (7) (8) (9) (10) 
line 354: insert (1)
line 355: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) (6) (7) (8) (9) (10) 
line 356: kNearestNeighbour 8 (3)
(1) (1) (2) (4) (5) (6) (6) (6) 
line 357: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) (6) (7) (8) (9) (10) 
line 358: clear
line 359: buildTree 6
(8) (10) (4) (7) (5) (3) 
line 360: inorderTraversal
(3) (4) (5) (7) (8) (10) 
line 361: insert (10)
line 362: inorderTraversal
(3) (4) (5) (7) (8) (10) (10) 
line 363: insert (6)
line 364: inorderTraversal
(3) (4) (5) (6) (7) (8) (10) (10) 
line 365: kNearestNeighbour 4 (2)
(3) (4) (5) (6) 
line 366: inorderTraversal
(3) (4) (5) (6) (7) (8) (10) (10) 
line 367: remove (5)
line 368: inorderTraversal
(3) (4) (6) (7) (8) (10) (10) 
line 369: postorderTraversal
(4) (3) (7) (10) (10) (8) (6) 
line 370: inorderTraversal
(3) (4) (6) (7) (8) (10) (10) 
line 371: kNearestNeighbour 3 (3)
(3) (4) (6) 
line 372: inorderTraversal
(3) (4) (6) (7) (8) (10) (10) 
line 373: insert (8)
line 374: inorderTraversal
(3) (4) (6) (7) (8) (8) (10) (10) 
line 375: insert (8)
line 376: inorderTraversal
(3) (4) (6) (7) (8) (8) (8) (10) (10) 
line 377: kNearestNeighbour 6 (7)
(6) (7) (8) (8) (8) (10) 
line 378: inorderTraversal
(3) (4) (6) (7) (8) (8) (8) (10) (10) 
line 379: kNearestNeighbour 6 (10)
(7) (8) (8) (8) (10) (10) 
line 380: inorderTraversal
(3) (4) (6) (7) (8) (8) (8) (10) (10) 
line 381: search (7)
TRUE
line 382: inorderTraversal
(3) (4) (6) (7) (8) (8) (8) (10) (10) 
line 383: insert (1)
line 384: inorderTraversal
(1) (3) (4) (6) (7) (8) (8) (8) (10) (10) 
line 385: preorderTraversal
(6) (3) (1) (4) (8) (7) (10) (8) (8) (10) 
line 386: inorderTraversal
(1) (3) (4) (6) (7) (8) (8) (8) (10) (10) 
line 387: insert (6)
line 388: inorderTraversal
(1) (3) (4) (6) (6) (7) (8) (8) (8) (10) (10) 
line 389: insert (9)
line 390: inorderTraversal
(1) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 391: insert (10)
line 392: inorderTraversal
(1) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 393: nearestNeighbour (2)
(1) 
line 394: inorderTraversal
(1) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 395: clear
line 396: buildTree 11
(5) (2) (2) (4) (2) (10) (2) (2) (5) (7) (7) 
line 397: inorderTraversal
(2) (2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 398: remove (2)
line 399: inorderTraversal
(2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 400: nearestNeighbour (4)
(4) 
line 401: inorderTraversal
(2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 402: insert (1)
line 403: inorderTraversal
(1) (2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 404: kNearestNeighbour 10 (6)
(2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 405: inorderTraversal
(1) (2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 406: kNearestNeighbour 2 (4)
(4) (5) 
line 407: inorderTraversal
(1) (2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 408: kNearestNeighbour 10 (6)
(2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 409: inorderTraversal
(1) (2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 410: kNearestNeighbour 6 (1)
(1) (2) (2) (2) (2) (4) 
line 411: inorderTraversal
(1) (2) (2) (2) (2) (4) (5) (5) (7) (7) (10) 
line 412: insert (9)
line 413: inorderTraversal
(1) (2) (2) (2) (2) (4) (5) (5) (7) (7) (9) (10) 
line 414: postorderTraversal
(1) (2) (2) (2) (2) (5) (5) (9) (10) (7) (7) (4) 
line 415: inorderTraversal
(1) (2) (2) (2) (2) (4) (5) (5) (7) (7) (9) (10) 
line 416: kNearestNeighbour 5 (6)
(4) (5) (5) (7) (7) 
line 417: inorderTraversal
(1) (2) (2) (2) (2) (4) (5) (5) (7) (7) (9) (10) 
line 418: remove (4)
line 419: inorderTraversal
(1) (2) (2) (2) (2) (5) (5) (7) (7) (9) (10) 
line 420: nodeCount_height_leafCount
nodeCount=11;height=5;leafCount=4
line 421: inorderTraversal
(1) (2) (2) (2) (2) (5) (5) (7) (7) (9) (10) 
line 422: preorderTraversal
(5) (2) (1) (2) (2) (2) (7) (5) (7) (10) (9) 
line 423: postorderTraversal
(1) (2) (2) (2) (2) (5) (9) (10) (7) (7) (5) 
line 424: clear
