line 1: k=1
line 2: nearestNeighbour (4)

line 3: inorderTraversal

line 4: nearestNeighbour (10)

line 5: inorderTraversal

line 6: nearestNeighbour (7)

line 7: inorderTraversal

line 8: insert (3)
line 9: inorderTraversal
(3) 
line 10: remove (3)
line 11: inorderTraversal

line 12: kNearestNeighbour 3 (4)

line 13: inorderTraversal

line 14: remove (3)
line 15: inorderTraversal

line 16: nearestNeighbour (3)

line 17: inorderTraversal

line 18: insert (7)
line 19: inorderTraversal
(7) 
line 20: search (3)
FALSE
line 21: inorderTraversal
(7) 
line 22: kNearestNeighbour 8 (6)
(7) 
line 23: inorderTraversal
(7) 
line 24: postorderTraversal
(7) 
line 25: inorderTraversal
(7) 
line 26: insert (7)
line 27: inorderTraversal
(7) (7) 
line 28: nodeCount_height_leafCount
nodeCount=2;height=2;leafCount=1
line 29: inorderTraversal
(7) (7) 
line 30: kNearestNeighbour 7 (10)
(7) (7) 
line 31: inorderTraversal
(7) (7) 
line 32: preorderTraversal
(7) (7) 
line 33: inorderTraversal
(7) (7) 
line 34: kNearestNeighbour 7 (1)
(7) (7) 
line 35: inorderTraversal
(7) (7) 
line 36: nodeCount_height_leafCount
nodeCount=2;height=2;leafCount=1
line 37: inorderTraversal
(7) (7) 
line 38: nearestNeighbour (10)
(7) 
line 39: inorderTraversal
(7) (7) 
line 40: insert (6)
line 41: inorderTraversal
(6) (7) (7) 
line 42: insert (2)
line 43: inorderTraversal
(2) (6) (7) (7) 
line 44: nearestNeighbour (3)
(2) 
line 45: inorderTraversal
(2) (6) (7) (7) 
line 46: insert (10)
line 47: inorderTraversal
(2) (6) (7) (7) (10) 
line 48: insert (9)
line 49: inorderTraversal
(2) (6) (7) (7) (9) (10) 
line 50: clear
line 51: buildTree 19
(10) (6) (10) (3) (10) (7) (9) (4) (2) (9) (9) (7) (5) (4) (7) (10) (8) (3) (10) 
line 52: inorderTraversal
(2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 53: nearestNeighbour (1)
(2) 
line 54: inorderTraversal
(2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 55: kNearestNeighbour 10 (4)
(2) (3) (3) (4) (4) (5) (6) (7) (7) (7) 
line 56: inorderTraversal
(2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 57: kNearestNeighbour 8 (7)
(6) (7) (7) (7) (8) (9) (9) (9) 
line 58: inorderTraversal
(2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 59: kNearestNeighbour 7 (8)
(7) (7) (7) (8) (9) (9) (9) 
line 60: inorderTraversal
(2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 61: preorderTraversal
(7) (4) (3) (2) (3) (5) (4) (6) (9) (7) (7) (8) (10) (9) (9) (10) (10) (10) (10) 
line 62: inorderTraversal
(2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 63: insert (5)
line 64: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 65: kNearestNeighbour 6 (1)
(2) (3) (3) (4) (4) (5) 
line 66: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 67: remove (9)
line 68: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 69: nearestNeighbour (6)
(6) 
line 70: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 71: preorderTraversal
(7) (4) (3) (2) (3) (5) (4) (6) (5) (9) (7) (7) (8) (10) (9) (10) (10) (10) (10) 
line 72: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 73: remove (10)
line 74: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 75: remove (8)
line 76: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 77: kNearestNeighbour 5 (9)
(9) (9) (10) (10) (10) 
line 78: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 79: insert (3)
line 80: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 81: insert (10)
line 82: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) (10) 
line 83: nearestNeighbour (9)
(9) 
line 84: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) (10) 
line 85: insert (10)
line 86: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 87: nearestNeighbour (9)
(9) 
line 88: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 89: nearestNeighbour (1)
(2) 
line 90: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 91: insert (3)
line 92: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 93: insert (2)
line 94: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 95: kNearestNeighbour 8 (8)
(7) (7) (7) (9) (9) (10) (10) (10) 
line 96: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 97: clear
line 98: buildTree 18
(6) (5) (5) (10) (3) (6) (6) (9) (5) (1) (10) (7) (10) (5) (9) (5) (9) (3) 
line 99: inorderTraversal
(1) (3) (3) (5) (5) (5) (5) (5) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) 
line 100: remove (1)
line 101: inorderTraversal
(3) (3) (5) (5) (5) (5) (5) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) 
line 102: kNearestNeighbour 9 (9)
(6) (6) (7) (9) (9) (9) (10) (10) (10) 
line 103: inorderTraversal
(3) (3) (5) (5) (5) (5) (5) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) 
line 104: insert (10)
line 105: inorderTraversal
(3) (3) (5) (5) (5) (5) (5) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) (10) 
line 106: remove (5)
line 107: inorderTraversal
(3) (3) (5) (5) (5) (5) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) (10) 
line 108: kNearestNeighbour 6 (4)
(3) (3) (5) (5) (5) (5) 
line 109: inorderTraversal
(3) (3) (5) (5) (5) (5) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) (10) 
line 110: nearestNeighbour (6)
(6) 
line 111: inorderTraversal
(3) (3) (5) (5) (5) (5) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) (10) 
line 112: insert (6)
line 113: inorderTraversal
(3) (3) (5) (5) (5) (5) (6) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) (10) 
line 114: insert (3)
line 115: inorderTraversal
(3) (3) (3) (5) (5) (5) (5) (6) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) (10) 
line 116: insert (6)
line 117: inorderTraversal
(3) (3) (3) (5) (5) (5) (5) (6) (6) (6) (6) (6) (7) (9) (9) (9) (10) (10) (10) (10) 
line 118: clear
line 119: buildTree 9
(10) (3) (4) (5) (3) (3) (5) (4) (10) 
line 120: inorderTraversal
(3) (3) (3) (4) (4) (5) (5) (10) (10) 
line 121: insert (2)
line 122: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (10) (10) 
line 123: kNearestNeighbour 1 (1)
(2) 
line 124: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (5) (10) (10) 
line 125: remove (4)
line 126: inorderTraversal
(2) (3) (3) (3) (4) (5) (5) (10) (10) 
line 127: search (3)
TRUE
line 128: inorderTraversal
(2) (3) (3) (3) (4) (5) (5) (10) (10) 
line 129: clear
line 130: buildTree 10
(6) (10) (9) (8) (4) (3) (5) (9) (2) (4) 
line 131: inorderTraversal
(2) (3) (4) (4) (5) (6) (8) (9) (9) (10) 
line 132: insert (4)
line 133: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (8) (9) (9) (10) 
line 134: insert (7)
line 135: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (8) (9) (9) (10) 
line 136: kNearestNeighbour 6 (4)
(2) (3) (4) (4) (4) (5) 
line 137: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (8) (9) (9) (10) 
line 138: remove (8)
line 139: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (9) (9) (10) 
line 140: nearestNeighbour (10)
(10) 
line 141: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (9) (9) (10) 
line 142: postorderTraversal
(2) (4) (4) (4) (3) (7) (6) (10) (9) (9) (5) 
line 143: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (9) (9) (10) 
line 144: insert (7)
line 145: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (7) (9) (9) (10) 
line 146: kNearestNeighbour 5 (8)
(6) (7) (7) (9) (9) 
line 147: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (7) (9) (9) (10) 
line 148: insert (7)
line 149: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (9) (9) (10) 
line 150: kNearestNeighbour 4 (9)
(7) (9) (9) (10) 
line 151: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (9) (9) (10) 
line 152: insert (7)
line 153: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) 
line 154: nodeCount_height_leafCount
nodeCount=14;height=7;leafCount=4
line 155: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) 
line 156: kNearestNeighbour 5 (8)
(7) (7) (7) (7) (9) 
line 157: inorderTraversal
(2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) 
line 158: insert (4)
line 159: inorderTraversal
(2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) 
line 160: kNearestNeighbour 4 (7)
(7) (7) (7) (7) 
line 161: inorderTraversal
(2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) 
line 162: clear
line 163: buildTree 15
(4) (9) (3) (4) (2) (3) (2) (5) (2) (10) (4) (9) (5) (5) (2) 
line 164: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (9) (9) (10) 
line 165: nearestNeighbour (3)
(3) 
line 166: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (9) (9) (10) 
line 167: clear
line 168: buildTree 5
(8) (1) (3) (6) (6) 
line 169: inorderTraversal
(1) (3) (6) (6) (8) 
line 170: kNearestNeighbour 2 (5)
(6) (6) 
line 171: inorderTraversal
(1) (3) (6) (6) (8) 
line 172: nearestNeighbour (5)
(6) 
line 173: inorderTraversal
(1) (3) (6) (6) (8) 
line 174: insert (6)
line 175: inorderTraversal
(1) (3) (6) (6) (6) (8) 
line 176: remove (6)
line 177: inorderTraversal
(1) (3) (6) (6) (8) 
line 178: insert (3)
line 179: inorderTraversal
(1) (3) (3) (6) (6) (8) 
line 180: clear
line 181: buildTree 13
(5) (9) (5) (10) (7) (9) (10) (2) (3) (6) (1) (4) (8) 
line 182: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (7) (8) (9) (9) (10) (10) 
line 183: clear
line 184: buildTree 20
(3) (4) (3) (10) (3) (10) (9) (6) (2) (7) (4) (7) (6) (3) (4) (10) (5) (5) (2) (8) 
line 185: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) (10) 
line 186: insert (9)
line 187: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 188: nodeCount_height_leafCount
nodeCount=21;height=6;leafCount=8
line 189: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 190: nearestNeighbour (3)
(3) 
line 191: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 192: kNearestNeighbour 9 (10)
(6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 193: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 194: nearestNeighbour (4)
(4) 
line 195: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 196: kNearestNeighbour 10 (8)
(6) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 197: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 198: preorderTraversal
(5) (3) (2) (2) (3) (4) (3) (3) (4) (4) (7) (6) (5) (6) (9) (7) (8) (10) (9) (10) (10) 
line 199: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 200: insert (9)
line 201: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 202: clear
line 203: buildTree 15
(9) (8) (6) (7) (5) (4) (9) (9) (9) (10) (4) (4) (1) (1) (10) 
line 204: inorderTraversal
(1) (1) (4) (4) (4) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 205: insert (6)
line 206: inorderTraversal
(1) (1) (4) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 207: insert (9)
line 208: inorderTraversal
(1) (1) (4) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 209: kNearestNeighbour 7 (3)
(1) (1) (4) (4) (4) (5) (6) 
line 210: inorderTraversal
(1) (1) (4) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 211: nearestNeighbour (7)
(7) 
line 212: inorderTraversal
(1) (1) (4) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 213: nearestNeighbour (10)
(10) 
line 214: inorderTraversal
(1) (1) (4) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 215: kNearestNeighbour 4 (8)
(8) (9) (9) (9) 
line 216: inorderTraversal
(1) (1) (4) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 217: kNearestNeighbour 9 (2)
(1) (1) (4) (4) (4) (5) (6) (6) (7) 
line 218: inorderTraversal
(1) (1) (4) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 219: remove (1)
line 220: inorderTraversal
(1) (4) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 221: insert (6)
line 222: inorderTraversal
(1) (4) (4) (4) (5) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 223: insert (3)
line 224: inorderTraversal
(1) (3) (4) (4) (4) (5) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 225: kNearestNeighbour 10 (9)
(6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 226: inorderTraversal
(1) (3) (4) (4) (4) (5) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 227: clear
line 228: buildTree 15
(7) (8) (8) (8) (6) (4) (5) (5) (2) (1) (9) (10) (1) (8) (10) 
line 229: inorderTraversal
(1) (1) (2) (4) (5) (5) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 230: remove (5)
line 231: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 232: nearestNeighbour (5)
(5) 
line 233: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 234: kNearestNeighbour 9 (6)
(4) (5) (6) (7) (8) (8) (8) (8) (9) 
line 235: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 236: nearestNeighbour (6)
(6) 
line 237: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 238: insert (6)
line 239: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 240: insert (3)
line 241: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) 
line 242: insert (7)
line 243: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 244: insert (6)
line 245: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 246: search (8)
TRUE
line 247: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 248: insert (8)
line 249: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 250: kNearestNeighbour 9 (9)
(7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 251: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 252: kNearestNeighbour 10 (7)
(6) (6) (6) (7) (7) (8) (8) (8) (8) (8) 
line 253: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 254: kNearestNeighbour 2 (2)
(2) (3) 
line 255: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 256: kNearestNeighbour 6 (1)
(1) (1) (2) (3) (4) (5) 
line 257: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 258: insert (4)
line 259: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 260: remove (8)
line 261: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 262: insert (8)
line 263: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 264: search (10)
TRUE
line 265: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) 
line 266: clear
line 267: buildTree 2
(3) (4) 
line 268: inorderTraversal
(3) (4) 
line 269: remove (4)
line 270: inorderTraversal
(3) 
line 271: search (4)
FALSE
line 272: inorderTraversal
(3) 
line 273: insert (2)
line 274: inorderTraversal
(2) (3) 
line 275: nearestNeighbour (2)
(2) 
line 276: inorderTraversal
(2) (3) 
line 277: nearestNeighbour (3)
(3) 
line 278: inorderTraversal
(2) (3) 
line 279: clear
line 280: buildTree 16
(10) (2) (3) (9) (4) (8) (3) (5) (8) (2) (4) (2) (7) (2) (6) (1) 
line 281: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (6) (7) (8) (8) (9) (10) 
line 282: insert (2)
line 283: inorderTraversal
(1) (2) (2) (2) (2) (2) (3) (3) (4) (4) (5) (6) (7) (8) (8) (9) (10) 
line 284: insert (8)
line 285: inorderTraversal
(1) (2) (2) (2) (2) (2) (3) (3) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) 
line 286: clear
line 287: buildTree 11
(2) (3) (6) (10) (6) (10) (9) (2) (4) (6) (8) 
line 288: inorderTraversal
(2) (2) (3) (4) (6) (6) (6) (8) (9) (10) (10) 
line 289: postorderTraversal
(2) (4) (3) (2) (6) (6) (9) (10) (10) (8) (6) 
line 290: inorderTraversal
(2) (2) (3) (4) (6) (6) (6) (8) (9) (10) (10) 
line 291: insert (10)
line 292: inorderTraversal
(2) (2) (3) (4) (6) (6) (6) (8) (9) (10) (10) (10) 
line 293: insert (5)
line 294: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 295: nearestNeighbour (10)
(10) 
line 296: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 297: postorderTraversal
(2) (5) (4) (3) (2) (6) (6) (9) (10) (10) (10) (8) (6) 
line 298: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 299: insert (9)
line 300: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (8) (9) (9) (10) (10) (10) 
line 301: remove (6)
line 302: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (10) (10) (10) 
line 303: insert (9)
line 304: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 305: nearestNeighbour (5)
(5) 
line 306: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 307: kNearestNeighbour 8 (5)
(2) (2) (3) (4) (5) (6) (6) (8) 
line 308: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 309: kNearestNeighbour 10 (6)
(3) (4) (5) (6) (6) (8) (9) (9) (9) (10) 
line 310: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 311: kNearestNeighbour 7 (8)
(8) (9) (9) (9) (10) (10) (10) 
line 312: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 313: nearestNeighbour (4)
(4) 
line 314: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 315: insert (3)
line 316: inorderTraversal
(2) (2) (3) (3) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 317: remove (4)
line 318: inorderTraversal
(2) (2) (3) (3) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 319: insert (10)
line 320: inorderTraversal
(2) (2) (3) (3) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) (10) 
line 321: insert (9)
line 322: inorderTraversal
(2) (2) (3) (3) (5) (6) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 323: insert (1)
line 324: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 325: kNearestNeighbour 1 (1)
(1) 
line 326: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 327: insert (4)
line 328: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 329: remove (6)
line 330: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 331: nearestNeighbour (8)
(8) 
line 332: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 333: nearestNeighbour (2)
(2) 
line 334: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 335: clear
line 336: buildTree 7
(6) (8) (4) (7) (1) (6) (9) 
line 337: inorderTraversal
(1) (4) (6) (6) (7) (8) (9) 
line 338: insert (1)
line 339: inorderTraversal
(1) (1) (4) (6) (6) (7) (8) (9) 
line 340: postorderTraversal
(1) (4) (1) (6) (9) (8) (7) (6) 
line 341: inorderTraversal
(1) (1) (4) (6) (6) (7) (8) (9) 
line 342: nearestNeighbour (6)
(6) 
line 343: inorderTraversal
(1) (1) (4) (6) (6) (7) (8) (9) 
line 344: clear
line 345: buildTree 8
(8) (6) (4) (7) (2) (1) (3) (9) 
line 346: inorderTraversal
(1) (2) (3) (4) (6) (7) (8) (9) 
line 347: insert (6)
line 348: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (8) (9) 
line 349: nearestNeighbour (1)
(1) 
line 350: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (8) (9) 
line 351: insert (10)
line 352: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (8) (9) (10) 
line 353: insert (6)
line 354: inorderTraversal
(1) (2) (3) (4) (6) (6) (6) (7) (8) (9) (10) 
line 355: clear
line 356: buildTree 1
(4) 
line 357: inorderTraversal
(4) 
line 358: nodeCount_height_leafCount
nodeCount=1;height=1;leafCount=1
line 359: inorderTraversal
(4) 
line 360: search (4)
TRUE
line 361: inorderTraversal
(4) 
line 362: kNearestNeighbour 6 (3)
(4) 
line 363: inorderTraversal
(4) 
line 364: nearestNeighbour (2)
(4) 
line 365: inorderTraversal
(4) 
line 366: insert (4)
line 367: inorderTraversal
(4) (4) 
line 368: insert (4)
line 369: inorderTraversal
(4) (4) (4) 
line 370: nodeCount_height_leafCount
nodeCount=3;height=3;leafCount=1
line 371: inorderTraversal
(4) (4) (4) 
line 372: insert (5)
line 373: inorderTraversal
(4) (4) (4) (5) 
line 374: insert (4)
line 375: inorderTraversal
(4) (4) (4) (4) (5) 
line 376: preorderTraversal
(4) (4) (4) (5) (4) 
line 377: inorderTraversal
(4) (4) (4) (4) (5) 
line 378: preorderTraversal
(4) (4) (4) (5) (4) 
line 379: inorderTraversal
(4) (4) (4) (4) (5) 
line 380: insert (3)
line 381: inorderTraversal
(3) (4) (4) (4) (4) (5) 
line 382: insert (1)
line 383: inorderTraversal
(1) (3) (4) (4) (4) (4) (5) 
line 384: nearestNeighbour (4)
(4) 
line 385: inorderTraversal
(1) (3) (4) (4) (4) (4) (5) 
line 386: clear
line 387: buildTree 4
(5) (6) (2) (2) 
line 388: inorderTraversal
(2) (2) (5) (6) 
line 389: nearestNeighbour (4)
(5) 
line 390: inorderTraversal
(2) (2) (5) (6) 
line 391: nearestNeighbour (2)
(2) 
line 392: inorderTraversal
(2) (2) (5) (6) 
line 393: search (2)
TRUE
line 394: inorderTraversal
(2) (2) (5) (6) 
line 395: remove (6)
line 396: inorderTraversal
(2) (2) (5) 
line 397: insert (4)
line 398: inorderTraversal
(2) (2) (4) (5) 
line 399: remove (2)
line 400: inorderTraversal
(2) (4) (5) 
line 401: clear
line 402: buildTree 8
(1) (6) (7) (4) (4) (1) (9) (8) 
line 403: inorderTraversal
(1) (1) (4) (4) (6) (7) (8) (9) 
line 404: insert (5)
line 405: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (8) (9) 
line 406: remove (8)
line 407: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (9) 
line 408: insert (7)
line 409: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (9) 
line 410: kNearestNeighbour 10 (6)
(1) (1) (4) (4) (5) (6) (7) (7) (9) 
line 411: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (9) 
line 412: remove (4)
line 413: inorderTraversal
(1) (1) (4) (5) (6) (7) (7) (9) 
line 414: clear
line 415: buildTree 10
(2) (6) (2) (8) (7) (2) (6) (4) (4) (7) 
line 416: inorderTraversal
(2) (2) (2) (4) (4) (6) (6) (7) (7) (8) 
line 417: nodeCount_height_leafCount
nodeCount=10;height=5;leafCount=4
line 418: inorderTraversal
(2) (2) (2) (4) (4) (6) (6) (7) (7) (8) 
line 419: postorderTraversal
(2) (2) (2) (4) (6) (8) (7) (7) (6) (4) 
line 420: inorderTraversal
(2) (2) (2) (4) (4) (6) (6) (7) (7) (8) 
line 421: nodeCount_height_leafCount
nodeCount=10;height=5;leafCount=4
line 422: inorderTraversal
(2) (2) (2) (4) (4) (6) (6) (7) (7) (8) 
line 423: preorderTraversal
(4) (2) (2) (2) (6) (4) (7) (6) (7) (8) 
line 424: postorderTraversal
(2) (2) (2) (4) (6) (8) (7) (7) (6) (4) 
line 425: clear
