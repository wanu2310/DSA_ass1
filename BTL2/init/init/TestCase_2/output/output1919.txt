line 1: k=1
line 2: insert (6)
line 3: inorderTraversal
(6) 
line 4: nearestNeighbour (10)
(6) 
line 5: inorderTraversal
(6) 
line 6: nearestNeighbour (6)
(6) 
line 7: inorderTraversal
(6) 
line 8: insert (4)
line 9: inorderTraversal
(4) (6) 
line 10: insert (9)
line 11: inorderTraversal
(4) (6) (9) 
line 12: kNearestNeighbour 6 (9)
(4) (6) (9) 
line 13: inorderTraversal
(4) (6) (9) 
line 14: kNearestNeighbour 10 (3)
(4) (6) (9) 
line 15: inorderTraversal
(4) (6) (9) 
line 16: remove (4)
line 17: inorderTraversal
(6) (9) 
line 18: kNearestNeighbour 5 (8)
(6) (9) 
line 19: inorderTraversal
(6) (9) 
line 20: insert (9)
line 21: inorderTraversal
(6) (9) (9) 
line 22: insert (5)
line 23: inorderTraversal
(5) (6) (9) (9) 
line 24: search (8)
FALSE
line 25: inorderTraversal
(5) (6) (9) (9) 
line 26: nearestNeighbour (1)
(5) 
line 27: inorderTraversal
(5) (6) (9) (9) 
line 28: remove (4)
line 29: inorderTraversal
(5) (6) (9) (9) 
line 30: kNearestNeighbour 9 (3)
(5) (6) (9) (9) 
line 31: inorderTraversal
(5) (6) (9) (9) 
line 32: kNearestNeighbour 9 (6)
(5) (6) (9) (9) 
line 33: inorderTraversal
(5) (6) (9) (9) 
line 34: nearestNeighbour (8)
(9) 
line 35: inorderTraversal
(5) (6) (9) (9) 
line 36: nearestNeighbour (10)
(9) 
line 37: inorderTraversal
(5) (6) (9) (9) 
line 38: kNearestNeighbour 3 (6)
(5) (6) (9) 
line 39: inorderTraversal
(5) (6) (9) (9) 
line 40: nearestNeighbour (7)
(6) 
line 41: inorderTraversal
(5) (6) (9) (9) 
line 42: kNearestNeighbour 8 (5)
(5) (6) (9) (9) 
line 43: inorderTraversal
(5) (6) (9) (9) 
line 44: insert (3)
line 45: inorderTraversal
(3) (5) (6) (9) (9) 
line 46: nearestNeighbour (5)
(5) 
line 47: inorderTraversal
(3) (5) (6) (9) (9) 
line 48: nearestNeighbour (7)
(6) 
line 49: inorderTraversal
(3) (5) (6) (9) (9) 
line 50: insert (8)
line 51: inorderTraversal
(3) (5) (6) (8) (9) (9) 
line 52: kNearestNeighbour 3 (7)
(6) (8) (9) 
line 53: inorderTraversal
(3) (5) (6) (8) (9) (9) 
line 54: remove (3)
line 55: inorderTraversal
(5) (6) (8) (9) (9) 
line 56: insert (1)
line 57: inorderTraversal
(1) (5) (6) (8) (9) (9) 
line 58: nodeCount_height_leafCount
nodeCount=6;height=3;leafCount=3
line 59: inorderTraversal
(1) (5) (6) (8) (9) (9) 
line 60: nodeCount_height_leafCount
nodeCount=6;height=3;leafCount=3
line 61: inorderTraversal
(1) (5) (6) (8) (9) (9) 
line 62: insert (5)
line 63: inorderTraversal
(1) (5) (5) (6) (8) (9) (9) 
line 64: remove (2)
line 65: inorderTraversal
(1) (5) (5) (6) (8) (9) (9) 
line 66: insert (9)
line 67: inorderTraversal
(1) (5) (5) (6) (8) (9) (9) (9) 
line 68: clear
line 69: buildTree 5
(3) (7) (4) (9) (9) 
line 70: inorderTraversal
(3) (4) (7) (9) (9) 
line 71: insert (4)
line 72: inorderTraversal
(3) (4) (4) (7) (9) (9) 
line 73: insert (8)
line 74: inorderTraversal
(3) (4) (4) (7) (8) (9) (9) 
line 75: kNearestNeighbour 3 (9)
(8) (9) (9) 
line 76: inorderTraversal
(3) (4) (4) (7) (8) (9) (9) 
line 77: kNearestNeighbour 1 (3)
(3) 
line 78: inorderTraversal
(3) (4) (4) (7) (8) (9) (9) 
line 79: preorderTraversal
(7) (3) (4) (4) (9) (8) (9) 
line 80: inorderTraversal
(3) (4) (4) (7) (8) (9) (9) 
line 81: insert (2)
line 82: inorderTraversal
(2) (3) (4) (4) (7) (8) (9) (9) 
line 83: nodeCount_height_leafCount
nodeCount=8;height=4;leafCount=4
line 84: inorderTraversal
(2) (3) (4) (4) (7) (8) (9) (9) 
line 85: insert (6)
line 86: inorderTraversal
(2) (3) (4) (4) (6) (7) (8) (9) (9) 
line 87: search (2)
TRUE
line 88: inorderTraversal
(2) (3) (4) (4) (6) (7) (8) (9) (9) 
line 89: insert (8)
line 90: inorderTraversal
(2) (3) (4) (4) (6) (7) (8) (8) (9) (9) 
line 91: search (3)
TRUE
line 92: inorderTraversal
(2) (3) (4) (4) (6) (7) (8) (8) (9) (9) 
line 93: insert (5)
line 94: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) (8) (9) (9) 
line 95: insert (9)
line 96: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) 
line 97: insert (1)
line 98: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) 
line 99: insert (5)
line 100: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (7) (8) (8) (9) (9) (9) 
line 101: remove (1)
line 102: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (7) (8) (8) (9) (9) (9) 
line 103: clear
line 104: buildTree 15
(2) (8) (2) (9) (3) (9) (7) (8) (4) (9) (4) (5) (2) (5) (8) 
line 105: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (8) (9) (9) (9) 
line 106: insert (3)
line 107: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (8) (8) (9) (9) (9) 
line 108: remove (2)
line 109: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (8) (8) (9) (9) (9) 
line 110: insert (4)
line 111: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (8) (8) (8) (9) (9) (9) 
line 112: insert (9)
line 113: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (8) (8) (8) (9) (9) (9) (9) 
line 114: insert (8)
line 115: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (8) (8) (8) (8) (9) (9) (9) (9) 
line 116: insert (8)
line 117: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 118: remove (3)
line 119: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 120: insert (4)
line 121: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (5) (5) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 122: insert (7)
line 123: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (5) (5) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 124: kNearestNeighbour 3 (10)
(9) (9) (9) 
line 125: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (5) (5) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 126: insert (6)
line 127: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 128: insert (4)
line 129: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 130: kNearestNeighbour 2 (8)
(8) (8) 
line 131: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 132: nearestNeighbour (6)
(6) 
line 133: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 134: kNearestNeighbour 8 (1)
(2) (2) (3) (4) (4) (4) (4) (4) 
line 135: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 136: kNearestNeighbour 8 (1)
(2) (2) (3) (4) (4) (4) (4) (4) 
line 137: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) 
line 138: insert (10)
line 139: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 140: nearestNeighbour (3)
(3) 
line 141: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 142: kNearestNeighbour 5 (4)
(4) (4) (4) (4) (4) 
line 143: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 144: clear
line 145: buildTree 5
(10) (3) (7) (3) (7) 
line 146: inorderTraversal
(3) (3) (7) (7) (10) 
line 147: nearestNeighbour (8)
(7) 
line 148: inorderTraversal
(3) (3) (7) (7) (10) 
line 149: kNearestNeighbour 7 (2)
(3) (3) (7) (7) (10) 
line 150: inorderTraversal
(3) (3) (7) (7) (10) 
line 151: insert (7)
line 152: inorderTraversal
(3) (3) (7) (7) (7) (10) 
line 153: kNearestNeighbour 8 (9)
(3) (3) (7) (7) (7) (10) 
line 154: inorderTraversal
(3) (3) (7) (7) (7) (10) 
line 155: nearestNeighbour (6)
(7) 
line 156: inorderTraversal
(3) (3) (7) (7) (7) (10) 
line 157: remove (7)
line 158: inorderTraversal
(3) (3) (7) (7) (10) 
line 159: remove (3)
line 160: inorderTraversal
(3) (7) (7) (10) 
line 161: insert (2)
line 162: inorderTraversal
(2) (3) (7) (7) (10) 
line 163: nearestNeighbour (4)
(3) 
line 164: inorderTraversal
(2) (3) (7) (7) (10) 
line 165: clear
line 166: buildTree 10
(7) (9) (8) (4) (2) (2) (7) (7) (2) (10) 
line 167: inorderTraversal
(2) (2) (2) (4) (7) (7) (7) (8) (9) (10) 
line 168: search (2)
TRUE
line 169: inorderTraversal
(2) (2) (2) (4) (7) (7) (7) (8) (9) (10) 
line 170: nearestNeighbour (7)
(7) 
line 171: inorderTraversal
(2) (2) (2) (4) (7) (7) (7) (8) (9) (10) 
line 172: remove (2)
line 173: inorderTraversal
(2) (2) (4) (7) (7) (7) (8) (9) (10) 
line 174: remove (7)
line 175: inorderTraversal
(2) (2) (4) (7) (7) (8) (9) (10) 
line 176: insert (3)
line 177: inorderTraversal
(2) (2) (3) (4) (7) (7) (8) (9) (10) 
line 178: insert (9)
line 179: inorderTraversal
(2) (2) (3) (4) (7) (7) (8) (9) (9) (10) 
line 180: nearestNeighbour (10)
(10) 
line 181: inorderTraversal
(2) (2) (3) (4) (7) (7) (8) (9) (9) (10) 
line 182: insert (4)
line 183: inorderTraversal
(2) (2) (3) (4) (4) (7) (7) (8) (9) (9) (10) 
line 184: insert (7)
line 185: inorderTraversal
(2) (2) (3) (4) (4) (7) (7) (7) (8) (9) (9) (10) 
line 186: insert (8)
line 187: inorderTraversal
(2) (2) (3) (4) (4) (7) (7) (7) (8) (8) (9) (9) (10) 
line 188: nodeCount_height_leafCount
nodeCount=13;height=5;leafCount=5
line 189: inorderTraversal
(2) (2) (3) (4) (4) (7) (7) (7) (8) (8) (9) (9) (10) 
line 190: insert (8)
line 191: inorderTraversal
(2) (2) (3) (4) (4) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 192: insert (3)
line 193: inorderTraversal
(2) (2) (3) (3) (4) (4) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 194: kNearestNeighbour 3 (5)
(3) (4) (4) 
line 195: inorderTraversal
(2) (2) (3) (3) (4) (4) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 196: kNearestNeighbour 8 (2)
(2) (2) (3) (3) (4) (4) (7) (7) 
line 197: inorderTraversal
(2) (2) (3) (3) (4) (4) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 198: nearestNeighbour (3)
(3) 
line 199: inorderTraversal
(2) (2) (3) (3) (4) (4) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 200: kNearestNeighbour 7 (2)
(2) (2) (3) (3) (4) (4) (7) 
line 201: inorderTraversal
(2) (2) (3) (3) (4) (4) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 202: preorderTraversal
(7) (2) (2) (4) (3) (3) (4) (8) (7) (7) (9) (8) (8) (10) (9) 
line 203: inorderTraversal
(2) (2) (3) (3) (4) (4) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 204: insert (7)
line 205: inorderTraversal
(2) (2) (3) (3) (4) (4) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 206: insert (3)
line 207: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 208: nearestNeighbour (9)
(9) 
line 209: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 210: postorderTraversal
(3) (3) (3) (4) (4) (2) (2) (7) (7) (7) (8) (8) (9) (10) (9) (8) (7) 
line 211: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 212: remove (8)
line 213: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 214: insert (1)
line 215: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 216: nearestNeighbour (5)
(4) 
line 217: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 218: remove (7)
line 219: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (8) (8) (9) (9) (10) 
line 220: kNearestNeighbour 8 (1)
(1) (2) (2) (3) (3) (3) (4) (4) 
line 221: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (7) (7) (7) (8) (8) (9) (9) (10) 
line 222: remove (7)
line 223: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (7) (7) (8) (8) (9) (9) (10) 
line 224: nearestNeighbour (5)
(4) 
line 225: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (7) (7) (8) (8) (9) (9) (10) 
line 226: insert (5)
line 227: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (7) (7) (8) (8) (9) (9) (10) 
line 228: nearestNeighbour (6)
(5) 
line 229: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (7) (7) (8) (8) (9) (9) (10) 
line 230: insert (7)
line 231: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (7) (7) (7) (8) (8) (9) (9) (10) 
line 232: clear
line 233: buildTree 13
(10) (4) (5) (3) (6) (5) (9) (5) (8) (4) (5) (2) (7) 
line 234: inorderTraversal
(2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) (10) 
line 235: kNearestNeighbour 1 (10)
(10) 
line 236: inorderTraversal
(2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) (10) 
line 237: kNearestNeighbour 4 (1)
(2) (3) (4) (4) 
line 238: inorderTraversal
(2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) (10) 
line 239: remove (1)
line 240: inorderTraversal
(2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) (10) 
line 241: insert (3)
line 242: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) (10) 
line 243: clear
line 244: buildTree 11
(6) (7) (8) (6) (2) (8) (1) (3) (9) (4) (1) 
line 245: inorderTraversal
(1) (1) (2) (3) (4) (6) (6) (7) (8) (8) (9) 
line 246: kNearestNeighbour 9 (3)
(1) (1) (2) (3) (4) (6) (6) (7) (8) 
line 247: inorderTraversal
(1) (1) (2) (3) (4) (6) (6) (7) (8) (8) (9) 
line 248: insert (8)
line 249: inorderTraversal
(1) (1) (2) (3) (4) (6) (6) (7) (8) (8) (8) (9) 
line 250: postorderTraversal
(1) (1) (4) (3) (2) (7) (6) (8) (9) (8) (8) (6) 
line 251: inorderTraversal
(1) (1) (2) (3) (4) (6) (6) (7) (8) (8) (8) (9) 
line 252: kNearestNeighbour 8 (8)
(4) (6) (6) (7) (8) (8) (8) (9) 
line 253: inorderTraversal
(1) (1) (2) (3) (4) (6) (6) (7) (8) (8) (8) (9) 
line 254: clear
line 255: buildTree 6
(5) (1) (4) (10) (1) (8) 
line 256: inorderTraversal
(1) (1) (4) (5) (8) (10) 
line 257: nearestNeighbour (10)
(10) 
line 258: inorderTraversal
(1) (1) (4) (5) (8) (10) 
line 259: insert (10)
line 260: inorderTraversal
(1) (1) (4) (5) (8) (10) (10) 
line 261: nodeCount_height_leafCount
nodeCount=7;height=4;leafCount=3
line 262: inorderTraversal
(1) (1) (4) (5) (8) (10) (10) 
line 263: remove (10)
line 264: inorderTraversal
(1) (1) (4) (5) (8) (10) 
line 265: insert (8)
line 266: inorderTraversal
(1) (1) (4) (5) (8) (8) (10) 
line 267: nearestNeighbour (2)
(1) 
line 268: inorderTraversal
(1) (1) (4) (5) (8) (8) (10) 
line 269: remove (5)
line 270: inorderTraversal
(1) (1) (4) (8) (8) (10) 
line 271: clear
line 272: buildTree 18
(5) (10) (3) (8) (4) (7) (1) (7) (9) (10) (2) (8) (8) (4) (6) (9) (10) (3) 
line 273: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 274: insert (1)
line 275: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 276: kNearestNeighbour 1 (7)
(7) 
line 277: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 278: insert (4)
line 279: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 280: remove (7)
line 281: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 282: kNearestNeighbour 9 (8)
(7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 283: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 284: insert (5)
line 285: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 286: insert (8)
line 287: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 288: nearestNeighbour (2)
(2) 
line 289: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 290: remove (7)
line 291: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 292: kNearestNeighbour 2 (4)
(4) (4) 
line 293: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 294: remove (1)
line 295: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 296: insert (8)
line 297: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 298: postorderTraversal
(2) (1) (3) (4) (4) (5) (6) (5) (4) (3) (8) (8) (8) (8) (9) (10) (10) (10) (9) (8) 
line 299: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 300: nearestNeighbour (8)
(8) 
line 301: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 302: clear
line 303: buildTree 3
(8) (2) (9) 
line 304: inorderTraversal
(2) (8) (9) 
line 305: insert (2)
line 306: inorderTraversal
(2) (2) (8) (9) 
line 307: kNearestNeighbour 10 (9)
(2) (2) (8) (9) 
line 308: inorderTraversal
(2) (2) (8) (9) 
line 309: insert (3)
line 310: inorderTraversal
(2) (2) (3) (8) (9) 
line 311: insert (7)
line 312: inorderTraversal
(2) (2) (3) (7) (8) (9) 
line 313: insert (4)
line 314: inorderTraversal
(2) (2) (3) (4) (7) (8) (9) 
line 315: insert (2)
line 316: inorderTraversal
(2) (2) (2) (3) (4) (7) (8) (9) 
line 317: insert (4)
line 318: inorderTraversal
(2) (2) (2) (3) (4) (4) (7) (8) (9) 
line 319: kNearestNeighbour 6 (7)
(3) (4) (4) (7) (8) (9) 
line 320: inorderTraversal
(2) (2) (2) (3) (4) (4) (7) (8) (9) 
line 321: clear
line 322: buildTree 10
(8) (2) (5) (9) (2) (5) (9) (2) (3) (6) 
line 323: inorderTraversal
(2) (2) (2) (3) (5) (5) (6) (8) (9) (9) 
line 324: nearestNeighbour (8)
(8) 
line 325: inorderTraversal
(2) (2) (2) (3) (5) (5) (6) (8) (9) (9) 
line 326: nearestNeighbour (5)
(5) 
line 327: inorderTraversal
(2) (2) (2) (3) (5) (5) (6) (8) (9) (9) 
line 328: insert (8)
line 329: inorderTraversal
(2) (2) (2) (3) (5) (5) (6) (8) (8) (9) (9) 
line 330: nearestNeighbour (10)
(9) 
line 331: inorderTraversal
(2) (2) (2) (3) (5) (5) (6) (8) (8) (9) (9) 
line 332: nearestNeighbour (10)
(9) 
line 333: inorderTraversal
(2) (2) (2) (3) (5) (5) (6) (8) (8) (9) (9) 
line 334: clear
line 335: buildTree 12
(8) (2) (2) (9) (10) (8) (8) (6) (3) (8) (5) (6) 
line 336: inorderTraversal
(2) (2) (3) (5) (6) (6) (8) (8) (8) (8) (9) (10) 
line 337: nearestNeighbour (2)
(2) 
line 338: inorderTraversal
(2) (2) (3) (5) (6) (6) (8) (8) (8) (8) (9) (10) 
line 339: clear
line 340: buildTree 5
(4) (8) (5) (10) (8) 
line 341: inorderTraversal
(4) (5) (8) (8) (10) 
line 342: nearestNeighbour (6)
(5) 
line 343: inorderTraversal
(4) (5) (8) (8) (10) 
line 344: insert (9)
line 345: inorderTraversal
(4) (5) (8) (8) (9) (10) 
line 346: clear
line 347: buildTree 10
(5) (1) (7) (6) (10) (3) (3) (5) (1) (5) 
line 348: inorderTraversal
(1) (1) (3) (3) (5) (5) (5) (6) (7) (10) 
line 349: clear
line 350: buildTree 3
(4) (1) (9) 
line 351: inorderTraversal
(1) (4) (9) 
line 352: preorderTraversal
(4) (1) (9) 
line 353: inorderTraversal
(1) (4) (9) 
line 354: insert (7)
line 355: inorderTraversal
(1) (4) (7) (9) 
line 356: insert (1)
line 357: inorderTraversal
(1) (1) (4) (7) (9) 
line 358: nearestNeighbour (5)
(4) 
line 359: inorderTraversal
(1) (1) (4) (7) (9) 
line 360: clear
line 361: buildTree 7
(7) (8) (4) (3) (9) (8) (1) 
line 362: inorderTraversal
(1) (3) (4) (7) (8) (8) (9) 
line 363: insert (6)
line 364: inorderTraversal
(1) (3) (4) (6) (7) (8) (8) (9) 
line 365: clear
line 366: buildTree 20
(6) (9) (8) (4) (7) (4) (6) (5) (9) (3) (1) (8) (2) (6) (8) (8) (7) (6) (10) (7) 
line 367: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 368: insert (2)
line 369: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 370: clear
line 371: buildTree 3
(4) (9) (2) 
line 372: inorderTraversal
(2) (4) (9) 
line 373: insert (10)
line 374: inorderTraversal
(2) (4) (9) (10) 
line 375: search (2)
TRUE
line 376: inorderTraversal
(2) (4) (9) (10) 
line 377: insert (5)
line 378: inorderTraversal
(2) (4) (5) (9) (10) 
line 379: nearestNeighbour (4)
(4) 
line 380: inorderTraversal
(2) (4) (5) (9) (10) 
line 381: kNearestNeighbour 6 (9)
(2) (4) (5) (9) (10) 
line 382: inorderTraversal
(2) (4) (5) (9) (10) 
line 383: insert (8)
line 384: inorderTraversal
(2) (4) (5) (8) (9) (10) 
line 385: postorderTraversal
(2) (8) (5) (10) (9) (4) 
line 386: inorderTraversal
(2) (4) (5) (8) (9) (10) 
line 387: kNearestNeighbour 7 (2)
(2) (4) (5) (8) (9) (10) 
line 388: inorderTraversal
(2) (4) (5) (8) (9) (10) 
line 389: kNearestNeighbour 10 (4)
(2) (4) (5) (8) (9) (10) 
line 390: inorderTraversal
(2) (4) (5) (8) (9) (10) 
line 391: insert (10)
line 392: inorderTraversal
(2) (4) (5) (8) (9) (10) (10) 
line 393: kNearestNeighbour 7 (8)
(2) (4) (5) (8) (9) (10) (10) 
line 394: inorderTraversal
(2) (4) (5) (8) (9) (10) (10) 
line 395: insert (3)
line 396: inorderTraversal
(2) (3) (4) (5) (8) (9) (10) (10) 
line 397: insert (6)
line 398: inorderTraversal
(2) (3) (4) (5) (6) (8) (9) (10) (10) 
line 399: clear
line 400: buildTree 18
(1) (3) (4) (1) (4) (7) (4) (8) (8) (9) (9) (1) (1) (8) (3) (3) (10) (6) 
line 401: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (6) (7) (8) (8) (8) (9) (9) (10) 
line 402: insert (6)
line 403: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (6) (6) (7) (8) (8) (8) (9) (9) (10) 
line 404: search (9)
TRUE
line 405: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (6) (6) (7) (8) (8) (8) (9) (9) (10) 
line 406: kNearestNeighbour 10 (7)
(4) (4) (6) (6) (7) (8) (8) (8) (9) (9) 
line 407: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (6) (6) (7) (8) (8) (8) (9) (9) (10) 
line 408: insert (3)
line 409: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (6) (6) (7) (8) (8) (8) (9) (9) (10) 
line 410: insert (6)
line 411: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (6) (6) (6) (7) (8) (8) (8) (9) (9) (10) 
line 412: clear
line 413: buildTree 16
(7) (4) (5) (7) (3) (1) (3) (1) (6) (10) (4) (1) (3) (9) (5) (8) 
line 414: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) 
line 415: kNearestNeighbour 10 (7)
(4) (4) (5) (5) (6) (7) (7) (8) (9) (10) 
line 416: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) 
line 417: nearestNeighbour (8)
(8) 
line 418: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) 
line 419: insert (9)
line 420: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) 
line 421: nodeCount_height_leafCount
nodeCount=17;height=6;leafCount=6
line 422: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) 
line 423: preorderTraversal
(4) (1) (3) (1) (1) (3) (3) (7) (5) (4) (5) (6) (8) (7) (9) (10) (9) 
line 424: postorderTraversal
(1) (1) (3) (3) (3) (1) (4) (6) (5) (5) (7) (9) (10) (9) (8) (7) (4) 
line 425: clear
