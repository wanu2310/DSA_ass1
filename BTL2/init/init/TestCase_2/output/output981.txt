line 1: k=1
line 2: nearestNeighbour (9)

line 3: inorderTraversal

line 4: insert (5)
line 5: inorderTraversal
(5) 
line 6: nodeCount_height_leafCount
nodeCount=1;height=1;leafCount=1
line 7: inorderTraversal
(5) 
line 8: insert (4)
line 9: inorderTraversal
(4) (5) 
line 10: insert (3)
line 11: inorderTraversal
(3) (4) (5) 
line 12: preorderTraversal
(5) (4) (3) 
line 13: inorderTraversal
(3) (4) (5) 
line 14: insert (8)
line 15: inorderTraversal
(3) (4) (5) (8) 
line 16: remove (4)
line 17: inorderTraversal
(3) (5) (8) 
line 18: clear
line 19: buildTree 12
(10) (8) (1) (8) (9) (3) (8) (2) (9) (8) (1) (5) 
line 20: inorderTraversal
(1) (1) (2) (3) (5) (8) (8) (8) (8) (9) (9) (10) 
line 21: insert (7)
line 22: inorderTraversal
(1) (1) (2) (3) (5) (7) (8) (8) (8) (8) (9) (9) (10) 
line 23: insert (6)
line 24: inorderTraversal
(1) (1) (2) (3) (5) (6) (7) (8) (8) (8) (8) (9) (9) (10) 
line 25: nearestNeighbour (8)
(8) 
line 26: inorderTraversal
(1) (1) (2) (3) (5) (6) (7) (8) (8) (8) (8) (9) (9) (10) 
line 27: nearestNeighbour (1)
(1) 
line 28: inorderTraversal
(1) (1) (2) (3) (5) (6) (7) (8) (8) (8) (8) (9) (9) (10) 
line 29: insert (8)
line 30: inorderTraversal
(1) (1) (2) (3) (5) (6) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 31: kNearestNeighbour 3 (5)
(5) (6) (7) 
line 32: inorderTraversal
(1) (1) (2) (3) (5) (6) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 33: kNearestNeighbour 6 (1)
(1) (1) (2) (3) (5) (6) 
line 34: inorderTraversal
(1) (1) (2) (3) (5) (6) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 35: kNearestNeighbour 3 (4)
(3) (5) (6) 
line 36: inorderTraversal
(1) (1) (2) (3) (5) (6) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 37: insert (7)
line 38: inorderTraversal
(1) (1) (2) (3) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 39: insert (5)
line 40: inorderTraversal
(1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 41: remove (9)
line 42: inorderTraversal
(1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) 
line 43: insert (8)
line 44: inorderTraversal
(1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 45: insert (1)
line 46: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 47: insert (1)
line 48: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 49: nearestNeighbour (4)
(5) 
line 50: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 51: nearestNeighbour (2)
(2) 
line 52: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 53: nearestNeighbour (3)
(3) 
line 54: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 55: insert (2)
line 56: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 57: kNearestNeighbour 7 (2)
(1) (1) (1) (1) (2) (2) (3) 
line 58: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 59: insert (5)
line 60: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (5) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 61: remove (1)
line 62: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 63: kNearestNeighbour 4 (5)
(5) (5) (5) (6) 
line 64: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) 
line 65: clear
line 66: buildTree 12
(10) (3) (5) (6) (5) (2) (3) (7) (5) (1) (9) (9) 
line 67: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (6) (7) (9) (9) (10) 
line 68: nearestNeighbour (9)
(9) 
line 69: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (6) (7) (9) (9) (10) 
line 70: nearestNeighbour (1)
(1) 
line 71: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (6) (7) (9) (9) (10) 
line 72: insert (1)
line 73: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (5) (6) (7) (9) (9) (10) 
line 74: postorderTraversal
(1) (1) (3) (3) (2) (6) (5) (5) (10) (9) (9) (7) (5) 
line 75: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (5) (6) (7) (9) (9) (10) 
line 76: clear
line 77: buildTree 19
(4) (4) (5) (1) (9) (5) (4) (6) (8) (6) (2) (9) (8) (8) (5) (5) (4) (1) (7) 
line 78: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) 
line 79: kNearestNeighbour 9 (3)
(1) (1) (2) (4) (4) (4) (4) (5) (5) 
line 80: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) 
line 81: kNearestNeighbour 2 (10)
(9) (9) 
line 82: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) 
line 83: clear
line 84: buildTree 14
(2) (1) (6) (8) (1) (7) (9) (5) (6) (3) (6) (2) (8) (8) 
line 85: inorderTraversal
(1) (1) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (8) (9) 
line 86: insert (1)
line 87: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (8) (9) 
line 88: kNearestNeighbour 6 (4)
(2) (2) (3) (5) (6) (6) 
line 89: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (8) (9) 
line 90: insert (5)
line 91: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) 
line 92: kNearestNeighbour 1 (8)
(8) 
line 93: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) 
line 94: insert (7)
line 95: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 96: kNearestNeighbour 6 (1)
(1) (1) (1) (2) (2) (3) 
line 97: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 98: insert (3)
line 99: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 100: kNearestNeighbour 8 (9)
(6) (6) (7) (7) (8) (8) (8) (9) 
line 101: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 102: insert (1)
line 103: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 104: nearestNeighbour (6)
(6) 
line 105: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 106: insert (6)
line 107: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 108: kNearestNeighbour 1 (8)
(8) 
line 109: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 110: insert (8)
line 111: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (9) 
line 112: remove (8)
line 113: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 114: nearestNeighbour (8)
(8) 
line 115: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 116: nearestNeighbour (4)
(3) 
line 117: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) 
line 118: insert (8)
line 119: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (9) 
line 120: search (8)
TRUE
line 121: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (9) 
line 122: clear
line 123: buildTree 9
(8) (8) (5) (4) (1) (8) (2) (7) (10) 
line 124: inorderTraversal
(1) (2) (4) (5) (7) (8) (8) (8) (10) 
line 125: insert (3)
line 126: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (8) (10) 
line 127: kNearestNeighbour 10 (7)
(1) (2) (3) (4) (5) (7) (8) (8) (8) (10) 
line 128: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (8) (10) 
line 129: kNearestNeighbour 8 (7)
(3) (4) (5) (7) (8) (8) (8) (10) 
line 130: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (8) (10) 
line 131: insert (10)
line 132: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (8) (10) (10) 
line 133: nearestNeighbour (8)
(8) 
line 134: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (8) (10) (10) 
line 135: nearestNeighbour (6)
(5) 
line 136: inorderTraversal
(1) (2) (3) (4) (5) (7) (8) (8) (8) (10) (10) 
line 137: insert (7)
line 138: inorderTraversal
(1) (2) (3) (4) (5) (7) (7) (8) (8) (8) (10) (10) 
line 139: insert (5)
line 140: inorderTraversal
(1) (2) (3) (4) (5) (5) (7) (7) (8) (8) (8) (10) (10) 
line 141: remove (7)
line 142: inorderTraversal
(1) (2) (3) (4) (5) (5) (7) (8) (8) (8) (10) (10) 
line 143: kNearestNeighbour 5 (1)
(1) (2) (3) (4) (5) 
line 144: inorderTraversal
(1) (2) (3) (4) (5) (5) (7) (8) (8) (8) (10) (10) 
line 145: insert (7)
line 146: inorderTraversal
(1) (2) (3) (4) (5) (5) (7) (7) (8) (8) (8) (10) (10) 
line 147: insert (3)
line 148: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (7) (8) (8) (8) (10) (10) 
line 149: nodeCount_height_leafCount
nodeCount=14;height=6;leafCount=5
line 150: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (7) (8) (8) (8) (10) (10) 
line 151: clear
line 152: buildTree 6
(10) (1) (1) (10) (4) (9) 
line 153: inorderTraversal
(1) (1) (4) (9) (10) (10) 
line 154: kNearestNeighbour 3 (4)
(1) (1) (4) 
line 155: inorderTraversal
(1) (1) (4) (9) (10) (10) 
line 156: clear
line 157: buildTree 11
(5) (3) (4) (7) (10) (1) (9) (5) (9) (7) (9) 
line 158: inorderTraversal
(1) (3) (4) (5) (5) (7) (7) (9) (9) (9) (10) 
line 159: nearestNeighbour (8)
(7) 
line 160: inorderTraversal
(1) (3) (4) (5) (5) (7) (7) (9) (9) (9) (10) 
line 161: nearestNeighbour (9)
(9) 
line 162: inorderTraversal
(1) (3) (4) (5) (5) (7) (7) (9) (9) (9) (10) 
line 163: remove (1)
line 164: inorderTraversal
(3) (4) (5) (5) (7) (7) (9) (9) (9) (10) 
line 165: nearestNeighbour (7)
(7) 
line 166: inorderTraversal
(3) (4) (5) (5) (7) (7) (9) (9) (9) (10) 
line 167: insert (10)
line 168: inorderTraversal
(3) (4) (5) (5) (7) (7) (9) (9) (9) (10) (10) 
line 169: kNearestNeighbour 2 (9)
(9) (9) 
line 170: inorderTraversal
(3) (4) (5) (5) (7) (7) (9) (9) (9) (10) (10) 
line 171: insert (8)
line 172: inorderTraversal
(3) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) 
line 173: nearestNeighbour (2)
(3) 
line 174: inorderTraversal
(3) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) 
line 175: remove (4)
line 176: inorderTraversal
(3) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) 
line 177: nearestNeighbour (8)
(8) 
line 178: inorderTraversal
(3) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) 
line 179: nearestNeighbour (7)
(7) 
line 180: inorderTraversal
(3) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) 
line 181: nearestNeighbour (7)
(7) 
line 182: inorderTraversal
(3) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) 
line 183: insert (6)
line 184: inorderTraversal
(3) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 185: search (5)
TRUE
line 186: inorderTraversal
(3) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 187: insert (10)
line 188: inorderTraversal
(3) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 189: clear
line 190: buildTree 19
(4) (7) (3) (3) (8) (3) (1) (2) (4) (2) (8) (3) (3) (5) (1) (3) (4) (8) (10) 
line 191: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (3) (4) (4) (4) (5) (7) (8) (8) (8) (10) 
line 192: insert (4)
line 193: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (8) (10) 
line 194: nearestNeighbour (5)
(5) 
line 195: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (8) (10) 
line 196: clear
line 197: buildTree 17
(1) (10) (3) (10) (1) (2) (4) (2) (4) (5) (5) (6) (7) (1) (3) (6) (4) 
line 198: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (10) (10) 
line 199: insert (4)
line 200: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (10) (10) 
line 201: nearestNeighbour (4)
(4) 
line 202: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (10) (10) 
line 203: insert (9)
line 204: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (9) (10) (10) 
line 205: kNearestNeighbour 1 (8)
(9) 
line 206: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (9) (10) (10) 
line 207: insert (10)
line 208: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (9) (10) (10) (10) 
line 209: clear
line 210: buildTree 7
(2) (5) (5) (9) (2) (6) (6) 
line 211: inorderTraversal
(2) (2) (5) (5) (6) (6) (9) 
line 212: kNearestNeighbour 2 (4)
(5) (5) 
line 213: inorderTraversal
(2) (2) (5) (5) (6) (6) (9) 
line 214: insert (7)
line 215: inorderTraversal
(2) (2) (5) (5) (6) (6) (7) (9) 
line 216: search (9)
TRUE
line 217: inorderTraversal
(2) (2) (5) (5) (6) (6) (7) (9) 
line 218: remove (5)
line 219: inorderTraversal
(2) (2) (5) (6) (6) (7) (9) 
line 220: clear
line 221: buildTree 7
(10) (5) (5) (7) (2) (1) (10) 
line 222: inorderTraversal
(1) (2) (5) (5) (7) (10) (10) 
line 223: clear
line 224: buildTree 10
(5) (5) (7) (5) (6) (7) (3) (9) (1) (7) 
line 225: inorderTraversal
(1) (3) (5) (5) (5) (6) (7) (7) (7) (9) 
line 226: remove (3)
line 227: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (7) (9) 
line 228: nearestNeighbour (10)
(9) 
line 229: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (7) (9) 
line 230: insert (6)
line 231: inorderTraversal
(1) (5) (5) (5) (6) (6) (7) (7) (7) (9) 
line 232: nearestNeighbour (7)
(7) 
line 233: inorderTraversal
(1) (5) (5) (5) (6) (6) (7) (7) (7) (9) 
line 234: insert (5)
line 235: inorderTraversal
(1) (5) (5) (5) (5) (6) (6) (7) (7) (7) (9) 
line 236: kNearestNeighbour 10 (7)
(5) (5) (5) (5) (6) (6) (7) (7) (7) (9) 
line 237: inorderTraversal
(1) (5) (5) (5) (5) (6) (6) (7) (7) (7) (9) 
line 238: search (6)
TRUE
line 239: inorderTraversal
(1) (5) (5) (5) (5) (6) (6) (7) (7) (7) (9) 
line 240: insert (1)
line 241: inorderTraversal
(1) (1) (5) (5) (5) (5) (6) (6) (7) (7) (7) (9) 
line 242: kNearestNeighbour 3 (2)
(1) (1) (5) 
line 243: inorderTraversal
(1) (1) (5) (5) (5) (5) (6) (6) (7) (7) (7) (9) 
line 244: insert (5)
line 245: inorderTraversal
(1) (1) (5) (5) (5) (5) (5) (6) (6) (7) (7) (7) (9) 
line 246: insert (8)
line 247: inorderTraversal
(1) (1) (5) (5) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) 
line 248: insert (6)
line 249: inorderTraversal
(1) (1) (5) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) 
line 250: kNearestNeighbour 2 (5)
(5) (5) 
line 251: inorderTraversal
(1) (1) (5) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) 
line 252: kNearestNeighbour 10 (2)
(1) (1) (5) (5) (5) (5) (5) (6) (6) (6) 
line 253: inorderTraversal
(1) (1) (5) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) 
line 254: kNearestNeighbour 8 (6)
(5) (5) (5) (5) (6) (6) (6) (7) 
line 255: inorderTraversal
(1) (1) (5) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) 
line 256: clear
line 257: buildTree 13
(7) (9) (4) (9) (4) (10) (8) (7) (3) (3) (3) (10) (1) 
line 258: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) (10) (10) 
line 259: insert (10)
line 260: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) (10) (10) (10) 
line 261: nearestNeighbour (5)
(4) 
line 262: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) (10) (10) (10) 
line 263: insert (4)
line 264: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) (9) (10) (10) (10) 
line 265: insert (1)
line 266: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) (9) (10) (10) (10) 
line 267: kNearestNeighbour 3 (10)
(10) (10) (10) 
line 268: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) (9) (10) (10) (10) 
line 269: nearestNeighbour (3)
(3) 
line 270: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) (9) (10) (10) (10) 
line 271: insert (6)
line 272: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (4) (6) (7) (7) (8) (9) (9) (10) (10) (10) 
line 273: clear
line 274: buildTree 14
(10) (9) (10) (7) (9) (1) (6) (1) (4) (5) (9) (9) (4) (7) 
line 275: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (9) (9) (9) (9) (10) (10) 
line 276: postorderTraversal
(1) (1) (4) (6) (5) (4) (7) (9) (10) (10) (9) (9) (9) (7) 
line 277: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (9) (9) (9) (9) (10) (10) 
line 278: insert (7)
line 279: inorderTraversal
(1) (1) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) 
line 280: insert (5)
line 281: inorderTraversal
(1) (1) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) 
line 282: insert (2)
line 283: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) 
line 284: insert (7)
line 285: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (9) (9) (10) (10) 
line 286: nearestNeighbour (6)
(6) 
line 287: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (9) (9) (10) (10) 
line 288: preorderTraversal
(7) (4) (1) (1) (2) (5) (4) (6) (5) (9) (7) (7) (7) (9) (9) (10) (9) (10) 
line 289: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (9) (9) (10) (10) 
line 290: insert (1)
line 291: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (9) (9) (10) (10) 
line 292: insert (10)
line 293: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 294: search (10)
TRUE
line 295: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 296: insert (9)
line 297: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 298: kNearestNeighbour 5 (9)
(9) (9) (9) (9) (9) 
line 299: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 300: insert (6)
line 301: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 302: postorderTraversal
(1) (2) (1) (1) (4) (5) (6) (6) (5) (4) (7) (7) (7) (9) (9) (10) (10) (10) (9) (9) (9) (7) 
line 303: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 304: insert (1)
line 305: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 306: nearestNeighbour (4)
(4) 
line 307: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 308: kNearestNeighbour 9 (3)
(1) (1) (1) (1) (2) (4) (4) (5) (5) 
line 309: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 310: insert (7)
line 311: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 312: nearestNeighbour (3)
(2) 
line 313: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 314: nearestNeighbour (1)
(1) 
line 315: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 316: insert (10)
line 317: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 318: nearestNeighbour (3)
(2) 
line 319: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) (10) 
line 320: clear
line 321: buildTree 5
(4) (6) (5) (7) (1) 
line 322: inorderTraversal
(1) (4) (5) (6) (7) 
line 323: kNearestNeighbour 9 (3)
(1) (4) (5) (6) (7) 
line 324: inorderTraversal
(1) (4) (5) (6) (7) 
line 325: clear
line 326: buildTree 1
(7) 
line 327: inorderTraversal
(7) 
line 328: postorderTraversal
(7) 
line 329: inorderTraversal
(7) 
line 330: insert (10)
line 331: inorderTraversal
(7) (10) 
line 332: nearestNeighbour (6)
(7) 
line 333: inorderTraversal
(7) (10) 
line 334: insert (5)
line 335: inorderTraversal
(5) (7) (10) 
line 336: insert (6)
line 337: inorderTraversal
(5) (6) (7) (10) 
line 338: insert (8)
line 339: inorderTraversal
(5) (6) (7) (8) (10) 
line 340: search (6)
TRUE
line 341: inorderTraversal
(5) (6) (7) (8) (10) 
line 342: nearestNeighbour (9)
(8) 
line 343: inorderTraversal
(5) (6) (7) (8) (10) 
line 344: postorderTraversal
(6) (5) (8) (10) (7) 
line 345: inorderTraversal
(5) (6) (7) (8) (10) 
line 346: nodeCount_height_leafCount
nodeCount=5;height=3;leafCount=2
line 347: inorderTraversal
(5) (6) (7) (8) (10) 
line 348: kNearestNeighbour 2 (10)
(8) (10) 
line 349: inorderTraversal
(5) (6) (7) (8) (10) 
line 350: insert (3)
line 351: inorderTraversal
(3) (5) (6) (7) (8) (10) 
line 352: insert (2)
line 353: inorderTraversal
(2) (3) (5) (6) (7) (8) (10) 
line 354: nearestNeighbour (10)
(10) 
line 355: inorderTraversal
(2) (3) (5) (6) (7) (8) (10) 
line 356: kNearestNeighbour 3 (1)
(2) (3) (5) 
line 357: inorderTraversal
(2) (3) (5) (6) (7) (8) (10) 
line 358: insert (3)
line 359: inorderTraversal
(2) (3) (3) (5) (6) (7) (8) (10) 
line 360: remove (2)
line 361: inorderTraversal
(3) (3) (5) (6) (7) (8) (10) 
line 362: insert (5)
line 363: inorderTraversal
(3) (3) (5) (5) (6) (7) (8) (10) 
line 364: insert (1)
line 365: inorderTraversal
(1) (3) (3) (5) (5) (6) (7) (8) (10) 
line 366: kNearestNeighbour 3 (8)
(7) (8) (10) 
line 367: inorderTraversal
(1) (3) (3) (5) (5) (6) (7) (8) (10) 
line 368: search (3)
TRUE
line 369: inorderTraversal
(1) (3) (3) (5) (5) (6) (7) (8) (10) 
line 370: kNearestNeighbour 6 (4)
(1) (3) (3) (5) (5) (6) 
line 371: inorderTraversal
(1) (3) (3) (5) (5) (6) (7) (8) (10) 
line 372: insert (4)
line 373: inorderTraversal
(1) (3) (3) (4) (5) (5) (6) (7) (8) (10) 
line 374: nearestNeighbour (4)
(4) 
line 375: inorderTraversal
(1) (3) (3) (4) (5) (5) (6) (7) (8) (10) 
line 376: insert (5)
line 377: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (6) (7) (8) (10) 
line 378: nearestNeighbour (4)
(4) 
line 379: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (6) (7) (8) (10) 
line 380: clear
line 381: buildTree 4
(8) (6) (4) (4) 
line 382: inorderTraversal
(4) (4) (6) (8) 
line 383: nearestNeighbour (5)
(4) 
line 384: inorderTraversal
(4) (4) (6) (8) 
line 385: clear
line 386: buildTree 13
(3) (4) (4) (7) (9) (5) (6) (2) (8) (5) (7) (2) (1) 
line 387: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) 
line 388: kNearestNeighbour 6 (2)
(1) (2) (2) (3) (4) (4) 
line 389: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) 
line 390: nearestNeighbour (9)
(9) 
line 391: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) 
line 392: remove (7)
line 393: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (6) (7) (8) (9) 
line 394: remove (9)
line 395: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (6) (7) (8) 
line 396: nearestNeighbour (1)
(1) 
line 397: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (6) (7) (8) 
line 398: insert (4)
line 399: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (7) (8) 
line 400: clear
line 401: buildTree 5
(4) (8) (4) (3) (3) 
line 402: inorderTraversal
(3) (3) (4) (4) (8) 
line 403: insert (6)
line 404: inorderTraversal
(3) (3) (4) (4) (6) (8) 
line 405: search (10)
FALSE
line 406: inorderTraversal
(3) (3) (4) (4) (6) (8) 
line 407: insert (5)
line 408: inorderTraversal
(3) (3) (4) (4) (5) (6) (8) 
line 409: kNearestNeighbour 7 (9)
(3) (3) (4) (4) (5) (6) (8) 
line 410: inorderTraversal
(3) (3) (4) (4) (5) (6) (8) 
line 411: nearestNeighbour (2)
(3) 
line 412: inorderTraversal
(3) (3) (4) (4) (5) (6) (8) 
line 413: insert (5)
line 414: inorderTraversal
(3) (3) (4) (4) (5) (5) (6) (8) 
line 415: clear
line 416: buildTree 12
(3) (4) (4) (9) (2) (2) (6) (6) (4) (5) (7) (8) 
line 417: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (6) (6) (7) (8) (9) 
line 418: kNearestNeighbour 5 (8)
(6) (6) (7) (8) (9) 
line 419: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (6) (6) (7) (8) (9) 
line 420: nodeCount_height_leafCount
nodeCount=12;height=5;leafCount=4
line 421: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (6) (6) (7) (8) (9) 
line 422: nodeCount_height_leafCount
nodeCount=12;height=5;leafCount=4
line 423: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (6) (6) (7) (8) (9) 
line 424: preorderTraversal
(4) (2) (2) (3) (6) (4) (4) (5) (7) (6) (8) (9) 
line 425: postorderTraversal
(3) (2) (2) (5) (4) (4) (6) (9) (8) (7) (6) (4) 
line 426: clear
