line 1: k=1
line 2: nearestNeighbour (9)

line 3: inorderTraversal

line 4: nearestNeighbour (10)

line 5: inorderTraversal

line 6: kNearestNeighbour 4 (6)

line 7: inorderTraversal

line 8: postorderTraversal

line 9: inorderTraversal

line 10: kNearestNeighbour 1 (9)

line 11: inorderTraversal

line 12: clear
line 13: buildTree 6
(6) (8) (2) (4) (2) (4) 
line 14: inorderTraversal
(2) (2) (4) (4) (6) (8) 
line 15: insert (5)
line 16: inorderTraversal
(2) (2) (4) (4) (5) (6) (8) 
line 17: insert (1)
line 18: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (8) 
line 19: insert (6)
line 20: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (8) 
line 21: nodeCount_height_leafCount
nodeCount=9;height=4;leafCount=4
line 22: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (8) 
line 23: nearestNeighbour (5)
(5) 
line 24: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (8) 
line 25: nearestNeighbour (9)
(8) 
line 26: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (8) 
line 27: remove (2)
line 28: inorderTraversal
(1) (2) (4) (4) (5) (6) (6) (8) 
line 29: remove (6)
line 30: inorderTraversal
(1) (2) (4) (4) (5) (6) (8) 
line 31: nearestNeighbour (8)
(8) 
line 32: inorderTraversal
(1) (2) (4) (4) (5) (6) (8) 
line 33: insert (5)
line 34: inorderTraversal
(1) (2) (4) (4) (5) (5) (6) (8) 
line 35: remove (4)
line 36: inorderTraversal
(1) (2) (4) (5) (5) (6) (8) 
line 37: nodeCount_height_leafCount
nodeCount=7;height=4;leafCount=3
line 38: inorderTraversal
(1) (2) (4) (5) (5) (6) (8) 
line 39: remove (6)
line 40: inorderTraversal
(1) (2) (4) (5) (5) (8) 
line 41: kNearestNeighbour 9 (9)
(1) (2) (4) (5) (5) (8) 
line 42: inorderTraversal
(1) (2) (4) (5) (5) (8) 
line 43: nearestNeighbour (1)
(1) 
line 44: inorderTraversal
(1) (2) (4) (5) (5) (8) 
line 45: clear
line 46: buildTree 6
(7) (5) (3) (2) (6) (5) 
line 47: inorderTraversal
(2) (3) (5) (5) (6) (7) 
line 48: nearestNeighbour (2)
(2) 
line 49: inorderTraversal
(2) (3) (5) (5) (6) (7) 
line 50: clear
line 51: buildTree 2
(4) (4) 
line 52: inorderTraversal
(4) (4) 
line 53: clear
line 54: buildTree 13
(8) (8) (5) (7) (5) (5) (3) (6) (4) (2) (5) (2) (10) 
line 55: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) 
line 56: insert (10)
line 57: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 58: nearestNeighbour (4)
(4) 
line 59: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 60: insert (5)
line 61: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 62: kNearestNeighbour 9 (3)
(2) (2) (3) (4) (5) (5) (5) (5) (5) 
line 63: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 64: nearestNeighbour (9)
(10) 
line 65: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 66: insert (10)
line 67: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) (10) 
line 68: remove (5)
line 69: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) (10) 
line 70: postorderTraversal
(2) (4) (3) (2) (5) (5) (5) (7) (10) (10) (10) (8) (8) (6) (5) 
line 71: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) (10) 
line 72: nearestNeighbour (4)
(4) 
line 73: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) (10) 
line 74: insert (7)
line 75: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (10) (10) (10) 
line 76: kNearestNeighbour 2 (6)
(6) (7) 
line 77: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (10) (10) (10) 
line 78: clear
line 79: buildTree 8
(5) (8) (9) (6) (10) (6) (5) (2) 
line 80: inorderTraversal
(2) (5) (5) (6) (6) (8) (9) (10) 
line 81: clear
line 82: buildTree 2
(9) (8) 
line 83: inorderTraversal
(8) (9) 
line 84: kNearestNeighbour 3 (3)
(8) (9) 
line 85: inorderTraversal
(8) (9) 
line 86: kNearestNeighbour 9 (1)
(8) (9) 
line 87: inorderTraversal
(8) (9) 
line 88: clear
line 89: buildTree 18
(9) (3) (3) (5) (2) (10) (2) (8) (10) (2) (8) (1) (2) (9) (10) (1) (5) (7) 
line 90: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 91: insert (6)
line 92: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 93: insert (5)
line 94: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 95: insert (10)
line 96: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 97: nearestNeighbour (7)
(7) 
line 98: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 99: kNearestNeighbour 3 (2)
(2) (2) (2) 
line 100: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 101: insert (9)
line 102: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 103: insert (10)
line 104: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (8) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 105: nearestNeighbour (8)
(8) 
line 106: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (8) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 107: insert (7)
line 108: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 109: nearestNeighbour (1)
(1) 
line 110: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 111: preorderTraversal
(5) (2) (1) (1) (2) (2) (3) (2) (3) (9) (7) (5) (6) (5) (8) (7) (8) (10) (9) (9) (10) (10) (10) (10) 
line 112: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 113: remove (3)
line 114: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) (10) (10) (10) 
line 115: clear
line 116: buildTree 5
(6) (7) (9) (3) (10) 
line 117: inorderTraversal
(3) (6) (7) (9) (10) 
line 118: postorderTraversal
(6) (3) (10) (9) (7) 
line 119: inorderTraversal
(3) (6) (7) (9) (10) 
line 120: remove (9)
line 121: inorderTraversal
(3) (6) (7) (10) 
line 122: insert (1)
line 123: inorderTraversal
(1) (3) (6) (7) (10) 
line 124: insert (10)
line 125: inorderTraversal
(1) (3) (6) (7) (10) (10) 
line 126: clear
line 127: buildTree 16
(7) (6) (4) (9) (7) (8) (4) (8) (10) (3) (10) (3) (7) (5) (8) (4) 
line 128: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 129: nearestNeighbour (1)
(3) 
line 130: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 131: insert (8)
line 132: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 133: insert (9)
line 134: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 135: nearestNeighbour (6)
(6) 
line 136: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 137: kNearestNeighbour 5 (1)
(3) (3) (4) (4) (4) 
line 138: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 139: insert (10)
line 140: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 141: kNearestNeighbour 8 (1)
(3) (3) (4) (4) (4) (5) (6) (7) 
line 142: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 143: nearestNeighbour (9)
(9) 
line 144: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 145: search (4)
TRUE
line 146: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 147: insert (8)
line 148: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 149: kNearestNeighbour 7 (2)
(3) (3) (4) (4) (4) (5) (6) 
line 150: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 151: insert (8)
line 152: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 153: remove (4)
line 154: inorderTraversal
(3) (3) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 155: clear
line 156: buildTree 20
(8) (10) (1) (5) (8) (7) (5) (9) (10) (4) (9) (1) (1) (4) (8) (5) (10) (2) (1) (3) 
line 157: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (5) (5) (5) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 158: nearestNeighbour (10)
(10) 
line 159: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (5) (5) (5) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 160: clear
line 161: buildTree 20
(4) (4) (3) (1) (1) (10) (3) (6) (10) (10) (7) (5) (3) (5) (6) (2) (6) (4) (5) (10) 
line 162: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (10) (10) (10) (10) 
line 163: kNearestNeighbour 6 (8)
(6) (6) (7) (10) (10) (10) 
line 164: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (10) (10) (10) (10) 
line 165: clear
line 166: buildTree 11
(6) (6) (8) (8) (8) (10) (1) (9) (10) (3) (3) 
line 167: inorderTraversal
(1) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) 
line 168: nearestNeighbour (2)
(1) 
line 169: inorderTraversal
(1) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) 
line 170: insert (2)
line 171: inorderTraversal
(1) (2) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) 
line 172: insert (10)
line 173: inorderTraversal
(1) (2) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 174: insert (2)
line 175: inorderTraversal
(1) (2) (2) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 176: insert (1)
line 177: inorderTraversal
(1) (1) (2) (2) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 178: kNearestNeighbour 8 (10)
(6) (8) (8) (8) (9) (10) (10) (10) 
line 179: inorderTraversal
(1) (1) (2) (2) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 180: kNearestNeighbour 8 (6)
(3) (3) (6) (6) (8) (8) (8) (9) 
line 181: inorderTraversal
(1) (1) (2) (2) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 182: search (1)
TRUE
line 183: inorderTraversal
(1) (1) (2) (2) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 184: search (6)
TRUE
line 185: inorderTraversal
(1) (1) (2) (2) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 186: nearestNeighbour (10)
(10) 
line 187: inorderTraversal
(1) (1) (2) (2) (3) (3) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 188: clear
line 189: buildTree 8
(3) (7) (4) (5) (2) (4) (10) (7) 
line 190: inorderTraversal
(2) (3) (4) (4) (5) (7) (7) (10) 
line 191: insert (6)
line 192: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (7) (10) 
line 193: remove (2)
line 194: inorderTraversal
(3) (4) (4) (5) (6) (7) (7) (10) 
line 195: nearestNeighbour (9)
(10) 
line 196: inorderTraversal
(3) (4) (4) (5) (6) (7) (7) (10) 
line 197: insert (6)
line 198: inorderTraversal
(3) (4) (4) (5) (6) (6) (7) (7) (10) 
line 199: insert (6)
line 200: inorderTraversal
(3) (4) (4) (5) (6) (6) (6) (7) (7) (10) 
line 201: postorderTraversal
(3) (6) (6) (6) (5) (4) (10) (7) (7) (4) 
line 202: inorderTraversal
(3) (4) (4) (5) (6) (6) (6) (7) (7) (10) 
line 203: nearestNeighbour (5)
(5) 
line 204: inorderTraversal
(3) (4) (4) (5) (6) (6) (6) (7) (7) (10) 
line 205: kNearestNeighbour 2 (5)
(5) (6) 
line 206: inorderTraversal
(3) (4) (4) (5) (6) (6) (6) (7) (7) (10) 
line 207: clear
line 208: buildTree 7
(1) (10) (9) (9) (6) (4) (5) 
line 209: inorderTraversal
(1) (4) (5) (6) (9) (9) (10) 
line 210: insert (2)
line 211: inorderTraversal
(1) (2) (4) (5) (6) (9) (9) (10) 
line 212: insert (3)
line 213: inorderTraversal
(1) (2) (3) (4) (5) (6) (9) (9) (10) 
line 214: remove (2)
line 215: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (10) 
line 216: nearestNeighbour (5)
(5) 
line 217: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (10) 
line 218: kNearestNeighbour 3 (4)
(3) (4) (5) 
line 219: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (10) 
line 220: insert (10)
line 221: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (10) (10) 
line 222: insert (10)
line 223: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (10) (10) (10) 
line 224: insert (9)
line 225: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (9) (10) (10) (10) 
line 226: search (10)
TRUE
line 227: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (9) (10) (10) (10) 
line 228: kNearestNeighbour 5 (6)
(4) (5) (6) (9) (9) 
line 229: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (9) (10) (10) (10) 
line 230: kNearestNeighbour 6 (4)
(1) (3) (4) (5) (6) (9) 
line 231: inorderTraversal
(1) (3) (4) (5) (6) (9) (9) (9) (10) (10) (10) 
line 232: insert (1)
line 233: inorderTraversal
(1) (1) (3) (4) (5) (6) (9) (9) (9) (10) (10) (10) 
line 234: kNearestNeighbour 9 (3)
(1) (1) (3) (4) (5) (6) (9) (9) (9) 
line 235: inorderTraversal
(1) (1) (3) (4) (5) (6) (9) (9) (9) (10) (10) (10) 
line 236: insert (8)
line 237: inorderTraversal
(1) (1) (3) (4) (5) (6) (8) (9) (9) (9) (10) (10) (10) 
line 238: insert (9)
line 239: inorderTraversal
(1) (1) (3) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 240: kNearestNeighbour 6 (4)
(1) (1) (3) (4) (5) (6) 
line 241: inorderTraversal
(1) (1) (3) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 242: kNearestNeighbour 8 (5)
(1) (1) (3) (4) (5) (6) (8) (9) 
line 243: inorderTraversal
(1) (1) (3) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 244: nearestNeighbour (10)
(10) 
line 245: inorderTraversal
(1) (1) (3) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 246: insert (4)
line 247: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 248: insert (1)
line 249: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 250: kNearestNeighbour 8 (6)
(4) (4) (5) (6) (8) (9) (9) (9) 
line 251: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 252: remove (3)
line 253: inorderTraversal
(1) (1) (1) (4) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 254: insert (2)
line 255: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) 
line 256: insert (10)
line 257: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 258: insert (10)
line 259: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) (10) 
line 260: insert (7)
line 261: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (6) (7) (8) (9) (9) (9) (9) (10) (10) (10) (10) (10) 
line 262: clear
line 263: buildTree 3
(9) (9) (10) 
line 264: inorderTraversal
(9) (9) (10) 
line 265: kNearestNeighbour 9 (4)
(9) (9) (10) 
line 266: inorderTraversal
(9) (9) (10) 
line 267: kNearestNeighbour 4 (6)
(9) (9) (10) 
line 268: inorderTraversal
(9) (9) (10) 
line 269: insert (5)
line 270: inorderTraversal
(5) (9) (9) (10) 
line 271: nearestNeighbour (3)
(5) 
line 272: inorderTraversal
(5) (9) (9) (10) 
line 273: insert (9)
line 274: inorderTraversal
(5) (9) (9) (9) (10) 
line 275: nearestNeighbour (4)
(5) 
line 276: inorderTraversal
(5) (9) (9) (9) (10) 
line 277: remove (9)
line 278: inorderTraversal
(5) (9) (9) (10) 
line 279: insert (3)
line 280: inorderTraversal
(3) (5) (9) (9) (10) 
line 281: insert (1)
line 282: inorderTraversal
(1) (3) (5) (9) (9) (10) 
line 283: kNearestNeighbour 10 (7)
(1) (3) (5) (9) (9) (10) 
line 284: inorderTraversal
(1) (3) (5) (9) (9) (10) 
line 285: insert (7)
line 286: inorderTraversal
(1) (3) (5) (7) (9) (9) (10) 
line 287: kNearestNeighbour 6 (7)
(3) (5) (7) (9) (9) (10) 
line 288: inorderTraversal
(1) (3) (5) (7) (9) (9) (10) 
line 289: kNearestNeighbour 6 (6)
(3) (5) (7) (9) (9) (10) 
line 290: inorderTraversal
(1) (3) (5) (7) (9) (9) (10) 
line 291: insert (4)
line 292: inorderTraversal
(1) (3) (4) (5) (7) (9) (9) (10) 
line 293: nearestNeighbour (8)
(7) 
line 294: inorderTraversal
(1) (3) (4) (5) (7) (9) (9) (10) 
line 295: insert (2)
line 296: inorderTraversal
(1) (2) (3) (4) (5) (7) (9) (9) (10) 
line 297: postorderTraversal
(2) (1) (4) (3) (7) (5) (10) (9) (9) 
line 298: inorderTraversal
(1) (2) (3) (4) (5) (7) (9) (9) (10) 
line 299: preorderTraversal
(9) (5) (3) (1) (2) (4) (7) (9) (10) 
line 300: inorderTraversal
(1) (2) (3) (4) (5) (7) (9) (9) (10) 
line 301: insert (3)
line 302: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (9) (9) (10) 
line 303: insert (8)
line 304: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) 
line 305: kNearestNeighbour 2 (3)
(3) (3) 
line 306: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) 
line 307: search (9)
TRUE
line 308: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) 
line 309: remove (7)
line 310: inorderTraversal
(1) (2) (3) (3) (4) (5) (8) (9) (9) (10) 
line 311: insert (7)
line 312: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) 
line 313: insert (10)
line 314: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 315: kNearestNeighbour 7 (5)
(2) (3) (3) (4) (5) (7) (8) 
line 316: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 317: kNearestNeighbour 4 (7)
(5) (7) (8) (9) 
line 318: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 319: kNearestNeighbour 2 (1)
(1) (2) 
line 320: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 321: kNearestNeighbour 5 (2)
(1) (2) (3) (3) (4) 
line 322: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 323: nearestNeighbour (10)
(10) 
line 324: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 325: kNearestNeighbour 6 (5)
(3) (3) (4) (5) (7) (8) 
line 326: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 327: insert (3)
line 328: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 329: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=4
line 330: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 331: clear
line 332: buildTree 14
(2) (4) (1) (7) (4) (10) (8) (7) (2) (2) (2) (1) (5) (1) 
line 333: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (4) (4) (5) (7) (7) (8) (10) 
line 334: clear
line 335: buildTree 17
(7) (6) (1) (7) (7) (5) (5) (9) (8) (9) (4) (2) (2) (3) (6) (4) (5) 
line 336: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) 
line 337: insert (4)
line 338: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) 
line 339: insert (1)
line 340: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) 
line 341: nodeCount_height_leafCount
nodeCount=19;height=6;leafCount=7
line 342: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) 
line 343: clear
line 344: buildTree 11
(6) (6) (10) (6) (5) (2) (10) (8) (3) (9) (7) 
line 345: inorderTraversal
(2) (3) (5) (6) (6) (6) (7) (8) (9) (10) (10) 
line 346: kNearestNeighbour 4 (4)
(2) (3) (5) (6) 
line 347: inorderTraversal
(2) (3) (5) (6) (6) (6) (7) (8) (9) (10) (10) 
line 348: clear
line 349: buildTree 8
(8) (7) (9) (3) (1) (7) (6) (7) 
line 350: inorderTraversal
(1) (3) (6) (7) (7) (7) (8) (9) 
line 351: kNearestNeighbour 2 (4)
(3) (6) 
line 352: inorderTraversal
(1) (3) (6) (7) (7) (7) (8) (9) 
line 353: clear
line 354: buildTree 13
(10) (4) (5) (8) (5) (5) (7) (1) (1) (8) (7) (7) (5) 
line 355: inorderTraversal
(1) (1) (4) (5) (5) (5) (5) (7) (7) (7) (8) (8) (10) 
line 356: remove (1)
line 357: inorderTraversal
(1) (4) (5) (5) (5) (5) (7) (7) (7) (8) (8) (10) 
line 358: clear
line 359: buildTree 9
(5) (7) (4) (10) (1) (3) (1) (9) (8) 
line 360: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (9) (10) 
line 361: nearestNeighbour (3)
(3) 
line 362: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (9) (10) 
line 363: kNearestNeighbour 2 (6)
(5) (7) 
line 364: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (9) (10) 
line 365: insert (8)
line 366: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (10) 
line 367: kNearestNeighbour 7 (2)
(1) (1) (3) (4) (5) (7) (8) 
line 368: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (10) 
line 369: kNearestNeighbour 3 (7)
(7) (8) (8) 
line 370: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (10) 
line 371: preorderTraversal
(5) (1) (3) (1) (4) (8) (7) (9) (8) (10) 
line 372: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (10) 
line 373: nearestNeighbour (9)
(9) 
line 374: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (10) 
line 375: insert (9)
line 376: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (9) (10) 
line 377: insert (9)
line 378: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (9) (9) (10) 
line 379: nearestNeighbour (5)
(5) 
line 380: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (9) (9) (10) 
line 381: insert (10)
line 382: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (9) (9) (10) (10) 
line 383: search (5)
TRUE
line 384: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (8) (9) (9) (9) (10) (10) 
line 385: insert (7)
line 386: inorderTraversal
(1) (1) (3) (4) (5) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 387: clear
line 388: buildTree 5
(8) (7) (4) (8) (3) 
line 389: inorderTraversal
(3) (4) (7) (8) (8) 
line 390: insert (4)
line 391: inorderTraversal
(3) (4) (4) (7) (8) (8) 
line 392: kNearestNeighbour 2 (7)
(7) (8) 
line 393: inorderTraversal
(3) (4) (4) (7) (8) (8) 
line 394: clear
line 395: buildTree 5
(6) (8) (2) (7) (8) 
line 396: inorderTraversal
(2) (6) (7) (8) (8) 
line 397: insert (1)
line 398: inorderTraversal
(1) (2) (6) (7) (8) (8) 
line 399: insert (8)
line 400: inorderTraversal
(1) (2) (6) (7) (8) (8) (8) 
line 401: remove (8)
line 402: inorderTraversal
(1) (2) (6) (7) (8) (8) 
line 403: insert (4)
line 404: inorderTraversal
(1) (2) (4) (6) (7) (8) (8) 
line 405: clear
line 406: buildTree 15
(4) (3) (10) (3) (1) (3) (7) (4) (9) (7) (10) (1) (9) (4) (7) 
line 407: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (4) (7) (7) (7) (9) (9) (10) (10) 
line 408: insert (2)
line 409: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (7) (7) (7) (9) (9) (10) (10) 
line 410: insert (9)
line 411: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (7) (7) (7) (9) (9) (9) (10) (10) 
line 412: preorderTraversal
(4) (3) (1) (1) (2) (3) (3) (7) (4) (4) (9) (7) (7) (10) (9) (9) (10) 
line 413: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (7) (7) (7) (9) (9) (9) (10) (10) 
line 414: insert (4)
line 415: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (4) (7) (7) (7) (9) (9) (9) (10) (10) 
line 416: nearestNeighbour (1)
(1) 
line 417: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (4) (7) (7) (7) (9) (9) (9) (10) (10) 
line 418: kNearestNeighbour 5 (6)
(4) (4) (7) (7) (7) 
line 419: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (4) (7) (7) (7) (9) (9) (9) (10) (10) 
line 420: clear
line 421: buildTree 14
(6) (4) (4) (7) (6) (2) (4) (10) (1) (3) (9) (9) (1) (6) 
line 422: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (6) (6) (7) (9) (9) (10) 
line 423: insert (5)
line 424: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (7) (9) (9) (10) 
line 425: insert (2)
line 426: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (6) (6) (7) (9) (9) (10) 
line 427: nodeCount_height_leafCount
nodeCount=16;height=6;leafCount=5
line 428: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (6) (6) (7) (9) (9) (10) 
line 429: preorderTraversal
(4) (1) (2) (1) (3) (2) (6) (4) (4) (5) (7) (6) (6) (9) (9) (10) 
line 430: postorderTraversal
(1) (2) (3) (2) (1) (5) (4) (4) (6) (6) (10) (9) (9) (7) (6) (4) 
line 431: clear
