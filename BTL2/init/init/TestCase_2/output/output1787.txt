line 1: k=1
line 2: kNearestNeighbour 6 (1)

line 3: inorderTraversal

line 4: insert (8)
line 5: inorderTraversal
(8) 
line 6: nearestNeighbour (1)
(8) 
line 7: inorderTraversal
(8) 
line 8: insert (9)
line 9: inorderTraversal
(8) (9) 
line 10: nodeCount_height_leafCount
nodeCount=2;height=2;leafCount=1
line 11: inorderTraversal
(8) (9) 
line 12: insert (8)
line 13: inorderTraversal
(8) (8) (9) 
line 14: insert (2)
line 15: inorderTraversal
(2) (8) (8) (9) 
line 16: clear
line 17: buildTree 10
(8) (10) (8) (9) (4) (6) (8) (8) (7) (9) 
line 18: inorderTraversal
(4) (6) (7) (8) (8) (8) (8) (9) (9) (10) 
line 19: insert (3)
line 20: inorderTraversal
(3) (4) (6) (7) (8) (8) (8) (8) (9) (9) (10) 
line 21: kNearestNeighbour 8 (8)
(7) (8) (8) (8) (8) (9) (9) (10) 
line 22: inorderTraversal
(3) (4) (6) (7) (8) (8) (8) (8) (9) (9) (10) 
line 23: insert (9)
line 24: inorderTraversal
(3) (4) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 25: insert (6)
line 26: inorderTraversal
(3) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 27: insert (1)
line 28: inorderTraversal
(1) (3) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 29: nearestNeighbour (8)
(8) 
line 30: inorderTraversal
(1) (3) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 31: kNearestNeighbour 9 (1)
(1) (3) (4) (6) (6) (7) (8) (8) (8) 
line 32: inorderTraversal
(1) (3) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 33: remove (5)
line 34: inorderTraversal
(1) (3) (4) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 35: remove (7)
line 36: inorderTraversal
(1) (3) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (10) 
line 37: nearestNeighbour (2)
(1) 
line 38: inorderTraversal
(1) (3) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (10) 
line 39: insert (9)
line 40: inorderTraversal
(1) (3) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 41: insert (4)
line 42: inorderTraversal
(1) (3) (4) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 43: nearestNeighbour (5)
(4) 
line 44: inorderTraversal
(1) (3) (4) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 45: search (7)
FALSE
line 46: inorderTraversal
(1) (3) (4) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 47: nearestNeighbour (8)
(8) 
line 48: inorderTraversal
(1) (3) (4) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 49: insert (3)
line 50: inorderTraversal
(1) (3) (3) (4) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 51: insert (4)
line 52: inorderTraversal
(1) (3) (3) (4) (4) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 53: nearestNeighbour (3)
(3) 
line 54: inorderTraversal
(1) (3) (3) (4) (4) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 55: nearestNeighbour (1)
(1) 
line 56: inorderTraversal
(1) (3) (3) (4) (4) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 57: kNearestNeighbour 1 (2)
(1) 
line 58: inorderTraversal
(1) (3) (3) (4) (4) (4) (6) (6) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 59: remove (8)
line 60: inorderTraversal
(1) (3) (3) (4) (4) (4) (6) (6) (8) (8) (8) (9) (9) (9) (9) (10) 
line 61: nodeCount_height_leafCount
nodeCount=16;height=7;leafCount=6
line 62: inorderTraversal
(1) (3) (3) (4) (4) (4) (6) (6) (8) (8) (8) (9) (9) (9) (9) (10) 
line 63: insert (7)
line 64: inorderTraversal
(1) (3) (3) (4) (4) (4) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 65: search (3)
TRUE
line 66: inorderTraversal
(1) (3) (3) (4) (4) (4) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 67: search (8)
TRUE
line 68: inorderTraversal
(1) (3) (3) (4) (4) (4) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 69: clear
line 70: buildTree 1
(4) 
line 71: inorderTraversal
(4) 
line 72: insert (4)
line 73: inorderTraversal
(4) (4) 
line 74: kNearestNeighbour 7 (7)
(4) (4) 
line 75: inorderTraversal
(4) (4) 
line 76: nearestNeighbour (8)
(4) 
line 77: inorderTraversal
(4) (4) 
line 78: insert (3)
line 79: inorderTraversal
(3) (4) (4) 
line 80: insert (6)
line 81: inorderTraversal
(3) (4) (4) (6) 
line 82: insert (6)
line 83: inorderTraversal
(3) (4) (4) (6) (6) 
line 84: nearestNeighbour (9)
(6) 
line 85: inorderTraversal
(3) (4) (4) (6) (6) 
line 86: remove (6)
line 87: inorderTraversal
(3) (4) (4) (6) 
line 88: insert (8)
line 89: inorderTraversal
(3) (4) (4) (6) (8) 
line 90: nearestNeighbour (10)
(8) 
line 91: inorderTraversal
(3) (4) (4) (6) (8) 
line 92: insert (2)
line 93: inorderTraversal
(2) (3) (4) (4) (6) (8) 
line 94: kNearestNeighbour 3 (8)
(4) (6) (8) 
line 95: inorderTraversal
(2) (3) (4) (4) (6) (8) 
line 96: insert (10)
line 97: inorderTraversal
(2) (3) (4) (4) (6) (8) (10) 
line 98: nearestNeighbour (5)
(6) 
line 99: inorderTraversal
(2) (3) (4) (4) (6) (8) (10) 
line 100: insert (2)
line 101: inorderTraversal
(2) (2) (3) (4) (4) (6) (8) (10) 
line 102: kNearestNeighbour 5 (4)
(2) (3) (4) (4) (6) 
line 103: inorderTraversal
(2) (2) (3) (4) (4) (6) (8) (10) 
line 104: insert (5)
line 105: inorderTraversal
(2) (2) (3) (4) (4) (5) (6) (8) (10) 
line 106: nearestNeighbour (1)
(2) 
line 107: inorderTraversal
(2) (2) (3) (4) (4) (5) (6) (8) (10) 
line 108: insert (10)
line 109: inorderTraversal
(2) (2) (3) (4) (4) (5) (6) (8) (10) (10) 
line 110: clear
line 111: buildTree 13
(1) (2) (3) (2) (8) (10) (7) (4) (1) (8) (5) (7) (2) 
line 112: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (7) (7) (8) (8) (10) 
line 113: kNearestNeighbour 6 (1)
(1) (1) (2) (2) (2) (3) 
line 114: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (7) (7) (8) (8) (10) 
line 115: insert (3)
line 116: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (10) 
line 117: kNearestNeighbour 5 (8)
(7) (7) (8) (8) (10) 
line 118: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (10) 
line 119: insert (10)
line 120: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (10) (10) 
line 121: insert (8)
line 122: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (8) (10) (10) 
line 123: insert (10)
line 124: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (8) (10) (10) (10) 
line 125: nearestNeighbour (1)
(1) 
line 126: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (8) (10) (10) (10) 
line 127: insert (8)
line 128: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 129: insert (2)
line 130: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 131: kNearestNeighbour 7 (8)
(7) (7) (8) (8) (8) (8) (10) 
line 132: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 133: nearestNeighbour (8)
(8) 
line 134: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 135: insert (9)
line 136: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 137: insert (6)
line 138: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 139: kNearestNeighbour 6 (2)
(2) (2) (2) (2) (3) (3) 
line 140: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 141: insert (1)
line 142: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 143: nearestNeighbour (1)
(1) 
line 144: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 145: kNearestNeighbour 8 (1)
(1) (1) (1) (2) (2) (2) (2) (3) 
line 146: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 147: kNearestNeighbour 4 (8)
(8) (8) (8) (8) 
line 148: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 149: insert (8)
line 150: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 151: insert (8)
line 152: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 153: nearestNeighbour (9)
(9) 
line 154: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 155: nearestNeighbour (1)
(1) 
line 156: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 157: insert (2)
line 158: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 159: nearestNeighbour (4)
(4) 
line 160: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 161: search (3)
TRUE
line 162: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 163: nearestNeighbour (6)
(6) 
line 164: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 165: nearestNeighbour (4)
(4) 
line 166: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 167: nearestNeighbour (3)
(3) 
line 168: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 169: remove (2)
line 170: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 171: kNearestNeighbour 7 (10)
(8) (8) (8) (9) (10) (10) (10) 
line 172: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 173: remove (10)
line 174: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) 
line 175: kNearestNeighbour 3 (5)
(4) (5) (6) 
line 176: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) 
line 177: nearestNeighbour (9)
(9) 
line 178: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) 
line 179: nearestNeighbour (8)
(8) 
line 180: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) 
line 181: insert (5)
line 182: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (10) (10) 
line 183: clear
line 184: buildTree 13
(8) (8) (4) (1) (6) (9) (10) (2) (10) (10) (2) (10) (1) 
line 185: inorderTraversal
(1) (1) (2) (2) (4) (6) (8) (8) (9) (10) (10) (10) (10) 
line 186: remove (9)
line 187: inorderTraversal
(1) (1) (2) (2) (4) (6) (8) (8) (10) (10) (10) (10) 
line 188: nearestNeighbour (5)
(6) 
line 189: inorderTraversal
(1) (1) (2) (2) (4) (6) (8) (8) (10) (10) (10) (10) 
line 190: insert (1)
line 191: inorderTraversal
(1) (1) (1) (2) (2) (4) (6) (8) (8) (10) (10) (10) (10) 
line 192: insert (2)
line 193: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (8) (8) (10) (10) (10) (10) 
line 194: insert (7)
line 195: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (7) (8) (8) (10) (10) (10) (10) 
line 196: kNearestNeighbour 9 (1)
(1) (1) (1) (2) (2) (2) (4) (6) (7) 
line 197: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (7) (8) (8) (10) (10) (10) (10) 
line 198: insert (8)
line 199: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 200: insert (3)
line 201: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 202: kNearestNeighbour 3 (8)
(8) (8) (8) 
line 203: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 204: nearestNeighbour (1)
(1) 
line 205: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 206: preorderTraversal
(8) (2) (1) (1) (1) (4) (2) (2) (3) (6) (7) (10) (8) (8) (10) (10) (10) 
line 207: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 208: clear
line 209: buildTree 20
(3) (9) (1) (5) (1) (6) (2) (10) (2) (3) (2) (6) (3) (2) (6) (4) (1) (7) (3) (3) 
line 210: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (7) (9) (10) 
line 211: insert (6)
line 212: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (7) (9) (10) 
line 213: kNearestNeighbour 3 (9)
(7) (9) (10) 
line 214: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (7) (9) (10) 
line 215: remove (6)
line 216: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (7) (9) (10) 
line 217: insert (4)
line 218: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (5) (6) (6) (6) (7) (9) (10) 
line 219: clear
line 220: buildTree 17
(3) (10) (10) (5) (10) (5) (5) (2) (7) (8) (2) (7) (1) (10) (9) (8) (10) 
line 221: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 222: insert (1)
line 223: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 224: insert (5)
line 225: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 226: kNearestNeighbour 8 (5)
(2) (3) (5) (5) (5) (5) (7) (7) 
line 227: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 228: insert (4)
line 229: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 230: insert (5)
line 231: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 232: nearestNeighbour (4)
(4) 
line 233: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 234: preorderTraversal
(7) (3) (2) (1) (1) (2) (5) (4) (5) (5) (5) (5) (10) (8) (7) (8) (9) (10) (10) (10) (10) 
line 235: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 236: insert (2)
line 237: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 238: nearestNeighbour (3)
(3) 
line 239: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 240: clear
line 241: buildTree 10
(10) (7) (2) (3) (1) (6) (6) (9) (1) (6) 
line 242: inorderTraversal
(1) (1) (2) (3) (6) (6) (6) (7) (9) (10) 
line 243: nearestNeighbour (6)
(6) 
line 244: inorderTraversal
(1) (1) (2) (3) (6) (6) (6) (7) (9) (10) 
line 245: nearestNeighbour (4)
(3) 
line 246: inorderTraversal
(1) (1) (2) (3) (6) (6) (6) (7) (9) (10) 
line 247: clear
line 248: buildTree 1
(10) 
line 249: inorderTraversal
(10) 
line 250: clear
line 251: buildTree 10
(2) (10) (10) (7) (7) (10) (3) (6) (10) (9) 
line 252: inorderTraversal
(2) (3) (6) (7) (7) (9) (10) (10) (10) (10) 
line 253: remove (10)
line 254: inorderTraversal
(2) (3) (6) (7) (7) (9) (10) (10) (10) 
line 255: remove (10)
line 256: inorderTraversal
(2) (3) (6) (7) (7) (9) (10) (10) 
line 257: insert (10)
line 258: inorderTraversal
(2) (3) (6) (7) (7) (9) (10) (10) (10) 
line 259: insert (6)
line 260: inorderTraversal
(2) (3) (6) (6) (7) (7) (9) (10) (10) (10) 
line 261: search (2)
TRUE
line 262: inorderTraversal
(2) (3) (6) (6) (7) (7) (9) (10) (10) (10) 
line 263: insert (7)
line 264: inorderTraversal
(2) (3) (6) (6) (7) (7) (7) (9) (10) (10) (10) 
line 265: nearestNeighbour (6)
(6) 
line 266: inorderTraversal
(2) (3) (6) (6) (7) (7) (7) (9) (10) (10) (10) 
line 267: nearestNeighbour (1)
(2) 
line 268: inorderTraversal
(2) (3) (6) (6) (7) (7) (7) (9) (10) (10) (10) 
line 269: kNearestNeighbour 10 (10)
(3) (6) (6) (7) (7) (7) (9) (10) (10) (10) 
line 270: inorderTraversal
(2) (3) (6) (6) (7) (7) (7) (9) (10) (10) (10) 
line 271: kNearestNeighbour 10 (2)
(2) (3) (6) (6) (7) (7) (7) (9) (10) (10) 
line 272: inorderTraversal
(2) (3) (6) (6) (7) (7) (7) (9) (10) (10) (10) 
line 273: insert (5)
line 274: inorderTraversal
(2) (3) (5) (6) (6) (7) (7) (7) (9) (10) (10) (10) 
line 275: kNearestNeighbour 4 (8)
(7) (7) (7) (9) 
line 276: inorderTraversal
(2) (3) (5) (6) (6) (7) (7) (7) (9) (10) (10) (10) 
line 277: insert (9)
line 278: inorderTraversal
(2) (3) (5) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 279: remove (3)
line 280: inorderTraversal
(2) (5) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 281: kNearestNeighbour 2 (3)
(2) (5) 
line 282: inorderTraversal
(2) (5) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 283: kNearestNeighbour 3 (4)
(2) (5) (6) 
line 284: inorderTraversal
(2) (5) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 285: remove (5)
line 286: inorderTraversal
(2) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 287: insert (2)
line 288: inorderTraversal
(2) (2) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 289: search (7)
TRUE
line 290: inorderTraversal
(2) (2) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 291: insert (1)
line 292: inorderTraversal
(1) (2) (2) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 293: postorderTraversal
(1) (2) (2) (6) (6) (7) (9) (9) (7) (10) (10) (10) (7) 
line 294: inorderTraversal
(1) (2) (2) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 295: nearestNeighbour (8)
(7) 
line 296: inorderTraversal
(1) (2) (2) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 297: insert (8)
line 298: inorderTraversal
(1) (2) (2) (6) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 299: clear
line 300: buildTree 3
(6) (9) (1) 
line 301: inorderTraversal
(1) (6) (9) 
line 302: clear
line 303: buildTree 14
(7) (1) (3) (1) (10) (7) (10) (3) (4) (6) (3) (8) (4) (6) 
line 304: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (6) (6) (7) (7) (8) (10) (10) 
line 305: insert (3)
line 306: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (6) (6) (7) (7) (8) (10) (10) 
line 307: kNearestNeighbour 6 (6)
(4) (6) (6) (7) (7) (8) 
line 308: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (6) (6) (7) (7) (8) (10) (10) 
line 309: insert (1)
line 310: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (4) (6) (6) (7) (7) (8) (10) (10) 
line 311: clear
line 312: buildTree 4
(6) (10) (3) (10) 
line 313: inorderTraversal
(3) (6) (10) (10) 
line 314: kNearestNeighbour 4 (4)
(3) (6) (10) (10) 
line 315: inorderTraversal
(3) (6) (10) (10) 
line 316: insert (5)
line 317: inorderTraversal
(3) (5) (6) (10) (10) 
line 318: search (10)
TRUE
line 319: inorderTraversal
(3) (5) (6) (10) (10) 
line 320: kNearestNeighbour 10 (7)
(3) (5) (6) (10) (10) 
line 321: inorderTraversal
(3) (5) (6) (10) (10) 
line 322: remove (6)
line 323: inorderTraversal
(3) (5) (10) (10) 
line 324: insert (4)
line 325: inorderTraversal
(3) (4) (5) (10) (10) 
line 326: insert (1)
line 327: inorderTraversal
(1) (3) (4) (5) (10) (10) 
line 328: remove (10)
line 329: inorderTraversal
(1) (3) (4) (5) (10) 
line 330: insert (2)
line 331: inorderTraversal
(1) (2) (3) (4) (5) (10) 
line 332: nearestNeighbour (10)
(10) 
line 333: inorderTraversal
(1) (2) (3) (4) (5) (10) 
line 334: insert (7)
line 335: inorderTraversal
(1) (2) (3) (4) (5) (7) (10) 
line 336: remove (10)
line 337: inorderTraversal
(1) (2) (3) (4) (5) (7) 
line 338: kNearestNeighbour 2 (7)
(5) (7) 
line 339: inorderTraversal
(1) (2) (3) (4) (5) (7) 
line 340: clear
line 341: buildTree 15
(8) (9) (9) (7) (4) (6) (5) (9) (2) (10) (2) (6) (9) (1) (10) 
line 342: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 343: search (9)
TRUE
line 344: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 345: kNearestNeighbour 8 (2)
(1) (2) (2) (4) (5) (6) (6) (7) 
line 346: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (10) (10) 
line 347: insert (9)
line 348: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 349: search (4)
TRUE
line 350: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 351: nodeCount_height_leafCount
nodeCount=16;height=7;leafCount=7
line 352: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 353: kNearestNeighbour 8 (10)
(8) (9) (9) (9) (9) (9) (10) (10) 
line 354: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 355: kNearestNeighbour 4 (3)
(1) (2) (2) (4) 
line 356: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 357: insert (6)
line 358: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 359: nearestNeighbour (4)
(4) 
line 360: inorderTraversal
(1) (2) (2) (4) (5) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 361: remove (5)
line 362: inorderTraversal
(1) (2) (2) (4) (6) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 363: insert (8)
line 364: inorderTraversal
(1) (2) (2) (4) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 365: nearestNeighbour (9)
(9) 
line 366: inorderTraversal
(1) (2) (2) (4) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 367: nearestNeighbour (8)
(8) 
line 368: inorderTraversal
(1) (2) (2) (4) (6) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 369: insert (7)
line 370: inorderTraversal
(1) (2) (2) (4) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 371: nearestNeighbour (6)
(6) 
line 372: inorderTraversal
(1) (2) (2) (4) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 373: kNearestNeighbour 2 (10)
(10) (10) 
line 374: inorderTraversal
(1) (2) (2) (4) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 375: nearestNeighbour (10)
(10) 
line 376: inorderTraversal
(1) (2) (2) (4) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 377: remove (2)
line 378: inorderTraversal
(1) (2) (4) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 379: kNearestNeighbour 6 (6)
(4) (6) (6) (6) (7) (7) 
line 380: inorderTraversal
(1) (2) (4) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 381: preorderTraversal
(7) (4) (2) (1) (6) (6) (6) (9) (8) (7) (8) (9) (9) (10) (9) (9) (10) 
line 382: inorderTraversal
(1) (2) (4) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 383: search (4)
TRUE
line 384: inorderTraversal
(1) (2) (4) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 385: insert (1)
line 386: inorderTraversal
(1) (1) (2) (4) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 387: remove (6)
line 388: inorderTraversal
(1) (1) (2) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 389: remove (2)
line 390: inorderTraversal
(1) (1) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 391: insert (4)
line 392: inorderTraversal
(1) (1) (4) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 393: insert (5)
line 394: inorderTraversal
(1) (1) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 395: nearestNeighbour (6)
(6) 
line 396: inorderTraversal
(1) (1) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 397: nearestNeighbour (3)
(4) 
line 398: inorderTraversal
(1) (1) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 399: insert (3)
line 400: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 401: nearestNeighbour (9)
(9) 
line 402: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 403: insert (3)
line 404: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 405: search (2)
FALSE
line 406: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 407: kNearestNeighbour 6 (7)
(6) (6) (7) (7) (8) (8) 
line 408: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 409: insert (5)
line 410: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 411: insert (1)
line 412: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 413: insert (7)
line 414: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 415: nodeCount_height_leafCount
nodeCount=23;height=7;leafCount=8
line 416: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) (10) 
line 417: preorderTraversal
(7) (4) (1) (1) (3) (1) (3) (6) (4) (5) (5) (6) (9) (8) (7) (7) (8) (9) (9) (10) (9) (9) (10) 
line 418: postorderTraversal
(1) (3) (3) (1) (1) (5) (5) (4) (6) (6) (4) (7) (7) (8) (8) (9) (9) (10) (10) (9) (9) (9) (7) 
line 419: clear
