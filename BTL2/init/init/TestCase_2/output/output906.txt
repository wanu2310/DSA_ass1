line 1: k=1
line 2: nearestNeighbour (7)

line 3: inorderTraversal

line 4: postorderTraversal

line 5: inorderTraversal

line 6: clear
line 7: buildTree 17
(3) (6) (10) (6) (4) (1) (9) (7) (1) (10) (10) (8) (2) (8) (1) (5) (4) 
line 8: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 9: insert (8)
line 10: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 11: kNearestNeighbour 10 (4)
(1) (1) (1) (2) (3) (4) (4) (5) (6) (6) 
line 12: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 13: nearestNeighbour (6)
(6) 
line 14: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 15: insert (3)
line 16: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 17: insert (3)
line 18: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 19: kNearestNeighbour 5 (5)
(4) (4) (5) (6) (6) 
line 20: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 21: nearestNeighbour (10)
(10) 
line 22: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 23: clear
line 24: buildTree 15
(1) (5) (3) (3) (9) (5) (2) (1) (7) (8) (7) (4) (3) (5) (9) 
line 25: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (5) (5) (7) (7) (8) (9) (9) 
line 26: clear
line 27: buildTree 11
(10) (1) (10) (4) (10) (7) (6) (4) (6) (5) (2) 
line 28: inorderTraversal
(1) (2) (4) (4) (5) (6) (6) (7) (10) (10) (10) 
line 29: insert (1)
line 30: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (6) (7) (10) (10) (10) 
line 31: kNearestNeighbour 5 (1)
(1) (1) (2) (4) (4) 
line 32: inorderTraversal
(1) (1) (2) (4) (4) (5) (6) (6) (7) (10) (10) (10) 
line 33: insert (5)
line 34: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (6) (7) (10) (10) (10) 
line 35: remove (6)
line 36: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (7) (10) (10) (10) 
line 37: clear
line 38: buildTree 8
(2) (2) (4) (5) (3) (3) (2) (9) 
line 39: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (9) 
line 40: insert (5)
line 41: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (9) 
line 42: insert (10)
line 43: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (9) (10) 
line 44: insert (8)
line 45: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (8) (9) (10) 
line 46: kNearestNeighbour 4 (1)
(2) (2) (2) (3) 
line 47: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (8) (9) (10) 
line 48: insert (6)
line 49: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (8) (9) (10) 
line 50: nearestNeighbour (3)
(3) 
line 51: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (8) (9) (10) 
line 52: nearestNeighbour (2)
(2) 
line 53: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (8) (9) (10) 
line 54: remove (2)
line 55: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (6) (8) (9) (10) 
line 56: insert (10)
line 57: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (6) (8) (9) (10) (10) 
line 58: insert (8)
line 59: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (6) (8) (8) (9) (10) (10) 
line 60: clear
line 61: buildTree 18
(5) (6) (8) (6) (7) (7) (8) (6) (8) (2) (2) (8) (1) (4) (3) (3) (8) (7) 
line 62: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) 
line 63: insert (9)
line 64: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) 
line 65: nearestNeighbour (8)
(8) 
line 66: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) 
line 67: insert (5)
line 68: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) 
line 69: kNearestNeighbour 2 (9)
(8) (9) 
line 70: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) 
line 71: insert (1)
line 72: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) 
line 73: clear
line 74: buildTree 19
(6) (4) (10) (5) (1) (10) (1) (6) (6) (4) (8) (1) (3) (6) (6) (10) (10) (7) (1) 
line 75: inorderTraversal
(1) (1) (1) (1) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (8) (10) (10) (10) (10) 
line 76: insert (7)
line 77: inorderTraversal
(1) (1) (1) (1) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) 
line 78: insert (3)
line 79: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) 
line 80: nearestNeighbour (5)
(5) 
line 81: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) 
line 82: postorderTraversal
(1) (1) (1) (3) (5) (4) (4) (3) (1) (6) (6) (6) (6) (7) (8) (10) (10) (10) (10) (7) (6) 
line 83: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) 
line 84: insert (10)
line 85: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) (10) 
line 86: remove (9)
line 87: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) (10) 
line 88: kNearestNeighbour 4 (10)
(10) (10) (10) (10) 
line 89: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) (10) 
line 90: nearestNeighbour (2)
(1) 
line 91: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) (10) 
line 92: kNearestNeighbour 7 (4)
(3) (3) (4) (4) (5) (6) (6) 
line 93: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) (10) 
line 94: kNearestNeighbour 8 (9)
(7) (7) (8) (10) (10) (10) (10) (10) 
line 95: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) (10) 
line 96: remove (10)
line 97: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) 
line 98: insert (8)
line 99: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) 
line 100: insert (10)
line 101: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 102: kNearestNeighbour 9 (1)
(1) (1) (1) (1) (3) (3) (4) (4) (5) 
line 103: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 104: search (1)
TRUE
line 105: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 106: insert (3)
line 107: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 108: remove (2)
line 109: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 110: insert (4)
line 111: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 112: nearestNeighbour (4)
(4) 
line 113: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 114: kNearestNeighbour 9 (3)
(1) (1) (3) (3) (3) (4) (4) (4) (5) 
line 115: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) (10) (10) 
line 116: insert (8)
line 117: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 118: insert (3)
line 119: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 120: remove (7)
line 121: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 122: nearestNeighbour (5)
(5) 
line 123: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) (10) (10) 
line 124: clear
line 125: buildTree 9
(9) (4) (7) (2) (1) (4) (2) (6) (8) 
line 126: inorderTraversal
(1) (2) (2) (4) (4) (6) (7) (8) (9) 
line 127: kNearestNeighbour 2 (4)
(4) (4) 
line 128: inorderTraversal
(1) (2) (2) (4) (4) (6) (7) (8) (9) 
line 129: nearestNeighbour (1)
(1) 
line 130: inorderTraversal
(1) (2) (2) (4) (4) (6) (7) (8) (9) 
line 131: insert (7)
line 132: inorderTraversal
(1) (2) (2) (4) (4) (6) (7) (7) (8) (9) 
line 133: postorderTraversal
(1) (2) (2) (6) (4) (7) (9) (8) (7) (4) 
line 134: inorderTraversal
(1) (2) (2) (4) (4) (6) (7) (7) (8) (9) 
line 135: clear
line 136: buildTree 11
(3) (2) (7) (7) (5) (6) (4) (5) (8) (8) (10) 
line 137: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (7) (8) (8) (10) 
line 138: insert (10)
line 139: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (7) (8) (8) (10) (10) 
line 140: search (3)
TRUE
line 141: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (7) (8) (8) (10) (10) 
line 142: insert (8)
line 143: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) 
line 144: kNearestNeighbour 3 (5)
(4) (5) (5) 
line 145: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) 
line 146: insert (7)
line 147: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 148: postorderTraversal
(3) (2) (5) (5) (4) (7) (7) (7) (8) (10) (10) (8) (8) (6) 
line 149: inorderTraversal
(2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 150: insert (3)
line 151: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 152: nearestNeighbour (9)
(8) 
line 153: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 154: nodeCount_height_leafCount
nodeCount=15;height=5;leafCount=5
line 155: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 156: insert (10)
line 157: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 158: nearestNeighbour (1)
(2) 
line 159: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 160: nearestNeighbour (10)
(10) 
line 161: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 162: remove (2)
line 163: inorderTraversal
(3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 164: nearestNeighbour (5)
(5) 
line 165: inorderTraversal
(3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 166: nearestNeighbour (3)
(3) 
line 167: inorderTraversal
(3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 168: insert (5)
line 169: inorderTraversal
(3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 170: insert (3)
line 171: inorderTraversal
(3) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 172: nearestNeighbour (9)
(8) 
line 173: inorderTraversal
(3) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 174: kNearestNeighbour 9 (1)
(3) (3) (3) (4) (5) (5) (5) (6) (7) 
line 175: inorderTraversal
(3) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 176: insert (3)
line 177: inorderTraversal
(3) (3) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 178: search (3)
TRUE
line 179: inorderTraversal
(3) (3) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 180: clear
line 181: buildTree 4
(3) (4) (3) (4) 
line 182: inorderTraversal
(3) (3) (4) (4) 
line 183: nearestNeighbour (5)
(4) 
line 184: inorderTraversal
(3) (3) (4) (4) 
line 185: nearestNeighbour (6)
(4) 
line 186: inorderTraversal
(3) (3) (4) (4) 
line 187: nodeCount_height_leafCount
nodeCount=4;height=3;leafCount=2
line 188: inorderTraversal
(3) (3) (4) (4) 
line 189: insert (4)
line 190: inorderTraversal
(3) (3) (4) (4) (4) 
line 191: insert (5)
line 192: inorderTraversal
(3) (3) (4) (4) (4) (5) 
line 193: insert (2)
line 194: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) 
line 195: nearestNeighbour (3)
(3) 
line 196: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) 
line 197: nearestNeighbour (4)
(4) 
line 198: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) 
line 199: nearestNeighbour (1)
(2) 
line 200: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) 
line 201: insert (5)
line 202: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) 
line 203: insert (9)
line 204: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (9) 
line 205: nodeCount_height_leafCount
nodeCount=9;height=7;leafCount=3
line 206: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (9) 
line 207: kNearestNeighbour 10 (1)
(2) (3) (3) (4) (4) (4) (5) (5) (9) 
line 208: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (9) 
line 209: insert (1)
line 210: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (9) 
line 211: kNearestNeighbour 1 (5)
(5) 
line 212: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (9) 
line 213: kNearestNeighbour 4 (6)
(4) (4) (5) (5) 
line 214: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (9) 
line 215: clear
line 216: buildTree 7
(6) (9) (9) (7) (6) (5) (8) 
line 217: inorderTraversal
(5) (6) (6) (7) (8) (9) (9) 
line 218: clear
line 219: buildTree 1
(7) 
line 220: inorderTraversal
(7) 
line 221: insert (3)
line 222: inorderTraversal
(3) (7) 
line 223: search (7)
TRUE
line 224: inorderTraversal
(3) (7) 
line 225: nearestNeighbour (5)
(3) 
line 226: inorderTraversal
(3) (7) 
line 227: nearestNeighbour (8)
(7) 
line 228: inorderTraversal
(3) (7) 
line 229: insert (3)
line 230: inorderTraversal
(3) (3) (7) 
line 231: kNearestNeighbour 3 (4)
(3) (3) (7) 
line 232: inorderTraversal
(3) (3) (7) 
line 233: insert (2)
line 234: inorderTraversal
(2) (3) (3) (7) 
line 235: search (3)
TRUE
line 236: inorderTraversal
(2) (3) (3) (7) 
line 237: insert (4)
line 238: inorderTraversal
(2) (3) (3) (4) (7) 
line 239: remove (4)
line 240: inorderTraversal
(2) (3) (3) (7) 
line 241: nearestNeighbour (7)
(7) 
line 242: inorderTraversal
(2) (3) (3) (7) 
line 243: remove (7)
line 244: inorderTraversal
(2) (3) (3) 
line 245: insert (3)
line 246: inorderTraversal
(2) (3) (3) (3) 
line 247: insert (3)
line 248: inorderTraversal
(2) (3) (3) (3) (3) 
line 249: insert (1)
line 250: inorderTraversal
(1) (2) (3) (3) (3) (3) 
line 251: remove (7)
line 252: inorderTraversal
(1) (2) (3) (3) (3) (3) 
line 253: remove (4)
line 254: inorderTraversal
(1) (2) (3) (3) (3) (3) 
line 255: insert (8)
line 256: inorderTraversal
(1) (2) (3) (3) (3) (3) (8) 
line 257: nearestNeighbour (3)
(3) 
line 258: inorderTraversal
(1) (2) (3) (3) (3) (3) (8) 
line 259: nearestNeighbour (6)
(8) 
line 260: inorderTraversal
(1) (2) (3) (3) (3) (3) (8) 
line 261: insert (4)
line 262: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (8) 
line 263: insert (2)
line 264: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (8) 
line 265: nearestNeighbour (4)
(4) 
line 266: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (8) 
line 267: remove (3)
line 268: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (8) 
line 269: insert (4)
line 270: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (8) 
line 271: insert (7)
line 272: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (7) (8) 
line 273: kNearestNeighbour 3 (1)
(1) (2) (2) 
line 274: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (7) (8) 
line 275: preorderTraversal
(2) (1) (3) (2) (3) (3) (4) (8) (4) (7) 
line 276: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (7) (8) 
line 277: insert (3)
line 278: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (8) 
line 279: clear
line 280: buildTree 17
(8) (5) (10) (9) (5) (5) (6) (7) (2) (2) (10) (3) (10) (10) (4) (10) (9) 
line 281: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (6) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 282: nearestNeighbour (10)
(10) 
line 283: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (6) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 284: kNearestNeighbour 8 (4)
(2) (2) (3) (4) (5) (5) (5) (6) 
line 285: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (6) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 286: nearestNeighbour (9)
(9) 
line 287: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (6) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 288: nearestNeighbour (10)
(10) 
line 289: inorderTraversal
(2) (2) (3) (4) (5) (5) (5) (6) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 290: insert (1)
line 291: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 292: kNearestNeighbour 9 (7)
(5) (5) (5) (6) (7) (8) (9) (9) (10) 
line 293: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 294: insert (6)
line 295: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 296: insert (7)
line 297: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 298: insert (3)
line 299: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 300: nearestNeighbour (5)
(5) 
line 301: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 302: insert (1)
line 303: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 304: insert (2)
line 305: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) (10) 
line 306: clear
line 307: buildTree 14
(10) (9) (2) (8) (10) (2) (2) (2) (7) (6) (8) (8) (9) (6) 
line 308: inorderTraversal
(2) (2) (2) (2) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 309: search (2)
TRUE
line 310: inorderTraversal
(2) (2) (2) (2) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 311: nearestNeighbour (7)
(7) 
line 312: inorderTraversal
(2) (2) (2) (2) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 313: insert (1)
line 314: inorderTraversal
(1) (2) (2) (2) (2) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 315: clear
line 316: buildTree 19
(1) (1) (5) (5) (2) (8) (8) (8) (9) (1) (7) (4) (6) (6) (8) (5) (3) (1) (2) 
line 317: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) 
line 318: kNearestNeighbour 4 (7)
(7) (8) (8) (8) 
line 319: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) 
line 320: kNearestNeighbour 6 (2)
(1) (1) (1) (2) (2) (3) 
line 321: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) 
line 322: kNearestNeighbour 2 (10)
(8) (9) 
line 323: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) 
line 324: clear
line 325: buildTree 16
(5) (7) (2) (4) (7) (7) (1) (4) (9) (9) (4) (9) (10) (6) (8) (9) 
line 326: inorderTraversal
(1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 327: insert (10)
line 328: inorderTraversal
(1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 329: kNearestNeighbour 1 (3)
(2) 
line 330: inorderTraversal
(1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 331: insert (5)
line 332: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 333: kNearestNeighbour 6 (4)
(4) (4) (4) (5) (5) (6) 
line 334: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 335: nearestNeighbour (7)
(7) 
line 336: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 337: kNearestNeighbour 10 (7)
(5) (6) (7) (7) (7) (8) (9) (9) (9) (9) 
line 338: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 339: insert (6)
line 340: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 341: insert (4)
line 342: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 343: nearestNeighbour (10)
(10) 
line 344: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 345: clear
line 346: buildTree 3
(10) (8) (3) 
line 347: inorderTraversal
(3) (8) (10) 
line 348: kNearestNeighbour 2 (6)
(3) (8) 
line 349: inorderTraversal
(3) (8) (10) 
line 350: clear
line 351: buildTree 16
(4) (3) (3) (10) (2) (9) (2) (9) (1) (5) (5) (6) (7) (8) (6) (7) 
line 352: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 353: remove (2)
line 354: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 355: remove (2)
line 356: inorderTraversal
(1) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 357: kNearestNeighbour 1 (2)
(1) 
line 358: inorderTraversal
(1) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 359: insert (1)
line 360: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 361: nearestNeighbour (10)
(10) 
line 362: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 363: kNearestNeighbour 2 (8)
(7) (8) 
line 364: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 365: search (2)
FALSE
line 366: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 367: insert (8)
line 368: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 369: insert (5)
line 370: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 371: insert (7)
line 372: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 373: nearestNeighbour (6)
(6) 
line 374: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 375: clear
line 376: buildTree 1
(5) 
line 377: inorderTraversal
(5) 
line 378: kNearestNeighbour 8 (1)
(5) 
line 379: inorderTraversal
(5) 
line 380: nearestNeighbour (1)
(5) 
line 381: inorderTraversal
(5) 
line 382: insert (2)
line 383: inorderTraversal
(2) (5) 
line 384: insert (10)
line 385: inorderTraversal
(2) (5) (10) 
line 386: nearestNeighbour (4)
(5) 
line 387: inorderTraversal
(2) (5) (10) 
line 388: nearestNeighbour (10)
(10) 
line 389: inorderTraversal
(2) (5) (10) 
line 390: insert (2)
line 391: inorderTraversal
(2) (2) (5) (10) 
line 392: clear
line 393: buildTree 7
(3) (5) (2) (3) (2) (1) (6) 
line 394: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) 
line 395: nearestNeighbour (7)
(6) 
line 396: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) 
line 397: nearestNeighbour (7)
(6) 
line 398: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) 
line 399: kNearestNeighbour 4 (5)
(3) (3) (5) (6) 
line 400: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) 
line 401: nearestNeighbour (8)
(6) 
line 402: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) 
line 403: kNearestNeighbour 5 (2)
(1) (2) (2) (3) (3) 
line 404: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) 
line 405: remove (1)
line 406: inorderTraversal
(2) (2) (3) (3) (5) (6) 
line 407: insert (2)
line 408: inorderTraversal
(2) (2) (2) (3) (3) (5) (6) 
line 409: clear
line 410: buildTree 3
(9) (5) (9) 
line 411: inorderTraversal
(5) (9) (9) 
line 412: kNearestNeighbour 7 (2)
(5) (9) (9) 
line 413: inorderTraversal
(5) (9) (9) 
line 414: nearestNeighbour (3)
(5) 
line 415: inorderTraversal
(5) (9) (9) 
line 416: kNearestNeighbour 6 (10)
(5) (9) (9) 
line 417: inorderTraversal
(5) (9) (9) 
line 418: insert (7)
line 419: inorderTraversal
(5) (7) (9) (9) 
line 420: remove (5)
line 421: inorderTraversal
(7) (9) (9) 
line 422: nodeCount_height_leafCount
nodeCount=3;height=2;leafCount=2
line 423: inorderTraversal
(7) (9) (9) 
line 424: preorderTraversal
(9) (7) (9) 
line 425: postorderTraversal
(7) (9) (9) 
line 426: clear
