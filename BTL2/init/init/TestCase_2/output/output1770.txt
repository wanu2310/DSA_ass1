line 1: k=1
line 2: kNearestNeighbour 2 (2)

line 3: inorderTraversal

line 4: insert (9)
line 5: inorderTraversal
(9) 
line 6: kNearestNeighbour 8 (2)
(9) 
line 7: inorderTraversal
(9) 
line 8: kNearestNeighbour 3 (2)
(9) 
line 9: inorderTraversal
(9) 
line 10: insert (4)
line 11: inorderTraversal
(4) (9) 
line 12: insert (8)
line 13: inorderTraversal
(4) (8) (9) 
line 14: remove (9)
line 15: inorderTraversal
(4) (8) 
line 16: clear
line 17: buildTree 2
(8) (3) 
line 18: inorderTraversal
(3) (8) 
line 19: insert (8)
line 20: inorderTraversal
(3) (8) (8) 
line 21: insert (7)
line 22: inorderTraversal
(3) (7) (8) (8) 
line 23: insert (5)
line 24: inorderTraversal
(3) (5) (7) (8) (8) 
line 25: clear
line 26: buildTree 20
(6) (3) (4) (3) (3) (2) (3) (4) (6) (6) (4) (10) (2) (3) (7) (2) (2) (6) (10) (10) 
line 27: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (6) (6) (6) (7) (10) (10) (10) 
line 28: kNearestNeighbour 6 (10)
(6) (6) (7) (10) (10) (10) 
line 29: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (6) (6) (6) (7) (10) (10) (10) 
line 30: kNearestNeighbour 8 (8)
(6) (6) (6) (6) (7) (10) (10) (10) 
line 31: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (6) (6) (6) (7) (10) (10) (10) 
line 32: postorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (6) (6) (6) (10) (10) (10) (7) (6) (4) 
line 33: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (6) (6) (6) (7) (10) (10) (10) 
line 34: nearestNeighbour (2)
(2) 
line 35: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (6) (6) (6) (7) (10) (10) (10) 
line 36: nearestNeighbour (4)
(4) 
line 37: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (6) (6) (6) (7) (10) (10) (10) 
line 38: clear
line 39: buildTree 8
(10) (7) (7) (7) (8) (3) (9) (8) 
line 40: inorderTraversal
(3) (7) (7) (7) (8) (8) (9) (10) 
line 41: clear
line 42: buildTree 13
(2) (9) (3) (9) (10) (6) (1) (10) (7) (5) (3) (3) (10) 
line 43: inorderTraversal
(1) (2) (3) (3) (3) (5) (6) (7) (9) (9) (10) (10) (10) 
line 44: nearestNeighbour (3)
(3) 
line 45: inorderTraversal
(1) (2) (3) (3) (3) (5) (6) (7) (9) (9) (10) (10) (10) 
line 46: clear
line 47: buildTree 6
(9) (7) (8) (5) (3) (4) 
line 48: inorderTraversal
(3) (4) (5) (7) (8) (9) 
line 49: insert (7)
line 50: inorderTraversal
(3) (4) (5) (7) (7) (8) (9) 
line 51: remove (7)
line 52: inorderTraversal
(3) (4) (5) (7) (8) (9) 
line 53: insert (10)
line 54: inorderTraversal
(3) (4) (5) (7) (8) (9) (10) 
line 55: insert (8)
line 56: inorderTraversal
(3) (4) (5) (7) (8) (8) (9) (10) 
line 57: insert (3)
line 58: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (9) (10) 
line 59: insert (8)
line 60: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (8) (9) (10) 
line 61: postorderTraversal
(3) (4) (3) (7) (8) (8) (10) (9) (8) (5) 
line 62: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (8) (9) (10) 
line 63: nearestNeighbour (9)
(9) 
line 64: inorderTraversal
(3) (3) (4) (5) (7) (8) (8) (8) (9) (10) 
line 65: insert (3)
line 66: inorderTraversal
(3) (3) (3) (4) (5) (7) (8) (8) (8) (9) (10) 
line 67: insert (2)
line 68: inorderTraversal
(2) (3) (3) (3) (4) (5) (7) (8) (8) (8) (9) (10) 
line 69: kNearestNeighbour 6 (1)
(2) (3) (3) (3) (4) (5) 
line 70: inorderTraversal
(2) (3) (3) (3) (4) (5) (7) (8) (8) (8) (9) (10) 
line 71: kNearestNeighbour 5 (2)
(2) (3) (3) (3) (4) 
line 72: inorderTraversal
(2) (3) (3) (3) (4) (5) (7) (8) (8) (8) (9) (10) 
line 73: clear
line 74: buildTree 2
(6) (7) 
line 75: inorderTraversal
(6) (7) 
line 76: insert (6)
line 77: inorderTraversal
(6) (6) (7) 
line 78: insert (2)
line 79: inorderTraversal
(2) (6) (6) (7) 
line 80: insert (5)
line 81: inorderTraversal
(2) (5) (6) (6) (7) 
line 82: kNearestNeighbour 1 (6)
(6) 
line 83: inorderTraversal
(2) (5) (6) (6) (7) 
line 84: clear
line 85: buildTree 4
(5) (1) (2) (2) 
line 86: inorderTraversal
(1) (2) (2) (5) 
line 87: postorderTraversal
(1) (5) (2) (2) 
line 88: inorderTraversal
(1) (2) (2) (5) 
line 89: insert (5)
line 90: inorderTraversal
(1) (2) (2) (5) (5) 
line 91: insert (5)
line 92: inorderTraversal
(1) (2) (2) (5) (5) (5) 
line 93: kNearestNeighbour 3 (6)
(5) (5) (5) 
line 94: inorderTraversal
(1) (2) (2) (5) (5) (5) 
line 95: insert (1)
line 96: inorderTraversal
(1) (1) (2) (2) (5) (5) (5) 
line 97: remove (5)
line 98: inorderTraversal
(1) (1) (2) (2) (5) (5) 
line 99: insert (10)
line 100: inorderTraversal
(1) (1) (2) (2) (5) (5) (10) 
line 101: insert (9)
line 102: inorderTraversal
(1) (1) (2) (2) (5) (5) (9) (10) 
line 103: insert (8)
line 104: inorderTraversal
(1) (1) (2) (2) (5) (5) (8) (9) (10) 
line 105: kNearestNeighbour 4 (8)
(5) (8) (9) (10) 
line 106: inorderTraversal
(1) (1) (2) (2) (5) (5) (8) (9) (10) 
line 107: insert (3)
line 108: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (8) (9) (10) 
line 109: insert (7)
line 110: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (8) (9) (10) 
line 111: kNearestNeighbour 7 (2)
(1) (1) (2) (2) (3) (5) (5) 
line 112: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (8) (9) (10) 
line 113: nodeCount_height_leafCount
nodeCount=11;height=8;leafCount=3
line 114: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (8) (9) (10) 
line 115: kNearestNeighbour 2 (5)
(5) (5) 
line 116: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (8) (9) (10) 
line 117: nearestNeighbour (9)
(9) 
line 118: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (8) (9) (10) 
line 119: kNearestNeighbour 3 (3)
(2) (2) (3) 
line 120: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (8) (9) (10) 
line 121: nearestNeighbour (1)
(1) 
line 122: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (8) (9) (10) 
line 123: insert (8)
line 124: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (8) (8) (9) (10) 
line 125: insert (4)
line 126: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (7) (8) (8) (9) (10) 
line 127: nearestNeighbour (8)
(8) 
line 128: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (7) (8) (8) (9) (10) 
line 129: clear
line 130: buildTree 16
(9) (10) (9) (10) (1) (3) (2) (1) (4) (9) (7) (6) (5) (7) (10) (6) 
line 131: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 132: kNearestNeighbour 9 (4)
(1) (1) (2) (3) (4) (5) (6) (6) (7) 
line 133: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 134: nodeCount_height_leafCount
nodeCount=16;height=5;leafCount=7
line 135: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 136: clear
line 137: buildTree 16
(10) (3) (10) (3) (10) (1) (5) (10) (8) (5) (3) (10) (6) (3) (6) (2) 
line 138: inorderTraversal
(1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (8) (10) (10) (10) (10) (10) 
line 139: insert (8)
line 140: inorderTraversal
(1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 141: kNearestNeighbour 7 (4)
(2) (3) (3) (3) (3) (5) (5) 
line 142: inorderTraversal
(1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 143: nearestNeighbour (7)
(8) 
line 144: inorderTraversal
(1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 145: nearestNeighbour (3)
(3) 
line 146: inorderTraversal
(1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 147: nearestNeighbour (6)
(6) 
line 148: inorderTraversal
(1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 149: insert (3)
line 150: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 151: preorderTraversal
(5) (3) (1) (2) (3) (3) (3) (3) (10) (6) (5) (6) (8) (8) (10) (10) (10) (10) 
line 152: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 153: nearestNeighbour (9)
(8) 
line 154: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 155: remove (5)
line 156: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 157: insert (5)
line 158: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 159: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=5
line 160: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 161: insert (1)
line 162: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 163: insert (2)
line 164: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 165: insert (8)
line 166: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 167: insert (3)
line 168: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 169: nearestNeighbour (8)
(8) 
line 170: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 171: insert (1)
line 172: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 173: kNearestNeighbour 3 (1)
(1) (1) (1) 
line 174: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 175: insert (8)
line 176: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (10) (10) (10) (10) (10) 
line 177: insert (1)
line 178: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (10) (10) (10) (10) (10) 
line 179: clear
line 180: buildTree 12
(5) (4) (5) (5) (8) (10) (4) (6) (2) (10) (4) (4) 
line 181: inorderTraversal
(2) (4) (4) (4) (4) (5) (5) (5) (6) (8) (10) (10) 
line 182: insert (4)
line 183: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (6) (8) (10) (10) 
line 184: insert (5)
line 185: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (10) (10) 
line 186: insert (1)
line 187: inorderTraversal
(1) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (10) (10) 
line 188: insert (10)
line 189: inorderTraversal
(1) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (10) (10) (10) 
line 190: nearestNeighbour (9)
(8) 
line 191: inorderTraversal
(1) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (10) (10) (10) 
line 192: insert (1)
line 193: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (10) (10) (10) 
line 194: insert (9)
line 195: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) 
line 196: insert (2)
line 197: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) 
line 198: insert (10)
line 199: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) (10) 
line 200: nearestNeighbour (8)
(8) 
line 201: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) (10) 
line 202: search (2)
TRUE
line 203: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) (10) 
line 204: nearestNeighbour (10)
(10) 
line 205: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) (10) 
line 206: remove (1)
line 207: inorderTraversal
(1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) (10) 
line 208: nearestNeighbour (3)
(2) 
line 209: inorderTraversal
(1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) (10) 
line 210: kNearestNeighbour 5 (9)
(8) (9) (10) (10) (10) 
line 211: inorderTraversal
(1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) (10) 
line 212: insert (5)
line 213: inorderTraversal
(1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) (10) 
line 214: kNearestNeighbour 1 (2)
(2) 
line 215: inorderTraversal
(1) (2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (8) (9) (10) (10) (10) (10) 
line 216: clear
line 217: buildTree 16
(9) (9) (5) (6) (1) (7) (10) (2) (7) (8) (6) (1) (2) (2) (7) (8) 
line 218: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 219: insert (4)
line 220: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 221: insert (7)
line 222: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 223: clear
line 224: buildTree 4
(9) (9) (10) (10) 
line 225: inorderTraversal
(9) (9) (10) (10) 
line 226: insert (2)
line 227: inorderTraversal
(2) (9) (9) (10) (10) 
line 228: search (9)
TRUE
line 229: inorderTraversal
(2) (9) (9) (10) (10) 
line 230: clear
line 231: buildTree 1
(7) 
line 232: inorderTraversal
(7) 
line 233: kNearestNeighbour 6 (2)
(7) 
line 234: inorderTraversal
(7) 
line 235: clear
line 236: buildTree 5
(3) (9) (7) (4) (10) 
line 237: inorderTraversal
(3) (4) (7) (9) (10) 
line 238: insert (6)
line 239: inorderTraversal
(3) (4) (6) (7) (9) (10) 
line 240: kNearestNeighbour 8 (2)
(3) (4) (6) (7) (9) (10) 
line 241: inorderTraversal
(3) (4) (6) (7) (9) (10) 
line 242: clear
line 243: buildTree 10
(7) (1) (1) (1) (7) (6) (3) (3) (2) (1) 
line 244: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (6) (7) (7) 
line 245: insert (8)
line 246: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (6) (7) (7) (8) 
line 247: remove (8)
line 248: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (6) (7) (7) 
line 249: nearestNeighbour (1)
(1) 
line 250: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (6) (7) (7) 
line 251: search (7)
TRUE
line 252: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (6) (7) (7) 
line 253: nearestNeighbour (7)
(7) 
line 254: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (6) (7) (7) 
line 255: postorderTraversal
(1) (1) (1) (1) (3) (3) (7) (7) (6) (2) 
line 256: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (6) (7) (7) 
line 257: insert (2)
line 258: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (6) (7) (7) 
line 259: kNearestNeighbour 10 (5)
(1) (1) (1) (2) (2) (3) (3) (6) (7) (7) 
line 260: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (6) (7) (7) 
line 261: kNearestNeighbour 5 (4)
(2) (2) (3) (3) (6) 
line 262: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (6) (7) (7) 
line 263: kNearestNeighbour 9 (10)
(1) (1) (2) (2) (3) (3) (6) (7) (7) 
line 264: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (6) (7) (7) 
line 265: search (7)
TRUE
line 266: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (6) (7) (7) 
line 267: insert (5)
line 268: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (5) (6) (7) (7) 
line 269: remove (3)
line 270: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (5) (6) (7) (7) 
line 271: kNearestNeighbour 3 (7)
(6) (7) (7) 
line 272: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (5) (6) (7) (7) 
line 273: kNearestNeighbour 3 (10)
(6) (7) (7) 
line 274: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (5) (6) (7) (7) 
line 275: kNearestNeighbour 7 (8)
(2) (2) (3) (5) (6) (7) (7) 
line 276: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (5) (6) (7) (7) 
line 277: clear
line 278: buildTree 14
(2) (6) (9) (2) (8) (9) (6) (10) (4) (5) (7) (9) (6) (10) 
line 279: inorderTraversal
(2) (2) (4) (5) (6) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 280: clear
line 281: buildTree 10
(7) (6) (4) (2) (5) (3) (9) (8) (6) (6) 
line 282: inorderTraversal
(2) (3) (4) (5) (6) (6) (6) (7) (8) (9) 
line 283: insert (1)
line 284: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (8) (9) 
line 285: nearestNeighbour (7)
(7) 
line 286: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (8) (9) 
line 287: kNearestNeighbour 8 (3)
(1) (2) (3) (4) (5) (6) (6) (6) 
line 288: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (8) (9) 
line 289: insert (8)
line 290: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 291: remove (2)
line 292: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 293: kNearestNeighbour 7 (6)
(5) (6) (6) (6) (7) (8) (8) 
line 294: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 295: remove (3)
line 296: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 297: insert (10)
line 298: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 299: nearestNeighbour (8)
(8) 
line 300: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 301: insert (9)
line 302: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 303: insert (5)
line 304: inorderTraversal
(1) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 305: remove (3)
line 306: inorderTraversal
(1) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 307: remove (5)
line 308: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 309: search (6)
TRUE
line 310: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 311: kNearestNeighbour 6 (10)
(7) (8) (8) (9) (9) (10) 
line 312: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 313: kNearestNeighbour 6 (3)
(1) (4) (5) (6) (6) (6) 
line 314: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 315: kNearestNeighbour 10 (3)
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 316: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 317: nearestNeighbour (10)
(10) 
line 318: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 319: kNearestNeighbour 7 (5)
(4) (5) (6) (6) (6) (7) (8) 
line 320: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 321: insert (7)
line 322: inorderTraversal
(1) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 323: insert (3)
line 324: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 325: kNearestNeighbour 8 (5)
(3) (4) (5) (6) (6) (6) (7) (7) 
line 326: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 327: insert (5)
line 328: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 329: insert (2)
line 330: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 331: insert (9)
line 332: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 333: insert (7)
line 334: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 335: nearestNeighbour (7)
(7) 
line 336: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 337: clear
line 338: buildTree 19
(7) (4) (3) (9) (4) (3) (7) (10) (6) (5) (8) (3) (7) (6) (1) (10) (2) (10) (3) 
line 339: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (10) (10) (10) 
line 340: preorderTraversal
(6) (3) (1) (2) (3) (4) (3) (3) (4) (5) (8) (7) (6) (7) (7) (10) (9) (10) (10) 
line 341: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (10) (10) (10) 
line 342: insert (4)
line 343: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (10) (10) (10) 
line 344: nearestNeighbour (7)
(7) 
line 345: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (10) (10) (10) 
line 346: insert (1)
line 347: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (10) (10) (10) 
line 348: search (9)
TRUE
line 349: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (10) (10) (10) 
line 350: nearestNeighbour (10)
(10) 
line 351: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (10) (10) (10) 
line 352: insert (7)
line 353: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (10) (10) (10) 
line 354: insert (9)
line 355: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 356: nearestNeighbour (5)
(5) 
line 357: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 358: kNearestNeighbour 8 (4)
(3) (3) (3) (3) (4) (4) (4) (5) 
line 359: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 360: insert (7)
line 361: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 362: search (6)
TRUE
line 363: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 364: clear
line 365: buildTree 19
(3) (7) (10) (4) (6) (6) (3) (9) (7) (1) (10) (8) (5) (8) (5) (2) (10) (8) (6) 
line 366: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 367: preorderTraversal
(6) (3) (1) (2) (4) (3) (5) (5) (8) (6) (7) (6) (7) (9) (8) (8) (10) (10) (10) 
line 368: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 369: remove (1)
line 370: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 371: kNearestNeighbour 4 (6)
(6) (6) (6) (7) 
line 372: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 373: kNearestNeighbour 4 (10)
(9) (10) (10) (10) 
line 374: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 375: clear
line 376: buildTree 8
(9) (9) (8) (5) (1) (7) (9) (7) 
line 377: inorderTraversal
(1) (5) (7) (7) (8) (9) (9) (9) 
line 378: remove (7)
line 379: inorderTraversal
(1) (5) (7) (8) (9) (9) (9) 
line 380: clear
line 381: buildTree 12
(2) (4) (8) (3) (9) (1) (6) (8) (10) (7) (5) (2) 
line 382: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (7) (8) (8) (9) (10) 
line 383: remove (8)
line 384: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (7) (8) (9) (10) 
line 385: nearestNeighbour (3)
(3) 
line 386: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (7) (8) (9) (10) 
line 387: insert (2)
line 388: inorderTraversal
(1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (9) (10) 
line 389: remove (10)
line 390: inorderTraversal
(1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (9) 
line 391: kNearestNeighbour 5 (9)
(5) (6) (7) (8) (9) 
line 392: inorderTraversal
(1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (9) 
line 393: kNearestNeighbour 9 (7)
(2) (2) (3) (4) (5) (6) (7) (8) (9) 
line 394: inorderTraversal
(1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (9) 
line 395: kNearestNeighbour 6 (9)
(4) (5) (6) (7) (8) (9) 
line 396: inorderTraversal
(1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (9) 
line 397: nearestNeighbour (7)
(7) 
line 398: inorderTraversal
(1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (9) 
line 399: insert (3)
line 400: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (6) (7) (8) (9) 
line 401: kNearestNeighbour 9 (7)
(2) (3) (3) (4) (5) (6) (7) (8) (9) 
line 402: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (6) (7) (8) (9) 
line 403: remove (4)
line 404: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (6) (7) (8) (9) 
line 405: kNearestNeighbour 10 (8)
(2) (2) (2) (3) (3) (5) (6) (7) (8) (9) 
line 406: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (6) (7) (8) (9) 
line 407: insert (5)
line 408: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (5) (6) (7) (8) (9) 
line 409: nearestNeighbour (3)
(3) 
line 410: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (5) (6) (7) (8) (9) 
line 411: insert (9)
line 412: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (5) (6) (7) (8) (9) (9) 
line 413: nearestNeighbour (3)
(3) 
line 414: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (5) (6) (7) (8) (9) (9) 
line 415: kNearestNeighbour 6 (1)
(1) (2) (2) (2) (3) (3) 
line 416: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (5) (6) (7) (8) (9) (9) 
line 417: insert (4)
line 418: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) 
line 419: insert (9)
line 420: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 421: insert (3)
line 422: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 423: nodeCount_height_leafCount
nodeCount=16;height=6;leafCount=6
line 424: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 425: preorderTraversal
(5) (2) (1) (3) (2) (2) (3) (4) (3) (8) (6) (5) (7) (9) (9) (9) 
line 426: postorderTraversal
(1) (2) (2) (3) (4) (3) (3) (2) (5) (7) (6) (9) (9) (9) (8) (5) 
line 427: clear
