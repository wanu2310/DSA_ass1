line 1: k=1
line 2: nearestNeighbour (4)

line 3: inorderTraversal

line 4: nearestNeighbour (3)

line 5: inorderTraversal

line 6: remove (6)
line 7: inorderTraversal

line 8: kNearestNeighbour 2 (10)

line 9: inorderTraversal

line 10: nodeCount_height_leafCount
nodeCount=0;height=0;leafCount=0
line 11: inorderTraversal

line 12: nearestNeighbour (4)

line 13: inorderTraversal

line 14: nearestNeighbour (2)

line 15: inorderTraversal

line 16: insert (5)
line 17: inorderTraversal
(5) 
line 18: clear
line 19: buildTree 17
(9) (8) (4) (7) (9) (8) (7) (1) (9) (10) (1) (6) (9) (7) (3) (9) (6) 
line 20: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 21: nearestNeighbour (8)
(8) 
line 22: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 23: insert (9)
line 24: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (10) 
line 25: insert (9)
line 26: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) 
line 27: kNearestNeighbour 7 (5)
(3) (4) (6) (6) (7) (7) (7) 
line 28: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) 
line 29: kNearestNeighbour 5 (5)
(3) (4) (6) (6) (7) 
line 30: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) 
line 31: insert (8)
line 32: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) 
line 33: kNearestNeighbour 5 (10)
(9) (9) (9) (9) (10) 
line 34: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) 
line 35: insert (8)
line 36: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) 
line 37: remove (4)
line 38: inorderTraversal
(1) (1) (3) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) 
line 39: kNearestNeighbour 4 (9)
(9) (9) (9) (9) 
line 40: inorderTraversal
(1) (1) (3) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) 
line 41: nearestNeighbour (4)
(3) 
line 42: inorderTraversal
(1) (1) (3) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) (9) (9) (9) (9) (10) 
line 43: clear
line 44: buildTree 6
(6) (10) (7) (1) (3) (10) 
line 45: inorderTraversal
(1) (3) (6) (7) (10) (10) 
line 46: insert (7)
line 47: inorderTraversal
(1) (3) (6) (7) (7) (10) (10) 
line 48: kNearestNeighbour 1 (10)
(10) 
line 49: inorderTraversal
(1) (3) (6) (7) (7) (10) (10) 
line 50: insert (3)
line 51: inorderTraversal
(1) (3) (3) (6) (7) (7) (10) (10) 
line 52: kNearestNeighbour 8 (4)
(1) (3) (3) (6) (7) (7) (10) (10) 
line 53: inorderTraversal
(1) (3) (3) (6) (7) (7) (10) (10) 
line 54: insert (5)
line 55: inorderTraversal
(1) (3) (3) (5) (6) (7) (7) (10) (10) 
line 56: insert (7)
line 57: inorderTraversal
(1) (3) (3) (5) (6) (7) (7) (7) (10) (10) 
line 58: insert (9)
line 59: inorderTraversal
(1) (3) (3) (5) (6) (7) (7) (7) (9) (10) (10) 
line 60: clear
line 61: buildTree 2
(5) (5) 
line 62: inorderTraversal
(5) (5) 
line 63: insert (8)
line 64: inorderTraversal
(5) (5) (8) 
line 65: remove (5)
line 66: inorderTraversal
(5) (8) 
line 67: insert (10)
line 68: inorderTraversal
(5) (8) (10) 
line 69: kNearestNeighbour 10 (9)
(5) (8) (10) 
line 70: inorderTraversal
(5) (8) (10) 
line 71: kNearestNeighbour 7 (8)
(5) (8) (10) 
line 72: inorderTraversal
(5) (8) (10) 
line 73: insert (9)
line 74: inorderTraversal
(5) (8) (9) (10) 
line 75: kNearestNeighbour 7 (2)
(5) (8) (9) (10) 
line 76: inorderTraversal
(5) (8) (9) (10) 
line 77: kNearestNeighbour 1 (7)
(8) 
line 78: inorderTraversal
(5) (8) (9) (10) 
line 79: nearestNeighbour (1)
(5) 
line 80: inorderTraversal
(5) (8) (9) (10) 
line 81: remove (6)
line 82: inorderTraversal
(5) (8) (9) (10) 
line 83: search (5)
TRUE
line 84: inorderTraversal
(5) (8) (9) (10) 
line 85: insert (7)
line 86: inorderTraversal
(5) (7) (8) (9) (10) 
line 87: clear
line 88: buildTree 15
(3) (10) (5) (5) (2) (8) (4) (5) (4) (7) (8) (6) (4) (5) (4) 
line 89: inorderTraversal
(2) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) 
line 90: remove (3)
line 91: inorderTraversal
(2) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) 
line 92: kNearestNeighbour 2 (7)
(7) (8) 
line 93: inorderTraversal
(2) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) 
line 94: insert (4)
line 95: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) 
line 96: insert (8)
line 97: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (8) (10) 
line 98: insert (7)
line 99: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 100: insert (5)
line 101: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 102: remove (7)
line 103: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (8) (8) (10) 
line 104: insert (6)
line 105: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) 
line 106: insert (5)
line 107: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) 
line 108: insert (2)
line 109: inorderTraversal
(2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) 
line 110: nearestNeighbour (2)
(2) 
line 111: inorderTraversal
(2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) 
line 112: insert (10)
line 113: inorderTraversal
(2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) 
line 114: insert (9)
line 115: inorderTraversal
(2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 116: insert (9)
line 117: inorderTraversal
(2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 118: insert (7)
line 119: inorderTraversal
(2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 120: nearestNeighbour (10)
(10) 
line 121: inorderTraversal
(2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 122: kNearestNeighbour 1 (7)
(7) 
line 123: inorderTraversal
(2) (2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 124: clear
line 125: buildTree 3
(2) (3) (3) 
line 126: inorderTraversal
(2) (3) (3) 
line 127: nearestNeighbour (8)
(3) 
line 128: inorderTraversal
(2) (3) (3) 
line 129: kNearestNeighbour 1 (7)
(3) 
line 130: inorderTraversal
(2) (3) (3) 
line 131: kNearestNeighbour 1 (10)
(3) 
line 132: inorderTraversal
(2) (3) (3) 
line 133: nearestNeighbour (10)
(3) 
line 134: inorderTraversal
(2) (3) (3) 
line 135: clear
line 136: buildTree 8
(9) (8) (7) (5) (4) (8) (1) (2) 
line 137: inorderTraversal
(1) (2) (4) (5) (7) (8) (8) (9) 
line 138: remove (8)
line 139: inorderTraversal
(1) (2) (4) (5) (7) (8) (9) 
line 140: remove (8)
line 141: inorderTraversal
(1) (2) (4) (5) (7) (9) 
line 142: clear
line 143: buildTree 6
(4) (4) (8) (1) (7) (4) 
line 144: inorderTraversal
(1) (4) (4) (4) (7) (8) 
line 145: kNearestNeighbour 5 (2)
(1) (4) (4) (4) (7) 
line 146: inorderTraversal
(1) (4) (4) (4) (7) (8) 
line 147: insert (7)
line 148: inorderTraversal
(1) (4) (4) (4) (7) (7) (8) 
line 149: nearestNeighbour (2)
(1) 
line 150: inorderTraversal
(1) (4) (4) (4) (7) (7) (8) 
line 151: insert (5)
line 152: inorderTraversal
(1) (4) (4) (4) (5) (7) (7) (8) 
line 153: insert (7)
line 154: inorderTraversal
(1) (4) (4) (4) (5) (7) (7) (7) (8) 
line 155: kNearestNeighbour 3 (7)
(7) (7) (7) 
line 156: inorderTraversal
(1) (4) (4) (4) (5) (7) (7) (7) (8) 
line 157: remove (1)
line 158: inorderTraversal
(4) (4) (4) (5) (7) (7) (7) (8) 
line 159: kNearestNeighbour 1 (5)
(5) 
line 160: inorderTraversal
(4) (4) (4) (5) (7) (7) (7) (8) 
line 161: remove (4)
line 162: inorderTraversal
(4) (4) (5) (7) (7) (7) (8) 
line 163: kNearestNeighbour 7 (10)
(4) (4) (5) (7) (7) (7) (8) 
line 164: inorderTraversal
(4) (4) (5) (7) (7) (7) (8) 
line 165: nearestNeighbour (4)
(4) 
line 166: inorderTraversal
(4) (4) (5) (7) (7) (7) (8) 
line 167: kNearestNeighbour 2 (3)
(4) (4) 
line 168: inorderTraversal
(4) (4) (5) (7) (7) (7) (8) 
line 169: insert (3)
line 170: inorderTraversal
(3) (4) (4) (5) (7) (7) (7) (8) 
line 171: nearestNeighbour (1)
(3) 
line 172: inorderTraversal
(3) (4) (4) (5) (7) (7) (7) (8) 
line 173: kNearestNeighbour 9 (6)
(3) (4) (4) (5) (7) (7) (7) (8) 
line 174: inorderTraversal
(3) (4) (4) (5) (7) (7) (7) (8) 
line 175: clear
line 176: buildTree 16
(3) (3) (5) (5) (10) (6) (7) (4) (5) (9) (2) (7) (10) (6) (2) (9) 
line 177: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (9) (9) (10) (10) 
line 178: nearestNeighbour (2)
(2) 
line 179: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (9) (9) (10) (10) 
line 180: postorderTraversal
(2) (2) (4) (3) (3) (5) (6) (6) (5) (7) (9) (10) (10) (9) (7) (5) 
line 181: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (9) (9) (10) (10) 
line 182: kNearestNeighbour 9 (4)
(2) (2) (3) (3) (4) (5) (5) (5) (6) 
line 183: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (9) (9) (10) (10) 
line 184: insert (4)
line 185: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (9) (9) (10) (10) 
line 186: remove (4)
line 187: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (9) (9) (10) (10) 
line 188: insert (10)
line 189: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 190: insert (3)
line 191: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 192: insert (7)
line 193: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 194: insert (4)
line 195: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 196: clear
line 197: buildTree 15
(10) (9) (5) (10) (5) (5) (3) (2) (10) (7) (8) (9) (5) (8) (3) 
line 198: inorderTraversal
(2) (3) (3) (5) (5) (5) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 199: insert (1)
line 200: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 201: remove (10)
line 202: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (5) (7) (8) (8) (9) (9) (10) (10) 
line 203: kNearestNeighbour 5 (5)
(3) (5) (5) (5) (5) 
line 204: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (5) (7) (8) (8) (9) (9) (10) (10) 
line 205: insert (8)
line 206: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (5) (7) (8) (8) (8) (9) (9) (10) (10) 
line 207: kNearestNeighbour 1 (8)
(8) 
line 208: inorderTraversal
(1) (2) (3) (3) (5) (5) (5) (5) (7) (8) (8) (8) (9) (9) (10) (10) 
line 209: clear
line 210: buildTree 8
(9) (6) (10) (10) (6) (2) (1) (8) 
line 211: inorderTraversal
(1) (2) (6) (6) (8) (9) (10) (10) 
line 212: postorderTraversal
(2) (1) (8) (6) (10) (10) (9) (6) 
line 213: inorderTraversal
(1) (2) (6) (6) (8) (9) (10) (10) 
line 214: kNearestNeighbour 2 (6)
(6) (6) 
line 215: inorderTraversal
(1) (2) (6) (6) (8) (9) (10) (10) 
line 216: insert (4)
line 217: inorderTraversal
(1) (2) (4) (6) (6) (8) (9) (10) (10) 
line 218: insert (5)
line 219: inorderTraversal
(1) (2) (4) (5) (6) (6) (8) (9) (10) (10) 
line 220: remove (6)
line 221: inorderTraversal
(1) (2) (4) (5) (6) (8) (9) (10) (10) 
line 222: kNearestNeighbour 3 (9)
(9) (10) (10) 
line 223: inorderTraversal
(1) (2) (4) (5) (6) (8) (9) (10) (10) 
line 224: nearestNeighbour (10)
(10) 
line 225: inorderTraversal
(1) (2) (4) (5) (6) (8) (9) (10) (10) 
line 226: remove (6)
line 227: inorderTraversal
(1) (2) (4) (5) (8) (9) (10) (10) 
line 228: clear
line 229: buildTree 2
(1) (5) 
line 230: inorderTraversal
(1) (5) 
line 231: nodeCount_height_leafCount
nodeCount=2;height=2;leafCount=1
line 232: inorderTraversal
(1) (5) 
line 233: insert (8)
line 234: inorderTraversal
(1) (5) (8) 
line 235: insert (2)
line 236: inorderTraversal
(1) (2) (5) (8) 
line 237: insert (3)
line 238: inorderTraversal
(1) (2) (3) (5) (8) 
line 239: insert (8)
line 240: inorderTraversal
(1) (2) (3) (5) (8) (8) 
line 241: kNearestNeighbour 3 (8)
(5) (8) (8) 
line 242: inorderTraversal
(1) (2) (3) (5) (8) (8) 
line 243: remove (8)
line 244: inorderTraversal
(1) (2) (3) (5) (8) 
line 245: kNearestNeighbour 10 (5)
(1) (2) (3) (5) (8) 
line 246: inorderTraversal
(1) (2) (3) (5) (8) 
line 247: preorderTraversal
(1) (5) (2) (3) (8) 
line 248: inorderTraversal
(1) (2) (3) (5) (8) 
line 249: insert (8)
line 250: inorderTraversal
(1) (2) (3) (5) (8) (8) 
line 251: insert (9)
line 252: inorderTraversal
(1) (2) (3) (5) (8) (8) (9) 
line 253: insert (9)
line 254: inorderTraversal
(1) (2) (3) (5) (8) (8) (9) (9) 
line 255: clear
line 256: buildTree 3
(3) (2) (4) 
line 257: inorderTraversal
(2) (3) (4) 
line 258: kNearestNeighbour 10 (2)
(2) (3) (4) 
line 259: inorderTraversal
(2) (3) (4) 
line 260: insert (7)
line 261: inorderTraversal
(2) (3) (4) (7) 
line 262: remove (4)
line 263: inorderTraversal
(2) (3) (7) 
line 264: nearestNeighbour (6)
(7) 
line 265: inorderTraversal
(2) (3) (7) 
line 266: kNearestNeighbour 3 (9)
(2) (3) (7) 
line 267: inorderTraversal
(2) (3) (7) 
line 268: kNearestNeighbour 7 (1)
(2) (3) (7) 
line 269: inorderTraversal
(2) (3) (7) 
line 270: kNearestNeighbour 8 (8)
(2) (3) (7) 
line 271: inorderTraversal
(2) (3) (7) 
line 272: insert (5)
line 273: inorderTraversal
(2) (3) (5) (7) 
line 274: insert (4)
line 275: inorderTraversal
(2) (3) (4) (5) (7) 
line 276: kNearestNeighbour 5 (10)
(2) (3) (4) (5) (7) 
line 277: inorderTraversal
(2) (3) (4) (5) (7) 
line 278: remove (4)
line 279: inorderTraversal
(2) (3) (5) (7) 
line 280: remove (7)
line 281: inorderTraversal
(2) (3) (5) 
line 282: preorderTraversal
(3) (2) (5) 
line 283: inorderTraversal
(2) (3) (5) 
line 284: insert (1)
line 285: inorderTraversal
(1) (2) (3) (5) 
line 286: nearestNeighbour (2)
(2) 
line 287: inorderTraversal
(1) (2) (3) (5) 
line 288: insert (4)
line 289: inorderTraversal
(1) (2) (3) (4) (5) 
line 290: search (7)
FALSE
line 291: inorderTraversal
(1) (2) (3) (4) (5) 
line 292: insert (7)
line 293: inorderTraversal
(1) (2) (3) (4) (5) (7) 
line 294: remove (1)
line 295: inorderTraversal
(2) (3) (4) (5) (7) 
line 296: search (4)
TRUE
line 297: inorderTraversal
(2) (3) (4) (5) (7) 
line 298: clear
line 299: buildTree 16
(8) (4) (3) (2) (2) (7) (10) (1) (5) (7) (8) (1) (5) (9) (2) (10) 
line 300: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (7) (8) (8) (9) (10) (10) 
line 301: remove (8)
line 302: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (7) (8) (9) (10) (10) 
line 303: remove (7)
line 304: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (9) (10) (10) 
line 305: kNearestNeighbour 7 (5)
(2) (3) (4) (5) (5) (7) (8) 
line 306: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (9) (10) (10) 
line 307: nearestNeighbour (5)
(5) 
line 308: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (9) (10) (10) 
line 309: preorderTraversal
(5) (2) (1) (1) (2) (3) (2) (4) (8) (7) (5) (9) (10) (10) 
line 310: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (9) (10) (10) 
line 311: insert (8)
line 312: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (8) (9) (10) (10) 
line 313: kNearestNeighbour 9 (3)
(1) (1) (2) (2) (2) (3) (4) (5) (5) 
line 314: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (8) (9) (10) (10) 
line 315: insert (10)
line 316: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (8) (9) (10) (10) (10) 
line 317: kNearestNeighbour 9 (7)
(5) (5) (7) (8) (8) (9) (10) (10) (10) 
line 318: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (8) (9) (10) (10) (10) 
line 319: kNearestNeighbour 7 (5)
(3) (4) (5) (5) (7) (8) (8) 
line 320: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (8) (9) (10) (10) (10) 
line 321: nearestNeighbour (4)
(4) 
line 322: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (8) (9) (10) (10) (10) 
line 323: insert (8)
line 324: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (8) (8) (9) (10) (10) (10) 
line 325: nearestNeighbour (10)
(10) 
line 326: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (8) (8) (9) (10) (10) (10) 
line 327: search (10)
TRUE
line 328: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (7) (8) (8) (8) (9) (10) (10) (10) 
line 329: insert (6)
line 330: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 331: insert (6)
line 332: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 333: insert (10)
line 334: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 335: insert (6)
line 336: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 337: kNearestNeighbour 6 (2)
(1) (1) (2) (2) (2) (3) 
line 338: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 339: insert (9)
line 340: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 341: insert (9)
line 342: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 343: insert (3)
line 344: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 345: insert (1)
line 346: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 347: remove (5)
line 348: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 349: remove (1)
line 350: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 351: insert (9)
line 352: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 353: insert (5)
line 354: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 355: insert (1)
line 356: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 357: kNearestNeighbour 7 (1)
(1) (1) (1) (2) (2) (2) (3) 
line 358: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 359: clear
line 360: buildTree 14
(8) (1) (5) (6) (1) (6) (6) (5) (6) (7) (1) (4) (8) (3) 
line 361: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) 
line 362: insert (9)
line 363: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) 
line 364: insert (2)
line 365: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) 
line 366: preorderTraversal
(5) (1) (1) (3) (1) (2) (4) (6) (5) (6) (7) (6) (6) (8) (8) (9) 
line 367: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) 
line 368: nearestNeighbour (9)
(9) 
line 369: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) 
line 370: insert (5)
line 371: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) 
line 372: clear
line 373: buildTree 7
(2) (3) (2) (9) (6) (9) (6) 
line 374: inorderTraversal
(2) (2) (3) (6) (6) (9) (9) 
line 375: postorderTraversal
(3) (2) (2) (6) (9) (9) (6) 
line 376: inorderTraversal
(2) (2) (3) (6) (6) (9) (9) 
line 377: insert (1)
line 378: inorderTraversal
(1) (2) (2) (3) (6) (6) (9) (9) 
line 379: insert (8)
line 380: inorderTraversal
(1) (2) (2) (3) (6) (6) (8) (9) (9) 
line 381: insert (5)
line 382: inorderTraversal
(1) (2) (2) (3) (5) (6) (6) (8) (9) (9) 
line 383: insert (10)
line 384: inorderTraversal
(1) (2) (2) (3) (5) (6) (6) (8) (9) (9) (10) 
line 385: insert (4)
line 386: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (10) 
line 387: nearestNeighbour (10)
(10) 
line 388: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (10) 
line 389: insert (9)
line 390: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (9) (10) 
line 391: insert (1)
line 392: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (9) (10) 
line 393: remove (9)
line 394: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (10) 
line 395: remove (9)
line 396: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (10) 
line 397: kNearestNeighbour 7 (10)
(4) (5) (6) (6) (8) (9) (10) 
line 398: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (10) 
line 399: nearestNeighbour (9)
(9) 
line 400: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (10) 
line 401: insert (1)
line 402: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (10) 
line 403: kNearestNeighbour 3 (10)
(8) (9) (10) 
line 404: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (10) 
line 405: insert (7)
line 406: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (8) (9) (10) 
line 407: insert (1)
line 408: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (8) (9) (10) 
line 409: remove (9)
line 410: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (8) (10) 
line 411: search (2)
TRUE
line 412: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (8) (10) 
line 413: kNearestNeighbour 6 (9)
(5) (6) (6) (7) (8) (10) 
line 414: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (7) (8) (10) 
line 415: clear
line 416: buildTree 5
(10) (3) (10) (2) (6) 
line 417: inorderTraversal
(2) (3) (6) (10) (10) 
line 418: nodeCount_height_leafCount
nodeCount=5;height=3;leafCount=2
line 419: inorderTraversal
(2) (3) (6) (10) (10) 
line 420: preorderTraversal
(6) (2) (3) (10) (10) 
line 421: postorderTraversal
(3) (2) (10) (10) (6) 
line 422: clear
