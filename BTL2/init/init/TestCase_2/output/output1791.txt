line 1: k=1
line 2: search (5)
FALSE
line 3: inorderTraversal

line 4: kNearestNeighbour 4 (4)

line 5: inorderTraversal

line 6: clear
line 7: buildTree 13
(7) (7) (1) (8) (3) (2) (10) (10) (5) (7) (7) (2) (5) 
line 8: inorderTraversal
(1) (2) (2) (3) (5) (5) (7) (7) (7) (7) (8) (10) (10) 
line 9: clear
line 10: buildTree 11
(6) (7) (5) (7) (7) (10) (1) (8) (10) (6) (2) 
line 11: inorderTraversal
(1) (2) (5) (6) (6) (7) (7) (7) (8) (10) (10) 
line 12: insert (8)
line 13: inorderTraversal
(1) (2) (5) (6) (6) (7) (7) (7) (8) (8) (10) (10) 
line 14: clear
line 15: buildTree 4
(7) (10) (4) (8) 
line 16: inorderTraversal
(4) (7) (8) (10) 
line 17: remove (7)
line 18: inorderTraversal
(4) (8) (10) 
line 19: remove (7)
line 20: inorderTraversal
(4) (8) (10) 
line 21: kNearestNeighbour 3 (2)
(4) (8) (10) 
line 22: inorderTraversal
(4) (8) (10) 
line 23: remove (4)
line 24: inorderTraversal
(8) (10) 
line 25: insert (7)
line 26: inorderTraversal
(7) (8) (10) 
line 27: nearestNeighbour (3)
(7) 
line 28: inorderTraversal
(7) (8) (10) 
line 29: insert (10)
line 30: inorderTraversal
(7) (8) (10) (10) 
line 31: kNearestNeighbour 5 (7)
(7) (8) (10) (10) 
line 32: inorderTraversal
(7) (8) (10) (10) 
line 33: clear
line 34: buildTree 4
(5) (2) (3) (6) 
line 35: inorderTraversal
(2) (3) (5) (6) 
line 36: insert (4)
line 37: inorderTraversal
(2) (3) (4) (5) (6) 
line 38: remove (5)
line 39: inorderTraversal
(2) (3) (4) (6) 
line 40: kNearestNeighbour 4 (10)
(2) (3) (4) (6) 
line 41: inorderTraversal
(2) (3) (4) (6) 
line 42: postorderTraversal
(2) (4) (6) (3) 
line 43: inorderTraversal
(2) (3) (4) (6) 
line 44: nearestNeighbour (1)
(2) 
line 45: inorderTraversal
(2) (3) (4) (6) 
line 46: nodeCount_height_leafCount
nodeCount=4;height=3;leafCount=2
line 47: inorderTraversal
(2) (3) (4) (6) 
line 48: nearestNeighbour (3)
(3) 
line 49: inorderTraversal
(2) (3) (4) (6) 
line 50: nearestNeighbour (7)
(6) 
line 51: inorderTraversal
(2) (3) (4) (6) 
line 52: kNearestNeighbour 4 (5)
(2) (3) (4) (6) 
line 53: inorderTraversal
(2) (3) (4) (6) 
line 54: clear
line 55: buildTree 1
(6) 
line 56: inorderTraversal
(6) 
line 57: preorderTraversal
(6) 
line 58: inorderTraversal
(6) 
line 59: kNearestNeighbour 10 (6)
(6) 
line 60: inorderTraversal
(6) 
line 61: insert (1)
line 62: inorderTraversal
(1) (6) 
line 63: nearestNeighbour (9)
(6) 
line 64: inorderTraversal
(1) (6) 
line 65: nearestNeighbour (9)
(6) 
line 66: inorderTraversal
(1) (6) 
line 67: insert (8)
line 68: inorderTraversal
(1) (6) (8) 
line 69: nearestNeighbour (4)
(6) 
line 70: inorderTraversal
(1) (6) (8) 
line 71: insert (2)
line 72: inorderTraversal
(1) (2) (6) (8) 
line 73: nearestNeighbour (8)
(8) 
line 74: inorderTraversal
(1) (2) (6) (8) 
line 75: remove (2)
line 76: inorderTraversal
(1) (6) (8) 
line 77: insert (3)
line 78: inorderTraversal
(1) (3) (6) (8) 
line 79: nearestNeighbour (7)
(8) 
line 80: inorderTraversal
(1) (3) (6) (8) 
line 81: insert (10)
line 82: inorderTraversal
(1) (3) (6) (8) (10) 
line 83: insert (7)
line 84: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 85: kNearestNeighbour 10 (3)
(1) (3) (6) (7) (8) (10) 
line 86: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 87: kNearestNeighbour 4 (8)
(6) (7) (8) (10) 
line 88: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 89: search (1)
TRUE
line 90: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 91: kNearestNeighbour 6 (9)
(1) (3) (6) (7) (8) (10) 
line 92: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 93: kNearestNeighbour 7 (7)
(1) (3) (6) (7) (8) (10) 
line 94: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 95: kNearestNeighbour 9 (4)
(1) (3) (6) (7) (8) (10) 
line 96: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 97: kNearestNeighbour 9 (7)
(1) (3) (6) (7) (8) (10) 
line 98: inorderTraversal
(1) (3) (6) (7) (8) (10) 
line 99: insert (2)
line 100: inorderTraversal
(1) (2) (3) (6) (7) (8) (10) 
line 101: insert (6)
line 102: inorderTraversal
(1) (2) (3) (6) (6) (7) (8) (10) 
line 103: kNearestNeighbour 6 (9)
(3) (6) (6) (7) (8) (10) 
line 104: inorderTraversal
(1) (2) (3) (6) (6) (7) (8) (10) 
line 105: insert (4)
line 106: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (8) (10) 
line 107: kNearestNeighbour 10 (7)
(1) (2) (3) (4) (6) (6) (7) (8) (10) 
line 108: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (8) (10) 
line 109: kNearestNeighbour 10 (8)
(1) (2) (3) (4) (6) (6) (7) (8) (10) 
line 110: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (8) (10) 
line 111: kNearestNeighbour 10 (2)
(1) (2) (3) (4) (6) (6) (7) (8) (10) 
line 112: inorderTraversal
(1) (2) (3) (4) (6) (6) (7) (8) (10) 
line 113: insert (2)
line 114: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (8) (10) 
line 115: insert (7)
line 116: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (10) 
line 117: preorderTraversal
(6) (1) (3) (2) (2) (4) (8) (7) (6) (7) (10) 
line 118: inorderTraversal
(1) (2) (2) (3) (4) (6) (6) (7) (7) (8) (10) 
line 119: clear
line 120: buildTree 8
(5) (6) (4) (2) (4) (6) (2) (8) 
line 121: inorderTraversal
(2) (2) (4) (4) (5) (6) (6) (8) 
line 122: clear
line 123: buildTree 8
(9) (9) (3) (9) (10) (9) (4) (6) 
line 124: inorderTraversal
(3) (4) (6) (9) (9) (9) (9) (10) 
line 125: insert (10)
line 126: inorderTraversal
(3) (4) (6) (9) (9) (9) (9) (10) (10) 
line 127: nearestNeighbour (2)
(3) 
line 128: inorderTraversal
(3) (4) (6) (9) (9) (9) (9) (10) (10) 
line 129: insert (8)
line 130: inorderTraversal
(3) (4) (6) (8) (9) (9) (9) (9) (10) (10) 
line 131: clear
line 132: buildTree 9
(5) (4) (8) (6) (8) (9) (5) (9) (3) 
line 133: inorderTraversal
(3) (4) (5) (5) (6) (8) (8) (9) (9) 
line 134: insert (9)
line 135: inorderTraversal
(3) (4) (5) (5) (6) (8) (8) (9) (9) (9) 
line 136: nearestNeighbour (10)
(9) 
line 137: inorderTraversal
(3) (4) (5) (5) (6) (8) (8) (9) (9) (9) 
line 138: nodeCount_height_leafCount
nodeCount=10;height=5;leafCount=4
line 139: inorderTraversal
(3) (4) (5) (5) (6) (8) (8) (9) (9) (9) 
line 140: nearestNeighbour (3)
(3) 
line 141: inorderTraversal
(3) (4) (5) (5) (6) (8) (8) (9) (9) (9) 
line 142: remove (8)
line 143: inorderTraversal
(3) (4) (5) (5) (6) (8) (9) (9) (9) 
line 144: insert (7)
line 145: inorderTraversal
(3) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 146: insert (3)
line 147: inorderTraversal
(3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 148: nearestNeighbour (7)
(7) 
line 149: inorderTraversal
(3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 150: nearestNeighbour (7)
(7) 
line 151: inorderTraversal
(3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 152: nearestNeighbour (10)
(9) 
line 153: inorderTraversal
(3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 154: clear
line 155: buildTree 16
(9) (2) (9) (1) (1) (8) (2) (2) (2) (5) (5) (5) (7) (5) (8) (2) 
line 156: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (7) (8) (8) (9) (9) 
line 157: nearestNeighbour (9)
(9) 
line 158: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (7) (8) (8) (9) (9) 
line 159: postorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (8) (9) (9) (8) (7) (5) 
line 160: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (7) (8) (8) (9) (9) 
line 161: insert (6)
line 162: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (6) (7) (8) (8) (9) (9) 
line 163: kNearestNeighbour 1 (8)
(8) 
line 164: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (6) (7) (8) (8) (9) (9) 
line 165: preorderTraversal
(5) (2) (1) (1) (2) (2) (2) (2) (7) (5) (5) (5) (6) (8) (9) (8) (9) 
line 166: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (6) (7) (8) (8) (9) (9) 
line 167: kNearestNeighbour 6 (1)
(1) (1) (2) (2) (2) (2) 
line 168: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (6) (7) (8) (8) (9) (9) 
line 169: insert (8)
line 170: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) 
line 171: nearestNeighbour (7)
(7) 
line 172: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) 
line 173: insert (10)
line 174: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) 
line 175: insert (1)
line 176: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) 
line 177: kNearestNeighbour 4 (9)
(8) (9) (9) (10) 
line 178: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (5) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) 
line 179: insert (4)
line 180: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (4) (5) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) 
line 181: insert (9)
line 182: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (4) (5) (5) (5) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 183: clear
line 184: buildTree 2
(6) (2) 
line 185: inorderTraversal
(2) (6) 
line 186: insert (3)
line 187: inorderTraversal
(2) (3) (6) 
line 188: insert (8)
line 189: inorderTraversal
(2) (3) (6) (8) 
line 190: nearestNeighbour (2)
(2) 
line 191: inorderTraversal
(2) (3) (6) (8) 
line 192: kNearestNeighbour 3 (8)
(3) (6) (8) 
line 193: inorderTraversal
(2) (3) (6) (8) 
line 194: insert (5)
line 195: inorderTraversal
(2) (3) (5) (6) (8) 
line 196: insert (1)
line 197: inorderTraversal
(1) (2) (3) (5) (6) (8) 
line 198: insert (5)
line 199: inorderTraversal
(1) (2) (3) (5) (5) (6) (8) 
line 200: nearestNeighbour (4)
(5) 
line 201: inorderTraversal
(1) (2) (3) (5) (5) (6) (8) 
line 202: insert (10)
line 203: inorderTraversal
(1) (2) (3) (5) (5) (6) (8) (10) 
line 204: nearestNeighbour (8)
(8) 
line 205: inorderTraversal
(1) (2) (3) (5) (5) (6) (8) (10) 
line 206: kNearestNeighbour 3 (10)
(6) (8) (10) 
line 207: inorderTraversal
(1) (2) (3) (5) (5) (6) (8) (10) 
line 208: clear
line 209: buildTree 9
(7) (1) (4) (9) (4) (9) (3) (5) (1) 
line 210: inorderTraversal
(1) (1) (3) (4) (4) (5) (7) (9) (9) 
line 211: insert (6)
line 212: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (9) (9) 
line 213: remove (1)
line 214: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (9) (9) 
line 215: insert (1)
line 216: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (9) (9) 
line 217: insert (5)
line 218: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (9) (9) 
line 219: remove (5)
line 220: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (9) (9) 
line 221: insert (9)
line 222: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (9) (9) (9) 
line 223: insert (9)
line 224: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (9) (9) (9) (9) 
line 225: kNearestNeighbour 8 (6)
(4) (4) (5) (6) (7) (9) (9) (9) 
line 226: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (9) (9) (9) (9) 
line 227: insert (8)
line 228: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (8) (9) (9) (9) (9) 
line 229: remove (9)
line 230: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (8) (9) (9) (9) 
line 231: insert (7)
line 232: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (9) 
line 233: insert (9)
line 234: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (9) (9) 
line 235: insert (10)
line 236: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 237: remove (1)
line 238: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 239: nearestNeighbour (6)
(6) 
line 240: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 241: search (1)
TRUE
line 242: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 243: insert (4)
line 244: inorderTraversal
(1) (3) (4) (4) (4) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 245: insert (7)
line 246: inorderTraversal
(1) (3) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 247: insert (6)
line 248: inorderTraversal
(1) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 249: remove (5)
line 250: inorderTraversal
(1) (3) (4) (4) (4) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 251: kNearestNeighbour 5 (10)
(9) (9) (9) (9) (10) 
line 252: inorderTraversal
(1) (3) (4) (4) (4) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 253: insert (5)
line 254: inorderTraversal
(1) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 255: insert (2)
line 256: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 257: insert (1)
line 258: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 259: postorderTraversal
(1) (2) (3) (1) (5) (4) (6) (6) (4) (7) (7) (8) (10) (9) (9) (9) (9) (7) (4) 
line 260: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 261: remove (1)
line 262: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 263: insert (1)
line 264: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 265: insert (1)
line 266: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 267: nearestNeighbour (10)
(10) 
line 268: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 269: insert (6)
line 270: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 271: insert (6)
line 272: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 273: nearestNeighbour (5)
(5) 
line 274: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 275: nearestNeighbour (8)
(8) 
line 276: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 277: nearestNeighbour (9)
(9) 
line 278: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 279: postorderTraversal
(1) (1) (2) (3) (1) (5) (4) (6) (6) (6) (6) (4) (7) (7) (8) (10) (9) (9) (9) (9) (7) (4) 
line 280: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 281: insert (10)
line 282: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 283: insert (3)
line 284: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 285: clear
line 286: buildTree 14
(3) (9) (2) (5) (6) (4) (4) (1) (6) (4) (1) (6) (1) (1) 
line 287: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (9) 
line 288: nearestNeighbour (9)
(9) 
line 289: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (9) 
line 290: nearestNeighbour (3)
(3) 
line 291: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (9) 
line 292: remove (3)
line 293: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (4) (5) (6) (6) (6) (9) 
line 294: kNearestNeighbour 1 (7)
(6) 
line 295: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (4) (5) (6) (6) (6) (9) 
line 296: insert (4)
line 297: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (4) (4) (5) (6) (6) (6) (9) 
line 298: clear
line 299: buildTree 15
(4) (10) (1) (8) (9) (10) (6) (5) (2) (9) (2) (10) (9) (4) (6) 
line 300: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 301: postorderTraversal
(1) (2) (5) (4) (4) (2) (8) (6) (9) (9) (10) (10) (10) (9) (6) 
line 302: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 303: insert (4)
line 304: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 305: nodeCount_height_leafCount
nodeCount=16;height=6;leafCount=6
line 306: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 307: kNearestNeighbour 10 (1)
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) 
line 308: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 309: kNearestNeighbour 2 (6)
(6) (6) 
line 310: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) 
line 311: insert (8)
line 312: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) 
line 313: nearestNeighbour (8)
(8) 
line 314: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) 
line 315: search (9)
TRUE
line 316: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) 
line 317: kNearestNeighbour 10 (4)
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) 
line 318: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) 
line 319: insert (10)
line 320: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 321: kNearestNeighbour 7 (6)
(4) (4) (5) (6) (6) (8) (8) 
line 322: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 323: kNearestNeighbour 10 (10)
(6) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 324: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 325: nearestNeighbour (3)
(2) 
line 326: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 327: kNearestNeighbour 5 (5)
(4) (4) (4) (5) (6) 
line 328: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 329: kNearestNeighbour 4 (3)
(2) (4) (4) (4) 
line 330: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (6) (6) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 331: clear
line 332: buildTree 20
(6) (9) (7) (2) (7) (3) (7) (7) (10) (5) (7) (7) (3) (7) (4) (10) (7) (8) (2) (9) 
line 333: inorderTraversal
(2) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 334: kNearestNeighbour 9 (4)
(2) (2) (3) (3) (4) (5) (6) (7) (7) 
line 335: inorderTraversal
(2) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 336: kNearestNeighbour 2 (1)
(2) (2) 
line 337: inorderTraversal
(2) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 338: clear
line 339: buildTree 4
(8) (10) (5) (9) 
line 340: inorderTraversal
(5) (8) (9) (10) 
line 341: clear
line 342: buildTree 11
(4) (5) (5) (7) (3) (1) (1) (8) (10) (4) (6) 
line 343: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (10) 
line 344: kNearestNeighbour 3 (7)
(6) (7) (8) 
line 345: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (10) 
line 346: kNearestNeighbour 8 (9)
(4) (4) (5) (5) (6) (7) (8) (10) 
line 347: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (10) 
line 348: search (5)
TRUE
line 349: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (10) 
line 350: preorderTraversal
(5) (3) (1) (1) (4) (4) (7) (5) (6) (8) (10) 
line 351: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (8) (10) 
line 352: insert (6)
line 353: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (6) (7) (8) (10) 
line 354: nearestNeighbour (9)
(10) 
line 355: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (6) (7) (8) (10) 
line 356: insert (9)
line 357: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (6) (7) (8) (9) (10) 
line 358: clear
line 359: buildTree 17
(9) (10) (9) (6) (5) (6) (10) (10) (8) (9) (4) (8) (1) (8) (1) (6) (3) 
line 360: inorderTraversal
(1) (1) (3) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 361: kNearestNeighbour 10 (9)
(6) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 362: inorderTraversal
(1) (1) (3) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 363: remove (9)
line 364: inorderTraversal
(1) (1) (3) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 365: kNearestNeighbour 8 (2)
(1) (1) (3) (4) (5) (6) (6) (6) 
line 366: inorderTraversal
(1) (1) (3) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 367: insert (4)
line 368: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 369: kNearestNeighbour 1 (8)
(8) 
line 370: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 371: kNearestNeighbour 3 (7)
(6) (6) (6) 
line 372: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 373: nearestNeighbour (8)
(8) 
line 374: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 375: insert (2)
line 376: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 377: insert (2)
line 378: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 379: kNearestNeighbour 1 (3)
(3) 
line 380: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 381: insert (7)
line 382: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 383: kNearestNeighbour 6 (5)
(4) (4) (5) (6) (6) (6) 
line 384: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 385: insert (5)
line 386: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 387: postorderTraversal
(2) (2) (3) (1) (1) (4) (5) (5) (7) (6) (6) (6) (4) (8) (8) (9) (10) (10) (10) (9) (8) 
line 388: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 389: remove (9)
line 390: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 391: remove (10)
line 392: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 393: nearestNeighbour (6)
(6) 
line 394: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 395: insert (6)
line 396: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 397: nearestNeighbour (7)
(7) 
line 398: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 399: kNearestNeighbour 5 (9)
(8) (8) (9) (10) (10) 
line 400: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 401: insert (3)
line 402: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 403: remove (1)
line 404: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 405: kNearestNeighbour 8 (6)
(4) (5) (5) (6) (6) (6) (6) (7) 
line 406: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 407: insert (2)
line 408: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 409: kNearestNeighbour 5 (10)
(8) (8) (9) (10) (10) 
line 410: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 411: clear
line 412: buildTree 1
(1) 
line 413: inorderTraversal
(1) 
line 414: nearestNeighbour (5)
(1) 
line 415: inorderTraversal
(1) 
line 416: postorderTraversal
(1) 
line 417: inorderTraversal
(1) 
line 418: insert (3)
line 419: inorderTraversal
(1) (3) 
line 420: nodeCount_height_leafCount
nodeCount=2;height=2;leafCount=1
line 421: inorderTraversal
(1) (3) 
line 422: preorderTraversal
(1) (3) 
line 423: postorderTraversal
(3) (1) 
line 424: clear
