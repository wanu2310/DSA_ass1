line 1: k=1
line 2: nearestNeighbour (3)

line 3: inorderTraversal

line 4: clear
line 5: buildTree 10
(5) (10) (9) (4) (1) (4) (2) (2) (3) (2) 
line 6: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (9) (10) 
line 7: clear
line 8: buildTree 18
(5) (6) (8) (10) (1) (1) (5) (2) (3) (10) (8) (10) (5) (1) (8) (8) (1) (5) 
line 9: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (5) (6) (8) (8) (8) (8) (10) (10) (10) 
line 10: insert (8)
line 11: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (5) (6) (8) (8) (8) (8) (8) (10) (10) (10) 
line 12: nearestNeighbour (10)
(10) 
line 13: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (5) (6) (8) (8) (8) (8) (8) (10) (10) (10) 
line 14: insert (8)
line 15: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (5) (6) (8) (8) (8) (8) (8) (8) (10) (10) (10) 
line 16: kNearestNeighbour 8 (6)
(5) (5) (5) (5) (6) (8) (8) (8) 
line 17: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (5) (6) (8) (8) (8) (8) (8) (8) (10) (10) (10) 
line 18: clear
line 19: buildTree 13
(8) (1) (5) (2) (5) (5) (8) (5) (10) (4) (7) (7) (1) 
line 20: inorderTraversal
(1) (1) (2) (4) (5) (5) (5) (5) (7) (7) (8) (8) (10) 
line 21: insert (9)
line 22: inorderTraversal
(1) (1) (2) (4) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) 
line 23: remove (2)
line 24: inorderTraversal
(1) (1) (4) (5) (5) (5) (5) (7) (7) (8) (8) (9) (10) 
line 25: remove (5)
line 26: inorderTraversal
(1) (1) (4) (5) (5) (5) (7) (7) (8) (8) (9) (10) 
line 27: preorderTraversal
(5) (1) (4) (1) (7) (5) (5) (8) (7) (8) (10) (9) 
line 28: inorderTraversal
(1) (1) (4) (5) (5) (5) (7) (7) (8) (8) (9) (10) 
line 29: insert (7)
line 30: inorderTraversal
(1) (1) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (10) 
line 31: search (4)
TRUE
line 32: inorderTraversal
(1) (1) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (10) 
line 33: clear
line 34: buildTree 5
(8) (2) (2) (7) (5) 
line 35: inorderTraversal
(2) (2) (5) (7) (8) 
line 36: insert (10)
line 37: inorderTraversal
(2) (2) (5) (7) (8) (10) 
line 38: insert (10)
line 39: inorderTraversal
(2) (2) (5) (7) (8) (10) (10) 
line 40: insert (4)
line 41: inorderTraversal
(2) (2) (4) (5) (7) (8) (10) (10) 
line 42: insert (3)
line 43: inorderTraversal
(2) (2) (3) (4) (5) (7) (8) (10) (10) 
line 44: nearestNeighbour (8)
(8) 
line 45: inorderTraversal
(2) (2) (3) (4) (5) (7) (8) (10) (10) 
line 46: insert (10)
line 47: inorderTraversal
(2) (2) (3) (4) (5) (7) (8) (10) (10) (10) 
line 48: kNearestNeighbour 6 (3)
(2) (2) (3) (4) (5) (7) 
line 49: inorderTraversal
(2) (2) (3) (4) (5) (7) (8) (10) (10) (10) 
line 50: insert (7)
line 51: inorderTraversal
(2) (2) (3) (4) (5) (7) (7) (8) (10) (10) (10) 
line 52: nearestNeighbour (5)
(5) 
line 53: inorderTraversal
(2) (2) (3) (4) (5) (7) (7) (8) (10) (10) (10) 
line 54: nearestNeighbour (8)
(8) 
line 55: inorderTraversal
(2) (2) (3) (4) (5) (7) (7) (8) (10) (10) (10) 
line 56: insert (6)
line 57: inorderTraversal
(2) (2) (3) (4) (5) (6) (7) (7) (8) (10) (10) (10) 
line 58: remove (10)
line 59: inorderTraversal
(2) (2) (3) (4) (5) (6) (7) (7) (8) (10) (10) 
line 60: remove (7)
line 61: inorderTraversal
(2) (2) (3) (4) (5) (6) (7) (8) (10) (10) 
line 62: nearestNeighbour (6)
(6) 
line 63: inorderTraversal
(2) (2) (3) (4) (5) (6) (7) (8) (10) (10) 
line 64: remove (5)
line 65: inorderTraversal
(2) (2) (3) (4) (6) (7) (8) (10) (10) 
line 66: insert (3)
line 67: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (8) (10) (10) 
line 68: insert (3)
line 69: inorderTraversal
(2) (2) (3) (3) (3) (4) (6) (7) (8) (10) (10) 
line 70: insert (9)
line 71: inorderTraversal
(2) (2) (3) (3) (3) (4) (6) (7) (8) (9) (10) (10) 
line 72: insert (9)
line 73: inorderTraversal
(2) (2) (3) (3) (3) (4) (6) (7) (8) (9) (9) (10) (10) 
line 74: insert (5)
line 75: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (6) (7) (8) (9) (9) (10) (10) 
line 76: nearestNeighbour (10)
(10) 
line 77: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (6) (7) (8) (9) (9) (10) (10) 
line 78: remove (9)
line 79: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (6) (7) (8) (9) (10) (10) 
line 80: postorderTraversal
(3) (3) (3) (5) (4) (2) (2) (9) (10) (10) (8) (7) (6) 
line 81: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (6) (7) (8) (9) (10) (10) 
line 82: postorderTraversal
(3) (3) (3) (5) (4) (2) (2) (9) (10) (10) (8) (7) (6) 
line 83: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (6) (7) (8) (9) (10) (10) 
line 84: insert (7)
line 85: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (9) (10) (10) 
line 86: kNearestNeighbour 6 (3)
(2) (2) (3) (3) (3) (4) 
line 87: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (9) (10) (10) 
line 88: insert (3)
line 89: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (5) (6) (7) (7) (8) (9) (10) (10) 
line 90: insert (10)
line 91: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (5) (6) (7) (7) (8) (9) (10) (10) (10) 
line 92: nearestNeighbour (9)
(9) 
line 93: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (5) (6) (7) (7) (8) (9) (10) (10) (10) 
line 94: insert (8)
line 95: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (10) (10) (10) 
line 96: insert (6)
line 97: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) (10) 
line 98: clear
line 99: buildTree 11
(2) (10) (5) (6) (3) (5) (10) (3) (4) (5) (4) 
line 100: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (5) (6) (10) (10) 
line 101: remove (8)
line 102: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (5) (6) (10) (10) 
line 103: insert (1)
line 104: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (10) (10) 
line 105: preorderTraversal
(5) (3) (2) (1) (4) (3) (4) (6) (5) (5) (10) (10) 
line 106: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (10) (10) 
line 107: insert (4)
line 108: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (10) (10) 
line 109: insert (5)
line 110: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (10) (10) 
line 111: nearestNeighbour (6)
(6) 
line 112: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (10) (10) 
line 113: kNearestNeighbour 10 (10)
(4) (4) (4) (5) (5) (5) (5) (6) (10) (10) 
line 114: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (10) (10) 
line 115: nearestNeighbour (10)
(10) 
line 116: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (10) (10) 
line 117: insert (1)
line 118: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (10) (10) 
line 119: insert (10)
line 120: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (10) (10) (10) 
line 121: nearestNeighbour (2)
(2) 
line 122: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (10) (10) (10) 
line 123: kNearestNeighbour 5 (1)
(1) (1) (2) (3) (3) 
line 124: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (10) (10) (10) 
line 125: nearestNeighbour (2)
(2) 
line 126: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (10) (10) (10) 
line 127: insert (6)
line 128: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (6) (10) (10) (10) 
line 129: nearestNeighbour (6)
(6) 
line 130: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (6) (10) (10) (10) 
line 131: nearestNeighbour (4)
(4) 
line 132: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (6) (10) (10) (10) 
line 133: clear
line 134: buildTree 16
(2) (3) (5) (9) (6) (9) (4) (4) (3) (3) (5) (3) (2) (8) (9) (7) 
line 135: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 136: nodeCount_height_leafCount
nodeCount=16;height=5;leafCount=6
line 137: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 138: kNearestNeighbour 2 (2)
(2) (2) 
line 139: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) 
line 140: insert (9)
line 141: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) 
line 142: kNearestNeighbour 8 (8)
(5) (6) (7) (8) (9) (9) (9) (9) 
line 143: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) 
line 144: nearestNeighbour (10)
(9) 
line 145: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) 
line 146: insert (9)
line 147: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (9) (9) 
line 148: remove (5)
line 149: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (6) (7) (8) (9) (9) (9) (9) (9) 
line 150: remove (9)
line 151: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (6) (7) (8) (9) (9) (9) (9) 
line 152: clear
line 153: buildTree 16
(8) (3) (10) (7) (2) (4) (2) (10) (7) (7) (9) (4) (1) (6) (3) (4) 
line 154: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (6) (7) (7) (7) (8) (9) (10) (10) 
line 155: insert (6)
line 156: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (6) (6) (7) (7) (7) (8) (9) (10) (10) 
line 157: clear
line 158: buildTree 13
(7) (6) (3) (8) (8) (7) (6) (5) (7) (2) (2) (9) (10) 
line 159: inorderTraversal
(2) (2) (3) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 160: kNearestNeighbour 7 (6)
(5) (6) (6) (7) (7) (7) (8) 
line 161: inorderTraversal
(2) (2) (3) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 162: clear
line 163: buildTree 19
(4) (8) (5) (2) (5) (9) (4) (5) (2) (5) (2) (7) (4) (8) (8) (2) (8) (9) (6) 
line 164: inorderTraversal
(2) (2) (2) (2) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (8) (8) (9) (9) 
line 165: nearestNeighbour (6)
(6) 
line 166: inorderTraversal
(2) (2) (2) (2) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (8) (8) (9) (9) 
line 167: kNearestNeighbour 8 (3)
(2) (2) (2) (2) (4) (4) (4) (5) 
line 168: inorderTraversal
(2) (2) (2) (2) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (8) (8) (9) (9) 
line 169: kNearestNeighbour 8 (8)
(6) (7) (8) (8) (8) (8) (9) (9) 
line 170: inorderTraversal
(2) (2) (2) (2) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (8) (8) (9) (9) 
line 171: clear
line 172: buildTree 3
(2) (4) (10) 
line 173: inorderTraversal
(2) (4) (10) 
line 174: nearestNeighbour (6)
(4) 
line 175: inorderTraversal
(2) (4) (10) 
line 176: remove (2)
line 177: inorderTraversal
(4) (10) 
line 178: nearestNeighbour (7)
(10) 
line 179: inorderTraversal
(4) (10) 
line 180: search (4)
TRUE
line 181: inorderTraversal
(4) (10) 
line 182: kNearestNeighbour 3 (6)
(4) (10) 
line 183: inorderTraversal
(4) (10) 
line 184: kNearestNeighbour 2 (7)
(4) (10) 
line 185: inorderTraversal
(4) (10) 
line 186: insert (9)
line 187: inorderTraversal
(4) (9) (10) 
line 188: kNearestNeighbour 3 (6)
(4) (9) (10) 
line 189: inorderTraversal
(4) (9) (10) 
line 190: insert (7)
line 191: inorderTraversal
(4) (7) (9) (10) 
line 192: preorderTraversal
(4) (10) (9) (7) 
line 193: inorderTraversal
(4) (7) (9) (10) 
line 194: search (10)
TRUE
line 195: inorderTraversal
(4) (7) (9) (10) 
line 196: search (9)
TRUE
line 197: inorderTraversal
(4) (7) (9) (10) 
line 198: kNearestNeighbour 4 (2)
(4) (7) (9) (10) 
line 199: inorderTraversal
(4) (7) (9) (10) 
line 200: kNearestNeighbour 2 (6)
(4) (7) 
line 201: inorderTraversal
(4) (7) (9) (10) 
line 202: insert (1)
line 203: inorderTraversal
(1) (4) (7) (9) (10) 
line 204: kNearestNeighbour 3 (5)
(4) (7) (9) 
line 205: inorderTraversal
(1) (4) (7) (9) (10) 
line 206: clear
line 207: buildTree 11
(7) (3) (7) (9) (4) (4) (3) (1) (3) (5) (8) 
line 208: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (7) (7) (8) (9) 
line 209: insert (9)
line 210: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (7) (7) (8) (9) (9) 
line 211: remove (5)
line 212: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) 
line 213: kNearestNeighbour 9 (5)
(3) (3) (3) (4) (4) (7) (7) (8) (9) 
line 214: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) 
line 215: insert (10)
line 216: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) (10) 
line 217: nearestNeighbour (1)
(1) 
line 218: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) (10) 
line 219: nearestNeighbour (10)
(10) 
line 220: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) (10) 
line 221: nearestNeighbour (10)
(10) 
line 222: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) (10) 
line 223: kNearestNeighbour 5 (4)
(3) (3) (3) (4) (4) 
line 224: inorderTraversal
(1) (3) (3) (3) (4) (4) (7) (7) (8) (9) (9) (10) 
line 225: clear
line 226: buildTree 11
(9) (4) (6) (6) (5) (2) (6) (10) (10) (6) (1) 
line 227: inorderTraversal
(1) (2) (4) (5) (6) (6) (6) (6) (9) (10) (10) 
line 228: insert (10)
line 229: inorderTraversal
(1) (2) (4) (5) (6) (6) (6) (6) (9) (10) (10) (10) 
line 230: insert (9)
line 231: inorderTraversal
(1) (2) (4) (5) (6) (6) (6) (6) (9) (9) (10) (10) (10) 
line 232: kNearestNeighbour 4 (3)
(1) (2) (4) (5) 
line 233: inorderTraversal
(1) (2) (4) (5) (6) (6) (6) (6) (9) (9) (10) (10) (10) 
line 234: clear
line 235: buildTree 15
(8) (2) (8) (2) (3) (6) (2) (10) (8) (4) (5) (4) (6) (7) (6) 
line 236: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (8) (10) 
line 237: insert (10)
line 238: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (8) (10) (10) 
line 239: kNearestNeighbour 1 (4)
(4) 
line 240: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (8) (10) (10) 
line 241: insert (2)
line 242: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (8) (10) (10) 
line 243: clear
line 244: buildTree 9
(7) (10) (8) (9) (9) (3) (2) (6) (5) 
line 245: inorderTraversal
(2) (3) (5) (6) (7) (8) (9) (9) (10) 
line 246: search (10)
TRUE
line 247: inorderTraversal
(2) (3) (5) (6) (7) (8) (9) (9) (10) 
line 248: insert (9)
line 249: inorderTraversal
(2) (3) (5) (6) (7) (8) (9) (9) (9) (10) 
line 250: nearestNeighbour (6)
(6) 
line 251: inorderTraversal
(2) (3) (5) (6) (7) (8) (9) (9) (9) (10) 
line 252: nearestNeighbour (8)
(8) 
line 253: inorderTraversal
(2) (3) (5) (6) (7) (8) (9) (9) (9) (10) 
line 254: kNearestNeighbour 10 (1)
(2) (3) (5) (6) (7) (8) (9) (9) (9) (10) 
line 255: inorderTraversal
(2) (3) (5) (6) (7) (8) (9) (9) (9) (10) 
line 256: nearestNeighbour (6)
(6) 
line 257: inorderTraversal
(2) (3) (5) (6) (7) (8) (9) (9) (9) (10) 
line 258: insert (9)
line 259: inorderTraversal
(2) (3) (5) (6) (7) (8) (9) (9) (9) (9) (10) 
line 260: clear
line 261: buildTree 6
(7) (1) (7) (3) (2) (10) 
line 262: inorderTraversal
(1) (2) (3) (7) (7) (10) 
line 263: insert (6)
line 264: inorderTraversal
(1) (2) (3) (6) (7) (7) (10) 
line 265: remove (10)
line 266: inorderTraversal
(1) (2) (3) (6) (7) (7) 
line 267: insert (4)
line 268: inorderTraversal
(1) (2) (3) (4) (6) (7) (7) 
line 269: insert (1)
line 270: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) 
line 271: nearestNeighbour (2)
(2) 
line 272: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) 
line 273: nearestNeighbour (6)
(6) 
line 274: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) 
line 275: insert (8)
line 276: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (8) 
line 277: insert (7)
line 278: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (7) (8) 
line 279: insert (7)
line 280: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (7) (7) (8) 
line 281: insert (7)
line 282: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (7) (7) (7) (8) 
line 283: search (10)
FALSE
line 284: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (7) (7) (7) (8) 
line 285: kNearestNeighbour 7 (10)
(6) (7) (7) (7) (7) (7) (8) 
line 286: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (7) (7) (7) (8) 
line 287: remove (7)
line 288: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (7) (7) (8) 
line 289: remove (7)
line 290: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (7) (8) 
line 291: clear
line 292: buildTree 16
(2) (8) (4) (3) (1) (7) (10) (7) (7) (4) (6) (1) (7) (4) (8) (9) 
line 293: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (7) (7) (7) (7) (8) (8) (9) (10) 
line 294: insert (6)
line 295: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) 
line 296: preorderTraversal
(6) (3) (1) (1) (2) (4) (4) (4) (7) (6) (8) (7) (7) (7) (9) (8) (10) 
line 297: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) 
line 298: insert (10)
line 299: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 300: kNearestNeighbour 7 (6)
(6) (6) (7) (7) (7) (7) (8) 
line 301: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 302: insert (1)
line 303: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 304: remove (4)
line 305: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 306: kNearestNeighbour 4 (3)
(2) (3) (4) (4) 
line 307: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 308: nearestNeighbour (6)
(6) 
line 309: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 310: nearestNeighbour (2)
(2) 
line 311: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 312: preorderTraversal
(6) (3) (1) (1) (2) (1) (4) (4) (7) (6) (8) (7) (7) (7) (9) (8) (10) (10) 
line 313: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 314: insert (2)
line 315: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 316: nearestNeighbour (5)
(4) 
line 317: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 318: nearestNeighbour (6)
(6) 
line 319: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 320: nearestNeighbour (10)
(10) 
line 321: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 322: kNearestNeighbour 5 (4)
(2) (2) (3) (4) (4) 
line 323: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 324: clear
line 325: buildTree 5
(6) (5) (7) (10) (6) 
line 326: inorderTraversal
(5) (6) (6) (7) (10) 
line 327: nearestNeighbour (1)
(5) 
line 328: inorderTraversal
(5) (6) (6) (7) (10) 
line 329: kNearestNeighbour 5 (7)
(5) (6) (6) (7) (10) 
line 330: inorderTraversal
(5) (6) (6) (7) (10) 
line 331: remove (5)
line 332: inorderTraversal
(6) (6) (7) (10) 
line 333: nearestNeighbour (7)
(7) 
line 334: inorderTraversal
(6) (6) (7) (10) 
line 335: kNearestNeighbour 9 (5)
(6) (6) (7) (10) 
line 336: inorderTraversal
(6) (6) (7) (10) 
line 337: clear
line 338: buildTree 11
(4) (2) (9) (7) (8) (8) (3) (10) (3) (3) (2) 
line 339: inorderTraversal
(2) (2) (3) (3) (3) (4) (7) (8) (8) (9) (10) 
line 340: insert (1)
line 341: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (7) (8) (8) (9) (10) 
line 342: insert (3)
line 343: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (7) (8) (8) (9) (10) 
line 344: insert (10)
line 345: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (7) (8) (8) (9) (10) (10) 
line 346: insert (7)
line 347: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (7) (7) (8) (8) (9) (10) (10) 
line 348: insert (4)
line 349: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (7) (8) (8) (9) (10) (10) 
line 350: kNearestNeighbour 9 (1)
(1) (2) (2) (3) (3) (3) (3) (4) (4) 
line 351: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (7) (8) (8) (9) (10) (10) 
line 352: kNearestNeighbour 8 (7)
(4) (7) (7) (8) (8) (9) (10) (10) 
line 353: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (7) (8) (8) (9) (10) (10) 
line 354: insert (5)
line 355: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (8) (8) (9) (10) (10) 
line 356: search (8)
TRUE
line 357: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (8) (8) (9) (10) (10) 
line 358: kNearestNeighbour 8 (7)
(4) (5) (7) (7) (8) (8) (9) (10) 
line 359: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (7) (7) (8) (8) (9) (10) (10) 
line 360: insert (4)
line 361: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (8) (8) (9) (10) (10) 
line 362: search (9)
TRUE
line 363: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (7) (7) (8) (8) (9) (10) (10) 
line 364: clear
line 365: buildTree 9
(4) (3) (4) (9) (1) (8) (3) (10) (10) 
line 366: inorderTraversal
(1) (3) (3) (4) (4) (8) (9) (10) (10) 
line 367: remove (4)
line 368: inorderTraversal
(1) (3) (3) (4) (8) (9) (10) (10) 
line 369: nearestNeighbour (5)
(4) 
line 370: inorderTraversal
(1) (3) (3) (4) (8) (9) (10) (10) 
line 371: kNearestNeighbour 6 (8)
(3) (4) (8) (9) (10) (10) 
line 372: inorderTraversal
(1) (3) (3) (4) (8) (9) (10) (10) 
line 373: kNearestNeighbour 8 (7)
(1) (3) (3) (4) (8) (9) (10) (10) 
line 374: inorderTraversal
(1) (3) (3) (4) (8) (9) (10) (10) 
line 375: insert (9)
line 376: inorderTraversal
(1) (3) (3) (4) (8) (9) (9) (10) (10) 
line 377: remove (4)
line 378: inorderTraversal
(1) (3) (3) (8) (9) (9) (10) (10) 
line 379: kNearestNeighbour 8 (10)
(1) (3) (3) (8) (9) (9) (10) (10) 
line 380: inorderTraversal
(1) (3) (3) (8) (9) (9) (10) (10) 
line 381: insert (3)
line 382: inorderTraversal
(1) (3) (3) (3) (8) (9) (9) (10) (10) 
line 383: clear
line 384: buildTree 4
(8) (9) (9) (2) 
line 385: inorderTraversal
(2) (8) (9) (9) 
line 386: search (3)
FALSE
line 387: inorderTraversal
(2) (8) (9) (9) 
line 388: insert (1)
line 389: inorderTraversal
(1) (2) (8) (9) (9) 
line 390: remove (10)
line 391: inorderTraversal
(1) (2) (8) (9) (9) 
line 392: preorderTraversal
(8) (2) (1) (9) (9) 
line 393: inorderTraversal
(1) (2) (8) (9) (9) 
line 394: kNearestNeighbour 9 (2)
(1) (2) (8) (9) (9) 
line 395: inorderTraversal
(1) (2) (8) (9) (9) 
line 396: insert (6)
line 397: inorderTraversal
(1) (2) (6) (8) (9) (9) 
line 398: kNearestNeighbour 2 (1)
(1) (2) 
line 399: inorderTraversal
(1) (2) (6) (8) (9) (9) 
line 400: nearestNeighbour (4)
(6) 
line 401: inorderTraversal
(1) (2) (6) (8) (9) (9) 
line 402: kNearestNeighbour 10 (9)
(1) (2) (6) (8) (9) (9) 
line 403: inorderTraversal
(1) (2) (6) (8) (9) (9) 
line 404: kNearestNeighbour 9 (5)
(1) (2) (6) (8) (9) (9) 
line 405: inorderTraversal
(1) (2) (6) (8) (9) (9) 
line 406: nearestNeighbour (3)
(2) 
line 407: inorderTraversal
(1) (2) (6) (8) (9) (9) 
line 408: insert (7)
line 409: inorderTraversal
(1) (2) (6) (7) (8) (9) (9) 
line 410: remove (1)
line 411: inorderTraversal
(2) (6) (7) (8) (9) (9) 
line 412: insert (9)
line 413: inorderTraversal
(2) (6) (7) (8) (9) (9) (9) 
line 414: insert (7)
line 415: inorderTraversal
(2) (6) (7) (7) (8) (9) (9) (9) 
line 416: insert (6)
line 417: inorderTraversal
(2) (6) (6) (7) (7) (8) (9) (9) (9) 
line 418: nearestNeighbour (8)
(8) 
line 419: inorderTraversal
(2) (6) (6) (7) (7) (8) (9) (9) (9) 
line 420: remove (6)
line 421: inorderTraversal
(2) (6) (7) (7) (8) (9) (9) (9) 
line 422: nodeCount_height_leafCount
nodeCount=8;height=5;leafCount=2
line 423: inorderTraversal
(2) (6) (7) (7) (8) (9) (9) (9) 
line 424: preorderTraversal
(8) (2) (6) (7) (7) (9) (9) (9) 
line 425: postorderTraversal
(7) (7) (6) (2) (9) (9) (9) (8) 
line 426: clear
