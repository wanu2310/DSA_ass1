line 1: k=1
line 2: insert (10)
line 3: inorderTraversal
(10) 
line 4: clear
line 5: buildTree 7
(8) (9) (4) (10) (9) (1) (2) 
line 6: inorderTraversal
(1) (2) (4) (8) (9) (9) (10) 
line 7: postorderTraversal
(1) (4) (2) (10) (9) (9) (8) 
line 8: inorderTraversal
(1) (2) (4) (8) (9) (9) (10) 
line 9: insert (7)
line 10: inorderTraversal
(1) (2) (4) (7) (8) (9) (9) (10) 
line 11: nearestNeighbour (1)
(1) 
line 12: inorderTraversal
(1) (2) (4) (7) (8) (9) (9) (10) 
line 13: insert (10)
line 14: inorderTraversal
(1) (2) (4) (7) (8) (9) (9) (10) (10) 
line 15: insert (4)
line 16: inorderTraversal
(1) (2) (4) (4) (7) (8) (9) (9) (10) (10) 
line 17: insert (9)
line 18: inorderTraversal
(1) (2) (4) (4) (7) (8) (9) (9) (9) (10) (10) 
line 19: kNearestNeighbour 10 (6)
(2) (4) (4) (7) (8) (9) (9) (9) (10) (10) 
line 20: inorderTraversal
(1) (2) (4) (4) (7) (8) (9) (9) (9) (10) (10) 
line 21: remove (4)
line 22: inorderTraversal
(1) (2) (4) (7) (8) (9) (9) (9) (10) (10) 
line 23: nearestNeighbour (3)
(4) 
line 24: inorderTraversal
(1) (2) (4) (7) (8) (9) (9) (9) (10) (10) 
line 25: remove (5)
line 26: inorderTraversal
(1) (2) (4) (7) (8) (9) (9) (9) (10) (10) 
line 27: insert (8)
line 28: inorderTraversal
(1) (2) (4) (7) (8) (8) (9) (9) (9) (10) (10) 
line 29: nearestNeighbour (10)
(10) 
line 30: inorderTraversal
(1) (2) (4) (7) (8) (8) (9) (9) (9) (10) (10) 
line 31: clear
line 32: buildTree 14
(6) (4) (4) (1) (5) (9) (7) (9) (4) (6) (2) (4) (5) (8) 
line 33: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 34: insert (2)
line 35: inorderTraversal
(1) (2) (2) (4) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 36: insert (6)
line 37: inorderTraversal
(1) (2) (2) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) 
line 38: insert (3)
line 39: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) 
line 40: postorderTraversal
(3) (2) (2) (1) (4) (4) (4) (4) (5) (6) (6) (6) (8) (9) (9) (7) (5) 
line 41: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) 
line 42: kNearestNeighbour 9 (7)
(5) (5) (6) (6) (6) (7) (8) (9) (9) 
line 43: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) 
line 44: insert (10)
line 45: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) 
line 46: insert (8)
line 47: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 48: remove (2)
line 49: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 50: search (4)
TRUE
line 51: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 52: insert (3)
line 53: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 54: nearestNeighbour (9)
(9) 
line 55: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 56: preorderTraversal
(5) (4) (1) (2) (3) (3) (4) (4) (4) (7) (6) (5) (6) (6) (9) (8) (8) (9) (10) 
line 57: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 58: nearestNeighbour (4)
(4) 
line 59: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 60: insert (5)
line 61: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 62: nearestNeighbour (7)
(7) 
line 63: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 64: nearestNeighbour (8)
(8) 
line 65: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 66: kNearestNeighbour 3 (7)
(7) (8) (8) 
line 67: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 68: kNearestNeighbour 2 (4)
(4) (4) 
line 69: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 70: kNearestNeighbour 4 (10)
(8) (9) (9) (10) 
line 71: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 72: clear
line 73: buildTree 11
(9) (5) (5) (6) (2) (9) (4) (6) (3) (5) (1) 
line 74: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (6) (6) (9) (9) 
line 75: insert (6)
line 76: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (6) (6) (6) (9) (9) 
line 77: remove (3)
line 78: inorderTraversal
(1) (2) (4) (5) (5) (5) (6) (6) (6) (9) (9) 
line 79: remove (1)
line 80: inorderTraversal
(2) (4) (5) (5) (5) (6) (6) (6) (9) (9) 
line 81: clear
line 82: buildTree 11
(4) (6) (8) (1) (9) (10) (1) (8) (10) (6) (7) 
line 83: inorderTraversal
(1) (1) (4) (6) (6) (7) (8) (8) (9) (10) (10) 
line 84: kNearestNeighbour 4 (5)
(4) (6) (6) (7) 
line 85: inorderTraversal
(1) (1) (4) (6) (6) (7) (8) (8) (9) (10) (10) 
line 86: insert (2)
line 87: inorderTraversal
(1) (1) (2) (4) (6) (6) (7) (8) (8) (9) (10) (10) 
line 88: nearestNeighbour (7)
(7) 
line 89: inorderTraversal
(1) (1) (2) (4) (6) (6) (7) (8) (8) (9) (10) (10) 
line 90: clear
line 91: buildTree 12
(10) (2) (2) (10) (10) (7) (2) (1) (5) (4) (2) (1) 
line 92: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (7) (10) (10) (10) 
line 93: kNearestNeighbour 10 (2)
(1) (1) (2) (2) (2) (2) (4) (5) (7) (10) 
line 94: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (7) (10) (10) (10) 
line 95: kNearestNeighbour 1 (6)
(7) 
line 96: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (7) (10) (10) (10) 
line 97: search (1)
TRUE
line 98: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (7) (10) (10) (10) 
line 99: insert (9)
line 100: inorderTraversal
(1) (1) (2) (2) (2) (2) (4) (5) (7) (9) (10) (10) (10) 
line 101: clear
line 102: buildTree 15
(10) (10) (6) (9) (3) (6) (2) (8) (7) (4) (1) (3) (8) (6) (8) 
line 103: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 104: remove (6)
line 105: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 106: kNearestNeighbour 5 (4)
(2) (3) (3) (4) (6) 
line 107: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 108: insert (1)
line 109: inorderTraversal
(1) (1) (2) (3) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 110: insert (1)
line 111: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 112: insert (1)
line 113: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 114: nearestNeighbour (6)
(6) 
line 115: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 116: kNearestNeighbour 2 (6)
(6) (6) 
line 117: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 118: kNearestNeighbour 5 (7)
(6) (7) (8) (8) (8) 
line 119: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 120: insert (6)
line 121: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 122: remove (10)
line 123: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 124: insert (2)
line 125: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (4) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 126: nearestNeighbour (7)
(7) 
line 127: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (4) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 128: nearestNeighbour (8)
(8) 
line 129: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (4) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 130: kNearestNeighbour 10 (9)
(4) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 131: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (4) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 132: clear
line 133: buildTree 17
(10) (10) (10) (5) (3) (8) (4) (2) (7) (4) (6) (5) (10) (3) (1) (1) (5) 
line 134: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (8) (10) (10) (10) (10) 
line 135: insert (5)
line 136: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (10) (10) (10) (10) 
line 137: remove (1)
line 138: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (10) (10) (10) (10) 
line 139: nearestNeighbour (7)
(7) 
line 140: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (10) (10) (10) (10) 
line 141: clear
line 142: buildTree 12
(2) (6) (10) (7) (4) (3) (5) (1) (7) (4) (5) (8) 
line 143: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 144: search (1)
TRUE
line 145: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 146: nearestNeighbour (5)
(5) 
line 147: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 148: nearestNeighbour (7)
(7) 
line 149: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 150: insert (3)
line 151: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 152: insert (2)
line 153: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 154: insert (3)
line 155: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 156: remove (1)
line 157: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 158: insert (3)
line 159: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 160: nearestNeighbour (9)
(10) 
line 161: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 162: insert (4)
line 163: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (10) 
line 164: insert (6)
line 165: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (10) 
line 166: clear
line 167: buildTree 15
(8) (7) (2) (10) (7) (9) (10) (5) (5) (6) (9) (6) (6) (4) (3) 
line 168: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 169: nearestNeighbour (1)
(2) 
line 170: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 171: kNearestNeighbour 1 (5)
(5) 
line 172: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 173: remove (9)
line 174: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (9) (10) (10) 
line 175: remove (5)
line 176: inorderTraversal
(2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (9) (10) (10) 
line 177: nearestNeighbour (9)
(9) 
line 178: inorderTraversal
(2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (9) (10) (10) 
line 179: nearestNeighbour (3)
(3) 
line 180: inorderTraversal
(2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (9) (10) (10) 
line 181: nearestNeighbour (2)
(2) 
line 182: inorderTraversal
(2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (9) (10) (10) 
line 183: kNearestNeighbour 2 (7)
(7) (7) 
line 184: inorderTraversal
(2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (9) (10) (10) 
line 185: insert (2)
line 186: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (9) (10) (10) 
line 187: nearestNeighbour (2)
(2) 
line 188: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (9) (10) (10) 
line 189: insert (9)
line 190: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 191: nearestNeighbour (3)
(3) 
line 192: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 193: insert (6)
line 194: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 195: search (7)
TRUE
line 196: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 197: clear
line 198: buildTree 12
(6) (6) (6) (9) (5) (7) (8) (4) (1) (3) (2) (6) 
line 199: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (8) (9) 
line 200: insert (7)
line 201: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (9) 
line 202: kNearestNeighbour 3 (7)
(7) (7) (8) 
line 203: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (9) 
line 204: insert (5)
line 205: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) 
line 206: insert (10)
line 207: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (10) 
line 208: insert (7)
line 209: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (10) 
line 210: remove (7)
line 211: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (10) 
line 212: kNearestNeighbour 8 (8)
(6) (6) (6) (7) (7) (8) (9) (10) 
line 213: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (10) 
line 214: insert (7)
line 215: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (10) 
line 216: insert (9)
line 217: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (10) 
line 218: remove (7)
line 219: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (10) 
line 220: remove (10)
line 221: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 222: insert (7)
line 223: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 224: insert (5)
line 225: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 226: insert (5)
line 227: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 228: search (1)
TRUE
line 229: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 230: kNearestNeighbour 9 (9)
(6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 231: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 232: nearestNeighbour (3)
(3) 
line 233: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 234: remove (6)
line 235: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 236: nearestNeighbour (1)
(1) 
line 237: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 238: clear
line 239: buildTree 8
(10) (8) (7) (7) (2) (4) (5) (4) 
line 240: inorderTraversal
(2) (4) (4) (5) (7) (7) (8) (10) 
line 241: insert (4)
line 242: inorderTraversal
(2) (4) (4) (4) (5) (7) (7) (8) (10) 
line 243: insert (8)
line 244: inorderTraversal
(2) (4) (4) (4) (5) (7) (7) (8) (8) (10) 
line 245: nearestNeighbour (2)
(2) 
line 246: inorderTraversal
(2) (4) (4) (4) (5) (7) (7) (8) (8) (10) 
line 247: insert (10)
line 248: inorderTraversal
(2) (4) (4) (4) (5) (7) (7) (8) (8) (10) (10) 
line 249: insert (4)
line 250: inorderTraversal
(2) (4) (4) (4) (4) (5) (7) (7) (8) (8) (10) (10) 
line 251: insert (1)
line 252: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (8) (8) (10) (10) 
line 253: kNearestNeighbour 4 (8)
(7) (7) (8) (8) 
line 254: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (8) (8) (10) (10) 
line 255: nearestNeighbour (4)
(4) 
line 256: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (8) (8) (10) (10) 
line 257: kNearestNeighbour 4 (7)
(7) (7) (8) (8) 
line 258: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (8) (8) (10) (10) 
line 259: postorderTraversal
(1) (2) (4) (4) (4) (4) (7) (8) (10) (10) (8) (7) (5) 
line 260: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (8) (8) (10) (10) 
line 261: kNearestNeighbour 3 (7)
(7) (7) (8) 
line 262: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (8) (8) (10) (10) 
line 263: insert (7)
line 264: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (8) (8) (10) (10) 
line 265: kNearestNeighbour 7 (9)
(7) (7) (7) (8) (8) (10) (10) 
line 266: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (8) (8) (10) (10) 
line 267: remove (2)
line 268: inorderTraversal
(1) (4) (4) (4) (4) (5) (7) (7) (7) (8) (8) (10) (10) 
line 269: nearestNeighbour (3)
(4) 
line 270: inorderTraversal
(1) (4) (4) (4) (4) (5) (7) (7) (7) (8) (8) (10) (10) 
line 271: kNearestNeighbour 2 (9)
(8) (10) 
line 272: inorderTraversal
(1) (4) (4) (4) (4) (5) (7) (7) (7) (8) (8) (10) (10) 
line 273: insert (7)
line 274: inorderTraversal
(1) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (10) (10) 
line 275: insert (2)
line 276: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (10) (10) 
line 277: nearestNeighbour (3)
(2) 
line 278: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (10) (10) 
line 279: nodeCount_height_leafCount
nodeCount=15;height=6;leafCount=5
line 280: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (10) (10) 
line 281: kNearestNeighbour 2 (2)
(1) (2) 
line 282: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (10) (10) 
line 283: insert (9)
line 284: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 285: insert (9)
line 286: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 287: search (8)
TRUE
line 288: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 289: kNearestNeighbour 10 (1)
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) 
line 290: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 291: nearestNeighbour (3)
(2) 
line 292: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 293: insert (7)
line 294: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 295: kNearestNeighbour 8 (6)
(5) (7) (7) (7) (7) (7) (8) (8) 
line 296: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 297: insert (8)
line 298: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 299: clear
line 300: buildTree 3
(5) (3) (8) 
line 301: inorderTraversal
(3) (5) (8) 
line 302: kNearestNeighbour 2 (1)
(3) (5) 
line 303: inorderTraversal
(3) (5) (8) 
line 304: nearestNeighbour (6)
(5) 
line 305: inorderTraversal
(3) (5) (8) 
line 306: nearestNeighbour (8)
(8) 
line 307: inorderTraversal
(3) (5) (8) 
line 308: kNearestNeighbour 9 (2)
(3) (5) (8) 
line 309: inorderTraversal
(3) (5) (8) 
line 310: insert (3)
line 311: inorderTraversal
(3) (3) (5) (8) 
line 312: search (3)
TRUE
line 313: inorderTraversal
(3) (3) (5) (8) 
line 314: kNearestNeighbour 4 (6)
(3) (3) (5) (8) 
line 315: inorderTraversal
(3) (3) (5) (8) 
line 316: kNearestNeighbour 2 (1)
(3) (3) 
line 317: inorderTraversal
(3) (3) (5) (8) 
line 318: insert (1)
line 319: inorderTraversal
(1) (3) (3) (5) (8) 
line 320: insert (1)
line 321: inorderTraversal
(1) (1) (3) (3) (5) (8) 
line 322: nearestNeighbour (7)
(8) 
line 323: inorderTraversal
(1) (1) (3) (3) (5) (8) 
line 324: insert (8)
line 325: inorderTraversal
(1) (1) (3) (3) (5) (8) (8) 
line 326: kNearestNeighbour 8 (2)
(1) (1) (3) (3) (5) (8) (8) 
line 327: inorderTraversal
(1) (1) (3) (3) (5) (8) (8) 
line 328: remove (3)
line 329: inorderTraversal
(1) (1) (3) (5) (8) (8) 
line 330: nearestNeighbour (9)
(8) 
line 331: inorderTraversal
(1) (1) (3) (5) (8) (8) 
line 332: insert (4)
line 333: inorderTraversal
(1) (1) (3) (4) (5) (8) (8) 
line 334: nearestNeighbour (6)
(5) 
line 335: inorderTraversal
(1) (1) (3) (4) (5) (8) (8) 
line 336: insert (4)
line 337: inorderTraversal
(1) (1) (3) (4) (4) (5) (8) (8) 
line 338: insert (5)
line 339: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (8) (8) 
line 340: insert (10)
line 341: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (8) (8) (10) 
line 342: insert (1)
line 343: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (8) (8) (10) 
line 344: kNearestNeighbour 10 (6)
(1) (1) (3) (4) (4) (5) (5) (8) (8) (10) 
line 345: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (8) (8) (10) 
line 346: insert (2)
line 347: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (8) (8) (10) 
line 348: insert (1)
line 349: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (5) (5) (8) (8) (10) 
line 350: kNearestNeighbour 2 (4)
(4) (4) 
line 351: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (4) (5) (5) (8) (8) (10) 
line 352: insert (3)
line 353: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (8) (8) (10) 
line 354: insert (3)
line 355: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (8) (8) (10) 
line 356: kNearestNeighbour 9 (8)
(3) (3) (4) (4) (5) (5) (8) (8) (10) 
line 357: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (8) (8) (10) 
line 358: insert (5)
line 359: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (5) (8) (8) (10) 
line 360: insert (2)
line 361: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (8) (8) (10) 
line 362: kNearestNeighbour 10 (8)
(3) (3) (4) (4) (5) (5) (5) (8) (8) (10) 
line 363: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (8) (8) (10) 
line 364: nearestNeighbour (1)
(1) 
line 365: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (8) (8) (10) 
line 366: insert (7)
line 367: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) 
line 368: nearestNeighbour (9)
(10) 
line 369: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) 
line 370: search (7)
TRUE
line 371: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) 
line 372: nodeCount_height_leafCount
nodeCount=18;height=7;leafCount=6
line 373: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) 
line 374: insert (10)
line 375: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 376: remove (1)
line 377: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 378: preorderTraversal
(5) (3) (1) (1) (1) (2) (2) (4) (3) (3) (4) (8) (5) (5) (7) (8) (10) (10) 
line 379: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 380: insert (3)
line 381: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 382: kNearestNeighbour 6 (9)
(5) (7) (8) (8) (10) (10) 
line 383: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 384: insert (3)
line 385: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 386: nearestNeighbour (10)
(10) 
line 387: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 388: insert (5)
line 389: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (7) (8) (8) (10) (10) 
line 390: nearestNeighbour (4)
(4) 
line 391: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (7) (8) (8) (10) (10) 
line 392: nearestNeighbour (1)
(1) 
line 393: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (7) (8) (8) (10) (10) 
line 394: insert (6)
line 395: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 396: nearestNeighbour (9)
(10) 
line 397: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 398: remove (4)
line 399: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 400: insert (5)
line 401: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 402: kNearestNeighbour 5 (8)
(7) (8) (8) (10) (10) 
line 403: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 404: kNearestNeighbour 10 (2)
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) 
line 405: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 406: clear
line 407: buildTree 18
(4) (6) (6) (8) (2) (5) (7) (8) (5) (2) (1) (8) (8) (2) (8) (1) (10) (3) 
line 408: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (6) (7) (8) (8) (8) (8) (8) (10) 
line 409: nearestNeighbour (8)
(8) 
line 410: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (6) (7) (8) (8) (8) (8) (8) (10) 
line 411: kNearestNeighbour 2 (5)
(5) (5) 
line 412: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (6) (7) (8) (8) (8) (8) (8) (10) 
line 413: clear
line 414: buildTree 8
(9) (8) (2) (6) (10) (2) (9) (4) 
line 415: inorderTraversal
(2) (2) (4) (6) (8) (9) (9) (10) 
line 416: nodeCount_height_leafCount
nodeCount=8;height=4;leafCount=3
line 417: inorderTraversal
(2) (2) (4) (6) (8) (9) (9) (10) 
line 418: preorderTraversal
(6) (2) (2) (4) (9) (8) (9) (10) 
line 419: postorderTraversal
(4) (2) (2) (8) (10) (9) (9) (6) 
line 420: clear
