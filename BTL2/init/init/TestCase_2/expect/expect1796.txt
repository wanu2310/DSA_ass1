line 1: k=1
line 2: nearestNeighbour (8)

line 3: inorderTraversal

line 4: nearestNeighbour (5)

line 5: inorderTraversal

line 6: insert (1)
line 7: inorderTraversal
(1) 
line 8: insert (3)
line 9: inorderTraversal
(1) (3) 
line 10: nearestNeighbour (10)
(3) 
line 11: inorderTraversal
(1) (3) 
line 12: insert (4)
line 13: inorderTraversal
(1) (3) (4) 
line 14: clear
line 15: buildTree 4
(10) (5) (3) (6) 
line 16: inorderTraversal
(3) (5) (6) (10) 
line 17: remove (7)
line 18: inorderTraversal
(3) (5) (6) (10) 
line 19: nearestNeighbour (7)
(6) 
line 20: inorderTraversal
(3) (5) (6) (10) 
line 21: remove (3)
line 22: inorderTraversal
(5) (6) (10) 
line 23: insert (9)
line 24: inorderTraversal
(5) (6) (9) (10) 
line 25: clear
line 26: buildTree 11
(9) (10) (3) (8) (6) (7) (5) (6) (5) (9) (3) 
line 27: inorderTraversal
(3) (3) (5) (5) (6) (6) (7) (8) (9) (9) (10) 
line 28: remove (8)
line 29: inorderTraversal
(3) (3) (5) (5) (6) (6) (7) (9) (9) (10) 
line 30: preorderTraversal
(6) (3) (5) (3) (5) (9) (6) (7) (9) (10) 
line 31: inorderTraversal
(3) (3) (5) (5) (6) (6) (7) (9) (9) (10) 
line 32: nearestNeighbour (2)
(3) 
line 33: inorderTraversal
(3) (3) (5) (5) (6) (6) (7) (9) (9) (10) 
line 34: insert (3)
line 35: inorderTraversal
(3) (3) (3) (5) (5) (6) (6) (7) (9) (9) (10) 
line 36: kNearestNeighbour 7 (7)
(5) (5) (6) (6) (7) (9) (9) 
line 37: inorderTraversal
(3) (3) (3) (5) (5) (6) (6) (7) (9) (9) (10) 
line 38: kNearestNeighbour 3 (6)
(6) (6) (7) 
line 39: inorderTraversal
(3) (3) (3) (5) (5) (6) (6) (7) (9) (9) (10) 
line 40: nearestNeighbour (10)
(10) 
line 41: inorderTraversal
(3) (3) (3) (5) (5) (6) (6) (7) (9) (9) (10) 
line 42: clear
line 43: buildTree 13
(1) (7) (2) (4) (4) (7) (3) (6) (1) (6) (6) (5) (3) 
line 44: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) 
line 45: remove (10)
line 46: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) 
line 47: nearestNeighbour (9)
(7) 
line 48: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) 
line 49: nearestNeighbour (1)
(1) 
line 50: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) 
line 51: remove (2)
line 52: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) 
line 53: clear
line 54: buildTree 14
(1) (2) (2) (8) (6) (3) (5) (1) (7) (10) (6) (3) (1) (3) 
line 55: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (7) (8) (10) 
line 56: kNearestNeighbour 10 (8)
(2) (3) (3) (3) (5) (6) (6) (7) (8) (10) 
line 57: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (7) (8) (10) 
line 58: insert (4)
line 59: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (6) (6) (7) (8) (10) 
line 60: remove (4)
line 61: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (7) (8) (10) 
line 62: nodeCount_height_leafCount
nodeCount=14;height=5;leafCount=5
line 63: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (7) (8) (10) 
line 64: nodeCount_height_leafCount
nodeCount=14;height=5;leafCount=5
line 65: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (7) (8) (10) 
line 66: insert (1)
line 67: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (7) (8) (10) 
line 68: postorderTraversal
(1) (1) (2) (2) (1) (1) (5) (3) (3) (6) (10) (8) (7) (6) (3) 
line 69: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (7) (8) (10) 
line 70: nearestNeighbour (5)
(5) 
line 71: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (7) (8) (10) 
line 72: remove (7)
line 73: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (8) (10) 
line 74: insert (9)
line 75: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (8) (9) (10) 
line 76: insert (2)
line 77: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (6) (8) (9) (10) 
line 78: nearestNeighbour (1)
(1) 
line 79: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (6) (8) (9) (10) 
line 80: insert (1)
line 81: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (6) (8) (9) (10) 
line 82: remove (6)
line 83: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (8) (9) (10) 
line 84: kNearestNeighbour 5 (7)
(5) (6) (8) (9) (10) 
line 85: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (8) (9) (10) 
line 86: nearestNeighbour (4)
(5) 
line 87: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (8) (9) (10) 
line 88: insert (8)
line 89: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (10) 
line 90: insert (2)
line 91: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (10) 
line 92: insert (10)
line 93: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (10) (10) 
line 94: kNearestNeighbour 8 (4)
(2) (2) (2) (3) (3) (3) (5) (6) 
line 95: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (10) (10) 
line 96: insert (9)
line 97: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (9) (10) (10) 
line 98: insert (9)
line 99: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 100: nearestNeighbour (10)
(10) 
line 101: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 102: nearestNeighbour (6)
(6) 
line 103: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 104: remove (4)
line 105: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 106: insert (9)
line 107: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) 
line 108: insert (3)
line 109: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) 
line 110: clear
line 111: buildTree 5
(1) (7) (5) (9) (6) 
line 112: inorderTraversal
(1) (5) (6) (7) (9) 
line 113: nearestNeighbour (3)
(5) 
line 114: inorderTraversal
(1) (5) (6) (7) (9) 
line 115: nearestNeighbour (10)
(9) 
line 116: inorderTraversal
(1) (5) (6) (7) (9) 
line 117: nearestNeighbour (7)
(7) 
line 118: inorderTraversal
(1) (5) (6) (7) (9) 
line 119: kNearestNeighbour 9 (8)
(1) (5) (6) (7) (9) 
line 120: inorderTraversal
(1) (5) (6) (7) (9) 
line 121: clear
line 122: buildTree 9
(6) (7) (1) (3) (2) (8) (8) (4) (8) 
line 123: inorderTraversal
(1) (2) (3) (4) (6) (7) (8) (8) (8) 
line 124: nearestNeighbour (7)
(7) 
line 125: inorderTraversal
(1) (2) (3) (4) (6) (7) (8) (8) (8) 
line 126: clear
line 127: buildTree 17
(10) (1) (10) (4) (10) (9) (7) (6) (9) (3) (6) (9) (7) (5) (4) (10) (1) 
line 128: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (7) (7) (9) (9) (9) (10) (10) (10) (10) 
line 129: insert (7)
line 130: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (7) (7) (7) (9) (9) (9) (10) (10) (10) (10) 
line 131: postorderTraversal
(3) (1) (1) (4) (6) (6) (5) (4) (7) (7) (9) (9) (10) (10) (10) (10) (9) (7) 
line 132: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (7) (7) (7) (9) (9) (9) (10) (10) (10) (10) 
line 133: nearestNeighbour (10)
(10) 
line 134: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (6) (7) (7) (7) (9) (9) (9) (10) (10) (10) (10) 
line 135: clear
line 136: buildTree 3
(7) (2) (2) 
line 137: inorderTraversal
(2) (2) (7) 
line 138: nearestNeighbour (3)
(2) 
line 139: inorderTraversal
(2) (2) (7) 
line 140: nearestNeighbour (5)
(7) 
line 141: inorderTraversal
(2) (2) (7) 
line 142: kNearestNeighbour 7 (8)
(2) (2) (7) 
line 143: inorderTraversal
(2) (2) (7) 
line 144: nearestNeighbour (10)
(7) 
line 145: inorderTraversal
(2) (2) (7) 
line 146: nearestNeighbour (10)
(7) 
line 147: inorderTraversal
(2) (2) (7) 
line 148: nearestNeighbour (6)
(7) 
line 149: inorderTraversal
(2) (2) (7) 
line 150: insert (1)
line 151: inorderTraversal
(1) (2) (2) (7) 
line 152: kNearestNeighbour 9 (6)
(1) (2) (2) (7) 
line 153: inorderTraversal
(1) (2) (2) (7) 
line 154: kNearestNeighbour 4 (2)
(1) (2) (2) (7) 
line 155: inorderTraversal
(1) (2) (2) (7) 
line 156: kNearestNeighbour 7 (1)
(1) (2) (2) (7) 
line 157: inorderTraversal
(1) (2) (2) (7) 
line 158: clear
line 159: buildTree 15
(10) (4) (2) (2) (7) (2) (7) (7) (4) (7) (10) (6) (1) (4) (8) 
line 160: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (6) (7) (7) (7) (7) (8) (10) (10) 
line 161: kNearestNeighbour 5 (2)
(1) (2) (2) (2) (4) 
line 162: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (6) (7) (7) (7) (7) (8) (10) (10) 
line 163: remove (7)
line 164: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (6) (7) (7) (7) (8) (10) (10) 
line 165: nearestNeighbour (1)
(1) 
line 166: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (6) (7) (7) (7) (8) (10) (10) 
line 167: insert (10)
line 168: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (6) (7) (7) (7) (8) (10) (10) (10) 
line 169: kNearestNeighbour 5 (9)
(7) (8) (10) (10) (10) 
line 170: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (6) (7) (7) (7) (8) (10) (10) (10) 
line 171: insert (4)
line 172: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (4) (6) (7) (7) (7) (8) (10) (10) (10) 
line 173: insert (4)
line 174: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (4) (4) (6) (7) (7) (7) (8) (10) (10) (10) 
line 175: kNearestNeighbour 10 (1)
(1) (2) (2) (2) (4) (4) (4) (4) (4) (6) 
line 176: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (4) (4) (6) (7) (7) (7) (8) (10) (10) (10) 
line 177: insert (10)
line 178: inorderTraversal
(1) (2) (2) (2) (4) (4) (4) (4) (4) (6) (7) (7) (7) (8) (10) (10) (10) (10) 
line 179: clear
line 180: buildTree 19
(5) (4) (8) (7) (10) (9) (7) (1) (1) (10) (8) (10) (3) (7) (9) (10) (4) (6) (2) 
line 181: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 182: remove (8)
line 183: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 184: remove (7)
line 185: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 186: kNearestNeighbour 5 (3)
(2) (3) (4) (4) (5) 
line 187: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 188: insert (7)
line 189: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 190: nearestNeighbour (6)
(6) 
line 191: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 192: postorderTraversal
(2) (1) (1) (4) (6) (5) (4) (3) (7) (8) (7) (9) (10) (10) (10) (10) (9) (7) 
line 193: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 194: kNearestNeighbour 9 (6)
(3) (4) (4) (5) (6) (7) (7) (7) (8) 
line 195: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 196: remove (8)
line 197: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 198: insert (2)
line 199: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 200: insert (4)
line 201: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 202: kNearestNeighbour 8 (7)
(5) (6) (7) (7) (7) (9) (9) (10) 
line 203: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 204: insert (5)
line 205: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 206: insert (7)
line 207: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 208: nearestNeighbour (1)
(1) 
line 209: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 210: nodeCount_height_leafCount
nodeCount=21;height=6;leafCount=6
line 211: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 212: insert (7)
line 213: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 214: insert (1)
line 215: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 216: insert (5)
line 217: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) (9) (9) (10) (10) (10) (10) 
line 218: insert (8)
line 219: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 220: clear
line 221: buildTree 7
(5) (7) (2) (10) (2) (8) (1) 
line 222: inorderTraversal
(1) (2) (2) (5) (7) (8) (10) 
line 223: kNearestNeighbour 8 (4)
(1) (2) (2) (5) (7) (8) (10) 
line 224: inorderTraversal
(1) (2) (2) (5) (7) (8) (10) 
line 225: insert (5)
line 226: inorderTraversal
(1) (2) (2) (5) (5) (7) (8) (10) 
line 227: kNearestNeighbour 9 (4)
(1) (2) (2) (5) (5) (7) (8) (10) 
line 228: inorderTraversal
(1) (2) (2) (5) (5) (7) (8) (10) 
line 229: remove (5)
line 230: inorderTraversal
(1) (2) (2) (5) (7) (8) (10) 
line 231: insert (9)
line 232: inorderTraversal
(1) (2) (2) (5) (7) (8) (9) (10) 
line 233: nearestNeighbour (6)
(7) 
line 234: inorderTraversal
(1) (2) (2) (5) (7) (8) (9) (10) 
line 235: nearestNeighbour (6)
(7) 
line 236: inorderTraversal
(1) (2) (2) (5) (7) (8) (9) (10) 
line 237: kNearestNeighbour 1 (2)
(2) 
line 238: inorderTraversal
(1) (2) (2) (5) (7) (8) (9) (10) 
line 239: kNearestNeighbour 7 (3)
(1) (2) (2) (5) (7) (8) (9) 
line 240: inorderTraversal
(1) (2) (2) (5) (7) (8) (9) (10) 
line 241: insert (10)
line 242: inorderTraversal
(1) (2) (2) (5) (7) (8) (9) (10) (10) 
line 243: clear
line 244: buildTree 13
(5) (6) (7) (8) (3) (8) (2) (2) (2) (1) (10) (5) (8) 
line 245: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (8) (8) (8) (10) 
line 246: insert (7)
line 247: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 248: preorderTraversal
(5) (2) (1) (2) (2) (3) (8) (6) (5) (7) (7) (8) (8) (10) 
line 249: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 250: nearestNeighbour (9)
(10) 
line 251: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 252: kNearestNeighbour 8 (7)
(5) (5) (6) (7) (7) (8) (8) (8) 
line 253: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 254: nearestNeighbour (1)
(1) 
line 255: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 256: insert (10)
line 257: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) 
line 258: insert (10)
line 259: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 260: insert (8)
line 261: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 262: kNearestNeighbour 8 (6)
(5) (5) (6) (7) (7) (8) (8) (8) 
line 263: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 264: insert (7)
line 265: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 266: insert (2)
line 267: inorderTraversal
(1) (2) (2) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 268: insert (9)
line 269: inorderTraversal
(1) (2) (2) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 270: insert (9)
line 271: inorderTraversal
(1) (2) (2) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 272: preorderTraversal
(5) (2) (1) (2) (2) (3) (2) (8) (6) (5) (7) (7) (7) (8) (8) (10) (8) (9) (9) (10) (10) 
line 273: inorderTraversal
(1) (2) (2) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 274: insert (10)
line 275: inorderTraversal
(1) (2) (2) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 276: insert (8)
line 277: inorderTraversal
(1) (2) (2) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 278: clear
line 279: buildTree 19
(7) (9) (8) (5) (3) (5) (3) (4) (8) (1) (3) (7) (8) (4) (3) (8) (3) (9) (3) 
line 280: inorderTraversal
(1) (3) (3) (3) (3) (3) (3) (4) (4) (5) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 281: postorderTraversal
(1) (3) (4) (4) (3) (3) (3) (3) (3) (5) (7) (7) (8) (9) (9) (8) (8) (8) (5) 
line 282: inorderTraversal
(1) (3) (3) (3) (3) (3) (3) (4) (4) (5) (5) (7) (7) (8) (8) (8) (8) (9) (9) 
line 283: clear
line 284: buildTree 8
(9) (7) (4) (4) (2) (10) (10) (9) 
line 285: inorderTraversal
(2) (4) (4) (7) (9) (9) (10) (10) 
line 286: insert (3)
line 287: inorderTraversal
(2) (3) (4) (4) (7) (9) (9) (10) (10) 
line 288: remove (2)
line 289: inorderTraversal
(3) (4) (4) (7) (9) (9) (10) (10) 
line 290: insert (5)
line 291: inorderTraversal
(3) (4) (4) (5) (7) (9) (9) (10) (10) 
line 292: insert (6)
line 293: inorderTraversal
(3) (4) (4) (5) (6) (7) (9) (9) (10) (10) 
line 294: insert (8)
line 295: inorderTraversal
(3) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) 
line 296: insert (10)
line 297: inorderTraversal
(3) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) (10) 
line 298: kNearestNeighbour 3 (7)
(6) (7) (8) 
line 299: inorderTraversal
(3) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) (10) 
line 300: insert (2)
line 301: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) (10) 
line 302: kNearestNeighbour 5 (2)
(2) (3) (4) (4) (5) 
line 303: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) (10) 
line 304: nearestNeighbour (4)
(4) 
line 305: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) (10) 
line 306: insert (8)
line 307: inorderTraversal
(2) (3) (4) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 308: remove (4)
line 309: inorderTraversal
(2) (3) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 310: insert (6)
line 311: inorderTraversal
(2) (3) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 312: insert (6)
line 313: inorderTraversal
(2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 314: nearestNeighbour (1)
(2) 
line 315: inorderTraversal
(2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 316: insert (1)
line 317: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 318: remove (10)
line 319: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 320: insert (7)
line 321: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 322: postorderTraversal
(1) (2) (3) (6) (6) (6) (5) (4) (7) (8) (8) (9) (10) (10) (9) (7) 
line 323: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 324: remove (7)
line 325: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 326: search (1)
TRUE
line 327: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 328: insert (7)
line 329: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 330: insert (6)
line 331: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 332: nearestNeighbour (3)
(3) 
line 333: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 334: kNearestNeighbour 9 (10)
(6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 335: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 336: nodeCount_height_leafCount
nodeCount=17;height=7;leafCount=6
line 337: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 338: nearestNeighbour (9)
(9) 
line 339: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 340: kNearestNeighbour 5 (4)
(3) (4) (5) (6) (6) 
line 341: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 342: nearestNeighbour (6)
(6) 
line 343: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 344: nearestNeighbour (10)
(10) 
line 345: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 346: kNearestNeighbour 6 (5)
(4) (5) (6) (6) (6) (6) 
line 347: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 348: nearestNeighbour (4)
(4) 
line 349: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 350: postorderTraversal
(1) (2) (3) (6) (6) (6) (6) (5) (4) (7) (8) (8) (9) (10) (10) (9) (7) 
line 351: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 352: insert (10)
line 353: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 354: insert (5)
line 355: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 356: nearestNeighbour (7)
(7) 
line 357: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 358: remove (10)
line 359: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 360: remove (4)
line 361: inorderTraversal
(1) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 362: insert (4)
line 363: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 364: remove (6)
line 365: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 366: insert (7)
line 367: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 368: nearestNeighbour (3)
(3) 
line 369: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 370: preorderTraversal
(7) (5) (3) (2) (1) (4) (5) (6) (6) (6) (9) (8) (7) (7) (8) (10) (9) (10) 
line 371: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 372: insert (2)
line 373: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 374: nearestNeighbour (8)
(8) 
line 375: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 376: insert (6)
line 377: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 378: nearestNeighbour (10)
(10) 
line 379: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 380: preorderTraversal
(7) (5) (3) (2) (1) (2) (4) (5) (6) (6) (6) (6) (9) (8) (7) (7) (8) (10) (9) (10) 
line 381: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 382: remove (6)
line 383: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 384: insert (9)
line 385: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 386: insert (4)
line 387: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 388: kNearestNeighbour 7 (6)
(5) (5) (6) (6) (6) (7) (7) 
line 389: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 390: clear
line 391: buildTree 17
(10) (1) (8) (8) (8) (8) (2) (10) (5) (5) (6) (9) (6) (3) (10) (2) (8) 
line 392: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 393: insert (3)
line 394: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 395: nearestNeighbour (3)
(3) 
line 396: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 397: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=7
line 398: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 399: remove (8)
line 400: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (9) (10) (10) (10) 
line 401: remove (4)
line 402: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (9) (10) (10) (10) 
line 403: nodeCount_height_leafCount
nodeCount=17;height=6;leafCount=7
line 404: inorderTraversal
(1) (2) (2) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (9) (10) (10) (10) 
line 405: insert (3)
line 406: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (9) (10) (10) (10) 
line 407: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=7
line 408: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (9) (10) (10) (10) 
line 409: nearestNeighbour (9)
(9) 
line 410: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (8) (9) (10) (10) (10) 
line 411: remove (8)
line 412: inorderTraversal
(1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 413: insert (3)
line 414: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 415: kNearestNeighbour 7 (1)
(1) (2) (2) (3) (3) (3) (3) 
line 416: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 417: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=7
line 418: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (8) (9) (10) (10) (10) 
line 419: preorderTraversal
(8) (3) (2) (1) (2) (5) (3) (3) (3) (6) (5) (6) (8) (9) (8) (10) (10) (10) 
line 420: postorderTraversal
(1) (2) (2) (3) (3) (3) (5) (6) (6) (5) (3) (8) (10) (10) (10) (9) (8) (8) 
line 421: clear
