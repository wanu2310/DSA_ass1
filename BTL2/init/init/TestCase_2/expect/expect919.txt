line 1: k=1
line 2: kNearestNeighbour 2 (5)

line 3: inorderTraversal

line 4: clear
line 5: buildTree 5
(4) (9) (6) (1) (9) 
line 6: inorderTraversal
(1) (4) (6) (9) (9) 
line 7: kNearestNeighbour 5 (6)
(1) (4) (6) (9) (9) 
line 8: inorderTraversal
(1) (4) (6) (9) (9) 
line 9: insert (8)
line 10: inorderTraversal
(1) (4) (6) (8) (9) (9) 
line 11: nearestNeighbour (9)
(9) 
line 12: inorderTraversal
(1) (4) (6) (8) (9) (9) 
line 13: nearestNeighbour (3)
(4) 
line 14: inorderTraversal
(1) (4) (6) (8) (9) (9) 
line 15: kNearestNeighbour 1 (4)
(4) 
line 16: inorderTraversal
(1) (4) (6) (8) (9) (9) 
line 17: insert (3)
line 18: inorderTraversal
(1) (3) (4) (6) (8) (9) (9) 
line 19: nearestNeighbour (3)
(3) 
line 20: inorderTraversal
(1) (3) (4) (6) (8) (9) (9) 
line 21: nearestNeighbour (3)
(3) 
line 22: inorderTraversal
(1) (3) (4) (6) (8) (9) (9) 
line 23: remove (1)
line 24: inorderTraversal
(3) (4) (6) (8) (9) (9) 
line 25: insert (9)
line 26: inorderTraversal
(3) (4) (6) (8) (9) (9) (9) 
line 27: insert (7)
line 28: inorderTraversal
(3) (4) (6) (7) (8) (9) (9) (9) 
line 29: nearestNeighbour (7)
(7) 
line 30: inorderTraversal
(3) (4) (6) (7) (8) (9) (9) (9) 
line 31: insert (2)
line 32: inorderTraversal
(2) (3) (4) (6) (7) (8) (9) (9) (9) 
line 33: nearestNeighbour (8)
(8) 
line 34: inorderTraversal
(2) (3) (4) (6) (7) (8) (9) (9) (9) 
line 35: insert (9)
line 36: inorderTraversal
(2) (3) (4) (6) (7) (8) (9) (9) (9) (9) 
line 37: remove (2)
line 38: inorderTraversal
(3) (4) (6) (7) (8) (9) (9) (9) (9) 
line 39: preorderTraversal
(6) (3) (4) (9) (8) (7) (9) (9) (9) 
line 40: inorderTraversal
(3) (4) (6) (7) (8) (9) (9) (9) (9) 
line 41: remove (9)
line 42: inorderTraversal
(3) (4) (6) (7) (8) (9) (9) (9) 
line 43: nearestNeighbour (4)
(4) 
line 44: inorderTraversal
(3) (4) (6) (7) (8) (9) (9) (9) 
line 45: insert (7)
line 46: inorderTraversal
(3) (4) (6) (7) (7) (8) (9) (9) (9) 
line 47: insert (3)
line 48: inorderTraversal
(3) (3) (4) (6) (7) (7) (8) (9) (9) (9) 
line 49: search (3)
TRUE
line 50: inorderTraversal
(3) (3) (4) (6) (7) (7) (8) (9) (9) (9) 
line 51: nearestNeighbour (10)
(9) 
line 52: inorderTraversal
(3) (3) (4) (6) (7) (7) (8) (9) (9) (9) 
line 53: insert (5)
line 54: inorderTraversal
(3) (3) (4) (5) (6) (7) (7) (8) (9) (9) (9) 
line 55: insert (8)
line 56: inorderTraversal
(3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 57: remove (6)
line 58: inorderTraversal
(3) (3) (4) (5) (7) (7) (8) (8) (9) (9) (9) 
line 59: clear
line 60: buildTree 8
(6) (3) (10) (10) (4) (7) (7) (8) 
line 61: inorderTraversal
(3) (4) (6) (7) (7) (8) (10) (10) 
line 62: kNearestNeighbour 6 (9)
(6) (7) (7) (8) (10) (10) 
line 63: inorderTraversal
(3) (4) (6) (7) (7) (8) (10) (10) 
line 64: kNearestNeighbour 6 (1)
(3) (4) (6) (7) (7) (8) 
line 65: inorderTraversal
(3) (4) (6) (7) (7) (8) (10) (10) 
line 66: nearestNeighbour (9)
(10) 
line 67: inorderTraversal
(3) (4) (6) (7) (7) (8) (10) (10) 
line 68: preorderTraversal
(7) (4) (3) (6) (8) (7) (10) (10) 
line 69: inorderTraversal
(3) (4) (6) (7) (7) (8) (10) (10) 
line 70: insert (8)
line 71: inorderTraversal
(3) (4) (6) (7) (7) (8) (8) (10) (10) 
line 72: insert (8)
line 73: inorderTraversal
(3) (4) (6) (7) (7) (8) (8) (8) (10) (10) 
line 74: insert (6)
line 75: inorderTraversal
(3) (4) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 76: kNearestNeighbour 9 (7)
(6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 77: inorderTraversal
(3) (4) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 78: kNearestNeighbour 5 (1)
(3) (4) (6) (6) (7) 
line 79: inorderTraversal
(3) (4) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 80: kNearestNeighbour 3 (2)
(3) (4) (6) 
line 81: inorderTraversal
(3) (4) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 82: kNearestNeighbour 3 (6)
(6) (6) (7) 
line 83: inorderTraversal
(3) (4) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 84: insert (3)
line 85: inorderTraversal
(3) (3) (4) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 86: nearestNeighbour (2)
(3) 
line 87: inorderTraversal
(3) (3) (4) (6) (6) (7) (7) (8) (8) (8) (10) (10) 
line 88: clear
line 89: buildTree 16
(4) (10) (9) (2) (4) (4) (1) (1) (5) (7) (6) (5) (1) (3) (1) (3) 
line 90: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (9) (10) 
line 91: nearestNeighbour (3)
(3) 
line 92: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (9) (10) 
line 93: insert (5)
line 94: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 95: remove (4)
line 96: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 97: insert (5)
line 98: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (9) (10) 
line 99: nearestNeighbour (7)
(7) 
line 100: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (9) (10) 
line 101: insert (1)
line 102: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (9) (10) 
line 103: insert (7)
line 104: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (9) (10) 
line 105: insert (1)
line 106: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (9) (10) 
line 107: nearestNeighbour (8)
(7) 
line 108: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (9) (10) 
line 109: kNearestNeighbour 4 (10)
(7) (7) (9) (10) 
line 110: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (9) (10) 
line 111: insert (6)
line 112: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (9) (10) 
line 113: clear
line 114: buildTree 4
(2) (5) (4) (1) 
line 115: inorderTraversal
(1) (2) (4) (5) 
line 116: kNearestNeighbour 7 (6)
(1) (2) (4) (5) 
line 117: inorderTraversal
(1) (2) (4) (5) 
line 118: insert (9)
line 119: inorderTraversal
(1) (2) (4) (5) (9) 
line 120: clear
line 121: buildTree 17
(7) (7) (8) (3) (5) (8) (1) (5) (5) (10) (6) (2) (9) (10) (4) (4) (3) 
line 122: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 123: nearestNeighbour (10)
(10) 
line 124: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 125: kNearestNeighbour 7 (6)
(5) (5) (5) (6) (7) (7) (8) 
line 126: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 127: kNearestNeighbour 9 (4)
(2) (3) (3) (4) (4) (5) (5) (5) (6) 
line 128: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 129: preorderTraversal
(5) (3) (1) (2) (4) (3) (4) (7) (5) (5) (6) (8) (7) (9) (8) (10) (10) 
line 130: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 131: nearestNeighbour (4)
(4) 
line 132: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 133: nearestNeighbour (1)
(1) 
line 134: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 135: preorderTraversal
(5) (3) (1) (2) (4) (3) (4) (7) (5) (5) (6) (8) (7) (9) (8) (10) (10) 
line 136: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 137: insert (8)
line 138: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 139: insert (9)
line 140: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 141: remove (5)
line 142: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 143: kNearestNeighbour 3 (4)
(3) (4) (4) 
line 144: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 145: clear
line 146: buildTree 17
(1) (3) (1) (3) (7) (2) (2) (1) (2) (5) (10) (6) (2) (8) (6) (4) (7) 
line 147: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (10) 
line 148: nearestNeighbour (10)
(10) 
line 149: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (10) 
line 150: nearestNeighbour (1)
(1) 
line 151: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (10) 
line 152: insert (7)
line 153: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (7) (8) (10) 
line 154: nearestNeighbour (8)
(8) 
line 155: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (7) (8) (10) 
line 156: clear
line 157: buildTree 15
(2) (7) (8) (1) (10) (7) (5) (6) (1) (4) (3) (3) (10) (8) (5) 
line 158: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (10) (10) 
line 159: insert (7)
line 160: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (10) (10) 
line 161: insert (2)
line 162: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (10) (10) 
line 163: insert (2)
line 164: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (10) (10) 
line 165: nearestNeighbour (9)
(8) 
line 166: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (10) (10) 
line 167: insert (9)
line 168: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 169: remove (7)
line 170: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 171: kNearestNeighbour 4 (2)
(2) (2) (2) (3) 
line 172: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 173: insert (6)
line 174: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 175: nearestNeighbour (4)
(4) 
line 176: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 177: insert (5)
line 178: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 179: clear
line 180: buildTree 16
(4) (3) (7) (10) (2) (2) (8) (2) (3) (5) (4) (10) (7) (3) (5) (10) 
line 181: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (7) (7) (8) (10) (10) (10) 
line 182: insert (3)
line 183: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (7) (7) (8) (10) (10) (10) 
line 184: remove (7)
line 185: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 186: nearestNeighbour (1)
(2) 
line 187: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 188: nearestNeighbour (4)
(4) 
line 189: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 190: insert (4)
line 191: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 192: search (2)
TRUE
line 193: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 194: kNearestNeighbour 9 (5)
(3) (3) (3) (4) (4) (4) (5) (5) (7) 
line 195: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 196: kNearestNeighbour 6 (6)
(4) (4) (5) (5) (7) (8) 
line 197: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 198: insert (1)
line 199: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 200: clear
line 201: buildTree 5
(4) (7) (2) (3) (5) 
line 202: inorderTraversal
(2) (3) (4) (5) (7) 
line 203: clear
line 204: buildTree 11
(9) (5) (9) (8) (3) (7) (10) (6) (7) (7) (4) 
line 205: inorderTraversal
(3) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) 
line 206: nearestNeighbour (8)
(8) 
line 207: inorderTraversal
(3) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) 
line 208: clear
line 209: buildTree 10
(8) (10) (9) (3) (9) (6) (10) (10) (7) (10) 
line 210: inorderTraversal
(3) (6) (7) (8) (9) (9) (10) (10) (10) (10) 
line 211: clear
line 212: buildTree 16
(4) (7) (7) (2) (5) (2) (7) (1) (9) (6) (1) (10) (6) (5) (8) (3) 
line 213: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (6) (6) (7) (7) (7) (8) (9) (10) 
line 214: insert (6)
line 215: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (10) 
line 216: remove (4)
line 217: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (10) 
line 218: clear
line 219: buildTree 1
(3) 
line 220: inorderTraversal
(3) 
line 221: clear
line 222: buildTree 5
(8) (8) (5) (7) (3) 
line 223: inorderTraversal
(3) (5) (7) (8) (8) 
line 224: nearestNeighbour (9)
(8) 
line 225: inorderTraversal
(3) (5) (7) (8) (8) 
line 226: nearestNeighbour (9)
(8) 
line 227: inorderTraversal
(3) (5) (7) (8) (8) 
line 228: remove (6)
line 229: inorderTraversal
(3) (5) (7) (8) (8) 
line 230: clear
line 231: buildTree 6
(6) (1) (7) (10) (3) (6) 
line 232: inorderTraversal
(1) (3) (6) (6) (7) (10) 
line 233: insert (5)
line 234: inorderTraversal
(1) (3) (5) (6) (6) (7) (10) 
line 235: kNearestNeighbour 2 (6)
(6) (6) 
line 236: inorderTraversal
(1) (3) (5) (6) (6) (7) (10) 
line 237: insert (9)
line 238: inorderTraversal
(1) (3) (5) (6) (6) (7) (9) (10) 
line 239: insert (9)
line 240: inorderTraversal
(1) (3) (5) (6) (6) (7) (9) (9) (10) 
line 241: kNearestNeighbour 4 (5)
(3) (5) (6) (6) 
line 242: inorderTraversal
(1) (3) (5) (6) (6) (7) (9) (9) (10) 
line 243: nearestNeighbour (6)
(6) 
line 244: inorderTraversal
(1) (3) (5) (6) (6) (7) (9) (9) (10) 
line 245: nearestNeighbour (1)
(1) 
line 246: inorderTraversal
(1) (3) (5) (6) (6) (7) (9) (9) (10) 
line 247: nearestNeighbour (5)
(5) 
line 248: inorderTraversal
(1) (3) (5) (6) (6) (7) (9) (9) (10) 
line 249: remove (10)
line 250: inorderTraversal
(1) (3) (5) (6) (6) (7) (9) (9) 
line 251: kNearestNeighbour 2 (7)
(6) (7) 
line 252: inorderTraversal
(1) (3) (5) (6) (6) (7) (9) (9) 
line 253: clear
line 254: buildTree 4
(1) (8) (5) (9) 
line 255: inorderTraversal
(1) (5) (8) (9) 
line 256: kNearestNeighbour 3 (4)
(1) (5) (8) 
line 257: inorderTraversal
(1) (5) (8) (9) 
line 258: search (1)
TRUE
line 259: inorderTraversal
(1) (5) (8) (9) 
line 260: insert (2)
line 261: inorderTraversal
(1) (2) (5) (8) (9) 
line 262: postorderTraversal
(2) (1) (9) (8) (5) 
line 263: inorderTraversal
(1) (2) (5) (8) (9) 
line 264: insert (3)
line 265: inorderTraversal
(1) (2) (3) (5) (8) (9) 
line 266: clear
line 267: buildTree 7
(8) (10) (1) (9) (3) (1) (9) 
line 268: inorderTraversal
(1) (1) (3) (8) (9) (9) (10) 
line 269: remove (3)
line 270: inorderTraversal
(1) (1) (8) (9) (9) (10) 
line 271: insert (7)
line 272: inorderTraversal
(1) (1) (7) (8) (9) (9) (10) 
line 273: nearestNeighbour (7)
(7) 
line 274: inorderTraversal
(1) (1) (7) (8) (9) (9) (10) 
line 275: insert (8)
line 276: inorderTraversal
(1) (1) (7) (8) (8) (9) (9) (10) 
line 277: insert (4)
line 278: inorderTraversal
(1) (1) (4) (7) (8) (8) (9) (9) (10) 
line 279: remove (9)
line 280: inorderTraversal
(1) (1) (4) (7) (8) (8) (9) (10) 
line 281: remove (8)
line 282: inorderTraversal
(1) (1) (4) (7) (8) (9) (10) 
line 283: insert (9)
line 284: inorderTraversal
(1) (1) (4) (7) (8) (9) (9) (10) 
line 285: insert (4)
line 286: inorderTraversal
(1) (1) (4) (4) (7) (8) (9) (9) (10) 
line 287: insert (3)
line 288: inorderTraversal
(1) (1) (3) (4) (4) (7) (8) (9) (9) (10) 
line 289: insert (6)
line 290: inorderTraversal
(1) (1) (3) (4) (4) (6) (7) (8) (9) (9) (10) 
line 291: clear
line 292: buildTree 7
(5) (9) (2) (8) (3) (9) (3) 
line 293: inorderTraversal
(2) (3) (3) (5) (8) (9) (9) 
line 294: kNearestNeighbour 8 (7)
(2) (3) (3) (5) (8) (9) (9) 
line 295: inorderTraversal
(2) (3) (3) (5) (8) (9) (9) 
line 296: insert (7)
line 297: inorderTraversal
(2) (3) (3) (5) (7) (8) (9) (9) 
line 298: insert (4)
line 299: inorderTraversal
(2) (3) (3) (4) (5) (7) (8) (9) (9) 
line 300: remove (8)
line 301: inorderTraversal
(2) (3) (3) (4) (5) (7) (9) (9) 
line 302: remove (9)
line 303: inorderTraversal
(2) (3) (3) (4) (5) (7) (9) 
line 304: insert (5)
line 305: inorderTraversal
(2) (3) (3) (4) (5) (5) (7) (9) 
line 306: insert (1)
line 307: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (9) 
line 308: insert (8)
line 309: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (8) (9) 
line 310: postorderTraversal
(1) (2) (4) (3) (3) (5) (8) (7) (9) (5) 
line 311: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (8) (9) 
line 312: insert (6)
line 313: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (6) (7) (8) (9) 
line 314: kNearestNeighbour 2 (3)
(3) (3) 
line 315: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (6) (7) (8) (9) 
line 316: clear
line 317: buildTree 1
(10) 
line 318: inorderTraversal
(10) 
line 319: insert (3)
line 320: inorderTraversal
(3) (10) 
line 321: insert (9)
line 322: inorderTraversal
(3) (9) (10) 
line 323: kNearestNeighbour 5 (3)
(3) (9) (10) 
line 324: inorderTraversal
(3) (9) (10) 
line 325: clear
line 326: buildTree 4
(1) (4) (3) (7) 
line 327: inorderTraversal
(1) (3) (4) (7) 
line 328: nodeCount_height_leafCount
nodeCount=4;height=3;leafCount=2
line 329: inorderTraversal
(1) (3) (4) (7) 
line 330: remove (3)
line 331: inorderTraversal
(1) (4) (7) 
line 332: nearestNeighbour (1)
(1) 
line 333: inorderTraversal
(1) (4) (7) 
line 334: nearestNeighbour (1)
(1) 
line 335: inorderTraversal
(1) (4) (7) 
line 336: nearestNeighbour (7)
(7) 
line 337: inorderTraversal
(1) (4) (7) 
line 338: insert (10)
line 339: inorderTraversal
(1) (4) (7) (10) 
line 340: nearestNeighbour (8)
(7) 
line 341: inorderTraversal
(1) (4) (7) (10) 
line 342: kNearestNeighbour 2 (8)
(7) (10) 
line 343: inorderTraversal
(1) (4) (7) (10) 
line 344: kNearestNeighbour 3 (4)
(1) (4) (7) 
line 345: inorderTraversal
(1) (4) (7) (10) 
line 346: kNearestNeighbour 1 (1)
(1) 
line 347: inorderTraversal
(1) (4) (7) (10) 
line 348: insert (4)
line 349: inorderTraversal
(1) (4) (4) (7) (10) 
line 350: search (5)
FALSE
line 351: inorderTraversal
(1) (4) (4) (7) (10) 
line 352: insert (1)
line 353: inorderTraversal
(1) (1) (4) (4) (7) (10) 
line 354: insert (10)
line 355: inorderTraversal
(1) (1) (4) (4) (7) (10) (10) 
line 356: kNearestNeighbour 6 (2)
(1) (1) (4) (4) (7) (10) 
line 357: inorderTraversal
(1) (1) (4) (4) (7) (10) (10) 
line 358: remove (7)
line 359: inorderTraversal
(1) (1) (4) (4) (10) (10) 
line 360: preorderTraversal
(4) (1) (1) (10) (4) (10) 
line 361: inorderTraversal
(1) (1) (4) (4) (10) (10) 
line 362: nearestNeighbour (1)
(1) 
line 363: inorderTraversal
(1) (1) (4) (4) (10) (10) 
line 364: kNearestNeighbour 7 (10)
(1) (1) (4) (4) (10) (10) 
line 365: inorderTraversal
(1) (1) (4) (4) (10) (10) 
line 366: kNearestNeighbour 4 (3)
(1) (1) (4) (4) 
line 367: inorderTraversal
(1) (1) (4) (4) (10) (10) 
line 368: search (10)
TRUE
line 369: inorderTraversal
(1) (1) (4) (4) (10) (10) 
line 370: insert (4)
line 371: inorderTraversal
(1) (1) (4) (4) (4) (10) (10) 
line 372: insert (2)
line 373: inorderTraversal
(1) (1) (2) (4) (4) (4) (10) (10) 
line 374: clear
line 375: buildTree 5
(2) (8) (5) (8) (2) 
line 376: inorderTraversal
(2) (2) (5) (8) (8) 
line 377: insert (3)
line 378: inorderTraversal
(2) (2) (3) (5) (8) (8) 
line 379: insert (8)
line 380: inorderTraversal
(2) (2) (3) (5) (8) (8) (8) 
line 381: insert (3)
line 382: inorderTraversal
(2) (2) (3) (3) (5) (8) (8) (8) 
line 383: postorderTraversal
(3) (3) (2) (2) (8) (8) (8) (5) 
line 384: inorderTraversal
(2) (2) (3) (3) (5) (8) (8) (8) 
line 385: nearestNeighbour (2)
(2) 
line 386: inorderTraversal
(2) (2) (3) (3) (5) (8) (8) (8) 
line 387: clear
line 388: buildTree 7
(1) (6) (7) (8) (7) (5) (8) 
line 389: inorderTraversal
(1) (5) (6) (7) (7) (8) (8) 
line 390: insert (8)
line 391: inorderTraversal
(1) (5) (6) (7) (7) (8) (8) (8) 
line 392: kNearestNeighbour 1 (1)
(1) 
line 393: inorderTraversal
(1) (5) (6) (7) (7) (8) (8) (8) 
line 394: nearestNeighbour (7)
(7) 
line 395: inorderTraversal
(1) (5) (6) (7) (7) (8) (8) (8) 
line 396: remove (6)
line 397: inorderTraversal
(1) (5) (7) (7) (8) (8) (8) 
line 398: kNearestNeighbour 10 (4)
(1) (5) (7) (7) (8) (8) (8) 
line 399: inorderTraversal
(1) (5) (7) (7) (8) (8) (8) 
line 400: nearestNeighbour (6)
(5) 
line 401: inorderTraversal
(1) (5) (7) (7) (8) (8) (8) 
line 402: clear
line 403: buildTree 15
(8) (10) (1) (10) (9) (10) (9) (10) (6) (9) (9) (5) (5) (3) (5) 
line 404: inorderTraversal
(1) (3) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 405: nearestNeighbour (2)
(3) 
line 406: inorderTraversal
(1) (3) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 407: kNearestNeighbour 10 (8)
(6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 408: inorderTraversal
(1) (3) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 409: kNearestNeighbour 7 (6)
(3) (5) (5) (5) (6) (8) (9) 
line 410: inorderTraversal
(1) (3) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 411: search (5)
TRUE
line 412: inorderTraversal
(1) (3) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 413: kNearestNeighbour 6 (6)
(3) (5) (5) (5) (6) (8) 
line 414: inorderTraversal
(1) (3) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 415: insert (4)
line 416: inorderTraversal
(1) (3) (4) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 417: insert (2)
line 418: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 419: insert (3)
line 420: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 421: kNearestNeighbour 1 (6)
(6) 
line 422: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 423: kNearestNeighbour 1 (3)
(3) 
line 424: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 425: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=6
line 426: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (6) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 427: preorderTraversal
(9) (5) (1) (3) (2) (4) (3) (5) (6) (5) (8) (10) (9) (9) (9) (10) (10) (10) 
line 428: postorderTraversal
(2) (3) (4) (3) (1) (5) (8) (6) (5) (5) (9) (9) (9) (10) (10) (10) (10) (9) 
line 429: clear
