line 1: k=1
line 2: postorderTraversal

line 3: inorderTraversal

line 4: kNearestNeighbour 6 (3)

line 5: inorderTraversal

line 6: insert (4)
line 7: inorderTraversal
(4) 
line 8: kNearestNeighbour 2 (5)
(4) 
line 9: inorderTraversal
(4) 
line 10: search (4)
TRUE
line 11: inorderTraversal
(4) 
line 12: postorderTraversal
(4) 
line 13: inorderTraversal
(4) 
line 14: nearestNeighbour (7)
(4) 
line 15: inorderTraversal
(4) 
line 16: nearestNeighbour (9)
(4) 
line 17: inorderTraversal
(4) 
line 18: insert (9)
line 19: inorderTraversal
(4) (9) 
line 20: insert (7)
line 21: inorderTraversal
(4) (7) (9) 
line 22: kNearestNeighbour 1 (5)
(4) 
line 23: inorderTraversal
(4) (7) (9) 
line 24: nearestNeighbour (7)
(7) 
line 25: inorderTraversal
(4) (7) (9) 
line 26: insert (3)
line 27: inorderTraversal
(3) (4) (7) (9) 
line 28: preorderTraversal
(4) (3) (9) (7) 
line 29: inorderTraversal
(3) (4) (7) (9) 
line 30: nearestNeighbour (4)
(4) 
line 31: inorderTraversal
(3) (4) (7) (9) 
line 32: clear
line 33: buildTree 15
(1) (9) (3) (9) (7) (9) (4) (4) (3) (3) (1) (1) (5) (4) (7) 
line 34: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (7) (7) (9) (9) (9) 
line 35: remove (4)
line 36: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (7) (7) (9) (9) (9) 
line 37: nearestNeighbour (3)
(3) 
line 38: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (7) (7) (9) (9) (9) 
line 39: kNearestNeighbour 2 (4)
(4) (4) 
line 40: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (7) (7) (9) (9) (9) 
line 41: clear
line 42: buildTree 2
(6) (5) 
line 43: inorderTraversal
(5) (6) 
line 44: kNearestNeighbour 6 (10)
(5) (6) 
line 45: inorderTraversal
(5) (6) 
line 46: kNearestNeighbour 5 (6)
(5) (6) 
line 47: inorderTraversal
(5) (6) 
line 48: kNearestNeighbour 5 (3)
(5) (6) 
line 49: inorderTraversal
(5) (6) 
line 50: clear
line 51: buildTree 8
(6) (6) (3) (7) (5) (5) (9) (4) 
line 52: inorderTraversal
(3) (4) (5) (5) (6) (6) (7) (9) 
line 53: remove (7)
line 54: inorderTraversal
(3) (4) (5) (5) (6) (6) (9) 
line 55: kNearestNeighbour 7 (10)
(3) (4) (5) (5) (6) (6) (9) 
line 56: inorderTraversal
(3) (4) (5) (5) (6) (6) (9) 
line 57: nearestNeighbour (8)
(9) 
line 58: inorderTraversal
(3) (4) (5) (5) (6) (6) (9) 
line 59: nearestNeighbour (10)
(9) 
line 60: inorderTraversal
(3) (4) (5) (5) (6) (6) (9) 
line 61: search (3)
TRUE
line 62: inorderTraversal
(3) (4) (5) (5) (6) (6) (9) 
line 63: nearestNeighbour (4)
(4) 
line 64: inorderTraversal
(3) (4) (5) (5) (6) (6) (9) 
line 65: insert (9)
line 66: inorderTraversal
(3) (4) (5) (5) (6) (6) (9) (9) 
line 67: kNearestNeighbour 1 (2)
(3) 
line 68: inorderTraversal
(3) (4) (5) (5) (6) (6) (9) (9) 
line 69: insert (8)
line 70: inorderTraversal
(3) (4) (5) (5) (6) (6) (8) (9) (9) 
line 71: insert (6)
line 72: inorderTraversal
(3) (4) (5) (5) (6) (6) (6) (8) (9) (9) 
line 73: kNearestNeighbour 9 (3)
(3) (4) (5) (5) (6) (6) (6) (8) (9) 
line 74: inorderTraversal
(3) (4) (5) (5) (6) (6) (6) (8) (9) (9) 
line 75: insert (1)
line 76: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (6) (8) (9) (9) 
line 77: insert (9)
line 78: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (6) (8) (9) (9) (9) 
line 79: remove (5)
line 80: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (8) (9) (9) (9) 
line 81: remove (4)
line 82: inorderTraversal
(1) (3) (5) (6) (6) (6) (8) (9) (9) (9) 
line 83: kNearestNeighbour 6 (6)
(5) (6) (6) (6) (8) (9) 
line 84: inorderTraversal
(1) (3) (5) (6) (6) (6) (8) (9) (9) (9) 
line 85: remove (3)
line 86: inorderTraversal
(1) (5) (6) (6) (6) (8) (9) (9) (9) 
line 87: preorderTraversal
(5) (1) (6) (9) (6) (8) (6) (9) (9) 
line 88: inorderTraversal
(1) (5) (6) (6) (6) (8) (9) (9) (9) 
line 89: insert (4)
line 90: inorderTraversal
(1) (4) (5) (6) (6) (6) (8) (9) (9) (9) 
line 91: nearestNeighbour (6)
(6) 
line 92: inorderTraversal
(1) (4) (5) (6) (6) (6) (8) (9) (9) (9) 
line 93: kNearestNeighbour 7 (3)
(1) (4) (5) (6) (6) (6) (8) 
line 94: inorderTraversal
(1) (4) (5) (6) (6) (6) (8) (9) (9) (9) 
line 95: clear
line 96: buildTree 2
(4) (1) 
line 97: inorderTraversal
(1) (4) 
line 98: remove (4)
line 99: inorderTraversal
(1) 
line 100: nearestNeighbour (4)
(1) 
line 101: inorderTraversal
(1) 
line 102: nearestNeighbour (1)
(1) 
line 103: inorderTraversal
(1) 
line 104: remove (1)
line 105: inorderTraversal

line 106: kNearestNeighbour 3 (2)

line 107: inorderTraversal

line 108: kNearestNeighbour 4 (7)

line 109: inorderTraversal

line 110: nearestNeighbour (1)

line 111: inorderTraversal

line 112: nearestNeighbour (6)

line 113: inorderTraversal

line 114: remove (1)
line 115: inorderTraversal

line 116: nearestNeighbour (3)

line 117: inorderTraversal

line 118: remove (10)
line 119: inorderTraversal

line 120: nearestNeighbour (6)

line 121: inorderTraversal

line 122: insert (10)
line 123: inorderTraversal
(10) 
line 124: kNearestNeighbour 6 (4)
(10) 
line 125: inorderTraversal
(10) 
line 126: insert (2)
line 127: inorderTraversal
(2) (10) 
line 128: remove (1)
line 129: inorderTraversal
(2) (10) 
line 130: insert (2)
line 131: inorderTraversal
(2) (2) (10) 
line 132: insert (4)
line 133: inorderTraversal
(2) (2) (4) (10) 
line 134: insert (3)
line 135: inorderTraversal
(2) (2) (3) (4) (10) 
line 136: search (2)
TRUE
line 137: inorderTraversal
(2) (2) (3) (4) (10) 
line 138: insert (4)
line 139: inorderTraversal
(2) (2) (3) (4) (4) (10) 
line 140: insert (3)
line 141: inorderTraversal
(2) (2) (3) (3) (4) (4) (10) 
line 142: nearestNeighbour (3)
(3) 
line 143: inorderTraversal
(2) (2) (3) (3) (4) (4) (10) 
line 144: insert (8)
line 145: inorderTraversal
(2) (2) (3) (3) (4) (4) (8) (10) 
line 146: clear
line 147: buildTree 19
(4) (4) (2) (8) (1) (3) (6) (5) (8) (6) (6) (5) (3) (4) (4) (10) (3) (4) (3) 
line 148: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (8) (8) (10) 
line 149: insert (2)
line 150: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (8) (8) (10) 
line 151: nearestNeighbour (6)
(6) 
line 152: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (8) (8) (10) 
line 153: kNearestNeighbour 7 (4)
(4) (4) (4) (4) (4) (5) (5) 
line 154: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (8) (8) (10) 
line 155: clear
line 156: buildTree 10
(4) (4) (9) (4) (6) (8) (5) (8) (7) (9) 
line 157: inorderTraversal
(4) (4) (4) (5) (6) (7) (8) (8) (9) (9) 
line 158: nearestNeighbour (10)
(9) 
line 159: inorderTraversal
(4) (4) (4) (5) (6) (7) (8) (8) (9) (9) 
line 160: insert (1)
line 161: inorderTraversal
(1) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) 
line 162: insert (9)
line 163: inorderTraversal
(1) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) 
line 164: remove (4)
line 165: inorderTraversal
(1) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) 
line 166: insert (10)
line 167: inorderTraversal
(1) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) (10) 
line 168: insert (10)
line 169: inorderTraversal
(1) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) (10) (10) 
line 170: clear
line 171: buildTree 13
(3) (2) (6) (3) (7) (2) (4) (1) (6) (8) (5) (6) (5) 
line 172: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) 
line 173: insert (5)
line 174: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) 
line 175: insert (8)
line 176: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) 
line 177: clear
line 178: buildTree 10
(9) (9) (3) (8) (1) (2) (7) (6) (2) (5) 
line 179: inorderTraversal
(1) (2) (2) (3) (5) (6) (7) (8) (9) (9) 
line 180: kNearestNeighbour 2 (4)
(3) (5) 
line 181: inorderTraversal
(1) (2) (2) (3) (5) (6) (7) (8) (9) (9) 
line 182: remove (2)
line 183: inorderTraversal
(1) (2) (3) (5) (6) (7) (8) (9) (9) 
line 184: kNearestNeighbour 1 (6)
(6) 
line 185: inorderTraversal
(1) (2) (3) (5) (6) (7) (8) (9) (9) 
line 186: clear
line 187: buildTree 6
(2) (3) (10) (8) (9) (2) 
line 188: inorderTraversal
(2) (2) (3) (8) (9) (10) 
line 189: insert (5)
line 190: inorderTraversal
(2) (2) (3) (5) (8) (9) (10) 
line 191: insert (7)
line 192: inorderTraversal
(2) (2) (3) (5) (7) (8) (9) (10) 
line 193: preorderTraversal
(3) (2) (2) (9) (8) (5) (7) (10) 
line 194: inorderTraversal
(2) (2) (3) (5) (7) (8) (9) (10) 
line 195: search (5)
TRUE
line 196: inorderTraversal
(2) (2) (3) (5) (7) (8) (9) (10) 
line 197: nearestNeighbour (9)
(9) 
line 198: inorderTraversal
(2) (2) (3) (5) (7) (8) (9) (10) 
line 199: insert (3)
line 200: inorderTraversal
(2) (2) (3) (3) (5) (7) (8) (9) (10) 
line 201: nearestNeighbour (7)
(7) 
line 202: inorderTraversal
(2) (2) (3) (3) (5) (7) (8) (9) (10) 
line 203: insert (3)
line 204: inorderTraversal
(2) (2) (3) (3) (3) (5) (7) (8) (9) (10) 
line 205: clear
line 206: buildTree 12
(8) (5) (5) (10) (10) (5) (10) (6) (6) (7) (10) (7) 
line 207: inorderTraversal
(5) (5) (5) (6) (6) (7) (7) (8) (10) (10) (10) (10) 
line 208: insert (6)
line 209: inorderTraversal
(5) (5) (5) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) 
line 210: remove (9)
line 211: inorderTraversal
(5) (5) (5) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) 
line 212: nearestNeighbour (3)
(5) 
line 213: inorderTraversal
(5) (5) (5) (6) (6) (6) (7) (7) (8) (10) (10) (10) (10) 
line 214: remove (7)
line 215: inorderTraversal
(5) (5) (5) (6) (6) (6) (7) (8) (10) (10) (10) (10) 
line 216: insert (2)
line 217: inorderTraversal
(2) (5) (5) (5) (6) (6) (6) (7) (8) (10) (10) (10) (10) 
line 218: nearestNeighbour (8)
(8) 
line 219: inorderTraversal
(2) (5) (5) (5) (6) (6) (6) (7) (8) (10) (10) (10) (10) 
line 220: insert (3)
line 221: inorderTraversal
(2) (3) (5) (5) (5) (6) (6) (6) (7) (8) (10) (10) (10) (10) 
line 222: kNearestNeighbour 4 (7)
(6) (6) (7) (8) 
line 223: inorderTraversal
(2) (3) (5) (5) (5) (6) (6) (6) (7) (8) (10) (10) (10) (10) 
line 224: clear
line 225: buildTree 16
(4) (1) (7) (6) (9) (1) (10) (4) (9) (7) (10) (2) (3) (9) (10) (5) 
line 226: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 227: insert (1)
line 228: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (9) (9) (9) (10) (10) (10) 
line 229: insert (7)
line 230: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (10) (10) (10) 
line 231: insert (9)
line 232: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 233: nearestNeighbour (4)
(4) 
line 234: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 235: nearestNeighbour (3)
(3) 
line 236: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 237: remove (3)
line 238: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 239: insert (9)
line 240: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (9) (10) (10) (10) 
line 241: remove (9)
line 242: inorderTraversal
(1) (1) (1) (2) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 243: insert (4)
line 244: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 245: nearestNeighbour (4)
(4) 
line 246: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 247: nearestNeighbour (3)
(2) 
line 248: inorderTraversal
(1) (1) (1) (2) (4) (4) (4) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) (10) (10) 
line 249: clear
line 250: buildTree 14
(5) (2) (3) (3) (5) (5) (8) (6) (7) (4) (8) (5) (1) (6) 
line 251: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) 
line 252: clear
line 253: buildTree 3
(7) (4) (5) 
line 254: inorderTraversal
(4) (5) (7) 
line 255: clear
line 256: buildTree 16
(6) (1) (7) (4) (10) (6) (9) (1) (7) (3) (4) (10) (5) (1) (4) (6) 
line 257: inorderTraversal
(1) (1) (1) (3) (4) (4) (4) (5) (6) (6) (6) (7) (7) (9) (10) (10) 
line 258: insert (5)
line 259: inorderTraversal
(1) (1) (1) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (9) (10) (10) 
line 260: clear
line 261: buildTree 14
(10) (2) (9) (2) (1) (10) (1) (6) (9) (6) (1) (4) (4) (5) 
line 262: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (5) (6) (6) (9) (9) (10) (10) 
line 263: insert (7)
line 264: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (5) (6) (6) (7) (9) (9) (10) (10) 
line 265: clear
line 266: buildTree 17
(1) (7) (2) (7) (7) (5) (7) (3) (3) (9) (8) (5) (9) (7) (1) (2) (7) 
line 267: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (7) (7) (7) (7) (7) (7) (8) (9) (9) 
line 268: kNearestNeighbour 8 (8)
(7) (7) (7) (7) (7) (8) (9) (9) 
line 269: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (7) (7) (7) (7) (7) (7) (8) (9) (9) 
line 270: insert (8)
line 271: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) 
line 272: nearestNeighbour (2)
(2) 
line 273: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) 
line 274: insert (7)
line 275: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) 
line 276: insert (2)
line 277: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) 
line 278: insert (9)
line 279: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) 
line 280: insert (2)
line 281: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) 
line 282: insert (8)
line 283: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 284: insert (4)
line 285: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 286: clear
line 287: buildTree 20
(9) (3) (7) (5) (10) (5) (7) (3) (3) (2) (2) (5) (6) (9) (3) (6) (7) (7) (3) (7) 
line 288: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (9) (9) (10) 
line 289: kNearestNeighbour 10 (8)
(6) (6) (7) (7) (7) (7) (7) (9) (9) (10) 
line 290: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (9) (9) (10) 
line 291: insert (7)
line 292: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 293: insert (5)
line 294: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 295: insert (2)
line 296: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 297: kNearestNeighbour 2 (2)
(2) (2) 
line 298: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 299: insert (5)
line 300: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (5) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 301: insert (4)
line 302: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 303: nearestNeighbour (6)
(6) 
line 304: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 305: nodeCount_height_leafCount
nodeCount=25;height=8;leafCount=6
line 306: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 307: nearestNeighbour (9)
(9) 
line 308: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 309: kNearestNeighbour 8 (5)
(4) (5) (5) (5) (5) (5) (6) (6) 
line 310: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) 
line 311: insert (10)
line 312: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) (10) 
line 313: insert (6)
line 314: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) (10) 
line 315: remove (3)
line 316: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) (10) 
line 317: kNearestNeighbour 2 (8)
(7) (7) 
line 318: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) (10) 
line 319: insert (6)
line 320: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) (10) 
line 321: nearestNeighbour (9)
(9) 
line 322: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (7) (9) (9) (10) (10) 
line 323: clear
line 324: buildTree 2
(4) (3) 
line 325: inorderTraversal
(3) (4) 
line 326: insert (8)
line 327: inorderTraversal
(3) (4) (8) 
line 328: insert (9)
line 329: inorderTraversal
(3) (4) (8) (9) 
line 330: insert (4)
line 331: inorderTraversal
(3) (4) (4) (8) (9) 
line 332: nearestNeighbour (4)
(4) 
line 333: inorderTraversal
(3) (4) (4) (8) (9) 
line 334: clear
line 335: buildTree 9
(8) (3) (9) (6) (1) (5) (4) (8) (8) 
line 336: inorderTraversal
(1) (3) (4) (5) (6) (8) (8) (8) (9) 
line 337: insert (10)
line 338: inorderTraversal
(1) (3) (4) (5) (6) (8) (8) (8) (9) (10) 
line 339: remove (10)
line 340: inorderTraversal
(1) (3) (4) (5) (6) (8) (8) (8) (9) 
line 341: clear
line 342: buildTree 2
(3) (4) 
line 343: inorderTraversal
(3) (4) 
line 344: remove (4)
line 345: inorderTraversal
(3) 
line 346: insert (4)
line 347: inorderTraversal
(3) (4) 
line 348: nearestNeighbour (1)
(3) 
line 349: inorderTraversal
(3) (4) 
line 350: insert (3)
line 351: inorderTraversal
(3) (3) (4) 
line 352: insert (9)
line 353: inorderTraversal
(3) (3) (4) (9) 
line 354: insert (7)
line 355: inorderTraversal
(3) (3) (4) (7) (9) 
line 356: search (4)
TRUE
line 357: inorderTraversal
(3) (3) (4) (7) (9) 
line 358: clear
line 359: buildTree 12
(4) (4) (6) (9) (9) (1) (2) (8) (8) (7) (4) (9) 
line 360: inorderTraversal
(1) (2) (4) (4) (4) (6) (7) (8) (8) (9) (9) (9) 
line 361: insert (6)
line 362: inorderTraversal
(1) (2) (4) (4) (4) (6) (6) (7) (8) (8) (9) (9) (9) 
line 363: insert (10)
line 364: inorderTraversal
(1) (2) (4) (4) (4) (6) (6) (7) (8) (8) (9) (9) (9) (10) 
line 365: remove (6)
line 366: inorderTraversal
(1) (2) (4) (4) (4) (6) (7) (8) (8) (9) (9) (9) (10) 
line 367: remove (4)
line 368: inorderTraversal
(1) (2) (4) (4) (6) (7) (8) (8) (9) (9) (9) (10) 
line 369: nearestNeighbour (9)
(9) 
line 370: inorderTraversal
(1) (2) (4) (4) (6) (7) (8) (8) (9) (9) (9) (10) 
line 371: insert (9)
line 372: inorderTraversal
(1) (2) (4) (4) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 373: kNearestNeighbour 9 (5)
(1) (2) (4) (4) (6) (7) (8) (8) (9) 
line 374: inorderTraversal
(1) (2) (4) (4) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 375: nearestNeighbour (2)
(2) 
line 376: inorderTraversal
(1) (2) (4) (4) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 377: nearestNeighbour (2)
(2) 
line 378: inorderTraversal
(1) (2) (4) (4) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 379: insert (7)
line 380: inorderTraversal
(1) (2) (4) (4) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 381: remove (10)
line 382: inorderTraversal
(1) (2) (4) (4) (6) (7) (7) (8) (8) (9) (9) (9) (9) 
line 383: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=5
line 384: inorderTraversal
(1) (2) (4) (4) (6) (7) (7) (8) (8) (9) (9) (9) (9) 
line 385: kNearestNeighbour 1 (2)
(2) 
line 386: inorderTraversal
(1) (2) (4) (4) (6) (7) (7) (8) (8) (9) (9) (9) (9) 
line 387: remove (9)
line 388: inorderTraversal
(1) (2) (4) (4) (6) (7) (7) (8) (8) (9) (9) (9) 
line 389: insert (6)
line 390: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) 
line 391: insert (9)
line 392: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) 
line 393: nearestNeighbour (8)
(8) 
line 394: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) 
line 395: insert (8)
line 396: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) 
line 397: insert (6)
line 398: inorderTraversal
(1) (2) (4) (4) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) 
line 399: remove (9)
line 400: inorderTraversal
(1) (2) (4) (4) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) 
line 401: insert (1)
line 402: inorderTraversal
(1) (1) (2) (4) (4) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) 
line 403: kNearestNeighbour 2 (3)
(2) (4) 
line 404: inorderTraversal
(1) (1) (2) (4) (4) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) 
line 405: insert (2)
line 406: inorderTraversal
(1) (1) (2) (2) (4) (4) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) 
line 407: nearestNeighbour (5)
(4) 
line 408: inorderTraversal
(1) (1) (2) (2) (4) (4) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) 
line 409: remove (6)
line 410: inorderTraversal
(1) (1) (2) (2) (4) (4) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) 
line 411: insert (1)
line 412: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) 
line 413: insert (7)
line 414: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 415: nearestNeighbour (2)
(2) 
line 416: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 417: clear
line 418: buildTree 11
(6) (9) (8) (6) (8) (1) (10) (1) (4) (2) (5) 
line 419: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) (8) (8) (9) (10) 
line 420: kNearestNeighbour 3 (2)
(1) (1) (2) 
line 421: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) (8) (8) (9) (10) 
line 422: kNearestNeighbour 3 (10)
(8) (9) (10) 
line 423: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) (8) (8) (9) (10) 
line 424: nodeCount_height_leafCount
nodeCount=11;height=4;leafCount=5
line 425: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) (8) (8) (9) (10) 
line 426: preorderTraversal
(6) (2) (1) (1) (4) (5) (8) (6) (9) (8) (10) 
line 427: postorderTraversal
(1) (1) (5) (4) (2) (6) (8) (10) (9) (8) (6) 
line 428: clear
