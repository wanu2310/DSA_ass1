line 1: k=1
line 2: kNearestNeighbour 1 (1)

line 3: inorderTraversal

line 4: nearestNeighbour (7)

line 5: inorderTraversal

line 6: insert (4)
line 7: inorderTraversal
(4) 
line 8: kNearestNeighbour 3 (3)
(4) 
line 9: inorderTraversal
(4) 
line 10: nearestNeighbour (10)
(4) 
line 11: inorderTraversal
(4) 
line 12: remove (4)
line 13: inorderTraversal

line 14: remove (4)
line 15: inorderTraversal

line 16: preorderTraversal

line 17: inorderTraversal

line 18: search (4)
FALSE
line 19: inorderTraversal

line 20: nodeCount_height_leafCount
nodeCount=0;height=0;leafCount=0
line 21: inorderTraversal

line 22: insert (3)
line 23: inorderTraversal
(3) 
line 24: search (4)
FALSE
line 25: inorderTraversal
(3) 
line 26: nearestNeighbour (5)
(3) 
line 27: inorderTraversal
(3) 
line 28: kNearestNeighbour 10 (4)
(3) 
line 29: inorderTraversal
(3) 
line 30: kNearestNeighbour 7 (9)
(3) 
line 31: inorderTraversal
(3) 
line 32: clear
line 33: buildTree 10
(2) (10) (7) (3) (5) (3) (4) (8) (9) (10) 
line 34: inorderTraversal
(2) (3) (3) (4) (5) (7) (8) (9) (10) (10) 
line 35: nearestNeighbour (4)
(4) 
line 36: inorderTraversal
(2) (3) (3) (4) (5) (7) (8) (9) (10) (10) 
line 37: preorderTraversal
(5) (3) (2) (3) (4) (9) (7) (8) (10) (10) 
line 38: inorderTraversal
(2) (3) (3) (4) (5) (7) (8) (9) (10) (10) 
line 39: insert (5)
line 40: inorderTraversal
(2) (3) (3) (4) (5) (5) (7) (8) (9) (10) (10) 
line 41: kNearestNeighbour 1 (5)
(5) 
line 42: inorderTraversal
(2) (3) (3) (4) (5) (5) (7) (8) (9) (10) (10) 
line 43: kNearestNeighbour 10 (2)
(2) (3) (3) (4) (5) (5) (7) (8) (9) (10) 
line 44: inorderTraversal
(2) (3) (3) (4) (5) (5) (7) (8) (9) (10) (10) 
line 45: nearestNeighbour (8)
(8) 
line 46: inorderTraversal
(2) (3) (3) (4) (5) (5) (7) (8) (9) (10) (10) 
line 47: insert (7)
line 48: inorderTraversal
(2) (3) (3) (4) (5) (5) (7) (7) (8) (9) (10) (10) 
line 49: insert (9)
line 50: inorderTraversal
(2) (3) (3) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 51: insert (4)
line 52: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 53: insert (4)
line 54: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 55: postorderTraversal
(2) (4) (4) (4) (3) (3) (5) (7) (8) (7) (9) (10) (10) (9) (5) 
line 56: inorderTraversal
(2) (3) (3) (4) (4) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 57: insert (2)
line 58: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 59: nearestNeighbour (8)
(8) 
line 60: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 61: nearestNeighbour (1)
(2) 
line 62: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 63: insert (1)
line 64: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 65: kNearestNeighbour 1 (1)
(1) 
line 66: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 67: insert (7)
line 68: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 69: nearestNeighbour (1)
(1) 
line 70: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 71: clear
line 72: buildTree 3
(2) (9) (5) 
line 73: inorderTraversal
(2) (5) (9) 
line 74: insert (8)
line 75: inorderTraversal
(2) (5) (8) (9) 
line 76: insert (3)
line 77: inorderTraversal
(2) (3) (5) (8) (9) 
line 78: insert (6)
line 79: inorderTraversal
(2) (3) (5) (6) (8) (9) 
line 80: insert (9)
line 81: inorderTraversal
(2) (3) (5) (6) (8) (9) (9) 
line 82: nearestNeighbour (8)
(8) 
line 83: inorderTraversal
(2) (3) (5) (6) (8) (9) (9) 
line 84: kNearestNeighbour 6 (4)
(2) (3) (5) (6) (8) (9) 
line 85: inorderTraversal
(2) (3) (5) (6) (8) (9) (9) 
line 86: insert (1)
line 87: inorderTraversal
(1) (2) (3) (5) (6) (8) (9) (9) 
line 88: kNearestNeighbour 10 (10)
(1) (2) (3) (5) (6) (8) (9) (9) 
line 89: inorderTraversal
(1) (2) (3) (5) (6) (8) (9) (9) 
line 90: kNearestNeighbour 1 (6)
(6) 
line 91: inorderTraversal
(1) (2) (3) (5) (6) (8) (9) (9) 
line 92: postorderTraversal
(1) (3) (2) (6) (8) (9) (9) (5) 
line 93: inorderTraversal
(1) (2) (3) (5) (6) (8) (9) (9) 
line 94: remove (2)
line 95: inorderTraversal
(1) (3) (5) (6) (8) (9) (9) 
line 96: kNearestNeighbour 3 (6)
(5) (6) (8) 
line 97: inorderTraversal
(1) (3) (5) (6) (8) (9) (9) 
line 98: nodeCount_height_leafCount
nodeCount=7;height=4;leafCount=3
line 99: inorderTraversal
(1) (3) (5) (6) (8) (9) (9) 
line 100: kNearestNeighbour 9 (10)
(1) (3) (5) (6) (8) (9) (9) 
line 101: inorderTraversal
(1) (3) (5) (6) (8) (9) (9) 
line 102: insert (3)
line 103: inorderTraversal
(1) (3) (3) (5) (6) (8) (9) (9) 
line 104: preorderTraversal
(5) (3) (1) (3) (9) (8) (6) (9) 
line 105: inorderTraversal
(1) (3) (3) (5) (6) (8) (9) (9) 
line 106: nearestNeighbour (8)
(8) 
line 107: inorderTraversal
(1) (3) (3) (5) (6) (8) (9) (9) 
line 108: insert (10)
line 109: inorderTraversal
(1) (3) (3) (5) (6) (8) (9) (9) (10) 
line 110: search (6)
TRUE
line 111: inorderTraversal
(1) (3) (3) (5) (6) (8) (9) (9) (10) 
line 112: insert (8)
line 113: inorderTraversal
(1) (3) (3) (5) (6) (8) (8) (9) (9) (10) 
line 114: kNearestNeighbour 4 (2)
(1) (3) (3) (5) 
line 115: inorderTraversal
(1) (3) (3) (5) (6) (8) (8) (9) (9) (10) 
line 116: nearestNeighbour (5)
(5) 
line 117: inorderTraversal
(1) (3) (3) (5) (6) (8) (8) (9) (9) (10) 
line 118: nearestNeighbour (3)
(3) 
line 119: inorderTraversal
(1) (3) (3) (5) (6) (8) (8) (9) (9) (10) 
line 120: nearestNeighbour (9)
(9) 
line 121: inorderTraversal
(1) (3) (3) (5) (6) (8) (8) (9) (9) (10) 
line 122: insert (10)
line 123: inorderTraversal
(1) (3) (3) (5) (6) (8) (8) (9) (9) (10) (10) 
line 124: nearestNeighbour (9)
(9) 
line 125: inorderTraversal
(1) (3) (3) (5) (6) (8) (8) (9) (9) (10) (10) 
line 126: nearestNeighbour (8)
(8) 
line 127: inorderTraversal
(1) (3) (3) (5) (6) (8) (8) (9) (9) (10) (10) 
line 128: insert (10)
line 129: inorderTraversal
(1) (3) (3) (5) (6) (8) (8) (9) (9) (10) (10) (10) 
line 130: remove (6)
line 131: inorderTraversal
(1) (3) (3) (5) (8) (8) (9) (9) (10) (10) (10) 
line 132: kNearestNeighbour 5 (10)
(9) (9) (10) (10) (10) 
line 133: inorderTraversal
(1) (3) (3) (5) (8) (8) (9) (9) (10) (10) (10) 
line 134: insert (2)
line 135: inorderTraversal
(1) (2) (3) (3) (5) (8) (8) (9) (9) (10) (10) (10) 
line 136: kNearestNeighbour 10 (8)
(3) (3) (5) (8) (8) (9) (9) (10) (10) (10) 
line 137: inorderTraversal
(1) (2) (3) (3) (5) (8) (8) (9) (9) (10) (10) (10) 
line 138: insert (5)
line 139: inorderTraversal
(1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (10) (10) (10) 
line 140: nearestNeighbour (2)
(2) 
line 141: inorderTraversal
(1) (2) (3) (3) (5) (5) (8) (8) (9) (9) (10) (10) (10) 
line 142: insert (7)
line 143: inorderTraversal
(1) (2) (3) (3) (5) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 144: remove (5)
line 145: inorderTraversal
(1) (2) (3) (3) (5) (7) (8) (8) (9) (9) (10) (10) (10) 
line 146: clear
line 147: buildTree 19
(1) (1) (2) (5) (4) (1) (10) (2) (3) (3) (4) (8) (9) (6) (6) (9) (9) (9) (5) 
line 148: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (8) (9) (9) (9) (9) (10) 
line 149: kNearestNeighbour 4 (8)
(8) (9) (9) (9) 
line 150: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (8) (9) (9) (9) (9) (10) 
line 151: nearestNeighbour (1)
(1) 
line 152: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (8) (9) (9) (9) (9) (10) 
line 153: clear
line 154: buildTree 2
(4) (5) 
line 155: inorderTraversal
(4) (5) 
line 156: insert (5)
line 157: inorderTraversal
(4) (5) (5) 
line 158: clear
line 159: buildTree 12
(8) (5) (6) (4) (9) (3) (1) (2) (10) (2) (10) (9) 
line 160: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (8) (9) (9) (10) (10) 
line 161: nearestNeighbour (6)
(6) 
line 162: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (8) (9) (9) (10) (10) 
line 163: nearestNeighbour (4)
(4) 
line 164: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (8) (9) (9) (10) (10) 
line 165: kNearestNeighbour 1 (9)
(9) 
line 166: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (8) (9) (9) (10) (10) 
line 167: insert (6)
line 168: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (10) (10) 
line 169: nearestNeighbour (3)
(3) 
line 170: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (10) (10) 
line 171: nearestNeighbour (8)
(8) 
line 172: inorderTraversal
(1) (2) (2) (3) (4) (5) (6) (6) (8) (9) (9) (10) (10) 
line 173: insert (4)
line 174: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (6) (6) (8) (9) (9) (10) (10) 
line 175: kNearestNeighbour 7 (3)
(1) (2) (2) (3) (4) (4) (5) 
line 176: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (6) (6) (8) (9) (9) (10) (10) 
line 177: search (10)
TRUE
line 178: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (6) (6) (8) (9) (9) (10) (10) 
line 179: insert (6)
line 180: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (8) (9) (9) (10) (10) 
line 181: kNearestNeighbour 10 (8)
(4) (5) (6) (6) (6) (8) (9) (9) (10) (10) 
line 182: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (8) (9) (9) (10) (10) 
line 183: insert (2)
line 184: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (8) (9) (9) (10) (10) 
line 185: insert (5)
line 186: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (8) (9) (9) (10) (10) 
line 187: nearestNeighbour (10)
(10) 
line 188: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (6) (6) (6) (8) (9) (9) (10) (10) 
line 189: clear
line 190: buildTree 5
(8) (4) (5) (6) (3) 
line 191: inorderTraversal
(3) (4) (5) (6) (8) 
line 192: insert (5)
line 193: inorderTraversal
(3) (4) (5) (5) (6) (8) 
line 194: nearestNeighbour (8)
(8) 
line 195: inorderTraversal
(3) (4) (5) (5) (6) (8) 
line 196: search (3)
TRUE
line 197: inorderTraversal
(3) (4) (5) (5) (6) (8) 
line 198: insert (7)
line 199: inorderTraversal
(3) (4) (5) (5) (6) (7) (8) 
line 200: insert (10)
line 201: inorderTraversal
(3) (4) (5) (5) (6) (7) (8) (10) 
line 202: kNearestNeighbour 4 (10)
(6) (7) (8) (10) 
line 203: inorderTraversal
(3) (4) (5) (5) (6) (7) (8) (10) 
line 204: remove (5)
line 205: inorderTraversal
(3) (4) (5) (6) (7) (8) (10) 
line 206: postorderTraversal
(4) (3) (7) (10) (8) (6) (5) 
line 207: inorderTraversal
(3) (4) (5) (6) (7) (8) (10) 
line 208: nearestNeighbour (1)
(3) 
line 209: inorderTraversal
(3) (4) (5) (6) (7) (8) (10) 
line 210: kNearestNeighbour 1 (3)
(3) 
line 211: inorderTraversal
(3) (4) (5) (6) (7) (8) (10) 
line 212: clear
line 213: buildTree 3
(4) (2) (6) 
line 214: inorderTraversal
(2) (4) (6) 
line 215: kNearestNeighbour 2 (2)
(2) (4) 
line 216: inorderTraversal
(2) (4) (6) 
line 217: kNearestNeighbour 6 (10)
(2) (4) (6) 
line 218: inorderTraversal
(2) (4) (6) 
line 219: insert (6)
line 220: inorderTraversal
(2) (4) (6) (6) 
line 221: kNearestNeighbour 3 (1)
(2) (4) (6) 
line 222: inorderTraversal
(2) (4) (6) (6) 
line 223: remove (2)
line 224: inorderTraversal
(4) (6) (6) 
line 225: kNearestNeighbour 1 (2)
(4) 
line 226: inorderTraversal
(4) (6) (6) 
line 227: insert (4)
line 228: inorderTraversal
(4) (4) (6) (6) 
line 229: postorderTraversal
(4) (6) (6) (4) 
line 230: inorderTraversal
(4) (4) (6) (6) 
line 231: insert (3)
line 232: inorderTraversal
(3) (4) (4) (6) (6) 
line 233: clear
line 234: buildTree 4
(1) (5) (7) (1) 
line 235: inorderTraversal
(1) (1) (5) (7) 
line 236: search (1)
TRUE
line 237: inorderTraversal
(1) (1) (5) (7) 
line 238: insert (4)
line 239: inorderTraversal
(1) (1) (4) (5) (7) 
line 240: clear
line 241: buildTree 6
(6) (4) (7) (5) (7) (8) 
line 242: inorderTraversal
(4) (5) (6) (7) (7) (8) 
line 243: search (9)
FALSE
line 244: inorderTraversal
(4) (5) (6) (7) (7) (8) 
line 245: insert (2)
line 246: inorderTraversal
(2) (4) (5) (6) (7) (7) (8) 
line 247: insert (6)
line 248: inorderTraversal
(2) (4) (5) (6) (6) (7) (7) (8) 
line 249: insert (3)
line 250: inorderTraversal
(2) (3) (4) (5) (6) (6) (7) (7) (8) 
line 251: nodeCount_height_leafCount
nodeCount=9;height=4;leafCount=4
line 252: inorderTraversal
(2) (3) (4) (5) (6) (6) (7) (7) (8) 
line 253: insert (9)
line 254: inorderTraversal
(2) (3) (4) (5) (6) (6) (7) (7) (8) (9) 
line 255: insert (7)
line 256: inorderTraversal
(2) (3) (4) (5) (6) (6) (7) (7) (7) (8) (9) 
line 257: insert (2)
line 258: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (7) (7) (7) (8) (9) 
line 259: nearestNeighbour (9)
(9) 
line 260: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (7) (7) (7) (8) (9) 
line 261: insert (6)
line 262: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (9) 
line 263: nearestNeighbour (8)
(8) 
line 264: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (9) 
line 265: nearestNeighbour (7)
(7) 
line 266: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (9) 
line 267: nearestNeighbour (7)
(7) 
line 268: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (9) 
line 269: insert (6)
line 270: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) 
line 271: nearestNeighbour (1)
(2) 
line 272: inorderTraversal
(2) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) 
line 273: insert (4)
line 274: inorderTraversal
(2) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) 
line 275: insert (2)
line 276: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) 
line 277: clear
line 278: buildTree 9
(9) (10) (2) (7) (10) (9) (4) (10) (6) 
line 279: inorderTraversal
(2) (4) (6) (7) (9) (9) (10) (10) (10) 
line 280: insert (2)
line 281: inorderTraversal
(2) (2) (4) (6) (7) (9) (9) (10) (10) (10) 
line 282: nearestNeighbour (9)
(9) 
line 283: inorderTraversal
(2) (2) (4) (6) (7) (9) (9) (10) (10) (10) 
line 284: insert (6)
line 285: inorderTraversal
(2) (2) (4) (6) (6) (7) (9) (9) (10) (10) (10) 
line 286: clear
line 287: buildTree 10
(5) (7) (1) (5) (9) (9) (3) (2) (2) (1) 
line 288: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (9) (9) 
line 289: kNearestNeighbour 2 (7)
(7) (9) 
line 290: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (9) (9) 
line 291: nearestNeighbour (7)
(7) 
line 292: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (9) (9) 
line 293: insert (7)
line 294: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (7) (9) (9) 
line 295: insert (1)
line 296: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (7) (7) (9) (9) 
line 297: insert (1)
line 298: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (5) (5) (7) (7) (9) (9) 
line 299: remove (2)
line 300: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (7) (7) (9) (9) 
line 301: kNearestNeighbour 7 (2)
(1) (1) (1) (1) (2) (3) (5) 
line 302: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (7) (7) (9) (9) 
line 303: insert (9)
line 304: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (7) (7) (9) (9) (9) 
line 305: insert (4)
line 306: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (5) (7) (7) (9) (9) (9) 
line 307: nodeCount_height_leafCount
nodeCount=14;height=6;leafCount=5
line 308: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (5) (7) (7) (9) (9) (9) 
line 309: remove (9)
line 310: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (5) (7) (7) (9) (9) 
line 311: kNearestNeighbour 10 (2)
(1) (1) (1) (1) (2) (3) (4) (5) (5) (7) 
line 312: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (5) (7) (7) (9) (9) 
line 313: kNearestNeighbour 10 (8)
(1) (2) (3) (4) (5) (5) (7) (7) (9) (9) 
line 314: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (5) (7) (7) (9) (9) 
line 315: insert (2)
line 316: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (7) (7) (9) (9) 
line 317: kNearestNeighbour 5 (7)
(5) (7) (7) (9) (9) 
line 318: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (7) (7) (9) (9) 
line 319: search (1)
TRUE
line 320: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (7) (7) (9) (9) 
line 321: kNearestNeighbour 1 (4)
(4) 
line 322: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (7) (7) (9) (9) 
line 323: remove (5)
line 324: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (7) (7) (9) (9) 
line 325: insert (6)
line 326: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (7) (7) (9) (9) 
line 327: remove (9)
line 328: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (6) (7) (7) (9) 
line 329: insert (5)
line 330: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (7) (9) 
line 331: nearestNeighbour (7)
(7) 
line 332: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (7) (9) 
line 333: insert (10)
line 334: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (7) (9) (10) 
line 335: kNearestNeighbour 8 (9)
(4) (5) (5) (6) (7) (7) (9) (10) 
line 336: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (7) (9) (10) 
line 337: insert (6)
line 338: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (6) (6) (7) (7) (9) (10) 
line 339: nearestNeighbour (8)
(7) 
line 340: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (6) (6) (7) (7) (9) (10) 
line 341: clear
line 342: buildTree 17
(3) (4) (5) (3) (5) (2) (9) (7) (2) (4) (10) (5) (5) (7) (4) (3) (9) 
line 343: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (7) (7) (9) (9) (10) 
line 344: kNearestNeighbour 4 (7)
(7) (7) (9) (9) 
line 345: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (7) (7) (9) (9) (10) 
line 346: nearestNeighbour (5)
(5) 
line 347: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (7) (7) (9) (9) (10) 
line 348: clear
line 349: buildTree 18
(4) (3) (7) (6) (5) (3) (1) (3) (5) (5) (1) (5) (10) (7) (3) (7) (10) (7) 
line 350: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (10) (10) 
line 351: kNearestNeighbour 4 (9)
(7) (7) (10) (10) 
line 352: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (10) (10) 
line 353: insert (6)
line 354: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (10) (10) 
line 355: insert (7)
line 356: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (10) (10) 
line 357: kNearestNeighbour 7 (5)
(4) (5) (5) (5) (5) (6) (6) 
line 358: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (10) (10) 
line 359: clear
line 360: buildTree 14
(7) (2) (6) (10) (1) (3) (10) (5) (10) (8) (1) (1) (6) (5) 
line 361: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (6) (7) (8) (10) (10) (10) 
line 362: nearestNeighbour (6)
(6) 
line 363: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (6) (7) (8) (10) (10) (10) 
line 364: remove (10)
line 365: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (6) (7) (8) (10) (10) 
line 366: nearestNeighbour (9)
(8) 
line 367: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (6) (7) (8) (10) (10) 
line 368: insert (7)
line 369: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (6) (7) (7) (8) (10) (10) 
line 370: remove (6)
line 371: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (10) (10) 
line 372: remove (6)
line 373: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (7) (7) (8) (10) (10) 
line 374: insert (6)
line 375: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (10) (10) 
line 376: insert (8)
line 377: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (10) (10) 
line 378: insert (4)
line 379: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (7) (8) (8) (10) (10) 
line 380: kNearestNeighbour 1 (6)
(6) 
line 381: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (7) (8) (8) (10) (10) 
line 382: insert (5)
line 383: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (7) (7) (8) (8) (10) (10) 
line 384: kNearestNeighbour 7 (2)
(1) (1) (1) (2) (3) (4) (5) 
line 385: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (7) (7) (8) (8) (10) (10) 
line 386: remove (7)
line 387: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (7) (8) (8) (10) (10) 
line 388: remove (6)
line 389: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 390: kNearestNeighbour 4 (5)
(4) (5) (5) (5) 
line 391: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 392: kNearestNeighbour 5 (4)
(3) (4) (5) (5) (5) 
line 393: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (7) (8) (8) (10) (10) 
line 394: clear
line 395: buildTree 20
(10) (3) (2) (5) (2) (1) (2) (9) (4) (5) (1) (4) (6) (5) (7) (2) (1) (2) (6) (5) 
line 396: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (6) (7) (9) (10) 
line 397: insert (1)
line 398: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (6) (7) (9) (10) 
line 399: clear
line 400: buildTree 1
(7) 
line 401: inorderTraversal
(7) 
line 402: nearestNeighbour (2)
(7) 
line 403: inorderTraversal
(7) 
line 404: nearestNeighbour (3)
(7) 
line 405: inorderTraversal
(7) 
line 406: insert (8)
line 407: inorderTraversal
(7) (8) 
line 408: insert (1)
line 409: inorderTraversal
(1) (7) (8) 
line 410: preorderTraversal
(7) (1) (8) 
line 411: inorderTraversal
(1) (7) (8) 
line 412: kNearestNeighbour 7 (8)
(1) (7) (8) 
line 413: inorderTraversal
(1) (7) (8) 
line 414: clear
line 415: buildTree 4
(7) (7) (8) (10) 
line 416: inorderTraversal
(7) (7) (8) (10) 
line 417: insert (1)
line 418: inorderTraversal
(1) (7) (7) (8) (10) 
line 419: nodeCount_height_leafCount
nodeCount=5;height=3;leafCount=3
line 420: inorderTraversal
(1) (7) (7) (8) (10) 
line 421: preorderTraversal
(7) (1) (8) (7) (10) 
line 422: postorderTraversal
(1) (7) (10) (8) (7) 
line 423: clear
