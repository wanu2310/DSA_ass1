line 1: k=1
line 2: insert (8)
line 3: inorderTraversal
(8) 
line 4: insert (6)
line 5: inorderTraversal
(6) (8) 
line 6: insert (1)
line 7: inorderTraversal
(1) (6) (8) 
line 8: kNearestNeighbour 6 (6)
(1) (6) (8) 
line 9: inorderTraversal
(1) (6) (8) 
line 10: nearestNeighbour (7)
(6) 
line 11: inorderTraversal
(1) (6) (8) 
line 12: nearestNeighbour (5)
(6) 
line 13: inorderTraversal
(1) (6) (8) 
line 14: kNearestNeighbour 10 (9)
(1) (6) (8) 
line 15: inorderTraversal
(1) (6) (8) 
line 16: clear
line 17: buildTree 12
(8) (3) (5) (8) (1) (9) (9) (8) (7) (6) (10) (9) 
line 18: inorderTraversal
(1) (3) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) 
line 19: clear
line 20: buildTree 1
(5) 
line 21: inorderTraversal
(5) 
line 22: nearestNeighbour (7)
(5) 
line 23: inorderTraversal
(5) 
line 24: insert (10)
line 25: inorderTraversal
(5) (10) 
line 26: insert (9)
line 27: inorderTraversal
(5) (9) (10) 
line 28: insert (9)
line 29: inorderTraversal
(5) (9) (9) (10) 
line 30: postorderTraversal
(9) (9) (10) (5) 
line 31: inorderTraversal
(5) (9) (9) (10) 
line 32: remove (10)
line 33: inorderTraversal
(5) (9) (9) 
line 34: insert (8)
line 35: inorderTraversal
(5) (8) (9) (9) 
line 36: nearestNeighbour (8)
(8) 
line 37: inorderTraversal
(5) (8) (9) (9) 
line 38: insert (3)
line 39: inorderTraversal
(3) (5) (8) (9) (9) 
line 40: nearestNeighbour (2)
(3) 
line 41: inorderTraversal
(3) (5) (8) (9) (9) 
line 42: insert (9)
line 43: inorderTraversal
(3) (5) (8) (9) (9) (9) 
line 44: insert (4)
line 45: inorderTraversal
(3) (4) (5) (8) (9) (9) (9) 
line 46: kNearestNeighbour 6 (8)
(4) (5) (8) (9) (9) (9) 
line 47: inorderTraversal
(3) (4) (5) (8) (9) (9) (9) 
line 48: clear
line 49: buildTree 8
(6) (5) (8) (5) (10) (9) (7) (9) 
line 50: inorderTraversal
(5) (5) (6) (7) (8) (9) (9) (10) 
line 51: clear
line 52: buildTree 3
(1) (4) (6) 
line 53: inorderTraversal
(1) (4) (6) 
line 54: insert (3)
line 55: inorderTraversal
(1) (3) (4) (6) 
line 56: kNearestNeighbour 10 (7)
(1) (3) (4) (6) 
line 57: inorderTraversal
(1) (3) (4) (6) 
line 58: nearestNeighbour (4)
(4) 
line 59: inorderTraversal
(1) (3) (4) (6) 
line 60: kNearestNeighbour 8 (7)
(1) (3) (4) (6) 
line 61: inorderTraversal
(1) (3) (4) (6) 
line 62: insert (8)
line 63: inorderTraversal
(1) (3) (4) (6) (8) 
line 64: kNearestNeighbour 1 (6)
(6) 
line 65: inorderTraversal
(1) (3) (4) (6) (8) 
line 66: remove (3)
line 67: inorderTraversal
(1) (4) (6) (8) 
line 68: kNearestNeighbour 2 (5)
(4) (6) 
line 69: inorderTraversal
(1) (4) (6) (8) 
line 70: kNearestNeighbour 2 (5)
(4) (6) 
line 71: inorderTraversal
(1) (4) (6) (8) 
line 72: clear
line 73: buildTree 10
(10) (3) (8) (2) (9) (5) (7) (9) (4) (7) 
line 74: inorderTraversal
(2) (3) (4) (5) (7) (7) (8) (9) (9) (10) 
line 75: search (7)
TRUE
line 76: inorderTraversal
(2) (3) (4) (5) (7) (7) (8) (9) (9) (10) 
line 77: nodeCount_height_leafCount
nodeCount=10;height=4;leafCount=4
line 78: inorderTraversal
(2) (3) (4) (5) (7) (7) (8) (9) (9) (10) 
line 79: kNearestNeighbour 8 (7)
(4) (5) (7) (7) (8) (9) (9) (10) 
line 80: inorderTraversal
(2) (3) (4) (5) (7) (7) (8) (9) (9) (10) 
line 81: insert (2)
line 82: inorderTraversal
(2) (2) (3) (4) (5) (7) (7) (8) (9) (9) (10) 
line 83: clear
line 84: buildTree 15
(4) (10) (5) (6) (10) (1) (4) (8) (8) (1) (4) (4) (3) (7) (9) 
line 85: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (10) (10) 
line 86: kNearestNeighbour 2 (8)
(8) (8) 
line 87: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (10) (10) 
line 88: search (9)
TRUE
line 89: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (10) (10) 
line 90: kNearestNeighbour 1 (5)
(5) 
line 91: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (10) (10) 
line 92: nearestNeighbour (10)
(10) 
line 93: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (10) (10) 
line 94: remove (8)
line 95: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (9) (10) (10) 
line 96: insert (9)
line 97: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) 
line 98: nearestNeighbour (8)
(8) 
line 99: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) 
line 100: nearestNeighbour (10)
(10) 
line 101: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) 
line 102: insert (8)
line 103: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 104: insert (10)
line 105: inorderTraversal
(1) (1) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 106: insert (2)
line 107: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 108: insert (9)
line 109: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 110: preorderTraversal
(5) (4) (1) (1) (3) (2) (4) (4) (4) (8) (6) (7) (9) (8) (10) (9) (9) (10) (10) 
line 111: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 112: insert (7)
line 113: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 114: insert (1)
line 115: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 116: clear
line 117: buildTree 7
(5) (7) (2) (7) (5) (6) (7) 
line 118: inorderTraversal
(2) (5) (5) (6) (7) (7) (7) 
line 119: insert (6)
line 120: inorderTraversal
(2) (5) (5) (6) (6) (7) (7) (7) 
line 121: kNearestNeighbour 3 (6)
(6) (6) (7) 
line 122: inorderTraversal
(2) (5) (5) (6) (6) (7) (7) (7) 
line 123: nearestNeighbour (2)
(2) 
line 124: inorderTraversal
(2) (5) (5) (6) (6) (7) (7) (7) 
line 125: kNearestNeighbour 6 (2)
(2) (5) (5) (6) (6) (7) 
line 126: inorderTraversal
(2) (5) (5) (6) (6) (7) (7) (7) 
line 127: kNearestNeighbour 1 (4)
(5) 
line 128: inorderTraversal
(2) (5) (5) (6) (6) (7) (7) (7) 
line 129: kNearestNeighbour 3 (8)
(7) (7) (7) 
line 130: inorderTraversal
(2) (5) (5) (6) (6) (7) (7) (7) 
line 131: insert (4)
line 132: inorderTraversal
(2) (4) (5) (5) (6) (6) (7) (7) (7) 
line 133: kNearestNeighbour 8 (5)
(4) (5) (5) (6) (6) (7) (7) (7) 
line 134: inorderTraversal
(2) (4) (5) (5) (6) (6) (7) (7) (7) 
line 135: clear
line 136: buildTree 1
(4) 
line 137: inorderTraversal
(4) 
line 138: clear
line 139: buildTree 15
(6) (1) (8) (8) (2) (9) (7) (7) (9) (10) (3) (1) (6) (4) (9) 
line 140: inorderTraversal
(1) (1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 141: insert (1)
line 142: inorderTraversal
(1) (1) (1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 143: nearestNeighbour (1)
(1) 
line 144: inorderTraversal
(1) (1) (1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 145: nearestNeighbour (9)
(9) 
line 146: inorderTraversal
(1) (1) (1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 147: insert (9)
line 148: inorderTraversal
(1) (1) (1) (2) (3) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 149: insert (4)
line 150: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 151: insert (7)
line 152: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 153: insert (3)
line 154: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 155: insert (9)
line 156: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 157: insert (2)
line 158: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 159: nearestNeighbour (10)
(10) 
line 160: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 161: kNearestNeighbour 4 (10)
(9) (9) (9) (10) 
line 162: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 163: search (7)
TRUE
line 164: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 165: insert (8)
line 166: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 167: insert (3)
line 168: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 169: kNearestNeighbour 2 (10)
(9) (10) 
line 170: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 171: kNearestNeighbour 10 (3)
(1) (1) (1) (2) (2) (3) (3) (3) (4) (4) 
line 172: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 173: nearestNeighbour (5)
(4) 
line 174: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 175: remove (1)
line 176: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 177: kNearestNeighbour 3 (1)
(1) (1) (2) 
line 178: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 179: kNearestNeighbour 8 (2)
(1) (1) (2) (2) (3) (3) (3) (4) 
line 180: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 181: insert (6)
line 182: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 183: clear
line 184: buildTree 19
(9) (10) (3) (10) (7) (9) (7) (9) (1) (4) (6) (4) (10) (3) (9) (10) (6) (5) (3) 
line 185: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (6) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) (10) 
line 186: insert (6)
line 187: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) (10) 
line 188: insert (5)
line 189: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) (10) 
line 190: insert (5)
line 191: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) (10) 
line 192: remove (4)
line 193: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) (10) 
line 194: nearestNeighbour (5)
(5) 
line 195: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) (10) 
line 196: search (9)
TRUE
line 197: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) (10) 
line 198: nearestNeighbour (2)
(1) 
line 199: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (9) (9) (10) (10) (10) (10) 
line 200: insert (8)
line 201: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 202: insert (8)
line 203: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 204: kNearestNeighbour 4 (8)
(7) (8) (8) (9) 
line 205: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 206: postorderTraversal
(1) (3) (3) (3) (5) (5) (6) (6) (6) (5) (4) (8) (8) (7) (9) (9) (9) (10) (10) (10) (10) (9) (7) 
line 207: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 208: insert (7)
line 209: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 210: kNearestNeighbour 2 (9)
(9) (9) 
line 211: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 212: insert (5)
line 213: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 214: kNearestNeighbour 2 (6)
(6) (6) 
line 215: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 216: insert (3)
line 217: inorderTraversal
(1) (3) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 218: insert (3)
line 219: inorderTraversal
(1) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 220: kNearestNeighbour 8 (5)
(4) (5) (5) (5) (5) (6) (6) (6) 
line 221: inorderTraversal
(1) (3) (3) (3) (3) (3) (4) (5) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) (10) (10) 
line 222: clear
line 223: buildTree 9
(5) (2) (10) (1) (1) (4) (3) (2) (6) 
line 224: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (10) 
line 225: insert (10)
line 226: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (10) (10) 
line 227: kNearestNeighbour 1 (3)
(3) 
line 228: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (10) (10) 
line 229: kNearestNeighbour 3 (4)
(3) (4) (5) 
line 230: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (10) (10) 
line 231: insert (7)
line 232: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (7) (10) (10) 
line 233: insert (2)
line 234: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (10) (10) 
line 235: insert (8)
line 236: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (10) (10) 
line 237: insert (9)
line 238: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (9) (10) (10) 
line 239: insert (6)
line 240: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 241: insert (4)
line 242: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 243: nearestNeighbour (2)
(2) 
line 244: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 245: kNearestNeighbour 2 (7)
(7) (8) 
line 246: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 247: nearestNeighbour (10)
(10) 
line 248: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 249: nearestNeighbour (7)
(7) 
line 250: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 251: clear
line 252: buildTree 20
(1) (7) (3) (4) (6) (10) (10) (10) (8) (9) (5) (8) (9) (8) (6) (7) (6) (6) (1) (2) 
line 253: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 254: nearestNeighbour (10)
(10) 
line 255: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 256: insert (4)
line 257: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 258: nearestNeighbour (4)
(4) 
line 259: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 260: nearestNeighbour (6)
(6) 
line 261: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 262: kNearestNeighbour 4 (1)
(1) (1) (2) (3) 
line 263: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 264: search (10)
TRUE
line 265: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 266: nearestNeighbour (2)
(2) 
line 267: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 268: kNearestNeighbour 6 (10)
(8) (9) (9) (10) (10) (10) 
line 269: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 270: kNearestNeighbour 1 (5)
(5) 
line 271: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 272: remove (1)
line 273: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 274: nearestNeighbour (8)
(8) 
line 275: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 276: kNearestNeighbour 3 (1)
(1) (2) (3) 
line 277: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 278: nearestNeighbour (3)
(3) 
line 279: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 280: insert (5)
line 281: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 282: clear
line 283: buildTree 4
(1) (1) (2) (7) 
line 284: inorderTraversal
(1) (1) (2) (7) 
line 285: kNearestNeighbour 1 (4)
(2) 
line 286: inorderTraversal
(1) (1) (2) (7) 
line 287: clear
line 288: buildTree 10
(5) (10) (5) (4) (5) (4) (9) (3) (7) (6) 
line 289: inorderTraversal
(3) (4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 290: remove (2)
line 291: inorderTraversal
(3) (4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 292: kNearestNeighbour 1 (6)
(6) 
line 293: inorderTraversal
(3) (4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 294: preorderTraversal
(5) (4) (3) (4) (6) (5) (5) (9) (7) (10) 
line 295: inorderTraversal
(3) (4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 296: kNearestNeighbour 9 (10)
(4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 297: inorderTraversal
(3) (4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 298: nearestNeighbour (1)
(3) 
line 299: inorderTraversal
(3) (4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 300: insert (1)
line 301: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (6) (7) (9) (10) 
line 302: remove (5)
line 303: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (7) (9) (10) 
line 304: nearestNeighbour (2)
(1) 
line 305: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (7) (9) (10) 
line 306: insert (2)
line 307: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (7) (9) (10) 
line 308: insert (1)
line 309: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (7) (9) (10) 
line 310: insert (1)
line 311: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (6) (7) (9) (10) 
line 312: kNearestNeighbour 5 (10)
(5) (6) (7) (9) (10) 
line 313: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (6) (7) (9) (10) 
line 314: remove (4)
line 315: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (9) (10) 
line 316: kNearestNeighbour 9 (6)
(2) (3) (4) (5) (5) (6) (7) (9) (10) 
line 317: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (9) (10) 
line 318: kNearestNeighbour 7 (4)
(1) (2) (3) (4) (5) (5) (6) 
line 319: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (9) (10) 
line 320: nearestNeighbour (6)
(6) 
line 321: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (9) (10) 
line 322: insert (8)
line 323: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (8) (9) (10) 
line 324: insert (2)
line 325: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (8) (9) (10) 
line 326: insert (2)
line 327: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (7) (8) (9) (10) 
line 328: kNearestNeighbour 5 (8)
(6) (7) (8) (9) (10) 
line 329: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (7) (8) (9) (10) 
line 330: insert (7)
line 331: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (7) (7) (8) (9) (10) 
line 332: insert (7)
line 333: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (9) (10) 
line 334: clear
line 335: buildTree 12
(2) (4) (7) (2) (8) (5) (9) (5) (9) (9) (1) (1) 
line 336: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (8) (9) (9) (9) 
line 337: insert (7)
line 338: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (7) (8) (9) (9) (9) 
line 339: kNearestNeighbour 10 (1)
(1) (1) (2) (2) (4) (5) (5) (7) (7) (8) 
line 340: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (7) (8) (9) (9) (9) 
line 341: search (6)
FALSE
line 342: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (7) (8) (9) (9) (9) 
line 343: kNearestNeighbour 7 (5)
(2) (4) (5) (5) (7) (7) (8) 
line 344: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (7) (8) (9) (9) (9) 
line 345: insert (3)
line 346: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (7) (7) (8) (9) (9) (9) 
line 347: insert (6)
line 348: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) 
line 349: kNearestNeighbour 10 (1)
(1) (1) (2) (2) (3) (4) (5) (5) (6) (7) 
line 350: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) 
line 351: insert (5)
line 352: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) 
line 353: nearestNeighbour (3)
(3) 
line 354: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) 
line 355: insert (10)
line 356: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) 
line 357: kNearestNeighbour 7 (9)
(7) (7) (8) (9) (9) (9) (10) 
line 358: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) 
line 359: kNearestNeighbour 9 (1)
(1) (1) (2) (2) (3) (4) (5) (5) (5) 
line 360: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) 
line 361: insert (9)
line 362: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 363: kNearestNeighbour 7 (5)
(4) (5) (5) (5) (6) (7) (7) 
line 364: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 365: insert (3)
line 366: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 367: insert (5)
line 368: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 369: remove (3)
line 370: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 371: kNearestNeighbour 7 (9)
(7) (8) (9) (9) (9) (9) (10) 
line 372: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 373: search (7)
TRUE
line 374: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 375: remove (7)
line 376: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) 
line 377: insert (1)
line 378: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) 
line 379: insert (6)
line 380: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (9) (10) 
line 381: insert (1)
line 382: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (4) (5) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (9) (10) 
line 383: clear
line 384: buildTree 6
(5) (6) (5) (1) (4) (2) 
line 385: inorderTraversal
(1) (2) (4) (5) (5) (6) 
line 386: nearestNeighbour (1)
(1) 
line 387: inorderTraversal
(1) (2) (4) (5) (5) (6) 
line 388: nearestNeighbour (10)
(6) 
line 389: inorderTraversal
(1) (2) (4) (5) (5) (6) 
line 390: kNearestNeighbour 8 (2)
(1) (2) (4) (5) (5) (6) 
line 391: inorderTraversal
(1) (2) (4) (5) (5) (6) 
line 392: kNearestNeighbour 5 (5)
(2) (4) (5) (5) (6) 
line 393: inorderTraversal
(1) (2) (4) (5) (5) (6) 
line 394: insert (9)
line 395: inorderTraversal
(1) (2) (4) (5) (5) (6) (9) 
line 396: kNearestNeighbour 6 (4)
(1) (2) (4) (5) (5) (6) 
line 397: inorderTraversal
(1) (2) (4) (5) (5) (6) (9) 
line 398: nearestNeighbour (5)
(5) 
line 399: inorderTraversal
(1) (2) (4) (5) (5) (6) (9) 
line 400: nearestNeighbour (9)
(9) 
line 401: inorderTraversal
(1) (2) (4) (5) (5) (6) (9) 
line 402: remove (1)
line 403: inorderTraversal
(2) (4) (5) (5) (6) (9) 
line 404: insert (5)
line 405: inorderTraversal
(2) (4) (5) (5) (5) (6) (9) 
line 406: kNearestNeighbour 10 (1)
(2) (4) (5) (5) (5) (6) (9) 
line 407: inorderTraversal
(2) (4) (5) (5) (5) (6) (9) 
line 408: kNearestNeighbour 1 (4)
(4) 
line 409: inorderTraversal
(2) (4) (5) (5) (5) (6) (9) 
line 410: insert (2)
line 411: inorderTraversal
(2) (2) (4) (5) (5) (5) (6) (9) 
line 412: insert (2)
line 413: inorderTraversal
(2) (2) (2) (4) (5) (5) (5) (6) (9) 
line 414: kNearestNeighbour 9 (1)
(2) (2) (2) (4) (5) (5) (5) (6) (9) 
line 415: inorderTraversal
(2) (2) (2) (4) (5) (5) (5) (6) (9) 
line 416: remove (5)
line 417: inorderTraversal
(2) (2) (2) (4) (5) (5) (6) (9) 
line 418: nodeCount_height_leafCount
nodeCount=8;height=5;leafCount=2
line 419: inorderTraversal
(2) (2) (2) (4) (5) (5) (6) (9) 
line 420: preorderTraversal
(4) (2) (2) (2) (5) (5) (6) (9) 
line 421: postorderTraversal
(2) (2) (2) (9) (6) (5) (5) (4) 
line 422: clear
