line 1: k=1
line 2: insert (6)
line 3: inorderTraversal
(6) 
line 4: nearestNeighbour (7)
(6) 
line 5: inorderTraversal
(6) 
line 6: kNearestNeighbour 9 (10)
(6) 
line 7: inorderTraversal
(6) 
line 8: clear
line 9: buildTree 13
(8) (10) (7) (10) (7) (7) (7) (1) (5) (6) (1) (4) (1) 
line 10: inorderTraversal
(1) (1) (1) (4) (5) (6) (7) (7) (7) (7) (8) (10) (10) 
line 11: insert (1)
line 12: inorderTraversal
(1) (1) (1) (1) (4) (5) (6) (7) (7) (7) (7) (8) (10) (10) 
line 13: nearestNeighbour (1)
(1) 
line 14: inorderTraversal
(1) (1) (1) (1) (4) (5) (6) (7) (7) (7) (7) (8) (10) (10) 
line 15: remove (8)
line 16: inorderTraversal
(1) (1) (1) (1) (4) (5) (6) (7) (7) (7) (7) (10) (10) 
line 17: remove (5)
line 18: inorderTraversal
(1) (1) (1) (1) (4) (6) (7) (7) (7) (7) (10) (10) 
line 19: clear
line 20: buildTree 7
(7) (1) (1) (1) (4) (8) (2) 
line 21: inorderTraversal
(1) (1) (1) (2) (4) (7) (8) 
line 22: remove (7)
line 23: inorderTraversal
(1) (1) (1) (2) (4) (8) 
line 24: search (2)
TRUE
line 25: inorderTraversal
(1) (1) (1) (2) (4) (8) 
line 26: insert (4)
line 27: inorderTraversal
(1) (1) (1) (2) (4) (4) (8) 
line 28: insert (2)
line 29: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (8) 
line 30: nearestNeighbour (8)
(8) 
line 31: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (8) 
line 32: kNearestNeighbour 9 (1)
(1) (1) (1) (2) (2) (4) (4) (8) 
line 33: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (8) 
line 34: insert (4)
line 35: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (8) 
line 36: kNearestNeighbour 7 (10)
(1) (2) (2) (4) (4) (4) (8) 
line 37: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (8) 
line 38: insert (9)
line 39: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (8) (9) 
line 40: insert (6)
line 41: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (4) (6) (8) (9) 
line 42: clear
line 43: buildTree 4
(1) (5) (2) (4) 
line 44: inorderTraversal
(1) (2) (4) (5) 
line 45: insert (7)
line 46: inorderTraversal
(1) (2) (4) (5) (7) 
line 47: insert (3)
line 48: inorderTraversal
(1) (2) (3) (4) (5) (7) 
line 49: insert (7)
line 50: inorderTraversal
(1) (2) (3) (4) (5) (7) (7) 
line 51: nearestNeighbour (9)
(7) 
line 52: inorderTraversal
(1) (2) (3) (4) (5) (7) (7) 
line 53: insert (6)
line 54: inorderTraversal
(1) (2) (3) (4) (5) (6) (7) (7) 
line 55: kNearestNeighbour 1 (3)
(3) 
line 56: inorderTraversal
(1) (2) (3) (4) (5) (6) (7) (7) 
line 57: kNearestNeighbour 1 (3)
(3) 
line 58: inorderTraversal
(1) (2) (3) (4) (5) (6) (7) (7) 
line 59: nearestNeighbour (4)
(4) 
line 60: inorderTraversal
(1) (2) (3) (4) (5) (6) (7) (7) 
line 61: clear
line 62: buildTree 5
(6) (1) (10) (9) (8) 
line 63: inorderTraversal
(1) (6) (8) (9) (10) 
line 64: kNearestNeighbour 10 (4)
(1) (6) (8) (9) (10) 
line 65: inorderTraversal
(1) (6) (8) (9) (10) 
line 66: kNearestNeighbour 7 (10)
(1) (6) (8) (9) (10) 
line 67: inorderTraversal
(1) (6) (8) (9) (10) 
line 68: nearestNeighbour (2)
(1) 
line 69: inorderTraversal
(1) (6) (8) (9) (10) 
line 70: insert (8)
line 71: inorderTraversal
(1) (6) (8) (8) (9) (10) 
line 72: insert (6)
line 73: inorderTraversal
(1) (6) (6) (8) (8) (9) (10) 
line 74: insert (7)
line 75: inorderTraversal
(1) (6) (6) (7) (8) (8) (9) (10) 
line 76: nearestNeighbour (10)
(10) 
line 77: inorderTraversal
(1) (6) (6) (7) (8) (8) (9) (10) 
line 78: kNearestNeighbour 7 (9)
(6) (6) (7) (8) (8) (9) (10) 
line 79: inorderTraversal
(1) (6) (6) (7) (8) (8) (9) (10) 
line 80: insert (2)
line 81: inorderTraversal
(1) (2) (6) (6) (7) (8) (8) (9) (10) 
line 82: remove (6)
line 83: inorderTraversal
(1) (2) (6) (7) (8) (8) (9) (10) 
line 84: insert (9)
line 85: inorderTraversal
(1) (2) (6) (7) (8) (8) (9) (9) (10) 
line 86: insert (7)
line 87: inorderTraversal
(1) (2) (6) (7) (7) (8) (8) (9) (9) (10) 
line 88: clear
line 89: buildTree 1
(5) 
line 90: inorderTraversal
(5) 
line 91: remove (5)
line 92: inorderTraversal

line 93: insert (6)
line 94: inorderTraversal
(6) 
line 95: clear
line 96: buildTree 6
(4) (8) (6) (9) (1) (1) 
line 97: inorderTraversal
(1) (1) (4) (6) (8) (9) 
line 98: clear
line 99: buildTree 10
(9) (6) (7) (2) (8) (7) (9) (10) (3) (3) 
line 100: inorderTraversal
(2) (3) (3) (6) (7) (7) (8) (9) (9) (10) 
line 101: remove (9)
line 102: inorderTraversal
(2) (3) (3) (6) (7) (7) (8) (9) (10) 
line 103: nearestNeighbour (7)
(7) 
line 104: inorderTraversal
(2) (3) (3) (6) (7) (7) (8) (9) (10) 
line 105: insert (8)
line 106: inorderTraversal
(2) (3) (3) (6) (7) (7) (8) (8) (9) (10) 
line 107: remove (3)
line 108: inorderTraversal
(2) (3) (6) (7) (7) (8) (8) (9) (10) 
line 109: insert (10)
line 110: inorderTraversal
(2) (3) (6) (7) (7) (8) (8) (9) (10) (10) 
line 111: insert (5)
line 112: inorderTraversal
(2) (3) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 113: kNearestNeighbour 10 (6)
(2) (3) (5) (6) (7) (7) (8) (8) (9) (10) 
line 114: inorderTraversal
(2) (3) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 115: insert (1)
line 116: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 117: insert (1)
line 118: inorderTraversal
(1) (1) (2) (3) (5) (6) (7) (7) (8) (8) (9) (10) (10) 
line 119: insert (6)
line 120: inorderTraversal
(1) (1) (2) (3) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 121: search (9)
TRUE
line 122: inorderTraversal
(1) (1) (2) (3) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 123: kNearestNeighbour 5 (10)
(8) (8) (9) (10) (10) 
line 124: inorderTraversal
(1) (1) (2) (3) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 125: remove (9)
line 126: inorderTraversal
(1) (1) (2) (3) (5) (6) (6) (7) (7) (8) (8) (10) (10) 
line 127: insert (6)
line 128: inorderTraversal
(1) (1) (2) (3) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 129: insert (3)
line 130: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 131: nearestNeighbour (2)
(2) 
line 132: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 133: remove (1)
line 134: inorderTraversal
(1) (2) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 135: nearestNeighbour (7)
(7) 
line 136: inorderTraversal
(1) (2) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 137: insert (2)
line 138: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 139: kNearestNeighbour 9 (8)
(6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 140: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 141: insert (10)
line 142: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) 
line 143: nodeCount_height_leafCount
nodeCount=16;height=5;leafCount=6
line 144: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) (10) 
line 145: insert (7)
line 146: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) (10) 
line 147: nearestNeighbour (7)
(7) 
line 148: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) (10) 
line 149: kNearestNeighbour 7 (2)
(1) (2) (2) (3) (3) (5) (6) 
line 150: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) (10) 
line 151: insert (8)
line 152: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 153: nearestNeighbour (4)
(3) 
line 154: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 155: nearestNeighbour (10)
(10) 
line 156: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) (10) 
line 157: clear
line 158: buildTree 17
(1) (1) (4) (4) (2) (7) (2) (7) (8) (3) (2) (3) (7) (2) (9) (9) (5) 
line 159: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (7) (7) (7) (8) (9) (9) 
line 160: clear
line 161: buildTree 9
(5) (8) (2) (9) (6) (1) (2) (8) (9) 
line 162: inorderTraversal
(1) (2) (2) (5) (6) (8) (8) (9) (9) 
line 163: insert (10)
line 164: inorderTraversal
(1) (2) (2) (5) (6) (8) (8) (9) (9) (10) 
line 165: nearestNeighbour (2)
(2) 
line 166: inorderTraversal
(1) (2) (2) (5) (6) (8) (8) (9) (9) (10) 
line 167: kNearestNeighbour 10 (2)
(1) (2) (2) (5) (6) (8) (8) (9) (9) (10) 
line 168: inorderTraversal
(1) (2) (2) (5) (6) (8) (8) (9) (9) (10) 
line 169: insert (2)
line 170: inorderTraversal
(1) (2) (2) (2) (5) (6) (8) (8) (9) (9) (10) 
line 171: insert (10)
line 172: inorderTraversal
(1) (2) (2) (2) (5) (6) (8) (8) (9) (9) (10) (10) 
line 173: nodeCount_height_leafCount
nodeCount=12;height=6;leafCount=4
line 174: inorderTraversal
(1) (2) (2) (2) (5) (6) (8) (8) (9) (9) (10) (10) 
line 175: kNearestNeighbour 4 (7)
(6) (8) (8) (9) 
line 176: inorderTraversal
(1) (2) (2) (2) (5) (6) (8) (8) (9) (9) (10) (10) 
line 177: insert (8)
line 178: inorderTraversal
(1) (2) (2) (2) (5) (6) (8) (8) (8) (9) (9) (10) (10) 
line 179: insert (2)
line 180: inorderTraversal
(1) (2) (2) (2) (2) (5) (6) (8) (8) (8) (9) (9) (10) (10) 
line 181: clear
line 182: buildTree 15
(7) (6) (5) (3) (4) (1) (5) (6) (3) (10) (8) (3) (6) (6) (10) 
line 183: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (10) (10) 
line 184: kNearestNeighbour 9 (5)
(3) (3) (4) (5) (5) (6) (6) (6) (6) 
line 185: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (10) (10) 
line 186: nearestNeighbour (3)
(3) 
line 187: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (10) (10) 
line 188: insert (9)
line 189: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (9) (10) (10) 
line 190: insert (9)
line 191: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (9) (9) (10) (10) 
line 192: clear
line 193: buildTree 10
(7) (7) (10) (7) (3) (2) (1) (8) (5) (3) 
line 194: inorderTraversal
(1) (2) (3) (3) (5) (7) (7) (7) (8) (10) 
line 195: remove (3)
line 196: inorderTraversal
(1) (2) (3) (5) (7) (7) (7) (8) (10) 
line 197: nearestNeighbour (3)
(3) 
line 198: inorderTraversal
(1) (2) (3) (5) (7) (7) (7) (8) (10) 
line 199: search (8)
TRUE
line 200: inorderTraversal
(1) (2) (3) (5) (7) (7) (7) (8) (10) 
line 201: postorderTraversal
(1) (3) (2) (7) (10) (8) (7) (7) (5) 
line 202: inorderTraversal
(1) (2) (3) (5) (7) (7) (7) (8) (10) 
line 203: insert (1)
line 204: inorderTraversal
(1) (1) (2) (3) (5) (7) (7) (7) (8) (10) 
line 205: insert (8)
line 206: inorderTraversal
(1) (1) (2) (3) (5) (7) (7) (7) (8) (8) (10) 
line 207: insert (1)
line 208: inorderTraversal
(1) (1) (1) (2) (3) (5) (7) (7) (7) (8) (8) (10) 
line 209: postorderTraversal
(1) (1) (1) (3) (2) (7) (8) (10) (8) (7) (7) (5) 
line 210: inorderTraversal
(1) (1) (1) (2) (3) (5) (7) (7) (7) (8) (8) (10) 
line 211: clear
line 212: buildTree 8
(9) (4) (10) (2) (1) (2) (3) (8) 
line 213: inorderTraversal
(1) (2) (2) (3) (4) (8) (9) (10) 
line 214: insert (5)
line 215: inorderTraversal
(1) (2) (2) (3) (4) (5) (8) (9) (10) 
line 216: nearestNeighbour (3)
(3) 
line 217: inorderTraversal
(1) (2) (2) (3) (4) (5) (8) (9) (10) 
line 218: kNearestNeighbour 6 (6)
(3) (4) (5) (8) (9) (10) 
line 219: inorderTraversal
(1) (2) (2) (3) (4) (5) (8) (9) (10) 
line 220: search (10)
TRUE
line 221: inorderTraversal
(1) (2) (2) (3) (4) (5) (8) (9) (10) 
line 222: postorderTraversal
(1) (2) (2) (5) (4) (10) (9) (8) (3) 
line 223: inorderTraversal
(1) (2) (2) (3) (4) (5) (8) (9) (10) 
line 224: insert (4)
line 225: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (9) (10) 
line 226: nodeCount_height_leafCount
nodeCount=10;height=5;leafCount=4
line 227: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (9) (10) 
line 228: kNearestNeighbour 1 (10)
(10) 
line 229: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (9) (10) 
line 230: search (5)
TRUE
line 231: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (9) (10) 
line 232: insert (8)
line 233: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 234: kNearestNeighbour 1 (7)
(8) 
line 235: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 236: nearestNeighbour (8)
(8) 
line 237: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 238: postorderTraversal
(1) (2) (2) (4) (5) (4) (8) (10) (9) (8) (3) 
line 239: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 240: nearestNeighbour (9)
(9) 
line 241: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 242: search (5)
TRUE
line 243: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 244: insert (2)
line 245: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 246: nearestNeighbour (1)
(1) 
line 247: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 248: kNearestNeighbour 2 (3)
(3) (4) 
line 249: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 250: insert (10)
line 251: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) (10) 
line 252: kNearestNeighbour 1 (4)
(4) 
line 253: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) (10) 
line 254: insert (2)
line 255: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) (10) 
line 256: insert (7)
line 257: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (7) (8) (8) (9) (10) (10) 
line 258: insert (3)
line 259: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (7) (8) (8) (9) (10) (10) 
line 260: clear
line 261: buildTree 11
(6) (10) (5) (1) (10) (3) (9) (3) (3) (5) (9) 
line 262: inorderTraversal
(1) (3) (3) (3) (5) (5) (6) (9) (9) (10) (10) 
line 263: insert (4)
line 264: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (6) (9) (9) (10) (10) 
line 265: kNearestNeighbour 10 (7)
(3) (3) (4) (5) (5) (6) (9) (9) (10) (10) 
line 266: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (6) (9) (9) (10) (10) 
line 267: insert (1)
line 268: inorderTraversal
(1) (1) (3) (3) (3) (4) (5) (5) (6) (9) (9) (10) (10) 
line 269: remove (5)
line 270: inorderTraversal
(1) (1) (3) (3) (3) (4) (5) (6) (9) (9) (10) (10) 
line 271: nearestNeighbour (1)
(1) 
line 272: inorderTraversal
(1) (1) (3) (3) (3) (4) (5) (6) (9) (9) (10) (10) 
line 273: remove (10)
line 274: inorderTraversal
(1) (1) (3) (3) (3) (4) (5) (6) (9) (9) (10) 
line 275: remove (10)
line 276: inorderTraversal
(1) (1) (3) (3) (3) (4) (5) (6) (9) (9) 
line 277: insert (7)
line 278: inorderTraversal
(1) (1) (3) (3) (3) (4) (5) (6) (7) (9) (9) 
line 279: insert (2)
line 280: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (9) (9) 
line 281: kNearestNeighbour 2 (9)
(9) (9) 
line 282: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (9) (9) 
line 283: nearestNeighbour (8)
(7) 
line 284: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (9) (9) 
line 285: clear
line 286: buildTree 5
(4) (1) (8) (10) (7) 
line 287: inorderTraversal
(1) (4) (7) (8) (10) 
line 288: nearestNeighbour (10)
(10) 
line 289: inorderTraversal
(1) (4) (7) (8) (10) 
line 290: kNearestNeighbour 7 (9)
(1) (4) (7) (8) (10) 
line 291: inorderTraversal
(1) (4) (7) (8) (10) 
line 292: remove (4)
line 293: inorderTraversal
(1) (7) (8) (10) 
line 294: insert (10)
line 295: inorderTraversal
(1) (7) (8) (10) (10) 
line 296: clear
line 297: buildTree 12
(1) (4) (3) (8) (4) (9) (9) (5) (3) (10) (6) (9) 
line 298: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (8) (9) (9) (9) (10) 
line 299: remove (10)
line 300: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (8) (9) (9) (9) 
line 301: insert (8)
line 302: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (8) (8) (9) (9) (9) 
line 303: insert (5)
line 304: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (8) (8) (9) (9) (9) 
line 305: clear
line 306: buildTree 15
(4) (8) (4) (2) (7) (4) (7) (5) (4) (5) (5) (4) (10) (5) (9) 
line 307: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (7) (7) (8) (9) (10) 
line 308: insert (10)
line 309: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (7) (7) (8) (9) (10) (10) 
line 310: postorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (7) (10) (10) (9) (8) (7) (5) 
line 311: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (7) (7) (8) (9) (10) (10) 
line 312: nearestNeighbour (9)
(9) 
line 313: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (7) (7) (8) (9) (10) (10) 
line 314: remove (10)
line 315: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (7) (7) (8) (9) (10) 
line 316: insert (10)
line 317: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (7) (7) (8) (9) (10) (10) 
line 318: insert (6)
line 319: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 320: remove (2)
line 321: inorderTraversal
(4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 322: insert (4)
line 323: inorderTraversal
(4) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 324: insert (1)
line 325: inorderTraversal
(1) (4) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 326: insert (6)
line 327: inorderTraversal
(1) (4) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 328: remove (10)
line 329: inorderTraversal
(1) (4) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (9) (10) 
line 330: insert (10)
line 331: inorderTraversal
(1) (4) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 332: insert (9)
line 333: inorderTraversal
(1) (4) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 334: remove (9)
line 335: inorderTraversal
(1) (4) (4) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 336: clear
line 337: buildTree 18
(1) (8) (10) (6) (6) (7) (4) (5) (4) (5) (8) (2) (1) (8) (9) (3) (1) (5) 
line 338: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 339: insert (6)
line 340: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 341: search (3)
TRUE
line 342: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 343: search (4)
TRUE
line 344: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 345: kNearestNeighbour 7 (2)
(1) (1) (1) (2) (3) (4) (4) 
line 346: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 347: remove (5)
line 348: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 349: insert (4)
line 350: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 351: kNearestNeighbour 5 (1)
(1) (1) (1) (2) (3) 
line 352: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 353: preorderTraversal
(5) (2) (1) (1) (1) (4) (3) (4) (4) (7) (5) (6) (6) (6) (8) (8) (9) (8) (10) 
line 354: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 355: insert (6)
line 356: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) 
line 357: insert (10)
line 358: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 359: nearestNeighbour (5)
(5) 
line 360: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 361: insert (10)
line 362: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 363: insert (8)
line 364: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 365: kNearestNeighbour 6 (2)
(1) (1) (1) (2) (3) (4) 
line 366: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 367: nearestNeighbour (7)
(7) 
line 368: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 369: nearestNeighbour (2)
(2) 
line 370: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 371: nearestNeighbour (4)
(4) 
line 372: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 373: insert (8)
line 374: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 375: remove (8)
line 376: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 377: kNearestNeighbour 2 (4)
(4) (4) 
line 378: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 379: remove (5)
line 380: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 381: kNearestNeighbour 2 (2)
(2) (3) 
line 382: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 383: insert (9)
line 384: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 385: clear
line 386: buildTree 12
(3) (4) (9) (3) (3) (10) (1) (7) (4) (8) (2) (1) 
line 387: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (7) (8) (9) (10) 
line 388: nearestNeighbour (2)
(2) 
line 389: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (7) (8) (9) (10) 
line 390: remove (2)
line 391: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (7) (8) (9) (10) 
line 392: insert (9)
line 393: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (7) (8) (9) (9) (10) 
line 394: insert (8)
line 395: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (7) (8) (8) (9) (9) (10) 
line 396: search (7)
TRUE
line 397: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (7) (8) (8) (9) (9) (10) 
line 398: kNearestNeighbour 2 (5)
(4) (4) 
line 399: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (7) (8) (8) (9) (9) (10) 
line 400: postorderTraversal
(1) (1) (3) (3) (7) (4) (8) (9) (10) (9) (8) (4) (3) 
line 401: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (7) (8) (8) (9) (9) (10) 
line 402: insert (3)
line 403: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (7) (8) (8) (9) (9) (10) 
line 404: insert (10)
line 405: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (7) (8) (8) (9) (9) (10) (10) 
line 406: insert (10)
line 407: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (7) (8) (8) (9) (9) (10) (10) (10) 
line 408: kNearestNeighbour 9 (2)
(1) (1) (3) (3) (3) (3) (4) (4) (7) 
line 409: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (7) (8) (8) (9) (9) (10) (10) (10) 
line 410: insert (8)
line 411: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 412: kNearestNeighbour 5 (2)
(1) (1) (3) (3) (3) 
line 413: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 414: kNearestNeighbour 5 (3)
(3) (3) (3) (3) (4) 
line 415: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (4) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 416: insert (2)
line 417: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 418: insert (2)
line 419: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 420: nodeCount_height_leafCount
nodeCount=19;height=7;leafCount=6
line 421: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 422: preorderTraversal
(3) (1) (1) (2) (2) (4) (3) (3) (3) (8) (4) (7) (9) (8) (8) (10) (9) (10) (10) 
line 423: postorderTraversal
(2) (2) (1) (1) (3) (3) (3) (7) (4) (8) (8) (9) (10) (10) (10) (9) (8) (4) (3) 
line 424: clear
