line 1: k=1
line 2: insert (10)
line 3: inorderTraversal
(10) 
line 4: insert (2)
line 5: inorderTraversal
(2) (10) 
line 6: clear
line 7: buildTree 3
(3) (10) (7) 
line 8: inorderTraversal
(3) (7) (10) 
line 9: nearestNeighbour (9)
(10) 
line 10: inorderTraversal
(3) (7) (10) 
line 11: kNearestNeighbour 2 (10)
(7) (10) 
line 12: inorderTraversal
(3) (7) (10) 
line 13: insert (8)
line 14: inorderTraversal
(3) (7) (8) (10) 
line 15: kNearestNeighbour 9 (10)
(3) (7) (8) (10) 
line 16: inorderTraversal
(3) (7) (8) (10) 
line 17: nearestNeighbour (2)
(3) 
line 18: inorderTraversal
(3) (7) (8) (10) 
line 19: search (7)
TRUE
line 20: inorderTraversal
(3) (7) (8) (10) 
line 21: clear
line 22: buildTree 18
(3) (10) (1) (8) (9) (2) (9) (4) (2) (7) (6) (1) (3) (10) (5) (10) (2) (9) 
line 23: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 24: kNearestNeighbour 9 (6)
(3) (4) (5) (6) (7) (8) (9) (9) (9) 
line 25: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 26: insert (5)
line 27: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 28: kNearestNeighbour 1 (1)
(1) 
line 29: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 30: kNearestNeighbour 2 (7)
(7) (8) 
line 31: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 32: kNearestNeighbour 8 (6)
(4) (5) (5) (6) (7) (8) (9) (9) 
line 33: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 34: insert (1)
line 35: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 36: insert (6)
line 37: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 38: nearestNeighbour (7)
(7) 
line 39: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 40: insert (5)
line 41: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 42: preorderTraversal
(5) (2) (1) (1) (1) (3) (2) (2) (3) (4) (9) (7) (6) (5) (5) (6) (8) (10) (9) (9) (10) (10) 
line 43: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 44: nearestNeighbour (1)
(1) 
line 45: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 46: nearestNeighbour (4)
(4) 
line 47: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 48: nearestNeighbour (7)
(7) 
line 49: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 50: kNearestNeighbour 4 (4)
(3) (3) (4) (5) 
line 51: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 52: insert (1)
line 53: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 54: kNearestNeighbour 10 (2)
(1) (1) (1) (1) (2) (2) (2) (3) (3) (4) 
line 55: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 56: kNearestNeighbour 8 (6)
(4) (5) (5) (5) (6) (6) (7) (8) 
line 57: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 58: remove (1)
line 59: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 60: insert (4)
line 61: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 62: clear
line 63: buildTree 17
(3) (2) (3) (6) (5) (9) (5) (6) (2) (6) (10) (9) (8) (4) (7) (2) (10) 
line 64: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) (10) 
line 65: insert (6)
line 66: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (9) (9) (10) (10) 
line 67: insert (8)
line 68: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 69: nearestNeighbour (8)
(8) 
line 70: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 71: nearestNeighbour (7)
(7) 
line 72: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 73: insert (10)
line 74: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 75: nodeCount_height_leafCount
nodeCount=20;height=6;leafCount=7
line 76: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 77: nearestNeighbour (7)
(7) 
line 78: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 79: search (3)
TRUE
line 80: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 81: kNearestNeighbour 2 (7)
(6) (7) 
line 82: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 83: clear
line 84: buildTree 17
(3) (7) (6) (4) (8) (3) (1) (9) (8) (3) (10) (8) (4) (5) (6) (10) (1) 
line 85: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 86: remove (1)
line 87: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 88: insert (2)
line 89: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 90: clear
line 91: buildTree 15
(2) (5) (8) (6) (9) (8) (3) (6) (10) (3) (10) (3) (3) (10) (10) 
line 92: inorderTraversal
(2) (3) (3) (3) (3) (5) (6) (6) (8) (8) (9) (10) (10) (10) (10) 
line 93: remove (9)
line 94: inorderTraversal
(2) (3) (3) (3) (3) (5) (6) (6) (8) (8) (10) (10) (10) (10) 
line 95: nearestNeighbour (8)
(8) 
line 96: inorderTraversal
(2) (3) (3) (3) (3) (5) (6) (6) (8) (8) (10) (10) (10) (10) 
line 97: insert (3)
line 98: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (6) (6) (8) (8) (10) (10) (10) (10) 
line 99: nearestNeighbour (3)
(3) 
line 100: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (6) (6) (8) (8) (10) (10) (10) (10) 
line 101: nearestNeighbour (3)
(3) 
line 102: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (6) (6) (8) (8) (10) (10) (10) (10) 
line 103: insert (10)
line 104: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 105: insert (5)
line 106: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) 
line 107: insert (10)
line 108: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) (10) 
line 109: nearestNeighbour (5)
(5) 
line 110: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) (10) 
line 111: insert (10)
line 112: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (8) (8) (10) (10) (10) (10) (10) (10) (10) 
line 113: insert (6)
line 114: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (6) (8) (8) (10) (10) (10) (10) (10) (10) (10) 
line 115: insert (6)
line 116: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (8) (8) (10) (10) (10) (10) (10) (10) (10) 
line 117: insert (8)
line 118: inorderTraversal
(2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) (10) (10) 
line 119: insert (2)
line 120: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) (10) (10) 
line 121: kNearestNeighbour 7 (9)
(8) (8) (8) (10) (10) (10) (10) 
line 122: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) (10) (10) 
line 123: remove (10)
line 124: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) (10) 
line 125: kNearestNeighbour 2 (9)
(8) (8) 
line 126: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) (10) 
line 127: kNearestNeighbour 6 (3)
(2) (3) (3) (3) (3) (3) 
line 128: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) (10) 
line 129: insert (5)
line 130: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) (10) 
line 131: remove (10)
line 132: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 133: insert (4)
line 134: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 135: nearestNeighbour (8)
(8) 
line 136: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 137: insert (3)
line 138: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 139: kNearestNeighbour 6 (7)
(6) (6) (6) (8) (8) (8) 
line 140: inorderTraversal
(2) (2) (3) (3) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 141: insert (1)
line 142: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (6) (8) (8) (8) (10) (10) (10) (10) (10) 
line 143: clear
line 144: buildTree 10
(8) (4) (1) (8) (5) (6) (8) (7) (7) (8) 
line 145: inorderTraversal
(1) (4) (5) (6) (7) (7) (8) (8) (8) (8) 
line 146: nearestNeighbour (5)
(5) 
line 147: inorderTraversal
(1) (4) (5) (6) (7) (7) (8) (8) (8) (8) 
line 148: nearestNeighbour (10)
(8) 
line 149: inorderTraversal
(1) (4) (5) (6) (7) (7) (8) (8) (8) (8) 
line 150: nodeCount_height_leafCount
nodeCount=10;height=5;leafCount=4
line 151: inorderTraversal
(1) (4) (5) (6) (7) (7) (8) (8) (8) (8) 
line 152: clear
line 153: buildTree 14
(1) (4) (1) (9) (2) (9) (9) (4) (3) (8) (3) (10) (1) (4) 
line 154: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (8) (9) (9) (9) (10) 
line 155: insert (8)
line 156: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (8) (8) (9) (9) (9) (10) 
line 157: kNearestNeighbour 9 (5)
(2) (3) (3) (4) (4) (4) (8) (8) (9) 
line 158: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (4) (4) (8) (8) (9) (9) (9) (10) 
line 159: remove (3)
line 160: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (8) (8) (9) (9) (9) (10) 
line 161: nearestNeighbour (2)
(2) 
line 162: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (8) (8) (9) (9) (9) (10) 
line 163: insert (8)
line 164: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (8) (8) (8) (9) (9) (9) (10) 
line 165: clear
line 166: buildTree 16
(4) (9) (3) (8) (6) (5) (7) (7) (4) (7) (6) (6) (6) (1) (1) (3) 
line 167: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) 
line 168: remove (1)
line 169: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) 
line 170: insert (1)
line 171: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) 
line 172: insert (9)
line 173: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 174: insert (5)
line 175: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 176: kNearestNeighbour 6 (6)
(6) (6) (6) (6) (7) (7) 
line 177: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 178: nearestNeighbour (7)
(7) 
line 179: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 180: insert (3)
line 181: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 182: preorderTraversal
(6) (3) (1) (1) (4) (3) (3) (4) (5) (5) (7) (6) (6) (6) (7) (8) (7) (9) (9) 
line 183: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 184: clear
line 185: buildTree 10
(8) (3) (3) (1) (4) (5) (5) (5) (10) (10) 
line 186: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (8) (10) (10) 
line 187: nearestNeighbour (10)
(10) 
line 188: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (8) (10) (10) 
line 189: preorderTraversal
(5) (3) (1) (3) (4) (8) (5) (5) (10) (10) 
line 190: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (8) (10) (10) 
line 191: kNearestNeighbour 5 (6)
(4) (5) (5) (5) (8) 
line 192: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (8) (10) (10) 
line 193: clear
line 194: buildTree 12
(10) (6) (2) (5) (7) (10) (9) (1) (8) (1) (10) (10) 
line 195: inorderTraversal
(1) (1) (2) (5) (6) (7) (8) (9) (10) (10) (10) (10) 
line 196: nearestNeighbour (10)
(10) 
line 197: inorderTraversal
(1) (1) (2) (5) (6) (7) (8) (9) (10) (10) (10) (10) 
line 198: nearestNeighbour (8)
(8) 
line 199: inorderTraversal
(1) (1) (2) (5) (6) (7) (8) (9) (10) (10) (10) (10) 
line 200: postorderTraversal
(1) (1) (6) (5) (2) (9) (8) (10) (10) (10) (10) (7) 
line 201: inorderTraversal
(1) (1) (2) (5) (6) (7) (8) (9) (10) (10) (10) (10) 
line 202: nearestNeighbour (6)
(6) 
line 203: inorderTraversal
(1) (1) (2) (5) (6) (7) (8) (9) (10) (10) (10) (10) 
line 204: remove (3)
line 205: inorderTraversal
(1) (1) (2) (5) (6) (7) (8) (9) (10) (10) (10) (10) 
line 206: remove (10)
line 207: inorderTraversal
(1) (1) (2) (5) (6) (7) (8) (9) (10) (10) (10) 
line 208: insert (4)
line 209: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (8) (9) (10) (10) (10) 
line 210: insert (5)
line 211: inorderTraversal
(1) (1) (2) (4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 212: clear
line 213: buildTree 8
(5) (4) (9) (8) (6) (1) (10) (3) 
line 214: inorderTraversal
(1) (3) (4) (5) (6) (8) (9) (10) 
line 215: kNearestNeighbour 5 (5)
(3) (4) (5) (6) (8) 
line 216: inorderTraversal
(1) (3) (4) (5) (6) (8) (9) (10) 
line 217: insert (10)
line 218: inorderTraversal
(1) (3) (4) (5) (6) (8) (9) (10) (10) 
line 219: insert (5)
line 220: inorderTraversal
(1) (3) (4) (5) (5) (6) (8) (9) (10) (10) 
line 221: insert (10)
line 222: inorderTraversal
(1) (3) (4) (5) (5) (6) (8) (9) (10) (10) (10) 
line 223: kNearestNeighbour 9 (3)
(1) (3) (4) (5) (5) (6) (8) (9) (10) 
line 224: inorderTraversal
(1) (3) (4) (5) (5) (6) (8) (9) (10) (10) (10) 
line 225: insert (6)
line 226: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (8) (9) (10) (10) (10) 
line 227: postorderTraversal
(1) (4) (3) (5) (6) (6) (10) (10) (10) (9) (8) (5) 
line 228: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (8) (9) (10) (10) (10) 
line 229: insert (6)
line 230: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (6) (8) (9) (10) (10) (10) 
line 231: insert (7)
line 232: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (10) (10) (10) 
line 233: insert (9)
line 234: inorderTraversal
(1) (3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (9) (10) (10) (10) 
line 235: clear
line 236: buildTree 17
(8) (5) (6) (3) (1) (5) (5) (9) (6) (2) (7) (10) (9) (8) (4) (10) (1) 
line 237: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 238: clear
line 239: buildTree 15
(3) (3) (8) (7) (4) (6) (9) (2) (4) (5) (3) (9) (6) (4) (5) 
line 240: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 241: search (9)
TRUE
line 242: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 243: nearestNeighbour (3)
(3) 
line 244: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 245: insert (4)
line 246: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 247: kNearestNeighbour 5 (6)
(5) (5) (6) (6) (7) 
line 248: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 249: kNearestNeighbour 2 (2)
(2) (3) 
line 250: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 251: kNearestNeighbour 5 (6)
(5) (5) (6) (6) (7) 
line 252: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 253: nodeCount_height_leafCount
nodeCount=16;height=6;leafCount=7
line 254: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) 
line 255: insert (8)
line 256: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (9) 
line 257: preorderTraversal
(5) (3) (2) (4) (3) (3) (4) (4) (4) (7) (6) (5) (6) (9) (8) (8) (9) 
line 258: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (9) 
line 259: clear
line 260: buildTree 3
(3) (6) (7) 
line 261: inorderTraversal
(3) (6) (7) 
line 262: remove (6)
line 263: inorderTraversal
(3) (7) 
line 264: nearestNeighbour (2)
(3) 
line 265: inorderTraversal
(3) (7) 
line 266: nearestNeighbour (2)
(3) 
line 267: inorderTraversal
(3) (7) 
line 268: insert (8)
line 269: inorderTraversal
(3) (7) (8) 
line 270: insert (3)
line 271: inorderTraversal
(3) (3) (7) (8) 
line 272: insert (6)
line 273: inorderTraversal
(3) (3) (6) (7) (8) 
line 274: insert (6)
line 275: inorderTraversal
(3) (3) (6) (6) (7) (8) 
line 276: clear
line 277: buildTree 13
(10) (9) (8) (1) (8) (8) (7) (10) (2) (6) (3) (3) (7) 
line 278: inorderTraversal
(1) (2) (3) (3) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 279: nearestNeighbour (3)
(3) 
line 280: inorderTraversal
(1) (2) (3) (3) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 281: clear
line 282: buildTree 10
(3) (6) (9) (4) (6) (6) (7) (8) (4) (6) 
line 283: inorderTraversal
(3) (4) (4) (6) (6) (6) (6) (7) (8) (9) 
line 284: kNearestNeighbour 2 (2)
(3) (4) 
line 285: inorderTraversal
(3) (4) (4) (6) (6) (6) (6) (7) (8) (9) 
line 286: nearestNeighbour (6)
(6) 
line 287: inorderTraversal
(3) (4) (4) (6) (6) (6) (6) (7) (8) (9) 
line 288: nearestNeighbour (5)
(4) 
line 289: inorderTraversal
(3) (4) (4) (6) (6) (6) (6) (7) (8) (9) 
line 290: nearestNeighbour (3)
(3) 
line 291: inorderTraversal
(3) (4) (4) (6) (6) (6) (6) (7) (8) (9) 
line 292: kNearestNeighbour 7 (9)
(6) (6) (6) (6) (7) (8) (9) 
line 293: inorderTraversal
(3) (4) (4) (6) (6) (6) (6) (7) (8) (9) 
line 294: remove (6)
line 295: inorderTraversal
(3) (4) (4) (6) (6) (6) (7) (8) (9) 
line 296: remove (9)
line 297: inorderTraversal
(3) (4) (4) (6) (6) (6) (7) (8) 
line 298: clear
line 299: buildTree 18
(7) (6) (7) (10) (1) (9) (6) (7) (1) (8) (9) (9) (5) (8) (6) (1) (3) (1) 
line 300: inorderTraversal
(1) (1) (1) (1) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 301: kNearestNeighbour 6 (9)
(8) (8) (9) (9) (9) (10) 
line 302: inorderTraversal
(1) (1) (1) (1) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 303: insert (2)
line 304: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 305: insert (9)
line 306: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 307: preorderTraversal
(6) (1) (1) (1) (3) (1) (2) (5) (8) (7) (6) (6) (7) (7) (9) (8) (9) (9) (10) (9) 
line 308: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 309: nearestNeighbour (1)
(1) 
line 310: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 311: clear
line 312: buildTree 15
(10) (8) (9) (10) (3) (5) (8) (6) (3) (7) (5) (5) (10) (6) (5) 
line 313: inorderTraversal
(3) (3) (5) (5) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 314: nearestNeighbour (2)
(3) 
line 315: inorderTraversal
(3) (3) (5) (5) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 316: insert (4)
line 317: inorderTraversal
(3) (3) (4) (5) (5) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 318: insert (6)
line 319: inorderTraversal
(3) (3) (4) (5) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 320: clear
line 321: buildTree 11
(3) (3) (10) (7) (6) (10) (9) (3) (6) (8) (9) 
line 322: inorderTraversal
(3) (3) (3) (6) (6) (7) (8) (9) (9) (10) (10) 
line 323: clear
line 324: buildTree 10
(6) (9) (8) (6) (10) (4) (8) (8) (6) (6) 
line 325: inorderTraversal
(4) (6) (6) (6) (6) (8) (8) (8) (9) (10) 
line 326: clear
line 327: buildTree 9
(5) (6) (6) (1) (1) (9) (5) (1) (2) 
line 328: inorderTraversal
(1) (1) (1) (2) (5) (5) (6) (6) (9) 
line 329: clear
line 330: buildTree 9
(6) (2) (8) (5) (7) (10) (9) (6) (6) 
line 331: inorderTraversal
(2) (5) (6) (6) (6) (7) (8) (9) (10) 
line 332: insert (10)
line 333: inorderTraversal
(2) (5) (6) (6) (6) (7) (8) (9) (10) (10) 
line 334: nearestNeighbour (5)
(5) 
line 335: inorderTraversal
(2) (5) (6) (6) (6) (7) (8) (9) (10) (10) 
line 336: clear
line 337: buildTree 18
(10) (10) (2) (6) (7) (2) (10) (3) (3) (1) (1) (4) (5) (10) (10) (3) (2) (9) 
line 338: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (9) (10) (10) (10) (10) (10) 
line 339: kNearestNeighbour 10 (1)
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) 
line 340: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (9) (10) (10) (10) (10) (10) 
line 341: insert (1)
line 342: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (9) (10) (10) (10) (10) (10) 
line 343: insert (1)
line 344: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (9) (10) (10) (10) (10) (10) 
line 345: nearestNeighbour (3)
(3) 
line 346: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (9) (10) (10) (10) (10) (10) 
line 347: insert (5)
line 348: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (9) (10) (10) (10) (10) (10) 
line 349: preorderTraversal
(4) (2) (1) (1) (1) (1) (3) (2) (2) (3) (3) (10) (6) (5) (5) (7) (9) (10) (10) (10) (10) 
line 350: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (9) (10) (10) (10) (10) (10) 
line 351: insert (3)
line 352: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (9) (10) (10) (10) (10) (10) 
line 353: insert (6)
line 354: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (9) (10) (10) (10) (10) (10) 
line 355: insert (1)
line 356: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (9) (10) (10) (10) (10) (10) 
line 357: clear
line 358: buildTree 10
(2) (4) (5) (2) (5) (2) (7) (4) (10) (7) 
line 359: inorderTraversal
(2) (2) (2) (4) (4) (5) (5) (7) (7) (10) 
line 360: insert (6)
line 361: inorderTraversal
(2) (2) (2) (4) (4) (5) (5) (6) (7) (7) (10) 
line 362: clear
line 363: buildTree 8
(1) (8) (1) (4) (3) (10) (7) (10) 
line 364: inorderTraversal
(1) (1) (3) (4) (7) (8) (10) (10) 
line 365: postorderTraversal
(3) (1) (1) (7) (10) (10) (8) (4) 
line 366: inorderTraversal
(1) (1) (3) (4) (7) (8) (10) (10) 
line 367: nearestNeighbour (8)
(8) 
line 368: inorderTraversal
(1) (1) (3) (4) (7) (8) (10) (10) 
line 369: kNearestNeighbour 1 (3)
(3) 
line 370: inorderTraversal
(1) (1) (3) (4) (7) (8) (10) (10) 
line 371: insert (10)
line 372: inorderTraversal
(1) (1) (3) (4) (7) (8) (10) (10) (10) 
line 373: clear
line 374: buildTree 16
(6) (1) (4) (4) (7) (7) (10) (4) (5) (9) (5) (3) (10) (3) (8) (1) 
line 375: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 376: clear
line 377: buildTree 20
(10) (4) (8) (5) (6) (10) (9) (5) (4) (4) (4) (6) (9) (6) (8) (8) (6) (10) (4) (9) 
line 378: inorderTraversal
(4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 379: search (10)
TRUE
line 380: inorderTraversal
(4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 381: nearestNeighbour (2)
(4) 
line 382: inorderTraversal
(4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 383: clear
line 384: buildTree 6
(7) (5) (2) (2) (5) (10) 
line 385: inorderTraversal
(2) (2) (5) (5) (7) (10) 
line 386: insert (7)
line 387: inorderTraversal
(2) (2) (5) (5) (7) (7) (10) 
line 388: insert (6)
line 389: inorderTraversal
(2) (2) (5) (5) (6) (7) (7) (10) 
line 390: insert (6)
line 391: inorderTraversal
(2) (2) (5) (5) (6) (6) (7) (7) (10) 
line 392: insert (1)
line 393: inorderTraversal
(1) (2) (2) (5) (5) (6) (6) (7) (7) (10) 
line 394: kNearestNeighbour 1 (6)
(6) 
line 395: inorderTraversal
(1) (2) (2) (5) (5) (6) (6) (7) (7) (10) 
line 396: kNearestNeighbour 10 (10)
(1) (2) (2) (5) (5) (6) (6) (7) (7) (10) 
line 397: inorderTraversal
(1) (2) (2) (5) (5) (6) (6) (7) (7) (10) 
line 398: kNearestNeighbour 6 (3)
(1) (2) (2) (5) (5) (6) 
line 399: inorderTraversal
(1) (2) (2) (5) (5) (6) (6) (7) (7) (10) 
line 400: nearestNeighbour (3)
(2) 
line 401: inorderTraversal
(1) (2) (2) (5) (5) (6) (6) (7) (7) (10) 
line 402: remove (5)
line 403: inorderTraversal
(1) (2) (2) (5) (6) (6) (7) (7) (10) 
line 404: postorderTraversal
(1) (2) (2) (6) (6) (7) (10) (7) (5) 
line 405: inorderTraversal
(1) (2) (2) (5) (6) (6) (7) (7) (10) 
line 406: search (6)
TRUE
line 407: inorderTraversal
(1) (2) (2) (5) (6) (6) (7) (7) (10) 
line 408: kNearestNeighbour 6 (10)
(5) (6) (6) (7) (7) (10) 
line 409: inorderTraversal
(1) (2) (2) (5) (6) (6) (7) (7) (10) 
line 410: insert (6)
line 411: inorderTraversal
(1) (2) (2) (5) (6) (6) (6) (7) (7) (10) 
line 412: nearestNeighbour (9)
(10) 
line 413: inorderTraversal
(1) (2) (2) (5) (6) (6) (6) (7) (7) (10) 
line 414: kNearestNeighbour 8 (6)
(2) (5) (6) (6) (6) (7) (7) (10) 
line 415: inorderTraversal
(1) (2) (2) (5) (6) (6) (6) (7) (7) (10) 
line 416: nodeCount_height_leafCount
nodeCount=10;height=5;leafCount=4
line 417: inorderTraversal
(1) (2) (2) (5) (6) (6) (6) (7) (7) (10) 
line 418: insert (8)
line 419: inorderTraversal
(1) (2) (2) (5) (6) (6) (6) (7) (7) (8) (10) 
line 420: insert (6)
line 421: inorderTraversal
(1) (2) (2) (5) (6) (6) (6) (6) (7) (7) (8) (10) 
line 422: nodeCount_height_leafCount
nodeCount=12;height=6;leafCount=4
line 423: inorderTraversal
(1) (2) (2) (5) (6) (6) (6) (6) (7) (7) (8) (10) 
line 424: kNearestNeighbour 1 (5)
(5) 
line 425: inorderTraversal
(1) (2) (2) (5) (6) (6) (6) (6) (7) (7) (8) (10) 
line 426: search (6)
TRUE
line 427: inorderTraversal
(1) (2) (2) (5) (6) (6) (6) (6) (7) (7) (8) (10) 
line 428: insert (3)
line 429: inorderTraversal
(1) (2) (2) (3) (5) (6) (6) (6) (6) (7) (7) (8) (10) 
line 430: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=4
line 431: inorderTraversal
(1) (2) (2) (3) (5) (6) (6) (6) (6) (7) (7) (8) (10) 
line 432: preorderTraversal
(5) (2) (1) (2) (3) (7) (6) (6) (6) (6) (10) (7) (8) 
line 433: postorderTraversal
(1) (3) (2) (2) (6) (6) (6) (6) (8) (7) (10) (7) (5) 
line 434: clear
