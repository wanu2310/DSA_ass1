line 1: k=1
line 2: remove (5)
line 3: inorderTraversal

line 4: kNearestNeighbour 4 (6)

line 5: inorderTraversal

line 6: kNearestNeighbour 7 (8)

line 7: inorderTraversal

line 8: nearestNeighbour (7)

line 9: inorderTraversal

line 10: clear
line 11: buildTree 2
(2) (7) 
line 12: inorderTraversal
(2) (7) 
line 13: kNearestNeighbour 4 (1)
(2) (7) 
line 14: inorderTraversal
(2) (7) 
line 15: remove (2)
line 16: inorderTraversal
(7) 
line 17: kNearestNeighbour 2 (3)
(7) 
line 18: inorderTraversal
(7) 
line 19: nearestNeighbour (7)
(7) 
line 20: inorderTraversal
(7) 
line 21: kNearestNeighbour 6 (2)
(7) 
line 22: inorderTraversal
(7) 
line 23: insert (1)
line 24: inorderTraversal
(1) (7) 
line 25: nearestNeighbour (8)
(7) 
line 26: inorderTraversal
(1) (7) 
line 27: kNearestNeighbour 4 (4)
(1) (7) 
line 28: inorderTraversal
(1) (7) 
line 29: insert (10)
line 30: inorderTraversal
(1) (7) (10) 
line 31: nodeCount_height_leafCount
nodeCount=3;height=2;leafCount=2
line 32: inorderTraversal
(1) (7) (10) 
line 33: kNearestNeighbour 8 (1)
(1) (7) (10) 
line 34: inorderTraversal
(1) (7) (10) 
line 35: insert (2)
line 36: inorderTraversal
(1) (2) (7) (10) 
line 37: postorderTraversal
(2) (1) (10) (7) 
line 38: inorderTraversal
(1) (2) (7) (10) 
line 39: nearestNeighbour (5)
(7) 
line 40: inorderTraversal
(1) (2) (7) (10) 
line 41: insert (1)
line 42: inorderTraversal
(1) (1) (2) (7) (10) 
line 43: nearestNeighbour (2)
(2) 
line 44: inorderTraversal
(1) (1) (2) (7) (10) 
line 45: clear
line 46: buildTree 18
(4) (2) (4) (8) (7) (6) (5) (5) (3) (6) (10) (4) (7) (4) (7) (3) (8) (7) 
line 47: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (10) 
line 48: insert (9)
line 49: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) 
line 50: remove (7)
line 51: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 52: insert (7)
line 53: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) 
line 54: nearestNeighbour (9)
(9) 
line 55: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) 
line 56: clear
line 57: buildTree 10
(5) (7) (5) (6) (5) (8) (5) (4) (4) (1) 
line 58: inorderTraversal
(1) (4) (4) (5) (5) (5) (5) (6) (7) (8) 
line 59: kNearestNeighbour 1 (10)
(8) 
line 60: inorderTraversal
(1) (4) (4) (5) (5) (5) (5) (6) (7) (8) 
line 61: nearestNeighbour (10)
(8) 
line 62: inorderTraversal
(1) (4) (4) (5) (5) (5) (5) (6) (7) (8) 
line 63: nearestNeighbour (4)
(4) 
line 64: inorderTraversal
(1) (4) (4) (5) (5) (5) (5) (6) (7) (8) 
line 65: kNearestNeighbour 1 (1)
(1) 
line 66: inorderTraversal
(1) (4) (4) (5) (5) (5) (5) (6) (7) (8) 
line 67: insert (9)
line 68: inorderTraversal
(1) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) 
line 69: search (4)
TRUE
line 70: inorderTraversal
(1) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) 
line 71: nearestNeighbour (4)
(4) 
line 72: inorderTraversal
(1) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) 
line 73: insert (3)
line 74: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) 
line 75: nearestNeighbour (5)
(5) 
line 76: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) 
line 77: insert (4)
line 78: inorderTraversal
(1) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) 
line 79: kNearestNeighbour 2 (8)
(8) (9) 
line 80: inorderTraversal
(1) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (8) (9) 
line 81: insert (5)
line 82: inorderTraversal
(1) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) 
line 83: insert (9)
line 84: inorderTraversal
(1) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) 
line 85: remove (1)
line 86: inorderTraversal
(3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) 
line 87: remove (4)
line 88: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) 
line 89: nodeCount_height_leafCount
nodeCount=13;height=7;leafCount=4
line 90: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) 
line 91: nearestNeighbour (1)
(3) 
line 92: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) 
line 93: insert (9)
line 94: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) (9) 
line 95: kNearestNeighbour 10 (6)
(4) (4) (5) (5) (5) (5) (5) (6) (7) (8) 
line 96: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) (9) 
line 97: kNearestNeighbour 5 (4)
(3) (4) (4) (5) (5) 
line 98: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) (9) 
line 99: insert (5)
line 100: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) (9) 
line 101: postorderTraversal
(3) (4) (4) (5) (5) (5) (5) (9) (9) (9) (8) (7) (6) (5) (5) 
line 102: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) (9) 
line 103: nearestNeighbour (9)
(9) 
line 104: inorderTraversal
(3) (4) (4) (5) (5) (5) (5) (5) (5) (6) (7) (8) (9) (9) (9) 
line 105: clear
line 106: buildTree 6
(1) (1) (8) (6) (3) (6) 
line 107: inorderTraversal
(1) (1) (3) (6) (6) (8) 
line 108: clear
line 109: buildTree 16
(7) (2) (4) (3) (10) (7) (4) (8) (1) (9) (2) (5) (1) (7) (6) (9) 
line 110: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) 
line 111: remove (7)
line 112: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (10) 
line 113: kNearestNeighbour 6 (3)
(1) (2) (2) (3) (4) (4) 
line 114: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (7) (7) (8) (9) (9) (10) 
line 115: insert (4)
line 116: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (7) (8) (9) (9) (10) 
line 117: insert (9)
line 118: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (7) (8) (9) (9) (9) (10) 
line 119: insert (6)
line 120: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 121: remove (5)
line 122: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (10) 
line 123: insert (9)
line 124: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 125: insert (6)
line 126: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 127: insert (9)
line 128: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (9) (10) 
line 129: clear
line 130: buildTree 8
(7) (5) (2) (4) (3) (2) (1) (7) 
line 131: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) 
line 132: insert (10)
line 133: inorderTraversal
(1) (2) (2) (3) (4) (5) (7) (7) (10) 
line 134: remove (4)
line 135: inorderTraversal
(1) (2) (2) (3) (5) (7) (7) (10) 
line 136: remove (7)
line 137: inorderTraversal
(1) (2) (2) (3) (5) (7) (10) 
line 138: insert (6)
line 139: inorderTraversal
(1) (2) (2) (3) (5) (6) (7) (10) 
line 140: insert (3)
line 141: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (7) (10) 
line 142: insert (8)
line 143: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (7) (8) (10) 
line 144: nearestNeighbour (8)
(8) 
line 145: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (7) (8) (10) 
line 146: insert (1)
line 147: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (7) (8) (10) 
line 148: nearestNeighbour (2)
(2) 
line 149: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (7) (8) (10) 
line 150: insert (2)
line 151: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (7) (8) (10) 
line 152: insert (5)
line 153: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (5) (6) (7) (8) (10) 
line 154: clear
line 155: buildTree 19
(10) (5) (5) (5) (5) (9) (6) (8) (9) (1) (8) (1) (6) (2) (4) (5) (8) (8) (6) 
line 156: inorderTraversal
(1) (1) (2) (4) (5) (5) (5) (5) (5) (6) (6) (6) (8) (8) (8) (8) (9) (9) (10) 
line 157: insert (3)
line 158: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (5) (5) (5) (6) (6) (6) (8) (8) (8) (8) (9) (9) (10) 
line 159: clear
line 160: buildTree 20
(2) (4) (1) (4) (10) (2) (2) (9) (2) (3) (8) (2) (1) (5) (6) (1) (7) (6) (1) (8) 
line 161: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (8) (8) (9) (10) 
line 162: insert (8)
line 163: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (2) (2) (3) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 164: clear
line 165: buildTree 12
(8) (10) (6) (8) (2) (5) (1) (7) (9) (9) (8) (10) 
line 166: inorderTraversal
(1) (2) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 167: insert (8)
line 168: inorderTraversal
(1) (2) (5) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 169: kNearestNeighbour 6 (4)
(1) (2) (5) (6) (7) (8) 
line 170: inorderTraversal
(1) (2) (5) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 171: remove (8)
line 172: inorderTraversal
(1) (2) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 173: nearestNeighbour (10)
(10) 
line 174: inorderTraversal
(1) (2) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 175: nearestNeighbour (3)
(2) 
line 176: inorderTraversal
(1) (2) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 177: insert (4)
line 178: inorderTraversal
(1) (2) (4) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 179: kNearestNeighbour 10 (9)
(5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 180: inorderTraversal
(1) (2) (4) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 181: nearestNeighbour (2)
(2) 
line 182: inorderTraversal
(1) (2) (4) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 183: nearestNeighbour (2)
(2) 
line 184: inorderTraversal
(1) (2) (4) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 185: kNearestNeighbour 3 (3)
(1) (2) (4) 
line 186: inorderTraversal
(1) (2) (4) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 187: clear
line 188: buildTree 16
(9) (4) (5) (5) (2) (7) (1) (3) (3) (10) (6) (5) (6) (8) (4) (7) 
line 189: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (10) 
line 190: kNearestNeighbour 4 (10)
(7) (8) (9) (10) 
line 191: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (10) 
line 192: insert (4)
line 193: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (10) 
line 194: kNearestNeighbour 4 (8)
(7) (7) (8) (9) 
line 195: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (10) 
line 196: search (4)
TRUE
line 197: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (10) 
line 198: insert (9)
line 199: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 200: kNearestNeighbour 8 (8)
(6) (6) (7) (7) (8) (9) (9) (10) 
line 201: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 202: kNearestNeighbour 9 (5)
(4) (4) (4) (5) (5) (5) (6) (6) (7) 
line 203: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 204: nearestNeighbour (9)
(9) 
line 205: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 206: nearestNeighbour (4)
(4) 
line 207: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 208: insert (6)
line 209: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (10) 
line 210: insert (10)
line 211: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 212: remove (8)
line 213: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (10) (10) 
line 214: nearestNeighbour (6)
(6) 
line 215: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (10) (10) 
line 216: insert (10)
line 217: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 218: insert (1)
line 219: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 220: nodeCount_height_leafCount
nodeCount=21;height=7;leafCount=7
line 221: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 222: search (6)
TRUE
line 223: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 224: insert (6)
line 225: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 226: kNearestNeighbour 10 (1)
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) 
line 227: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 228: insert (7)
line 229: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 230: kNearestNeighbour 9 (7)
(6) (6) (6) (6) (7) (7) (7) (9) (9) 
line 231: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 232: kNearestNeighbour 7 (9)
(7) (7) (9) (9) (10) (10) (10) 
line 233: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (9) (9) (10) (10) (10) 
line 234: clear
line 235: buildTree 13
(3) (7) (1) (10) (3) (7) (5) (8) (7) (10) (8) (7) (10) 
line 236: inorderTraversal
(1) (3) (3) (5) (7) (7) (7) (7) (8) (8) (10) (10) (10) 
line 237: nearestNeighbour (9)
(8) 
line 238: inorderTraversal
(1) (3) (3) (5) (7) (7) (7) (7) (8) (8) (10) (10) (10) 
line 239: insert (2)
line 240: inorderTraversal
(1) (2) (3) (3) (5) (7) (7) (7) (7) (8) (8) (10) (10) (10) 
line 241: insert (9)
line 242: inorderTraversal
(1) (2) (3) (3) (5) (7) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 243: insert (1)
line 244: inorderTraversal
(1) (1) (2) (3) (3) (5) (7) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 245: nearestNeighbour (1)
(1) 
line 246: inorderTraversal
(1) (1) (2) (3) (3) (5) (7) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 247: search (1)
TRUE
line 248: inorderTraversal
(1) (1) (2) (3) (3) (5) (7) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 249: insert (7)
line 250: inorderTraversal
(1) (1) (2) (3) (3) (5) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 251: kNearestNeighbour 9 (1)
(1) (1) (2) (3) (3) (5) (7) (7) (7) 
line 252: inorderTraversal
(1) (1) (2) (3) (3) (5) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 253: remove (10)
line 254: inorderTraversal
(1) (1) (2) (3) (3) (5) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 255: nearestNeighbour (8)
(8) 
line 256: inorderTraversal
(1) (1) (2) (3) (3) (5) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 257: remove (5)
line 258: inorderTraversal
(1) (1) (2) (3) (3) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 259: nodeCount_height_leafCount
nodeCount=15;height=6;leafCount=5
line 260: inorderTraversal
(1) (1) (2) (3) (3) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 261: nearestNeighbour (8)
(8) 
line 262: inorderTraversal
(1) (1) (2) (3) (3) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 263: insert (2)
line 264: inorderTraversal
(1) (1) (2) (2) (3) (3) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 265: kNearestNeighbour 7 (2)
(1) (1) (2) (2) (3) (3) (7) 
line 266: inorderTraversal
(1) (1) (2) (2) (3) (3) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 267: insert (7)
line 268: inorderTraversal
(1) (1) (2) (2) (3) (3) (7) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 269: insert (2)
line 270: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (7) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 271: nearestNeighbour (10)
(10) 
line 272: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (7) (7) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 273: insert (8)
line 274: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 275: kNearestNeighbour 2 (10)
(10) (10) 
line 276: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 277: kNearestNeighbour 8 (2)
(1) (1) (2) (2) (2) (3) (3) (7) 
line 278: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 279: nearestNeighbour (9)
(9) 
line 280: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 281: insert (1)
line 282: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) (10) 
line 283: clear
line 284: buildTree 3
(6) (2) (5) 
line 285: inorderTraversal
(2) (5) (6) 
line 286: insert (4)
line 287: inorderTraversal
(2) (4) (5) (6) 
line 288: insert (4)
line 289: inorderTraversal
(2) (4) (4) (5) (6) 
line 290: clear
line 291: buildTree 19
(10) (1) (6) (2) (1) (8) (4) (6) (10) (7) (8) (8) (6) (5) (5) (4) (6) (6) (9) 
line 292: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 293: insert (7)
line 294: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 295: preorderTraversal
(6) (4) (1) (1) (2) (5) (4) (5) (8) (6) (6) (6) (6) (7) (7) (9) (8) (8) (10) (10) 
line 296: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 297: nodeCount_height_leafCount
nodeCount=20;height=8;leafCount=6
line 298: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 299: insert (5)
line 300: inorderTraversal
(1) (1) (2) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 301: insert (4)
line 302: inorderTraversal
(1) (1) (2) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 303: nearestNeighbour (5)
(5) 
line 304: inorderTraversal
(1) (1) (2) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 305: clear
line 306: buildTree 6
(8) (3) (8) (2) (5) (8) 
line 307: inorderTraversal
(2) (3) (5) (8) (8) (8) 
line 308: nearestNeighbour (7)
(8) 
line 309: inorderTraversal
(2) (3) (5) (8) (8) (8) 
line 310: insert (7)
line 311: inorderTraversal
(2) (3) (5) (7) (8) (8) (8) 
line 312: remove (8)
line 313: inorderTraversal
(2) (3) (5) (7) (8) (8) 
line 314: kNearestNeighbour 5 (2)
(2) (3) (5) (7) (8) 
line 315: inorderTraversal
(2) (3) (5) (7) (8) (8) 
line 316: clear
line 317: buildTree 11
(2) (4) (1) (1) (10) (10) (9) (2) (6) (7) (4) 
line 318: inorderTraversal
(1) (1) (2) (2) (4) (4) (6) (7) (9) (10) (10) 
line 319: insert (4)
line 320: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (6) (7) (9) (10) (10) 
line 321: search (2)
TRUE
line 322: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (6) (7) (9) (10) (10) 
line 323: insert (6)
line 324: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (6) (6) (7) (9) (10) (10) 
line 325: remove (1)
line 326: inorderTraversal
(1) (2) (2) (4) (4) (4) (6) (6) (7) (9) (10) (10) 
line 327: kNearestNeighbour 8 (5)
(2) (2) (4) (4) (4) (6) (6) (7) 
line 328: inorderTraversal
(1) (2) (2) (4) (4) (4) (6) (6) (7) (9) (10) (10) 
line 329: nearestNeighbour (5)
(4) 
line 330: inorderTraversal
(1) (2) (2) (4) (4) (4) (6) (6) (7) (9) (10) (10) 
line 331: nearestNeighbour (9)
(9) 
line 332: inorderTraversal
(1) (2) (2) (4) (4) (4) (6) (6) (7) (9) (10) (10) 
line 333: insert (6)
line 334: inorderTraversal
(1) (2) (2) (4) (4) (4) (6) (6) (6) (7) (9) (10) (10) 
line 335: insert (10)
line 336: inorderTraversal
(1) (2) (2) (4) (4) (4) (6) (6) (6) (7) (9) (10) (10) (10) 
line 337: insert (10)
line 338: inorderTraversal
(1) (2) (2) (4) (4) (4) (6) (6) (6) (7) (9) (10) (10) (10) (10) 
line 339: clear
line 340: buildTree 4
(1) (6) (4) (8) 
line 341: inorderTraversal
(1) (4) (6) (8) 
line 342: remove (6)
line 343: inorderTraversal
(1) (4) (8) 
line 344: nearestNeighbour (5)
(4) 
line 345: inorderTraversal
(1) (4) (8) 
line 346: insert (6)
line 347: inorderTraversal
(1) (4) (6) (8) 
line 348: kNearestNeighbour 7 (4)
(1) (4) (6) (8) 
line 349: inorderTraversal
(1) (4) (6) (8) 
line 350: remove (1)
line 351: inorderTraversal
(4) (6) (8) 
line 352: insert (5)
line 353: inorderTraversal
(4) (5) (6) (8) 
line 354: nearestNeighbour (7)
(6) 
line 355: inorderTraversal
(4) (5) (6) (8) 
line 356: nearestNeighbour (7)
(6) 
line 357: inorderTraversal
(4) (5) (6) (8) 
line 358: insert (3)
line 359: inorderTraversal
(3) (4) (5) (6) (8) 
line 360: postorderTraversal
(3) (5) (6) (8) (4) 
line 361: inorderTraversal
(3) (4) (5) (6) (8) 
line 362: nearestNeighbour (1)
(3) 
line 363: inorderTraversal
(3) (4) (5) (6) (8) 
line 364: insert (6)
line 365: inorderTraversal
(3) (4) (5) (6) (6) (8) 
line 366: insert (5)
line 367: inorderTraversal
(3) (4) (5) (5) (6) (6) (8) 
line 368: remove (6)
line 369: inorderTraversal
(3) (4) (5) (5) (6) (8) 
line 370: kNearestNeighbour 9 (9)
(3) (4) (5) (5) (6) (8) 
line 371: inorderTraversal
(3) (4) (5) (5) (6) (8) 
line 372: remove (6)
line 373: inorderTraversal
(3) (4) (5) (5) (8) 
line 374: nearestNeighbour (9)
(8) 
line 375: inorderTraversal
(3) (4) (5) (5) (8) 
line 376: kNearestNeighbour 7 (1)
(3) (4) (5) (5) (8) 
line 377: inorderTraversal
(3) (4) (5) (5) (8) 
line 378: insert (7)
line 379: inorderTraversal
(3) (4) (5) (5) (7) (8) 
line 380: nearestNeighbour (1)
(3) 
line 381: inorderTraversal
(3) (4) (5) (5) (7) (8) 
line 382: kNearestNeighbour 6 (4)
(3) (4) (5) (5) (7) (8) 
line 383: inorderTraversal
(3) (4) (5) (5) (7) (8) 
line 384: nearestNeighbour (8)
(8) 
line 385: inorderTraversal
(3) (4) (5) (5) (7) (8) 
line 386: postorderTraversal
(3) (7) (5) (5) (8) (4) 
line 387: inorderTraversal
(3) (4) (5) (5) (7) (8) 
line 388: kNearestNeighbour 10 (8)
(3) (4) (5) (5) (7) (8) 
line 389: inorderTraversal
(3) (4) (5) (5) (7) (8) 
line 390: remove (1)
line 391: inorderTraversal
(3) (4) (5) (5) (7) (8) 
line 392: nearestNeighbour (9)
(8) 
line 393: inorderTraversal
(3) (4) (5) (5) (7) (8) 
line 394: search (5)
TRUE
line 395: inorderTraversal
(3) (4) (5) (5) (7) (8) 
line 396: clear
line 397: buildTree 18
(3) (6) (1) (3) (2) (3) (5) (9) (6) (9) (3) (6) (10) (3) (1) (3) (5) (3) 
line 398: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (3) (3) (5) (5) (6) (6) (6) (9) (9) (10) 
line 399: clear
line 400: buildTree 15
(6) (10) (4) (10) (4) (7) (4) (7) (6) (8) (4) (5) (6) (8) (4) 
line 401: inorderTraversal
(4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 402: insert (2)
line 403: inorderTraversal
(2) (4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 404: remove (2)
line 405: inorderTraversal
(4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (10) (10) 
line 406: insert (9)
line 407: inorderTraversal
(4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 408: kNearestNeighbour 7 (3)
(4) (4) (4) (4) (4) (5) (6) 
line 409: inorderTraversal
(4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 410: kNearestNeighbour 4 (4)
(4) (4) (4) (4) 
line 411: inorderTraversal
(4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 412: nearestNeighbour (6)
(6) 
line 413: inorderTraversal
(4) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 414: clear
line 415: buildTree 15
(10) (9) (4) (5) (6) (3) (10) (10) (4) (2) (6) (4) (7) (5) (5) 
line 416: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (9) (10) (10) (10) 
line 417: remove (3)
line 418: inorderTraversal
(2) (4) (4) (4) (5) (5) (5) (6) (6) (7) (9) (10) (10) (10) 
line 419: clear
line 420: buildTree 13
(4) (6) (8) (6) (2) (6) (5) (7) (6) (3) (3) (9) (5) 
line 421: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (9) 
line 422: nodeCount_height_leafCount
nodeCount=13;height=5;leafCount=5
line 423: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (9) 
line 424: preorderTraversal
(6) (3) (2) (4) (3) (5) (5) (6) (7) (6) (6) (8) (9) 
line 425: postorderTraversal
(2) (3) (5) (5) (4) (3) (6) (6) (9) (8) (7) (6) (6) 
line 426: clear
