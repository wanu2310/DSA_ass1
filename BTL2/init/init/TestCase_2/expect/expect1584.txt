line 1: k=1
line 2: clear
line 3: buildTree 20
(8) (3) (3) (9) (1) (9) (9) (4) (6) (1) (1) (4) (9) (6) (7) (8) (10) (5) (7) (8) 
line 4: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 5: nearestNeighbour (8)
(8) 
line 6: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 7: kNearestNeighbour 10 (7)
(6) (6) (7) (7) (8) (8) (8) (9) (9) (9) 
line 8: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 9: preorderTraversal
(6) (3) (1) (1) (1) (4) (3) (4) (5) (8) (7) (6) (7) (9) (8) (8) (9) (9) (9) (10) 
line 10: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 11: insert (5)
line 12: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 13: insert (1)
line 14: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 15: insert (3)
line 16: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 17: clear
line 18: buildTree 9
(1) (5) (6) (2) (3) (1) (2) (1) (8) 
line 19: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (6) (8) 
line 20: nearestNeighbour (6)
(6) 
line 21: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (6) (8) 
line 22: insert (4)
line 23: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (8) 
line 24: kNearestNeighbour 8 (9)
(1) (2) (2) (3) (4) (5) (6) (8) 
line 25: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (8) 
line 26: remove (1)
line 27: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (6) (8) 
line 28: clear
line 29: buildTree 13
(8) (3) (9) (1) (9) (9) (7) (5) (6) (6) (3) (5) (5) 
line 30: inorderTraversal
(1) (3) (3) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) 
line 31: kNearestNeighbour 2 (10)
(9) (9) 
line 32: inorderTraversal
(1) (3) (3) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) 
line 33: nearestNeighbour (7)
(7) 
line 34: inorderTraversal
(1) (3) (3) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) 
line 35: kNearestNeighbour 2 (6)
(6) (6) 
line 36: inorderTraversal
(1) (3) (3) (5) (5) (5) (6) (6) (7) (8) (9) (9) (9) 
line 37: clear
line 38: buildTree 19
(1) (9) (3) (10) (7) (9) (8) (8) (6) (8) (7) (2) (6) (9) (7) (3) (8) (8) (4) 
line 39: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 40: kNearestNeighbour 7 (6)
(4) (6) (6) (7) (7) (7) (8) 
line 41: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 42: kNearestNeighbour 2 (6)
(6) (6) 
line 43: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 44: nearestNeighbour (5)
(6) 
line 45: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 46: clear
line 47: buildTree 7
(8) (3) (8) (8) (7) (6) (2) 
line 48: inorderTraversal
(2) (3) (6) (7) (8) (8) (8) 
line 49: nearestNeighbour (7)
(7) 
line 50: inorderTraversal
(2) (3) (6) (7) (8) (8) (8) 
line 51: nearestNeighbour (7)
(7) 
line 52: inorderTraversal
(2) (3) (6) (7) (8) (8) (8) 
line 53: insert (7)
line 54: inorderTraversal
(2) (3) (6) (7) (7) (8) (8) (8) 
line 55: insert (10)
line 56: inorderTraversal
(2) (3) (6) (7) (7) (8) (8) (8) (10) 
line 57: clear
line 58: buildTree 7
(7) (1) (6) (7) (7) (5) (1) 
line 59: inorderTraversal
(1) (1) (5) (6) (7) (7) (7) 
line 60: kNearestNeighbour 1 (4)
(5) 
line 61: inorderTraversal
(1) (1) (5) (6) (7) (7) (7) 
line 62: kNearestNeighbour 7 (6)
(1) (1) (5) (6) (7) (7) (7) 
line 63: inorderTraversal
(1) (1) (5) (6) (7) (7) (7) 
line 64: insert (2)
line 65: inorderTraversal
(1) (1) (2) (5) (6) (7) (7) (7) 
line 66: nearestNeighbour (5)
(5) 
line 67: inorderTraversal
(1) (1) (2) (5) (6) (7) (7) (7) 
line 68: insert (9)
line 69: inorderTraversal
(1) (1) (2) (5) (6) (7) (7) (7) (9) 
line 70: insert (8)
line 71: inorderTraversal
(1) (1) (2) (5) (6) (7) (7) (7) (8) (9) 
line 72: remove (2)
line 73: inorderTraversal
(1) (1) (5) (6) (7) (7) (7) (8) (9) 
line 74: nearestNeighbour (6)
(6) 
line 75: inorderTraversal
(1) (1) (5) (6) (7) (7) (7) (8) (9) 
line 76: clear
line 77: buildTree 7
(7) (7) (2) (3) (8) (6) (7) 
line 78: inorderTraversal
(2) (3) (6) (7) (7) (7) (8) 
line 79: insert (5)
line 80: inorderTraversal
(2) (3) (5) (6) (7) (7) (7) (8) 
line 81: kNearestNeighbour 6 (6)
(5) (6) (7) (7) (7) (8) 
line 82: inorderTraversal
(2) (3) (5) (6) (7) (7) (7) (8) 
line 83: remove (7)
line 84: inorderTraversal
(2) (3) (5) (6) (7) (7) (8) 
line 85: insert (6)
line 86: inorderTraversal
(2) (3) (5) (6) (6) (7) (7) (8) 
line 87: kNearestNeighbour 2 (1)
(2) (3) 
line 88: inorderTraversal
(2) (3) (5) (6) (6) (7) (7) (8) 
line 89: insert (8)
line 90: inorderTraversal
(2) (3) (5) (6) (6) (7) (7) (8) (8) 
line 91: insert (3)
line 92: inorderTraversal
(2) (3) (3) (5) (6) (6) (7) (7) (8) (8) 
line 93: insert (6)
line 94: inorderTraversal
(2) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) 
line 95: insert (5)
line 96: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) 
line 97: remove (8)
line 98: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) 
line 99: kNearestNeighbour 4 (4)
(3) (3) (5) (5) 
line 100: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) 
line 101: search (5)
TRUE
line 102: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) 
line 103: insert (2)
line 104: inorderTraversal
(2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) 
line 105: insert (8)
line 106: inorderTraversal
(2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) 
line 107: kNearestNeighbour 7 (5)
(3) (3) (5) (5) (6) (6) (6) 
line 108: inorderTraversal
(2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) 
line 109: clear
line 110: buildTree 6
(2) (6) (1) (8) (4) (10) 
line 111: inorderTraversal
(1) (2) (4) (6) (8) (10) 
line 112: kNearestNeighbour 6 (2)
(1) (2) (4) (6) (8) (10) 
line 113: inorderTraversal
(1) (2) (4) (6) (8) (10) 
line 114: kNearestNeighbour 2 (10)
(8) (10) 
line 115: inorderTraversal
(1) (2) (4) (6) (8) (10) 
line 116: nearestNeighbour (3)
(2) 
line 117: inorderTraversal
(1) (2) (4) (6) (8) (10) 
line 118: insert (4)
line 119: inorderTraversal
(1) (2) (4) (4) (6) (8) (10) 
line 120: remove (2)
line 121: inorderTraversal
(1) (4) (4) (6) (8) (10) 
line 122: kNearestNeighbour 5 (1)
(1) (4) (4) (6) (8) 
line 123: inorderTraversal
(1) (4) (4) (6) (8) (10) 
line 124: kNearestNeighbour 9 (3)
(1) (4) (4) (6) (8) (10) 
line 125: inorderTraversal
(1) (4) (4) (6) (8) (10) 
line 126: kNearestNeighbour 4 (10)
(4) (6) (8) (10) 
line 127: inorderTraversal
(1) (4) (4) (6) (8) (10) 
line 128: remove (1)
line 129: inorderTraversal
(4) (4) (6) (8) (10) 
line 130: kNearestNeighbour 8 (1)
(4) (4) (6) (8) (10) 
line 131: inorderTraversal
(4) (4) (6) (8) (10) 
line 132: insert (3)
line 133: inorderTraversal
(3) (4) (4) (6) (8) (10) 
line 134: kNearestNeighbour 7 (2)
(3) (4) (4) (6) (8) (10) 
line 135: inorderTraversal
(3) (4) (4) (6) (8) (10) 
line 136: insert (5)
line 137: inorderTraversal
(3) (4) (4) (5) (6) (8) (10) 
line 138: clear
line 139: buildTree 13
(9) (4) (8) (3) (6) (3) (8) (3) (8) (7) (6) (1) (4) 
line 140: inorderTraversal
(1) (3) (3) (3) (4) (4) (6) (6) (7) (8) (8) (8) (9) 
line 141: insert (9)
line 142: inorderTraversal
(1) (3) (3) (3) (4) (4) (6) (6) (7) (8) (8) (8) (9) (9) 
line 143: clear
line 144: buildTree 18
(10) (2) (3) (9) (9) (3) (3) (3) (7) (2) (4) (8) (7) (7) (4) (2) (3) (6) 
line 145: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (6) (7) (7) (7) (8) (9) (9) (10) 
line 146: insert (4)
line 147: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (8) (9) (9) (10) 
line 148: insert (10)
line 149: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 150: insert (1)
line 151: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 152: kNearestNeighbour 1 (3)
(3) 
line 153: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 154: kNearestNeighbour 5 (6)
(4) (6) (7) (7) (7) 
line 155: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 156: nearestNeighbour (8)
(8) 
line 157: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 158: insert (7)
line 159: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 160: insert (10)
line 161: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (6) (7) (7) (7) (7) (8) (9) (9) (10) (10) (10) 
line 162: clear
line 163: buildTree 18
(7) (3) (1) (10) (1) (4) (10) (10) (9) (2) (4) (8) (8) (1) (10) (7) (9) (8) 
line 164: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 165: insert (8)
line 166: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 167: search (1)
TRUE
line 168: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 169: insert (2)
line 170: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 171: insert (4)
line 172: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 173: insert (8)
line 174: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 175: insert (8)
line 176: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 177: insert (6)
line 178: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 179: clear
line 180: buildTree 12
(6) (7) (6) (10) (5) (1) (4) (9) (1) (6) (10) (2) 
line 181: inorderTraversal
(1) (1) (2) (4) (5) (6) (6) (6) (7) (9) (10) (10) 
line 182: clear
line 183: buildTree 7
(1) (9) (3) (7) (1) (4) (4) 
line 184: inorderTraversal
(1) (1) (3) (4) (4) (7) (9) 
line 185: remove (4)
line 186: inorderTraversal
(1) (1) (3) (4) (7) (9) 
line 187: nodeCount_height_leafCount
nodeCount=6;height=4;leafCount=2
line 188: inorderTraversal
(1) (1) (3) (4) (7) (9) 
line 189: nearestNeighbour (1)
(1) 
line 190: inorderTraversal
(1) (1) (3) (4) (7) (9) 
line 191: insert (9)
line 192: inorderTraversal
(1) (1) (3) (4) (7) (9) (9) 
line 193: nearestNeighbour (1)
(1) 
line 194: inorderTraversal
(1) (1) (3) (4) (7) (9) (9) 
line 195: nearestNeighbour (4)
(4) 
line 196: inorderTraversal
(1) (1) (3) (4) (7) (9) (9) 
line 197: clear
line 198: buildTree 5
(3) (4) (9) (10) (1) 
line 199: inorderTraversal
(1) (3) (4) (9) (10) 
line 200: insert (4)
line 201: inorderTraversal
(1) (3) (4) (4) (9) (10) 
line 202: insert (10)
line 203: inorderTraversal
(1) (3) (4) (4) (9) (10) (10) 
line 204: insert (3)
line 205: inorderTraversal
(1) (3) (3) (4) (4) (9) (10) (10) 
line 206: kNearestNeighbour 5 (4)
(1) (3) (3) (4) (4) 
line 207: inorderTraversal
(1) (3) (3) (4) (4) (9) (10) (10) 
line 208: clear
line 209: buildTree 16
(3) (6) (5) (3) (10) (10) (7) (7) (8) (3) (9) (8) (3) (7) (5) (6) 
line 210: inorderTraversal
(3) (3) (3) (3) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 211: remove (7)
line 212: inorderTraversal
(3) (3) (3) (3) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 213: insert (5)
line 214: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 215: insert (6)
line 216: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 217: remove (6)
line 218: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 219: kNearestNeighbour 2 (10)
(10) (10) 
line 220: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 221: nearestNeighbour (1)
(3) 
line 222: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 223: search (6)
TRUE
line 224: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 225: insert (9)
line 226: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 227: insert (7)
line 228: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 229: insert (7)
line 230: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 231: nearestNeighbour (6)
(6) 
line 232: inorderTraversal
(3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 233: insert (3)
line 234: inorderTraversal
(3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 235: nearestNeighbour (7)
(7) 
line 236: inorderTraversal
(3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 237: kNearestNeighbour 3 (1)
(3) (3) (3) 
line 238: inorderTraversal
(3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 239: nearestNeighbour (1)
(3) 
line 240: inorderTraversal
(3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 241: nearestNeighbour (5)
(5) 
line 242: inorderTraversal
(3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 243: kNearestNeighbour 1 (6)
(6) 
line 244: inorderTraversal
(3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 245: insert (1)
line 246: inorderTraversal
(1) (3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) (10) 
line 247: insert (8)
line 248: inorderTraversal
(1) (3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 249: insert (8)
line 250: inorderTraversal
(1) (3) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 251: remove (3)
line 252: inorderTraversal
(1) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 253: remove (4)
line 254: inorderTraversal
(1) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 255: insert (8)
line 256: inorderTraversal
(1) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) (10) 
line 257: postorderTraversal
(1) (3) (5) (5) (5) (3) (3) (3) (6) (7) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) (9) (8) (6) 
line 258: inorderTraversal
(1) (3) (3) (3) (3) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) (10) 
line 259: clear
line 260: buildTree 2
(8) (1) 
line 261: inorderTraversal
(1) (8) 
line 262: insert (1)
line 263: inorderTraversal
(1) (1) (8) 
line 264: insert (4)
line 265: inorderTraversal
(1) (1) (4) (8) 
line 266: search (1)
TRUE
line 267: inorderTraversal
(1) (1) (4) (8) 
line 268: clear
line 269: buildTree 2
(8) (3) 
line 270: inorderTraversal
(3) (8) 
line 271: insert (5)
line 272: inorderTraversal
(3) (5) (8) 
line 273: kNearestNeighbour 4 (2)
(3) (5) (8) 
line 274: inorderTraversal
(3) (5) (8) 
line 275: insert (1)
line 276: inorderTraversal
(1) (3) (5) (8) 
line 277: insert (10)
line 278: inorderTraversal
(1) (3) (5) (8) (10) 
line 279: insert (10)
line 280: inorderTraversal
(1) (3) (5) (8) (10) (10) 
line 281: nearestNeighbour (7)
(8) 
line 282: inorderTraversal
(1) (3) (5) (8) (10) (10) 
line 283: search (5)
TRUE
line 284: inorderTraversal
(1) (3) (5) (8) (10) (10) 
line 285: nearestNeighbour (9)
(10) 
line 286: inorderTraversal
(1) (3) (5) (8) (10) (10) 
line 287: insert (4)
line 288: inorderTraversal
(1) (3) (4) (5) (8) (10) (10) 
line 289: remove (3)
line 290: inorderTraversal
(1) (4) (5) (8) (10) (10) 
line 291: kNearestNeighbour 10 (2)
(1) (4) (5) (8) (10) (10) 
line 292: inorderTraversal
(1) (4) (5) (8) (10) (10) 
line 293: insert (4)
line 294: inorderTraversal
(1) (4) (4) (5) (8) (10) (10) 
line 295: postorderTraversal
(1) (4) (5) (10) (10) (8) (4) 
line 296: inorderTraversal
(1) (4) (4) (5) (8) (10) (10) 
line 297: kNearestNeighbour 7 (2)
(1) (4) (4) (5) (8) (10) (10) 
line 298: inorderTraversal
(1) (4) (4) (5) (8) (10) (10) 
line 299: insert (10)
line 300: inorderTraversal
(1) (4) (4) (5) (8) (10) (10) (10) 
line 301: insert (7)
line 302: inorderTraversal
(1) (4) (4) (5) (7) (8) (10) (10) (10) 
line 303: search (10)
TRUE
line 304: inorderTraversal
(1) (4) (4) (5) (7) (8) (10) (10) (10) 
line 305: insert (3)
line 306: inorderTraversal
(1) (3) (4) (4) (5) (7) (8) (10) (10) (10) 
line 307: insert (10)
line 308: inorderTraversal
(1) (3) (4) (4) (5) (7) (8) (10) (10) (10) (10) 
line 309: kNearestNeighbour 1 (2)
(3) 
line 310: inorderTraversal
(1) (3) (4) (4) (5) (7) (8) (10) (10) (10) (10) 
line 311: insert (1)
line 312: inorderTraversal
(1) (1) (3) (4) (4) (5) (7) (8) (10) (10) (10) (10) 
line 313: remove (6)
line 314: inorderTraversal
(1) (1) (3) (4) (4) (5) (7) (8) (10) (10) (10) (10) 
line 315: postorderTraversal
(1) (3) (1) (4) (7) (5) (10) (10) (10) (10) (8) (4) 
line 316: inorderTraversal
(1) (1) (3) (4) (4) (5) (7) (8) (10) (10) (10) (10) 
line 317: insert (1)
line 318: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (7) (8) (10) (10) (10) (10) 
line 319: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=4
line 320: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (7) (8) (10) (10) (10) (10) 
line 321: insert (4)
line 322: inorderTraversal
(1) (1) (1) (3) (4) (4) (4) (5) (7) (8) (10) (10) (10) (10) 
line 323: clear
line 324: buildTree 17
(6) (6) (9) (7) (5) (2) (8) (8) (10) (3) (2) (9) (10) (10) (6) (6) (2) 
line 325: inorderTraversal
(2) (2) (2) (3) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 326: remove (6)
line 327: inorderTraversal
(2) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 328: kNearestNeighbour 9 (7)
(5) (6) (6) (6) (7) (8) (8) (9) (9) 
line 329: inorderTraversal
(2) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 330: kNearestNeighbour 10 (10)
(6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 331: inorderTraversal
(2) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 332: kNearestNeighbour 4 (2)
(2) (2) (2) (3) 
line 333: inorderTraversal
(2) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 334: search (10)
TRUE
line 335: inorderTraversal
(2) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 336: insert (10)
line 337: inorderTraversal
(2) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 338: clear
line 339: buildTree 19
(4) (5) (9) (4) (10) (4) (3) (3) (4) (8) (2) (6) (9) (5) (8) (4) (5) (6) (10) 
line 340: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (8) (8) (9) (9) (10) (10) 
line 341: insert (3)
line 342: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (8) (8) (9) (9) (10) (10) 
line 343: insert (4)
line 344: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (8) (8) (9) (9) (10) (10) 
line 345: nearestNeighbour (9)
(9) 
line 346: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (8) (8) (9) (9) (10) (10) 
line 347: nearestNeighbour (1)
(2) 
line 348: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (8) (8) (9) (9) (10) (10) 
line 349: insert (7)
line 350: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 351: remove (3)
line 352: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 353: nearestNeighbour (1)
(2) 
line 354: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 355: search (8)
TRUE
line 356: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 357: preorderTraversal
(5) (4) (3) (2) (3) (4) (4) (4) (4) (4) (8) (5) (6) (5) (6) (7) (9) (8) (10) (9) (10) 
line 358: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 359: kNearestNeighbour 6 (3)
(2) (3) (3) (4) (4) (4) 
line 360: inorderTraversal
(2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 361: insert (1)
line 362: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 363: insert (9)
line 364: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (10) (10) 
line 365: insert (1)
line 366: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (10) (10) 
line 367: kNearestNeighbour 2 (2)
(1) (2) 
line 368: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (10) (10) 
line 369: nearestNeighbour (2)
(2) 
line 370: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (10) (10) 
line 371: insert (4)
line 372: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (10) (10) 
line 373: clear
line 374: buildTree 10
(6) (7) (6) (7) (3) (10) (1) (5) (5) (9) 
line 375: inorderTraversal
(1) (3) (5) (5) (6) (6) (7) (7) (9) (10) 
line 376: nearestNeighbour (1)
(1) 
line 377: inorderTraversal
(1) (3) (5) (5) (6) (6) (7) (7) (9) (10) 
line 378: remove (3)
line 379: inorderTraversal
(1) (5) (5) (6) (6) (7) (7) (9) (10) 
line 380: remove (6)
line 381: inorderTraversal
(1) (5) (5) (6) (7) (7) (9) (10) 
line 382: remove (10)
line 383: inorderTraversal
(1) (5) (5) (6) (7) (7) (9) 
line 384: insert (8)
line 385: inorderTraversal
(1) (5) (5) (6) (7) (7) (8) (9) 
line 386: insert (5)
line 387: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (8) (9) 
line 388: kNearestNeighbour 10 (5)
(1) (5) (5) (5) (6) (7) (7) (8) (9) 
line 389: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (8) (9) 
line 390: nearestNeighbour (7)
(7) 
line 391: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (8) (9) 
line 392: kNearestNeighbour 6 (6)
(5) (5) (5) (6) (7) (7) 
line 393: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (8) (9) 
line 394: nearestNeighbour (5)
(5) 
line 395: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (8) (9) 
line 396: insert (7)
line 397: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 398: kNearestNeighbour 4 (10)
(7) (7) (8) (9) 
line 399: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 400: remove (9)
line 401: inorderTraversal
(1) (5) (5) (5) (6) (7) (7) (7) (8) 
line 402: clear
line 403: buildTree 4
(1) (8) (3) (4) 
line 404: inorderTraversal
(1) (3) (4) (8) 
line 405: nearestNeighbour (10)
(8) 
line 406: inorderTraversal
(1) (3) (4) (8) 
line 407: kNearestNeighbour 7 (1)
(1) (3) (4) (8) 
line 408: inorderTraversal
(1) (3) (4) (8) 
line 409: clear
line 410: buildTree 19
(9) (1) (3) (6) (2) (8) (5) (3) (10) (4) (3) (5) (7) (6) (4) (1) (10) (8) (1) 
line 411: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 412: postorderTraversal
(2) (1) (1) (1) (3) (4) (4) (3) (3) (5) (7) (6) (6) (8) (10) (10) (9) (8) (5) 
line 413: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 414: search (9)
TRUE
line 415: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 416: insert (6)
line 417: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 418: insert (5)
line 419: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 420: insert (7)
line 421: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 422: remove (5)
line 423: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 424: nodeCount_height_leafCount
nodeCount=21;height=6;leafCount=8
line 425: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 426: preorderTraversal
(5) (3) (1) (1) (1) (2) (3) (4) (3) (4) (8) (6) (5) (6) (7) (6) (7) (9) (8) (10) (10) 
line 427: postorderTraversal
(2) (1) (1) (1) (3) (4) (4) (3) (3) (5) (6) (7) (7) (6) (6) (8) (10) (10) (9) (8) (5) 
line 428: clear
