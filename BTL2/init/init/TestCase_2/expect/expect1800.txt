line 1: k=1
line 2: insert (1)
line 3: inorderTraversal
(1) 
line 4: nearestNeighbour (2)
(1) 
line 5: inorderTraversal
(1) 
line 6: clear
line 7: buildTree 15
(3) (2) (4) (6) (7) (7) (7) (2) (6) (2) (4) (2) (10) (4) (6) 
line 8: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (10) 
line 9: insert (10)
line 10: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (10) (10) 
line 11: kNearestNeighbour 6 (3)
(2) (2) (2) (2) (3) (4) 
line 12: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (10) (10) 
line 13: insert (1)
line 14: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (10) (10) 
line 15: kNearestNeighbour 4 (1)
(1) (2) (2) (2) 
line 16: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (10) (10) 
line 17: kNearestNeighbour 7 (6)
(4) (6) (6) (6) (7) (7) (7) 
line 18: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (10) (10) 
line 19: nearestNeighbour (6)
(6) 
line 20: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (10) (10) 
line 21: insert (6)
line 22: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (6) (7) (7) (7) (10) (10) 
line 23: nodeCount_height_leafCount
nodeCount=18;height=7;leafCount=5
line 24: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (6) (7) (7) (7) (10) (10) 
line 25: nearestNeighbour (2)
(2) 
line 26: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (6) (7) (7) (7) (10) (10) 
line 27: search (2)
TRUE
line 28: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (6) (7) (7) (7) (10) (10) 
line 29: nearestNeighbour (1)
(1) 
line 30: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (6) (7) (7) (7) (10) (10) 
line 31: insert (10)
line 32: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (6) (7) (7) (7) (10) (10) (10) 
line 33: kNearestNeighbour 10 (9)
(6) (6) (6) (6) (7) (7) (7) (10) (10) (10) 
line 34: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (4) (6) (6) (6) (6) (7) (7) (7) (10) (10) (10) 
line 35: clear
line 36: buildTree 5
(9) (6) (10) (8) (10) 
line 37: inorderTraversal
(6) (8) (9) (10) (10) 
line 38: clear
line 39: buildTree 11
(2) (2) (9) (10) (10) (3) (9) (5) (4) (5) (3) 
line 40: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (9) (9) (10) (10) 
line 41: kNearestNeighbour 1 (7)
(5) 
line 42: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (9) (9) (10) (10) 
line 43: clear
line 44: buildTree 5
(10) (1) (7) (9) (10) 
line 45: inorderTraversal
(1) (7) (9) (10) (10) 
line 46: postorderTraversal
(7) (1) (10) (10) (9) 
line 47: inorderTraversal
(1) (7) (9) (10) (10) 
line 48: kNearestNeighbour 7 (2)
(1) (7) (9) (10) (10) 
line 49: inorderTraversal
(1) (7) (9) (10) (10) 
line 50: insert (5)
line 51: inorderTraversal
(1) (5) (7) (9) (10) (10) 
line 52: insert (4)
line 53: inorderTraversal
(1) (4) (5) (7) (9) (10) (10) 
line 54: insert (2)
line 55: inorderTraversal
(1) (2) (4) (5) (7) (9) (10) (10) 
line 56: insert (1)
line 57: inorderTraversal
(1) (1) (2) (4) (5) (7) (9) (10) (10) 
line 58: search (9)
TRUE
line 59: inorderTraversal
(1) (1) (2) (4) (5) (7) (9) (10) (10) 
line 60: insert (6)
line 61: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (9) (10) (10) 
line 62: nearestNeighbour (7)
(7) 
line 63: inorderTraversal
(1) (1) (2) (4) (5) (6) (7) (9) (10) (10) 
line 64: insert (2)
line 65: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (9) (10) (10) 
line 66: insert (8)
line 67: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (8) (9) (10) (10) 
line 68: preorderTraversal
(9) (1) (7) (5) (4) (2) (1) (2) (6) (8) (10) (10) 
line 69: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (8) (9) (10) (10) 
line 70: nearestNeighbour (4)
(4) 
line 71: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (8) (9) (10) (10) 
line 72: insert (7)
line 73: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (7) (8) (9) (10) (10) 
line 74: nearestNeighbour (10)
(10) 
line 75: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (7) (8) (9) (10) (10) 
line 76: remove (8)
line 77: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (7) (9) (10) (10) 
line 78: kNearestNeighbour 1 (8)
(7) 
line 79: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (7) (9) (10) (10) 
line 80: preorderTraversal
(9) (1) (7) (5) (4) (2) (1) (2) (6) (7) (10) (10) 
line 81: inorderTraversal
(1) (1) (2) (2) (4) (5) (6) (7) (7) (9) (10) (10) 
line 82: insert (5)
line 83: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (6) (7) (7) (9) (10) (10) 
line 84: insert (7)
line 85: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (6) (7) (7) (7) (9) (10) (10) 
line 86: kNearestNeighbour 5 (6)
(5) (5) (6) (7) (7) 
line 87: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (6) (7) (7) (7) (9) (10) (10) 
line 88: remove (6)
line 89: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (7) (7) (9) (10) (10) 
line 90: nearestNeighbour (6)
(5) 
line 91: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (7) (7) (9) (10) (10) 
line 92: insert (10)
line 93: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (7) (7) (9) (10) (10) (10) 
line 94: postorderTraversal
(1) (2) (2) (4) (5) (5) (7) (7) (7) (1) (10) (10) (10) (9) 
line 95: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (7) (7) (9) (10) (10) (10) 
line 96: insert (8)
line 97: inorderTraversal
(1) (1) (2) (2) (4) (5) (5) (7) (7) (7) (8) (9) (10) (10) (10) 
line 98: clear
line 99: buildTree 15
(2) (10) (8) (10) (9) (8) (1) (1) (1) (2) (6) (4) (10) (5) (7) 
line 100: inorderTraversal
(1) (1) (1) (2) (2) (4) (5) (6) (7) (8) (8) (9) (10) (10) (10) 
line 101: remove (9)
line 102: inorderTraversal
(1) (1) (1) (2) (2) (4) (5) (6) (7) (8) (8) (10) (10) (10) 
line 103: insert (3)
line 104: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (7) (8) (8) (10) (10) (10) 
line 105: insert (2)
line 106: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (8) (8) (10) (10) (10) 
line 107: clear
line 108: buildTree 5
(3) (7) (7) (4) (2) 
line 109: inorderTraversal
(2) (3) (4) (7) (7) 
line 110: insert (1)
line 111: inorderTraversal
(1) (2) (3) (4) (7) (7) 
line 112: kNearestNeighbour 4 (10)
(3) (4) (7) (7) 
line 113: inorderTraversal
(1) (2) (3) (4) (7) (7) 
line 114: postorderTraversal
(1) (3) (2) (7) (7) (4) 
line 115: inorderTraversal
(1) (2) (3) (4) (7) (7) 
line 116: insert (9)
line 117: inorderTraversal
(1) (2) (3) (4) (7) (7) (9) 
line 118: insert (7)
line 119: inorderTraversal
(1) (2) (3) (4) (7) (7) (7) (9) 
line 120: nearestNeighbour (5)
(4) 
line 121: inorderTraversal
(1) (2) (3) (4) (7) (7) (7) (9) 
line 122: insert (2)
line 123: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) 
line 124: nodeCount_height_leafCount
nodeCount=9;height=5;leafCount=3
line 125: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) 
line 126: nearestNeighbour (2)
(2) 
line 127: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) 
line 128: nearestNeighbour (3)
(3) 
line 129: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) 
line 130: nodeCount_height_leafCount
nodeCount=9;height=5;leafCount=3
line 131: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) 
line 132: nearestNeighbour (4)
(4) 
line 133: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) 
line 134: nearestNeighbour (3)
(3) 
line 135: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) 
line 136: nearestNeighbour (7)
(7) 
line 137: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) 
line 138: search (6)
FALSE
line 139: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) 
line 140: insert (9)
line 141: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (9) (9) 
line 142: insert (8)
line 143: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (8) (9) (9) 
line 144: nearestNeighbour (10)
(9) 
line 145: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (7) (8) (9) (9) 
line 146: insert (3)
line 147: inorderTraversal
(1) (2) (2) (3) (3) (4) (7) (7) (7) (8) (9) (9) 
line 148: insert (5)
line 149: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (7) (7) (7) (8) (9) (9) 
line 150: insert (8)
line 151: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (7) (7) (7) (8) (8) (9) (9) 
line 152: kNearestNeighbour 9 (9)
(4) (5) (7) (7) (7) (8) (8) (9) (9) 
line 153: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (7) (7) (7) (8) (8) (9) (9) 
line 154: nearestNeighbour (7)
(7) 
line 155: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (7) (7) (7) (8) (8) (9) (9) 
line 156: clear
line 157: buildTree 11
(7) (1) (1) (8) (3) (8) (6) (6) (2) (8) (10) 
line 158: inorderTraversal
(1) (1) (2) (3) (6) (6) (7) (8) (8) (8) (10) 
line 159: nearestNeighbour (8)
(8) 
line 160: inorderTraversal
(1) (1) (2) (3) (6) (6) (7) (8) (8) (8) (10) 
line 161: nearestNeighbour (2)
(2) 
line 162: inorderTraversal
(1) (1) (2) (3) (6) (6) (7) (8) (8) (8) (10) 
line 163: nearestNeighbour (9)
(10) 
line 164: inorderTraversal
(1) (1) (2) (3) (6) (6) (7) (8) (8) (8) (10) 
line 165: remove (1)
line 166: inorderTraversal
(1) (2) (3) (6) (6) (7) (8) (8) (8) (10) 
line 167: insert (5)
line 168: inorderTraversal
(1) (2) (3) (5) (6) (6) (7) (8) (8) (8) (10) 
line 169: insert (2)
line 170: inorderTraversal
(1) (2) (2) (3) (5) (6) (6) (7) (8) (8) (8) (10) 
line 171: clear
line 172: buildTree 2
(6) (5) 
line 173: inorderTraversal
(5) (6) 
line 174: insert (9)
line 175: inorderTraversal
(5) (6) (9) 
line 176: clear
line 177: buildTree 6
(9) (6) (6) (4) (4) (1) 
line 178: inorderTraversal
(1) (4) (4) (6) (6) (9) 
line 179: kNearestNeighbour 1 (8)
(9) 
line 180: inorderTraversal
(1) (4) (4) (6) (6) (9) 
line 181: insert (7)
line 182: inorderTraversal
(1) (4) (4) (6) (6) (7) (9) 
line 183: insert (6)
line 184: inorderTraversal
(1) (4) (4) (6) (6) (6) (7) (9) 
line 185: nearestNeighbour (10)
(9) 
line 186: inorderTraversal
(1) (4) (4) (6) (6) (6) (7) (9) 
line 187: postorderTraversal
(1) (4) (6) (7) (9) (6) (6) (4) 
line 188: inorderTraversal
(1) (4) (4) (6) (6) (6) (7) (9) 
line 189: nearestNeighbour (3)
(4) 
line 190: inorderTraversal
(1) (4) (4) (6) (6) (6) (7) (9) 
line 191: clear
line 192: buildTree 4
(9) (6) (8) (6) 
line 193: inorderTraversal
(6) (6) (8) (9) 
line 194: nearestNeighbour (2)
(6) 
line 195: inorderTraversal
(6) (6) (8) (9) 
line 196: nearestNeighbour (2)
(6) 
line 197: inorderTraversal
(6) (6) (8) (9) 
line 198: clear
line 199: buildTree 15
(10) (4) (6) (1) (10) (6) (7) (6) (6) (7) (6) (9) (3) (9) (10) 
line 200: inorderTraversal
(1) (3) (4) (6) (6) (6) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 201: insert (1)
line 202: inorderTraversal
(1) (1) (3) (4) (6) (6) (6) (6) (6) (7) (7) (9) (9) (10) (10) (10) 
line 203: clear
line 204: buildTree 8
(2) (6) (7) (7) (9) (8) (3) (2) 
line 205: inorderTraversal
(2) (2) (3) (6) (7) (7) (8) (9) 
line 206: insert (6)
line 207: inorderTraversal
(2) (2) (3) (6) (6) (7) (7) (8) (9) 
line 208: clear
line 209: buildTree 14
(7) (8) (7) (1) (3) (1) (5) (5) (5) (3) (3) (7) (4) (1) 
line 210: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (8) 
line 211: nearestNeighbour (3)
(3) 
line 212: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (8) 
line 213: nearestNeighbour (9)
(8) 
line 214: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (8) 
line 215: kNearestNeighbour 2 (2)
(1) (1) 
line 216: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (8) 
line 217: kNearestNeighbour 9 (6)
(3) (4) (5) (5) (5) (7) (7) (7) (8) 
line 218: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (8) 
line 219: insert (4)
line 220: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) 
line 221: kNearestNeighbour 2 (4)
(4) (4) 
line 222: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) 
line 223: insert (6)
line 224: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) 
line 225: kNearestNeighbour 9 (3)
(1) (1) (1) (3) (3) (3) (4) (4) (5) 
line 226: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) 
line 227: insert (9)
line 228: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 229: remove (3)
line 230: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 231: nearestNeighbour (2)
(1) 
line 232: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 233: nearestNeighbour (9)
(9) 
line 234: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 235: remove (1)
line 236: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 237: insert (1)
line 238: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 239: remove (1)
line 240: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 241: kNearestNeighbour 9 (7)
(5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 242: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 243: nearestNeighbour (4)
(4) 
line 244: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 245: nearestNeighbour (10)
(9) 
line 246: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 247: insert (2)
line 248: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 249: insert (4)
line 250: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 251: insert (4)
line 252: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 253: nearestNeighbour (9)
(9) 
line 254: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) 
line 255: insert (8)
line 256: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) 
line 257: insert (4)
line 258: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) 
line 259: insert (10)
line 260: inorderTraversal
(1) (1) (2) (3) (3) (4) (4) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (10) 
line 261: clear
line 262: buildTree 11
(4) (7) (7) (9) (2) (5) (1) (3) (3) (9) (6) 
line 263: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (9) (9) 
line 264: nearestNeighbour (10)
(9) 
line 265: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (9) (9) 
line 266: kNearestNeighbour 6 (1)
(1) (2) (3) (3) (4) (5) 
line 267: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (9) (9) 
line 268: nearestNeighbour (8)
(7) 
line 269: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (9) (9) 
line 270: nearestNeighbour (2)
(2) 
line 271: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (9) (9) 
line 272: nearestNeighbour (3)
(3) 
line 273: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (9) (9) 
line 274: nearestNeighbour (1)
(1) 
line 275: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (9) (9) 
line 276: preorderTraversal
(5) (3) (1) (2) (3) (4) (7) (6) (9) (7) (9) 
line 277: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (7) (7) (9) (9) 
line 278: insert (3)
line 279: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) 
line 280: insert (10)
line 281: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (10) 
line 282: insert (2)
line 283: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (10) 
line 284: kNearestNeighbour 9 (2)
(1) (2) (2) (3) (3) (3) (4) (5) (6) 
line 285: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (10) 
line 286: nearestNeighbour (10)
(10) 
line 287: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (10) 
line 288: nodeCount_height_leafCount
nodeCount=14;height=5;leafCount=5
line 289: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (10) 
line 290: insert (2)
line 291: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (10) 
line 292: insert (2)
line 293: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (10) 
line 294: kNearestNeighbour 7 (9)
(5) (6) (7) (7) (9) (9) (10) 
line 295: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (10) 
line 296: insert (9)
line 297: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (9) (10) 
line 298: nearestNeighbour (4)
(4) 
line 299: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (9) (9) (9) (10) 
line 300: insert (5)
line 301: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (7) (9) (9) (9) (10) 
line 302: insert (6)
line 303: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (9) (9) (9) (10) 
line 304: insert (3)
line 305: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (9) (9) (9) (10) 
line 306: clear
line 307: buildTree 13
(4) (7) (1) (7) (5) (6) (7) (4) (4) (3) (5) (1) (3) 
line 308: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) 
line 309: insert (7)
line 310: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) 
line 311: kNearestNeighbour 6 (7)
(5) (6) (7) (7) (7) (7) 
line 312: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) 
line 313: insert (1)
line 314: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) 
line 315: remove (3)
line 316: inorderTraversal
(1) (1) (1) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (7) 
line 317: insert (5)
line 318: inorderTraversal
(1) (1) (1) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) 
line 319: insert (3)
line 320: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) 
line 321: insert (3)
line 322: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) 
line 323: insert (7)
line 324: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) 
line 325: nearestNeighbour (5)
(5) 
line 326: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) 
line 327: nearestNeighbour (6)
(6) 
line 328: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) 
line 329: insert (9)
line 330: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) (9) 
line 331: insert (3)
line 332: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) (9) 
line 333: kNearestNeighbour 4 (9)
(7) (7) (7) (9) 
line 334: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) (9) 
line 335: nearestNeighbour (10)
(9) 
line 336: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) (9) 
line 337: insert (6)
line 338: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (9) 
line 339: nearestNeighbour (4)
(4) 
line 340: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (7) (9) 
line 341: clear
line 342: buildTree 18
(5) (1) (8) (2) (1) (7) (10) (3) (7) (9) (5) (8) (3) (10) (8) (8) (6) (10) 
line 343: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 344: kNearestNeighbour 2 (7)
(7) (7) 
line 345: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 346: insert (3)
line 347: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 348: nearestNeighbour (3)
(3) 
line 349: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 350: nearestNeighbour (9)
(9) 
line 351: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 352: remove (5)
line 353: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 354: insert (8)
line 355: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 356: clear
line 357: buildTree 18
(9) (3) (2) (7) (6) (1) (10) (8) (6) (6) (10) (7) (9) (3) (5) (3) (9) (8) 
line 358: inorderTraversal
(1) (2) (3) (3) (3) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 359: insert (5)
line 360: inorderTraversal
(1) (2) (3) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 361: insert (7)
line 362: inorderTraversal
(1) (2) (3) (3) (3) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 363: insert (1)
line 364: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 365: insert (8)
line 366: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 367: remove (1)
line 368: inorderTraversal
(1) (2) (3) (3) (3) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 369: clear
line 370: buildTree 19
(10) (8) (7) (10) (1) (6) (10) (4) (5) (3) (3) (1) (9) (1) (10) (4) (2) (9) (1) 
line 371: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (6) (7) (8) (9) (9) (10) (10) (10) (10) 
line 372: insert (9)
line 373: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) (10) 
line 374: nearestNeighbour (7)
(7) 
line 375: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) (10) 
line 376: clear
line 377: buildTree 20
(3) (2) (9) (8) (6) (1) (4) (9) (4) (3) (5) (2) (6) (5) (2) (6) (2) (5) (1) (3) 
line 378: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (8) (9) (9) 
line 379: remove (5)
line 380: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (8) (9) (9) 
line 381: insert (2)
line 382: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (8) (9) (9) 
line 383: kNearestNeighbour 6 (8)
(6) (6) (6) (8) (9) (9) 
line 384: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (8) (9) (9) 
line 385: insert (10)
line 386: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (8) (9) (9) (10) 
line 387: insert (6)
line 388: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (9) (9) (10) 
line 389: insert (8)
line 390: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 391: search (6)
TRUE
line 392: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 393: nearestNeighbour (7)
(6) 
line 394: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 395: postorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (2) (2) (4) (5) (5) (6) (6) (6) (8) (10) (9) (9) (8) (6) (4) 
line 396: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 397: kNearestNeighbour 1 (2)
(2) 
line 398: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 399: search (3)
TRUE
line 400: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 401: insert (3)
line 402: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 403: nearestNeighbour (6)
(6) 
line 404: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 405: nearestNeighbour (4)
(4) 
line 406: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 407: insert (2)
line 408: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 409: kNearestNeighbour 4 (6)
(6) (6) (6) (6) 
line 410: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 411: insert (4)
line 412: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 413: insert (4)
line 414: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (6) (6) (6) (8) (8) (9) (9) (10) 
line 415: clear
line 416: buildTree 15
(4) (2) (8) (10) (6) (3) (2) (10) (10) (5) (10) (4) (9) (8) (2) 
line 417: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (6) (8) (8) (9) (10) (10) (10) (10) 
line 418: preorderTraversal
(6) (3) (2) (2) (2) (4) (4) (5) (10) (8) (8) (9) (10) (10) (10) 
line 419: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (6) (8) (8) (9) (10) (10) (10) (10) 
line 420: clear
line 421: buildTree 14
(3) (6) (8) (7) (6) (5) (1) (5) (8) (2) (6) (3) (4) (3) 
line 422: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) 
line 423: nodeCount_height_leafCount
nodeCount=14;height=5;leafCount=5
line 424: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) 
line 425: preorderTraversal
(5) (3) (1) (2) (3) (3) (4) (6) (5) (7) (6) (6) (8) (8) 
line 426: postorderTraversal
(2) (1) (4) (3) (3) (3) (5) (6) (6) (8) (8) (7) (6) (5) 
line 427: clear
