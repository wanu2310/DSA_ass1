line 1: k=1
line 2: nodeCount_height_leafCount
nodeCount=0;height=0;leafCount=0
line 3: inorderTraversal

line 4: insert (5)
line 5: inorderTraversal
(5) 
line 6: insert (4)
line 7: inorderTraversal
(4) (5) 
line 8: insert (8)
line 9: inorderTraversal
(4) (5) (8) 
line 10: clear
line 11: buildTree 20
(5) (1) (4) (8) (1) (1) (9) (1) (10) (2) (9) (9) (10) (2) (10) (6) (4) (1) (8) (9) 
line 12: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 13: kNearestNeighbour 8 (6)
(4) (4) (5) (6) (8) (8) (9) (9) 
line 14: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 15: remove (2)
line 16: inorderTraversal
(1) (1) (1) (1) (1) (2) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 17: nearestNeighbour (4)
(4) 
line 18: inorderTraversal
(1) (1) (1) (1) (1) (2) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 19: nodeCount_height_leafCount
nodeCount=19;height=7;leafCount=6
line 20: inorderTraversal
(1) (1) (1) (1) (1) (2) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 21: nearestNeighbour (4)
(4) 
line 22: inorderTraversal
(1) (1) (1) (1) (1) (2) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 23: remove (1)
line 24: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 25: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=6
line 26: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 27: insert (5)
line 28: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 29: insert (5)
line 30: inorderTraversal
(1) (1) (1) (1) (2) (4) (4) (5) (5) (5) (6) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 31: clear
line 32: buildTree 14
(8) (9) (6) (8) (6) (3) (10) (4) (7) (1) (5) (6) (2) (3) 
line 33: inorderTraversal
(1) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 34: insert (1)
line 35: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 36: nearestNeighbour (5)
(5) 
line 37: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 38: insert (2)
line 39: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 40: insert (1)
line 41: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 42: preorderTraversal
(6) (3) (1) (2) (1) (1) (2) (4) (3) (5) (8) (6) (6) (7) (9) (8) (10) 
line 43: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 44: remove (3)
line 45: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 46: nodeCount_height_leafCount
nodeCount=16;height=6;leafCount=6
line 47: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 48: nearestNeighbour (2)
(2) 
line 49: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 50: kNearestNeighbour 1 (3)
(3) 
line 51: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) (10) 
line 52: clear
line 53: buildTree 11
(7) (2) (6) (4) (6) (7) (4) (10) (6) (9) (4) 
line 54: inorderTraversal
(2) (4) (4) (4) (6) (6) (6) (7) (7) (9) (10) 
line 55: insert (4)
line 56: inorderTraversal
(2) (4) (4) (4) (4) (6) (6) (6) (7) (7) (9) (10) 
line 57: kNearestNeighbour 1 (9)
(9) 
line 58: inorderTraversal
(2) (4) (4) (4) (4) (6) (6) (6) (7) (7) (9) (10) 
line 59: insert (7)
line 60: inorderTraversal
(2) (4) (4) (4) (4) (6) (6) (6) (7) (7) (7) (9) (10) 
line 61: insert (5)
line 62: inorderTraversal
(2) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (9) (10) 
line 63: kNearestNeighbour 6 (10)
(6) (7) (7) (7) (9) (10) 
line 64: inorderTraversal
(2) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (9) (10) 
line 65: insert (3)
line 66: inorderTraversal
(2) (3) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (9) (10) 
line 67: insert (2)
line 68: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (9) (10) 
line 69: kNearestNeighbour 6 (4)
(3) (4) (4) (4) (4) (5) 
line 70: inorderTraversal
(2) (2) (3) (4) (4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (9) (10) 
line 71: clear
line 72: buildTree 10
(4) (8) (5) (7) (5) (6) (5) (4) (2) (2) 
line 73: inorderTraversal
(2) (2) (4) (4) (5) (5) (5) (6) (7) (8) 
line 74: kNearestNeighbour 8 (8)
(4) (4) (5) (5) (5) (6) (7) (8) 
line 75: inorderTraversal
(2) (2) (4) (4) (5) (5) (5) (6) (7) (8) 
line 76: remove (5)
line 77: inorderTraversal
(2) (2) (4) (4) (5) (5) (6) (7) (8) 
line 78: clear
line 79: buildTree 11
(5) (4) (6) (4) (8) (8) (5) (6) (7) (2) (3) 
line 80: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) 
line 81: nearestNeighbour (10)
(8) 
line 82: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) 
line 83: nodeCount_height_leafCount
nodeCount=11;height=5;leafCount=5
line 84: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) 
line 85: nearestNeighbour (6)
(6) 
line 86: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) 
line 87: insert (6)
line 88: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) 
line 89: clear
line 90: buildTree 10
(9) (9) (9) (2) (9) (10) (7) (2) (6) (1) 
line 91: inorderTraversal
(1) (2) (2) (6) (7) (9) (9) (9) (9) (10) 
line 92: insert (5)
line 93: inorderTraversal
(1) (2) (2) (5) (6) (7) (9) (9) (9) (9) (10) 
line 94: insert (1)
line 95: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (9) (9) (9) (9) (10) 
line 96: kNearestNeighbour 8 (4)
(1) (1) (2) (2) (5) (6) (7) (9) 
line 97: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (9) (9) (9) (9) (10) 
line 98: insert (7)
line 99: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (7) (9) (9) (9) (9) (10) 
line 100: nearestNeighbour (10)
(10) 
line 101: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (7) (9) (9) (9) (9) (10) 
line 102: insert (7)
line 103: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 104: nearestNeighbour (2)
(2) 
line 105: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 106: nearestNeighbour (1)
(1) 
line 107: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 108: search (7)
TRUE
line 109: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 110: kNearestNeighbour 6 (10)
(7) (9) (9) (9) (9) (10) 
line 111: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 112: nearestNeighbour (8)
(7) 
line 113: inorderTraversal
(1) (1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 114: remove (1)
line 115: inorderTraversal
(1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 116: nearestNeighbour (1)
(1) 
line 117: inorderTraversal
(1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 118: kNearestNeighbour 1 (9)
(9) 
line 119: inorderTraversal
(1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 120: kNearestNeighbour 7 (1)
(1) (2) (2) (5) (6) (7) (7) 
line 121: inorderTraversal
(1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 122: kNearestNeighbour 1 (2)
(2) 
line 123: inorderTraversal
(1) (2) (2) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 124: insert (5)
line 125: inorderTraversal
(1) (2) (2) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 126: nearestNeighbour (9)
(9) 
line 127: inorderTraversal
(1) (2) (2) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 128: insert (4)
line 129: inorderTraversal
(1) (2) (2) (4) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 130: insert (2)
line 131: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 132: nearestNeighbour (10)
(10) 
line 133: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 134: kNearestNeighbour 10 (8)
(5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 135: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 136: kNearestNeighbour 9 (1)
(1) (2) (2) (2) (4) (5) (5) (6) (7) 
line 137: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 138: nearestNeighbour (7)
(7) 
line 139: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 140: insert (2)
line 141: inorderTraversal
(1) (2) (2) (2) (2) (4) (5) (5) (6) (7) (7) (7) (9) (9) (9) (9) (10) 
line 142: clear
line 143: buildTree 17
(2) (1) (3) (8) (4) (9) (10) (5) (7) (5) (10) (5) (10) (3) (9) (2) (9) 
line 144: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (7) (8) (9) (9) (9) (10) (10) (10) 
line 145: remove (5)
line 146: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) (9) (10) (10) (10) 
line 147: insert (7)
line 148: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 149: nearestNeighbour (2)
(2) 
line 150: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 151: insert (4)
line 152: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 153: nearestNeighbour (7)
(7) 
line 154: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 155: nearestNeighbour (6)
(7) 
line 156: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 157: search (10)
TRUE
line 158: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 159: kNearestNeighbour 5 (7)
(5) (7) (7) (8) (9) 
line 160: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 161: insert (5)
line 162: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 163: insert (6)
line 164: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 165: kNearestNeighbour 7 (4)
(3) (3) (4) (4) (5) (5) (5) 
line 166: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 167: kNearestNeighbour 8 (7)
(5) (5) (6) (7) (7) (8) (9) (9) 
line 168: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 169: insert (4)
line 170: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 171: remove (5)
line 172: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 173: insert (2)
line 174: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 175: preorderTraversal
(5) (2) (1) (3) (2) (2) (3) (4) (4) (4) (9) (5) (7) (6) (8) (7) (10) (9) (9) (10) (10) 
line 176: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 177: kNearestNeighbour 7 (3)
(2) (2) (3) (3) (4) (4) (4) 
line 178: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 179: kNearestNeighbour 8 (6)
(4) (4) (5) (5) (6) (7) (7) (8) 
line 180: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 181: nearestNeighbour (9)
(9) 
line 182: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) (10) 
line 183: clear
line 184: buildTree 7
(3) (5) (4) (7) (3) (5) (3) 
line 185: inorderTraversal
(3) (3) (3) (4) (5) (5) (7) 
line 186: insert (3)
line 187: inorderTraversal
(3) (3) (3) (3) (4) (5) (5) (7) 
line 188: insert (7)
line 189: inorderTraversal
(3) (3) (3) (3) (4) (5) (5) (7) (7) 
line 190: nearestNeighbour (10)
(7) 
line 191: inorderTraversal
(3) (3) (3) (3) (4) (5) (5) (7) (7) 
line 192: insert (1)
line 193: inorderTraversal
(1) (3) (3) (3) (3) (4) (5) (5) (7) (7) 
line 194: insert (9)
line 195: inorderTraversal
(1) (3) (3) (3) (3) (4) (5) (5) (7) (7) (9) 
line 196: insert (7)
line 197: inorderTraversal
(1) (3) (3) (3) (3) (4) (5) (5) (7) (7) (7) (9) 
line 198: insert (1)
line 199: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (5) (5) (7) (7) (7) (9) 
line 200: insert (1)
line 201: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (5) (5) (7) (7) (7) (9) 
line 202: remove (3)
line 203: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (7) (7) (7) (9) 
line 204: kNearestNeighbour 10 (3)
(1) (1) (1) (3) (3) (3) (4) (5) (5) (7) 
line 205: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (7) (7) (7) (9) 
line 206: kNearestNeighbour 5 (4)
(3) (3) (4) (5) (5) 
line 207: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (7) (7) (7) (9) 
line 208: insert (5)
line 209: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (9) 
line 210: insert (9)
line 211: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) 
line 212: insert (9)
line 213: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (9) 
line 214: insert (5)
line 215: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (5) (7) (7) (7) (9) (9) (9) 
line 216: insert (10)
line 217: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (5) (7) (7) (7) (9) (9) (9) (10) 
line 218: insert (10)
line 219: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (5) (7) (7) (7) (9) (9) (9) (10) (10) 
line 220: remove (5)
line 221: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (9) (10) (10) 
line 222: kNearestNeighbour 4 (10)
(9) (9) (10) (10) 
line 223: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (9) (10) (10) 
line 224: kNearestNeighbour 6 (4)
(3) (3) (4) (5) (5) (5) 
line 225: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (9) (10) (10) 
line 226: nearestNeighbour (4)
(4) 
line 227: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (9) (10) (10) 
line 228: insert (10)
line 229: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (7) (7) (7) (9) (9) (9) (10) (10) (10) 
line 230: clear
line 231: buildTree 12
(5) (6) (8) (4) (8) (6) (6) (2) (1) (4) (6) (7) 
line 232: inorderTraversal
(1) (2) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) 
line 233: preorderTraversal
(6) (4) (1) (2) (4) (5) (6) (7) (6) (6) (8) (8) 
line 234: inorderTraversal
(1) (2) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) 
line 235: insert (2)
line 236: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) 
line 237: kNearestNeighbour 9 (10)
(4) (5) (6) (6) (6) (6) (7) (8) (8) 
line 238: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) 
line 239: nearestNeighbour (9)
(8) 
line 240: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) 
line 241: insert (1)
line 242: inorderTraversal
(1) (1) (2) (2) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) 
line 243: insert (3)
line 244: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) 
line 245: kNearestNeighbour 6 (10)
(6) (6) (6) (7) (8) (8) 
line 246: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (6) (7) (8) (8) 
line 247: remove (6)
line 248: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) 
line 249: nodeCount_height_leafCount
nodeCount=14;height=6;leafCount=5
line 250: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) 
line 251: nodeCount_height_leafCount
nodeCount=14;height=6;leafCount=5
line 252: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) 
line 253: kNearestNeighbour 9 (8)
(4) (4) (5) (6) (6) (6) (7) (8) (8) 
line 254: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) 
line 255: insert (3)
line 256: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) 
line 257: search (2)
TRUE
line 258: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) 
line 259: nearestNeighbour (7)
(7) 
line 260: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) 
line 261: remove (3)
line 262: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) 
line 263: remove (8)
line 264: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (6) (6) (6) (7) (8) 
line 265: remove (5)
line 266: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (6) (6) (7) (8) 
line 267: kNearestNeighbour 9 (8)
(2) (3) (4) (4) (6) (6) (6) (7) (8) 
line 268: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (6) (6) (7) (8) 
line 269: remove (6)
line 270: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (8) 
line 271: insert (9)
line 272: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (8) (9) 
line 273: preorderTraversal
(6) (4) (1) (2) (1) (2) (3) (4) (6) (7) (8) (9) 
line 274: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (8) (9) 
line 275: insert (7)
line 276: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (6) (6) (7) (7) (8) (9) 
line 277: insert (4)
line 278: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (6) (6) (7) (7) (8) (9) 
line 279: postorderTraversal
(1) (3) (2) (2) (1) (4) (4) (4) (7) (9) (8) (7) (6) (6) 
line 280: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (6) (6) (7) (7) (8) (9) 
line 281: nearestNeighbour (3)
(3) 
line 282: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (6) (6) (7) (7) (8) (9) 
line 283: insert (1)
line 284: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (6) (6) (7) (7) (8) (9) 
line 285: clear
line 286: buildTree 6
(5) (1) (5) (4) (7) (3) 
line 287: inorderTraversal
(1) (3) (4) (5) (5) (7) 
line 288: nearestNeighbour (1)
(1) 
line 289: inorderTraversal
(1) (3) (4) (5) (5) (7) 
line 290: kNearestNeighbour 9 (6)
(1) (3) (4) (5) (5) (7) 
line 291: inorderTraversal
(1) (3) (4) (5) (5) (7) 
line 292: insert (2)
line 293: inorderTraversal
(1) (2) (3) (4) (5) (5) (7) 
line 294: kNearestNeighbour 9 (9)
(1) (2) (3) (4) (5) (5) (7) 
line 295: inorderTraversal
(1) (2) (3) (4) (5) (5) (7) 
line 296: kNearestNeighbour 5 (8)
(3) (4) (5) (5) (7) 
line 297: inorderTraversal
(1) (2) (3) (4) (5) (5) (7) 
line 298: clear
line 299: buildTree 1
(2) 
line 300: inorderTraversal
(2) 
line 301: clear
line 302: buildTree 16
(4) (10) (4) (4) (7) (4) (6) (9) (7) (3) (7) (9) (9) (8) (7) (3) 
line 303: inorderTraversal
(3) (3) (4) (4) (4) (4) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 304: nearestNeighbour (1)
(3) 
line 305: inorderTraversal
(3) (3) (4) (4) (4) (4) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 306: insert (3)
line 307: inorderTraversal
(3) (3) (3) (4) (4) (4) (4) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 308: clear
line 309: buildTree 2
(5) (1) 
line 310: inorderTraversal
(1) (5) 
line 311: insert (9)
line 312: inorderTraversal
(1) (5) (9) 
line 313: kNearestNeighbour 3 (5)
(1) (5) (9) 
line 314: inorderTraversal
(1) (5) (9) 
line 315: insert (10)
line 316: inorderTraversal
(1) (5) (9) (10) 
line 317: nearestNeighbour (9)
(9) 
line 318: inorderTraversal
(1) (5) (9) (10) 
line 319: clear
line 320: buildTree 2
(3) (6) 
line 321: inorderTraversal
(3) (6) 
line 322: insert (7)
line 323: inorderTraversal
(3) (6) (7) 
line 324: remove (6)
line 325: inorderTraversal
(3) (7) 
line 326: insert (1)
line 327: inorderTraversal
(1) (3) (7) 
line 328: insert (3)
line 329: inorderTraversal
(1) (3) (3) (7) 
line 330: insert (1)
line 331: inorderTraversal
(1) (1) (3) (3) (7) 
line 332: postorderTraversal
(1) (1) (3) (7) (3) 
line 333: inorderTraversal
(1) (1) (3) (3) (7) 
line 334: kNearestNeighbour 4 (7)
(1) (3) (3) (7) 
line 335: inorderTraversal
(1) (1) (3) (3) (7) 
line 336: nearestNeighbour (9)
(7) 
line 337: inorderTraversal
(1) (1) (3) (3) (7) 
line 338: postorderTraversal
(1) (1) (3) (7) (3) 
line 339: inorderTraversal
(1) (1) (3) (3) (7) 
line 340: nearestNeighbour (6)
(7) 
line 341: inorderTraversal
(1) (1) (3) (3) (7) 
line 342: remove (3)
line 343: inorderTraversal
(1) (1) (3) (7) 
line 344: insert (10)
line 345: inorderTraversal
(1) (1) (3) (7) (10) 
line 346: insert (2)
line 347: inorderTraversal
(1) (1) (2) (3) (7) (10) 
line 348: insert (7)
line 349: inorderTraversal
(1) (1) (2) (3) (7) (7) (10) 
line 350: nearestNeighbour (6)
(7) 
line 351: inorderTraversal
(1) (1) (2) (3) (7) (7) (10) 
line 352: insert (6)
line 353: inorderTraversal
(1) (1) (2) (3) (6) (7) (7) (10) 
line 354: clear
line 355: buildTree 13
(4) (3) (10) (4) (9) (2) (3) (6) (6) (9) (7) (10) (6) 
line 356: inorderTraversal
(2) (3) (3) (4) (4) (6) (6) (6) (7) (9) (9) (10) (10) 
line 357: clear
line 358: buildTree 1
(2) 
line 359: inorderTraversal
(2) 
line 360: kNearestNeighbour 8 (6)
(2) 
line 361: inorderTraversal
(2) 
line 362: insert (9)
line 363: inorderTraversal
(2) (9) 
line 364: remove (8)
line 365: inorderTraversal
(2) (9) 
line 366: insert (2)
line 367: inorderTraversal
(2) (2) (9) 
line 368: kNearestNeighbour 2 (10)
(2) (9) 
line 369: inorderTraversal
(2) (2) (9) 
line 370: insert (9)
line 371: inorderTraversal
(2) (2) (9) (9) 
line 372: insert (3)
line 373: inorderTraversal
(2) (2) (3) (9) (9) 
line 374: insert (2)
line 375: inorderTraversal
(2) (2) (2) (3) (9) (9) 
line 376: insert (2)
line 377: inorderTraversal
(2) (2) (2) (2) (3) (9) (9) 
line 378: clear
line 379: buildTree 4
(2) (5) (6) (5) 
line 380: inorderTraversal
(2) (5) (5) (6) 
line 381: nearestNeighbour (10)
(6) 
line 382: inorderTraversal
(2) (5) (5) (6) 
line 383: kNearestNeighbour 7 (6)
(2) (5) (5) (6) 
line 384: inorderTraversal
(2) (5) (5) (6) 
line 385: kNearestNeighbour 8 (9)
(2) (5) (5) (6) 
line 386: inorderTraversal
(2) (5) (5) (6) 
line 387: clear
line 388: buildTree 6
(2) (3) (10) (5) (8) (9) 
line 389: inorderTraversal
(2) (3) (5) (8) (9) (10) 
line 390: kNearestNeighbour 9 (1)
(2) (3) (5) (8) (9) (10) 
line 391: inorderTraversal
(2) (3) (5) (8) (9) (10) 
line 392: insert (9)
line 393: inorderTraversal
(2) (3) (5) (8) (9) (9) (10) 
line 394: kNearestNeighbour 5 (9)
(5) (8) (9) (9) (10) 
line 395: inorderTraversal
(2) (3) (5) (8) (9) (9) (10) 
line 396: insert (3)
line 397: inorderTraversal
(2) (3) (3) (5) (8) (9) (9) (10) 
line 398: kNearestNeighbour 4 (10)
(8) (9) (9) (10) 
line 399: inorderTraversal
(2) (3) (3) (5) (8) (9) (9) (10) 
line 400: kNearestNeighbour 6 (9)
(3) (5) (8) (9) (9) (10) 
line 401: inorderTraversal
(2) (3) (3) (5) (8) (9) (9) (10) 
line 402: nearestNeighbour (4)
(3) 
line 403: inorderTraversal
(2) (3) (3) (5) (8) (9) (9) (10) 
line 404: insert (7)
line 405: inorderTraversal
(2) (3) (3) (5) (7) (8) (9) (9) (10) 
line 406: insert (4)
line 407: inorderTraversal
(2) (3) (3) (4) (5) (7) (8) (9) (9) (10) 
line 408: nearestNeighbour (1)
(2) 
line 409: inorderTraversal
(2) (3) (3) (4) (5) (7) (8) (9) (9) (10) 
line 410: insert (10)
line 411: inorderTraversal
(2) (3) (3) (4) (5) (7) (8) (9) (9) (10) (10) 
line 412: clear
line 413: buildTree 2
(10) (5) 
line 414: inorderTraversal
(5) (10) 
line 415: insert (8)
line 416: inorderTraversal
(5) (8) (10) 
line 417: nearestNeighbour (2)
(5) 
line 418: inorderTraversal
(5) (8) (10) 
line 419: nearestNeighbour (3)
(5) 
line 420: inorderTraversal
(5) (8) (10) 
line 421: nodeCount_height_leafCount
nodeCount=3;height=3;leafCount=1
line 422: inorderTraversal
(5) (8) (10) 
line 423: preorderTraversal
(5) (10) (8) 
line 424: postorderTraversal
(8) (10) (5) 
line 425: clear
