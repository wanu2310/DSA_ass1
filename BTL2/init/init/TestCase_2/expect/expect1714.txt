line 1: k=1
line 2: clear
line 3: buildTree 6
(9) (5) (10) (3) (8) (1) 
line 4: inorderTraversal
(1) (3) (5) (8) (9) (10) 
line 5: clear
line 6: buildTree 9
(2) (6) (9) (1) (3) (9) (10) (2) (5) 
line 7: inorderTraversal
(1) (2) (2) (3) (5) (6) (9) (9) (10) 
line 8: kNearestNeighbour 1 (9)
(9) 
line 9: inorderTraversal
(1) (2) (2) (3) (5) (6) (9) (9) (10) 
line 10: kNearestNeighbour 7 (6)
(2) (3) (5) (6) (9) (9) (10) 
line 11: inorderTraversal
(1) (2) (2) (3) (5) (6) (9) (9) (10) 
line 12: clear
line 13: buildTree 20
(4) (9) (4) (2) (5) (6) (8) (9) (6) (1) (10) (7) (3) (9) (10) (7) (6) (5) (6) (9) 
line 14: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 15: insert (4)
line 16: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) (10) 
line 17: insert (9)
line 18: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 19: kNearestNeighbour 4 (6)
(6) (6) (6) (6) 
line 20: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 21: nearestNeighbour (5)
(5) 
line 22: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (9) (10) (10) 
line 23: insert (9)
line 24: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 25: kNearestNeighbour 10 (8)
(7) (7) (8) (9) (9) (9) (9) (9) (9) (10) 
line 26: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 27: insert (8)
line 28: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 29: insert (10)
line 30: inorderTraversal
(1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (10) (10) (10) 
line 31: insert (1)
line 32: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) (9) (9) (10) (10) (10) 
line 33: clear
line 34: buildTree 1
(9) 
line 35: inorderTraversal
(9) 
line 36: clear
line 37: buildTree 7
(8) (10) (5) (10) (3) (3) (10) 
line 38: inorderTraversal
(3) (3) (5) (8) (10) (10) (10) 
line 39: nearestNeighbour (3)
(3) 
line 40: inorderTraversal
(3) (3) (5) (8) (10) (10) (10) 
line 41: clear
line 42: buildTree 4
(2) (5) (8) (5) 
line 43: inorderTraversal
(2) (5) (5) (8) 
line 44: nearestNeighbour (5)
(5) 
line 45: inorderTraversal
(2) (5) (5) (8) 
line 46: search (5)
TRUE
line 47: inorderTraversal
(2) (5) (5) (8) 
line 48: kNearestNeighbour 7 (6)
(2) (5) (5) (8) 
line 49: inorderTraversal
(2) (5) (5) (8) 
line 50: nodeCount_height_leafCount
nodeCount=4;height=3;leafCount=2
line 51: inorderTraversal
(2) (5) (5) (8) 
line 52: insert (6)
line 53: inorderTraversal
(2) (5) (5) (6) (8) 
line 54: remove (5)
line 55: inorderTraversal
(2) (5) (6) (8) 
line 56: kNearestNeighbour 9 (1)
(2) (5) (6) (8) 
line 57: inorderTraversal
(2) (5) (6) (8) 
line 58: nearestNeighbour (8)
(8) 
line 59: inorderTraversal
(2) (5) (6) (8) 
line 60: insert (3)
line 61: inorderTraversal
(2) (3) (5) (6) (8) 
line 62: insert (4)
line 63: inorderTraversal
(2) (3) (4) (5) (6) (8) 
line 64: kNearestNeighbour 1 (8)
(8) 
line 65: inorderTraversal
(2) (3) (4) (5) (6) (8) 
line 66: insert (3)
line 67: inorderTraversal
(2) (3) (3) (4) (5) (6) (8) 
line 68: insert (10)
line 69: inorderTraversal
(2) (3) (3) (4) (5) (6) (8) (10) 
line 70: clear
line 71: buildTree 2
(10) (4) 
line 72: inorderTraversal
(4) (10) 
line 73: search (10)
TRUE
line 74: inorderTraversal
(4) (10) 
line 75: kNearestNeighbour 7 (8)
(4) (10) 
line 76: inorderTraversal
(4) (10) 
line 77: insert (4)
line 78: inorderTraversal
(4) (4) (10) 
line 79: kNearestNeighbour 9 (5)
(4) (4) (10) 
line 80: inorderTraversal
(4) (4) (10) 
line 81: kNearestNeighbour 7 (1)
(4) (4) (10) 
line 82: inorderTraversal
(4) (4) (10) 
line 83: insert (2)
line 84: inorderTraversal
(2) (4) (4) (10) 
line 85: kNearestNeighbour 4 (5)
(2) (4) (4) (10) 
line 86: inorderTraversal
(2) (4) (4) (10) 
line 87: insert (4)
line 88: inorderTraversal
(2) (4) (4) (4) (10) 
line 89: insert (7)
line 90: inorderTraversal
(2) (4) (4) (4) (7) (10) 
line 91: kNearestNeighbour 8 (7)
(2) (4) (4) (4) (7) (10) 
line 92: inorderTraversal
(2) (4) (4) (4) (7) (10) 
line 93: kNearestNeighbour 7 (4)
(2) (4) (4) (4) (7) (10) 
line 94: inorderTraversal
(2) (4) (4) (4) (7) (10) 
line 95: insert (6)
line 96: inorderTraversal
(2) (4) (4) (4) (6) (7) (10) 
line 97: nearestNeighbour (9)
(10) 
line 98: inorderTraversal
(2) (4) (4) (4) (6) (7) (10) 
line 99: kNearestNeighbour 8 (2)
(2) (4) (4) (4) (6) (7) (10) 
line 100: inorderTraversal
(2) (4) (4) (4) (6) (7) (10) 
line 101: insert (3)
line 102: inorderTraversal
(2) (3) (4) (4) (4) (6) (7) (10) 
line 103: insert (2)
line 104: inorderTraversal
(2) (2) (3) (4) (4) (4) (6) (7) (10) 
line 105: insert (7)
line 106: inorderTraversal
(2) (2) (3) (4) (4) (4) (6) (7) (7) (10) 
line 107: insert (5)
line 108: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (6) (7) (7) (10) 
line 109: remove (3)
line 110: inorderTraversal
(2) (2) (4) (4) (4) (5) (6) (7) (7) (10) 
line 111: insert (6)
line 112: inorderTraversal
(2) (2) (4) (4) (4) (5) (6) (6) (7) (7) (10) 
line 113: nearestNeighbour (10)
(10) 
line 114: inorderTraversal
(2) (2) (4) (4) (4) (5) (6) (6) (7) (7) (10) 
line 115: kNearestNeighbour 5 (8)
(6) (6) (7) (7) (10) 
line 116: inorderTraversal
(2) (2) (4) (4) (4) (5) (6) (6) (7) (7) (10) 
line 117: insert (9)
line 118: inorderTraversal
(2) (2) (4) (4) (4) (5) (6) (6) (7) (7) (9) (10) 
line 119: nearestNeighbour (8)
(9) 
line 120: inorderTraversal
(2) (2) (4) (4) (4) (5) (6) (6) (7) (7) (9) (10) 
line 121: nearestNeighbour (6)
(6) 
line 122: inorderTraversal
(2) (2) (4) (4) (4) (5) (6) (6) (7) (7) (9) (10) 
line 123: insert (9)
line 124: inorderTraversal
(2) (2) (4) (4) (4) (5) (6) (6) (7) (7) (9) (9) (10) 
line 125: clear
line 126: buildTree 11
(6) (5) (2) (10) (3) (7) (10) (6) (10) (3) (1) 
line 127: inorderTraversal
(1) (2) (3) (3) (5) (6) (6) (7) (10) (10) (10) 
line 128: insert (9)
line 129: inorderTraversal
(1) (2) (3) (3) (5) (6) (6) (7) (9) (10) (10) (10) 
line 130: clear
line 131: buildTree 7
(10) (3) (8) (9) (1) (4) (4) 
line 132: inorderTraversal
(1) (3) (4) (4) (8) (9) (10) 
line 133: nearestNeighbour (8)
(8) 
line 134: inorderTraversal
(1) (3) (4) (4) (8) (9) (10) 
line 135: insert (4)
line 136: inorderTraversal
(1) (3) (4) (4) (4) (8) (9) (10) 
line 137: nearestNeighbour (3)
(3) 
line 138: inorderTraversal
(1) (3) (4) (4) (4) (8) (9) (10) 
line 139: nearestNeighbour (4)
(4) 
line 140: inorderTraversal
(1) (3) (4) (4) (4) (8) (9) (10) 
line 141: kNearestNeighbour 2 (4)
(4) (4) 
line 142: inorderTraversal
(1) (3) (4) (4) (4) (8) (9) (10) 
line 143: kNearestNeighbour 10 (9)
(1) (3) (4) (4) (4) (8) (9) (10) 
line 144: inorderTraversal
(1) (3) (4) (4) (4) (8) (9) (10) 
line 145: nodeCount_height_leafCount
nodeCount=8;height=4;leafCount=3
line 146: inorderTraversal
(1) (3) (4) (4) (4) (8) (9) (10) 
line 147: insert (7)
line 148: inorderTraversal
(1) (3) (4) (4) (4) (7) (8) (9) (10) 
line 149: remove (4)
line 150: inorderTraversal
(1) (3) (4) (4) (7) (8) (9) (10) 
line 151: preorderTraversal
(4) (1) (3) (8) (4) (7) (9) (10) 
line 152: inorderTraversal
(1) (3) (4) (4) (7) (8) (9) (10) 
line 153: kNearestNeighbour 9 (3)
(1) (3) (4) (4) (7) (8) (9) (10) 
line 154: inorderTraversal
(1) (3) (4) (4) (7) (8) (9) (10) 
line 155: insert (1)
line 156: inorderTraversal
(1) (1) (3) (4) (4) (7) (8) (9) (10) 
line 157: nearestNeighbour (6)
(7) 
line 158: inorderTraversal
(1) (1) (3) (4) (4) (7) (8) (9) (10) 
line 159: nearestNeighbour (10)
(10) 
line 160: inorderTraversal
(1) (1) (3) (4) (4) (7) (8) (9) (10) 
line 161: insert (10)
line 162: inorderTraversal
(1) (1) (3) (4) (4) (7) (8) (9) (10) (10) 
line 163: kNearestNeighbour 5 (4)
(1) (3) (4) (4) (7) 
line 164: inorderTraversal
(1) (1) (3) (4) (4) (7) (8) (9) (10) (10) 
line 165: insert (7)
line 166: inorderTraversal
(1) (1) (3) (4) (4) (7) (7) (8) (9) (10) (10) 
line 167: remove (4)
line 168: inorderTraversal
(1) (1) (3) (4) (7) (7) (8) (9) (10) (10) 
line 169: remove (1)
line 170: inorderTraversal
(1) (3) (4) (7) (7) (8) (9) (10) (10) 
line 171: nearestNeighbour (1)
(1) 
line 172: inorderTraversal
(1) (3) (4) (7) (7) (8) (9) (10) (10) 
line 173: clear
line 174: buildTree 8
(3) (1) (8) (6) (1) (1) (5) (9) 
line 175: inorderTraversal
(1) (1) (1) (3) (5) (6) (8) (9) 
line 176: insert (9)
line 177: inorderTraversal
(1) (1) (1) (3) (5) (6) (8) (9) (9) 
line 178: nearestNeighbour (5)
(5) 
line 179: inorderTraversal
(1) (1) (1) (3) (5) (6) (8) (9) (9) 
line 180: kNearestNeighbour 2 (3)
(3) (5) 
line 181: inorderTraversal
(1) (1) (1) (3) (5) (6) (8) (9) (9) 
line 182: remove (8)
line 183: inorderTraversal
(1) (1) (1) (3) (5) (6) (9) (9) 
line 184: insert (2)
line 185: inorderTraversal
(1) (1) (1) (2) (3) (5) (6) (9) (9) 
line 186: remove (2)
line 187: inorderTraversal
(1) (1) (1) (3) (5) (6) (9) (9) 
line 188: nearestNeighbour (8)
(9) 
line 189: inorderTraversal
(1) (1) (1) (3) (5) (6) (9) (9) 
line 190: kNearestNeighbour 5 (1)
(1) (1) (1) (3) (5) 
line 191: inorderTraversal
(1) (1) (1) (3) (5) (6) (9) (9) 
line 192: kNearestNeighbour 1 (4)
(5) 
line 193: inorderTraversal
(1) (1) (1) (3) (5) (6) (9) (9) 
line 194: insert (4)
line 195: inorderTraversal
(1) (1) (1) (3) (4) (5) (6) (9) (9) 
line 196: kNearestNeighbour 3 (2)
(1) (1) (1) 
line 197: inorderTraversal
(1) (1) (1) (3) (4) (5) (6) (9) (9) 
line 198: insert (5)
line 199: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (6) (9) (9) 
line 200: insert (6)
line 201: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (6) (6) (9) (9) 
line 202: nearestNeighbour (7)
(6) 
line 203: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (6) (6) (9) (9) 
line 204: nearestNeighbour (1)
(1) 
line 205: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (6) (6) (9) (9) 
line 206: insert (5)
line 207: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (5) (6) (6) (9) (9) 
line 208: kNearestNeighbour 9 (10)
(3) (4) (5) (5) (5) (6) (6) (9) (9) 
line 209: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (5) (6) (6) (9) (9) 
line 210: search (2)
FALSE
line 211: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (5) (6) (6) (9) (9) 
line 212: nearestNeighbour (9)
(9) 
line 213: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (5) (6) (6) (9) (9) 
line 214: nearestNeighbour (8)
(9) 
line 215: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (5) (6) (6) (9) (9) 
line 216: insert (8)
line 217: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (5) (6) (6) (8) (9) (9) 
line 218: preorderTraversal
(3) (1) (1) (1) (6) (5) (4) (5) (5) (9) (6) (8) (9) 
line 219: inorderTraversal
(1) (1) (1) (3) (4) (5) (5) (5) (6) (6) (8) (9) (9) 
line 220: insert (4)
line 221: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (8) (9) (9) 
line 222: search (9)
TRUE
line 223: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (8) (9) (9) 
line 224: insert (7)
line 225: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) 
line 226: insert (10)
line 227: inorderTraversal
(1) (1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (9) (9) (10) 
line 228: clear
line 229: buildTree 17
(9) (2) (5) (8) (6) (2) (8) (10) (9) (9) (7) (9) (1) (7) (5) (7) (3) 
line 230: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 231: search (6)
TRUE
line 232: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 233: nearestNeighbour (9)
(9) 
line 234: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 235: nearestNeighbour (5)
(5) 
line 236: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 237: clear
line 238: buildTree 5
(9) (8) (5) (5) (10) 
line 239: inorderTraversal
(5) (5) (8) (9) (10) 
line 240: kNearestNeighbour 6 (5)
(5) (5) (8) (9) (10) 
line 241: inorderTraversal
(5) (5) (8) (9) (10) 
line 242: kNearestNeighbour 10 (5)
(5) (5) (8) (9) (10) 
line 243: inorderTraversal
(5) (5) (8) (9) (10) 
line 244: nearestNeighbour (6)
(5) 
line 245: inorderTraversal
(5) (5) (8) (9) (10) 
line 246: nearestNeighbour (4)
(5) 
line 247: inorderTraversal
(5) (5) (8) (9) (10) 
line 248: insert (6)
line 249: inorderTraversal
(5) (5) (6) (8) (9) (10) 
line 250: nearestNeighbour (7)
(6) 
line 251: inorderTraversal
(5) (5) (6) (8) (9) (10) 
line 252: nearestNeighbour (1)
(5) 
line 253: inorderTraversal
(5) (5) (6) (8) (9) (10) 
line 254: insert (2)
line 255: inorderTraversal
(2) (5) (5) (6) (8) (9) (10) 
line 256: kNearestNeighbour 8 (8)
(2) (5) (5) (6) (8) (9) (10) 
line 257: inorderTraversal
(2) (5) (5) (6) (8) (9) (10) 
line 258: search (2)
TRUE
line 259: inorderTraversal
(2) (5) (5) (6) (8) (9) (10) 
line 260: insert (6)
line 261: inorderTraversal
(2) (5) (5) (6) (6) (8) (9) (10) 
line 262: insert (6)
line 263: inorderTraversal
(2) (5) (5) (6) (6) (6) (8) (9) (10) 
line 264: clear
line 265: buildTree 17
(3) (4) (7) (9) (8) (9) (5) (7) (3) (7) (7) (8) (7) (10) (7) (8) (2) 
line 266: inorderTraversal
(2) (3) (3) (4) (5) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 267: nodeCount_height_leafCount
nodeCount=17;height=7;leafCount=6
line 268: inorderTraversal
(2) (3) (3) (4) (5) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 269: insert (5)
line 270: inorderTraversal
(2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 271: insert (2)
line 272: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 273: insert (8)
line 274: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 275: insert (7)
line 276: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 277: nearestNeighbour (9)
(9) 
line 278: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 279: kNearestNeighbour 3 (2)
(2) (2) (3) 
line 280: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 281: search (4)
TRUE
line 282: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 283: kNearestNeighbour 1 (4)
(4) 
line 284: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 285: kNearestNeighbour 3 (2)
(2) (2) (3) 
line 286: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 287: remove (8)
line 288: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 289: remove (10)
line 290: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) 
line 291: insert (4)
line 292: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) 
line 293: insert (9)
line 294: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 295: insert (3)
line 296: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 297: insert (5)
line 298: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 299: nearestNeighbour (4)
(4) 
line 300: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 301: remove (3)
line 302: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 303: remove (8)
line 304: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) 
line 305: insert (3)
line 306: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) 
line 307: nodeCount_height_leafCount
nodeCount=22;height=8;leafCount=7
line 308: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) 
line 309: kNearestNeighbour 8 (4)
(3) (3) (3) (4) (4) (5) (5) (5) 
line 310: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) 
line 311: remove (3)
line 312: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (7) (7) (7) (7) (8) (8) (9) (9) (9) 
line 313: clear
line 314: buildTree 8
(7) (4) (4) (7) (2) (9) (3) (6) 
line 315: inorderTraversal
(2) (3) (4) (4) (6) (7) (7) (9) 
line 316: insert (3)
line 317: inorderTraversal
(2) (3) (3) (4) (4) (6) (7) (7) (9) 
line 318: insert (3)
line 319: inorderTraversal
(2) (3) (3) (3) (4) (4) (6) (7) (7) (9) 
line 320: clear
line 321: buildTree 16
(7) (9) (4) (1) (9) (1) (1) (3) (6) (7) (8) (7) (9) (9) (3) (2) 
line 322: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (6) (7) (7) (7) (8) (9) (9) (9) (9) 
line 323: nearestNeighbour (9)
(9) 
line 324: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (6) (7) (7) (7) (8) (9) (9) (9) (9) 
line 325: search (1)
TRUE
line 326: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (6) (7) (7) (7) (8) (9) (9) (9) (9) 
line 327: insert (1)
line 328: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (6) (7) (7) (7) (8) (9) (9) (9) (9) 
line 329: remove (4)
line 330: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (6) (7) (7) (7) (8) (9) (9) (9) (9) 
line 331: insert (5)
line 332: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (5) (6) (7) (7) (7) (8) (9) (9) (9) (9) 
line 333: insert (7)
line 334: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) 
line 335: kNearestNeighbour 8 (7)
(6) (7) (7) (7) (7) (8) (9) (9) 
line 336: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) 
line 337: insert (4)
line 338: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) 
line 339: kNearestNeighbour 2 (4)
(4) (5) 
line 340: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) 
line 341: kNearestNeighbour 4 (5)
(3) (4) (5) (6) 
line 342: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) 
line 343: kNearestNeighbour 7 (5)
(3) (3) (4) (5) (6) (7) (7) 
line 344: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) 
line 345: search (2)
TRUE
line 346: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) 
line 347: clear
line 348: buildTree 19
(1) (7) (3) (9) (8) (4) (7) (8) (2) (5) (9) (5) (4) (2) (1) (5) (8) (7) (8) 
line 349: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 350: nearestNeighbour (8)
(8) 
line 351: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) (9) 
line 352: insert (10)
line 353: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 354: clear
line 355: buildTree 1
(7) 
line 356: inorderTraversal
(7) 
line 357: insert (9)
line 358: inorderTraversal
(7) (9) 
line 359: insert (2)
line 360: inorderTraversal
(2) (7) (9) 
line 361: kNearestNeighbour 10 (3)
(2) (7) (9) 
line 362: inorderTraversal
(2) (7) (9) 
line 363: insert (6)
line 364: inorderTraversal
(2) (6) (7) (9) 
line 365: remove (9)
line 366: inorderTraversal
(2) (6) (7) 
line 367: insert (3)
line 368: inorderTraversal
(2) (3) (6) (7) 
line 369: nearestNeighbour (5)
(6) 
line 370: inorderTraversal
(2) (3) (6) (7) 
line 371: kNearestNeighbour 2 (2)
(2) (3) 
line 372: inorderTraversal
(2) (3) (6) (7) 
line 373: insert (6)
line 374: inorderTraversal
(2) (3) (6) (6) (7) 
line 375: nearestNeighbour (6)
(6) 
line 376: inorderTraversal
(2) (3) (6) (6) (7) 
line 377: kNearestNeighbour 6 (9)
(2) (3) (6) (6) (7) 
line 378: inorderTraversal
(2) (3) (6) (6) (7) 
line 379: insert (9)
line 380: inorderTraversal
(2) (3) (6) (6) (7) (9) 
line 381: nearestNeighbour (5)
(6) 
line 382: inorderTraversal
(2) (3) (6) (6) (7) (9) 
line 383: clear
line 384: buildTree 17
(9) (9) (3) (10) (2) (6) (2) (9) (5) (4) (2) (6) (10) (5) (5) (5) (10) 
line 385: inorderTraversal
(2) (2) (2) (3) (4) (5) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) 
line 386: nearestNeighbour (2)
(2) 
line 387: inorderTraversal
(2) (2) (2) (3) (4) (5) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) 
line 388: remove (6)
line 389: inorderTraversal
(2) (2) (2) (3) (4) (5) (5) (5) (5) (6) (9) (9) (9) (10) (10) (10) 
line 390: remove (5)
line 391: inorderTraversal
(2) (2) (2) (3) (4) (5) (5) (5) (6) (9) (9) (9) (10) (10) (10) 
line 392: nearestNeighbour (8)
(9) 
line 393: inorderTraversal
(2) (2) (2) (3) (4) (5) (5) (5) (6) (9) (9) (9) (10) (10) (10) 
line 394: remove (4)
line 395: inorderTraversal
(2) (2) (2) (3) (5) (5) (5) (6) (9) (9) (9) (10) (10) (10) 
line 396: search (4)
FALSE
line 397: inorderTraversal
(2) (2) (2) (3) (5) (5) (5) (6) (9) (9) (9) (10) (10) (10) 
line 398: insert (6)
line 399: inorderTraversal
(2) (2) (2) (3) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) 
line 400: insert (10)
line 401: inorderTraversal
(2) (2) (2) (3) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) (10) 
line 402: insert (8)
line 403: inorderTraversal
(2) (2) (2) (3) (5) (5) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) (10) 
line 404: search (10)
TRUE
line 405: inorderTraversal
(2) (2) (2) (3) (5) (5) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) (10) 
line 406: insert (2)
line 407: inorderTraversal
(2) (2) (2) (2) (3) (5) (5) (5) (6) (6) (8) (9) (9) (9) (10) (10) (10) (10) 
line 408: remove (8)
line 409: inorderTraversal
(2) (2) (2) (2) (3) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) (10) 
line 410: kNearestNeighbour 2 (9)
(9) (9) 
line 411: inorderTraversal
(2) (2) (2) (2) (3) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) (10) 
line 412: insert (2)
line 413: inorderTraversal
(2) (2) (2) (2) (2) (3) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) (10) 
line 414: postorderTraversal
(2) (2) (2) (3) (2) (2) (6) (6) (5) (5) (9) (9) (10) (10) (10) (10) (9) (5) 
line 415: inorderTraversal
(2) (2) (2) (2) (2) (3) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) (10) 
line 416: nearestNeighbour (7)
(6) 
line 417: inorderTraversal
(2) (2) (2) (2) (2) (3) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) (10) 
line 418: insert (5)
line 419: inorderTraversal
(2) (2) (2) (2) (2) (3) (5) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) (10) 
line 420: nodeCount_height_leafCount
nodeCount=19;height=7;leafCount=5
line 421: inorderTraversal
(2) (2) (2) (2) (2) (3) (5) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) (10) (10) 
line 422: preorderTraversal
(5) (2) (2) (3) (2) (2) (2) (9) (5) (5) (6) (5) (6) (10) (9) (9) (10) (10) (10) 
line 423: postorderTraversal
(2) (2) (2) (3) (2) (2) (5) (6) (6) (5) (5) (9) (9) (10) (10) (10) (10) (9) (5) 
line 424: clear
