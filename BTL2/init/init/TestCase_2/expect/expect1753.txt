line 1: k=1
line 2: insert (1)
line 3: inorderTraversal
(1) 
line 4: insert (6)
line 5: inorderTraversal
(1) (6) 
line 6: clear
line 7: buildTree 5
(3) (3) (3) (7) (6) 
line 8: inorderTraversal
(3) (3) (3) (6) (7) 
line 9: kNearestNeighbour 5 (4)
(3) (3) (3) (6) (7) 
line 10: inorderTraversal
(3) (3) (3) (6) (7) 
line 11: nearestNeighbour (3)
(3) 
line 12: inorderTraversal
(3) (3) (3) (6) (7) 
line 13: nearestNeighbour (5)
(6) 
line 14: inorderTraversal
(3) (3) (3) (6) (7) 
line 15: insert (6)
line 16: inorderTraversal
(3) (3) (3) (6) (6) (7) 
line 17: insert (3)
line 18: inorderTraversal
(3) (3) (3) (3) (6) (6) (7) 
line 19: search (6)
TRUE
line 20: inorderTraversal
(3) (3) (3) (3) (6) (6) (7) 
line 21: preorderTraversal
(3) (3) (6) (3) (3) (7) (6) 
line 22: inorderTraversal
(3) (3) (3) (3) (6) (6) (7) 
line 23: insert (9)
line 24: inorderTraversal
(3) (3) (3) (3) (6) (6) (7) (9) 
line 25: remove (8)
line 26: inorderTraversal
(3) (3) (3) (3) (6) (6) (7) (9) 
line 27: clear
line 28: buildTree 20
(3) (1) (5) (7) (10) (5) (2) (6) (8) (10) (9) (8) (10) (4) (3) (3) (10) (2) (10) (6) 
line 29: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 30: clear
line 31: buildTree 1
(10) 
line 32: inorderTraversal
(10) 
line 33: clear
line 34: buildTree 13
(9) (3) (6) (2) (5) (10) (1) (4) (5) (1) (5) (4) (8) 
line 35: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (8) (9) (10) 
line 36: nearestNeighbour (4)
(4) 
line 37: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (5) (6) (8) (9) (10) 
line 38: insert (2)
line 39: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (5) (6) (8) (9) (10) 
line 40: nearestNeighbour (4)
(4) 
line 41: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (5) (5) (5) (6) (8) (9) (10) 
line 42: clear
line 43: buildTree 5
(6) (8) (10) (7) (5) 
line 44: inorderTraversal
(5) (6) (7) (8) (10) 
line 45: insert (8)
line 46: inorderTraversal
(5) (6) (7) (8) (8) (10) 
line 47: insert (7)
line 48: inorderTraversal
(5) (6) (7) (7) (8) (8) (10) 
line 49: kNearestNeighbour 10 (5)
(5) (6) (7) (7) (8) (8) (10) 
line 50: inorderTraversal
(5) (6) (7) (7) (8) (8) (10) 
line 51: insert (2)
line 52: inorderTraversal
(2) (5) (6) (7) (7) (8) (8) (10) 
line 53: insert (3)
line 54: inorderTraversal
(2) (3) (5) (6) (7) (7) (8) (8) (10) 
line 55: nearestNeighbour (8)
(8) 
line 56: inorderTraversal
(2) (3) (5) (6) (7) (7) (8) (8) (10) 
line 57: insert (3)
line 58: inorderTraversal
(2) (3) (3) (5) (6) (7) (7) (8) (8) (10) 
line 59: insert (9)
line 60: inorderTraversal
(2) (3) (3) (5) (6) (7) (7) (8) (8) (9) (10) 
line 61: insert (3)
line 62: inorderTraversal
(2) (3) (3) (3) (5) (6) (7) (7) (8) (8) (9) (10) 
line 63: insert (7)
line 64: inorderTraversal
(2) (3) (3) (3) (5) (6) (7) (7) (7) (8) (8) (9) (10) 
line 65: insert (6)
line 66: inorderTraversal
(2) (3) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 67: insert (9)
line 68: inorderTraversal
(2) (3) (3) (3) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 69: clear
line 70: buildTree 7
(8) (9) (4) (6) (7) (9) (8) 
line 71: inorderTraversal
(4) (6) (7) (8) (8) (9) (9) 
line 72: kNearestNeighbour 7 (5)
(4) (6) (7) (8) (8) (9) (9) 
line 73: inorderTraversal
(4) (6) (7) (8) (8) (9) (9) 
line 74: insert (10)
line 75: inorderTraversal
(4) (6) (7) (8) (8) (9) (9) (10) 
line 76: insert (2)
line 77: inorderTraversal
(2) (4) (6) (7) (8) (8) (9) (9) (10) 
line 78: remove (8)
line 79: inorderTraversal
(2) (4) (6) (7) (8) (9) (9) (10) 
line 80: kNearestNeighbour 5 (1)
(2) (4) (6) (7) (8) 
line 81: inorderTraversal
(2) (4) (6) (7) (8) (9) (9) (10) 
line 82: nearestNeighbour (6)
(6) 
line 83: inorderTraversal
(2) (4) (6) (7) (8) (9) (9) (10) 
line 84: insert (3)
line 85: inorderTraversal
(2) (3) (4) (6) (7) (8) (9) (9) (10) 
line 86: insert (2)
line 87: inorderTraversal
(2) (2) (3) (4) (6) (7) (8) (9) (9) (10) 
line 88: insert (10)
line 89: inorderTraversal
(2) (2) (3) (4) (6) (7) (8) (9) (9) (10) (10) 
line 90: insert (8)
line 91: inorderTraversal
(2) (2) (3) (4) (6) (7) (8) (8) (9) (9) (10) (10) 
line 92: nearestNeighbour (5)
(4) 
line 93: inorderTraversal
(2) (2) (3) (4) (6) (7) (8) (8) (9) (9) (10) (10) 
line 94: insert (10)
line 95: inorderTraversal
(2) (2) (3) (4) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 96: insert (1)
line 97: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 98: clear
line 99: buildTree 11
(8) (3) (4) (1) (6) (1) (10) (6) (5) (3) (6) 
line 100: inorderTraversal
(1) (1) (3) (3) (4) (5) (6) (6) (6) (8) (10) 
line 101: insert (7)
line 102: inorderTraversal
(1) (1) (3) (3) (4) (5) (6) (6) (6) (7) (8) (10) 
line 103: remove (1)
line 104: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (7) (8) (10) 
line 105: kNearestNeighbour 9 (9)
(3) (4) (5) (6) (6) (6) (7) (8) (10) 
line 106: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (7) (8) (10) 
line 107: clear
line 108: buildTree 17
(8) (6) (8) (9) (1) (7) (10) (6) (6) (10) (7) (5) (3) (7) (9) (4) (8) 
line 109: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 110: remove (7)
line 111: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 112: insert (9)
line 113: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 114: preorderTraversal
(7) (5) (3) (1) (4) (6) (6) (6) (8) (7) (9) (8) (8) (10) (9) (9) (10) 
line 115: inorderTraversal
(1) (3) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 116: clear
line 117: buildTree 11
(1) (7) (2) (4) (3) (7) (8) (6) (3) (3) (7) 
line 118: inorderTraversal
(1) (2) (3) (3) (3) (4) (6) (7) (7) (7) (8) 
line 119: insert (10)
line 120: inorderTraversal
(1) (2) (3) (3) (3) (4) (6) (7) (7) (7) (8) (10) 
line 121: insert (5)
line 122: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) (8) (10) 
line 123: nearestNeighbour (5)
(5) 
line 124: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) (8) (10) 
line 125: nearestNeighbour (2)
(2) 
line 126: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) (8) (10) 
line 127: insert (1)
line 128: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (7) (8) (10) 
line 129: remove (7)
line 130: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (10) 
line 131: clear
line 132: buildTree 11
(8) (2) (8) (1) (3) (3) (7) (7) (5) (5) (8) 
line 133: inorderTraversal
(1) (2) (3) (3) (5) (5) (7) (7) (8) (8) (8) 
line 134: kNearestNeighbour 2 (8)
(8) (8) 
line 135: inorderTraversal
(1) (2) (3) (3) (5) (5) (7) (7) (8) (8) (8) 
line 136: insert (1)
line 137: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (7) (7) (8) (8) (8) 
line 138: kNearestNeighbour 8 (8)
(3) (5) (5) (7) (7) (8) (8) (8) 
line 139: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (7) (7) (8) (8) (8) 
line 140: clear
line 141: buildTree 3
(5) (7) (1) 
line 142: inorderTraversal
(1) (5) (7) 
line 143: kNearestNeighbour 4 (10)
(1) (5) (7) 
line 144: inorderTraversal
(1) (5) (7) 
line 145: nearestNeighbour (9)
(7) 
line 146: inorderTraversal
(1) (5) (7) 
line 147: insert (1)
line 148: inorderTraversal
(1) (1) (5) (7) 
line 149: search (7)
TRUE
line 150: inorderTraversal
(1) (1) (5) (7) 
line 151: insert (4)
line 152: inorderTraversal
(1) (1) (4) (5) (7) 
line 153: insert (9)
line 154: inorderTraversal
(1) (1) (4) (5) (7) (9) 
line 155: insert (2)
line 156: inorderTraversal
(1) (1) (2) (4) (5) (7) (9) 
line 157: clear
line 158: buildTree 15
(8) (2) (7) (3) (7) (10) (2) (1) (8) (3) (4) (9) (10) (7) (2) 
line 159: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (7) (7) (7) (8) (8) (9) (10) (10) 
line 160: remove (2)
line 161: inorderTraversal
(1) (2) (2) (3) (3) (4) (7) (7) (7) (8) (8) (9) (10) (10) 
line 162: nearestNeighbour (9)
(9) 
line 163: inorderTraversal
(1) (2) (2) (3) (3) (4) (7) (7) (7) (8) (8) (9) (10) (10) 
line 164: insert (6)
line 165: inorderTraversal
(1) (2) (2) (3) (3) (4) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 166: insert (6)
line 167: inorderTraversal
(1) (2) (2) (3) (3) (4) (6) (6) (7) (7) (7) (8) (8) (9) (10) (10) 
line 168: insert (7)
line 169: inorderTraversal
(1) (2) (2) (3) (3) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) 
line 170: insert (10)
line 171: inorderTraversal
(1) (2) (2) (3) (3) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 172: search (7)
TRUE
line 173: inorderTraversal
(1) (2) (2) (3) (3) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 174: insert (2)
line 175: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 176: clear
line 177: buildTree 17
(6) (9) (6) (10) (8) (2) (10) (10) (3) (4) (6) (9) (10) (1) (10) (1) (4) 
line 178: inorderTraversal
(1) (1) (2) (3) (4) (4) (6) (6) (6) (8) (9) (9) (10) (10) (10) (10) (10) 
line 179: clear
line 180: buildTree 6
(9) (4) (4) (4) (2) (1) 
line 181: inorderTraversal
(1) (2) (4) (4) (4) (9) 
line 182: nearestNeighbour (1)
(1) 
line 183: inorderTraversal
(1) (2) (4) (4) (4) (9) 
line 184: kNearestNeighbour 10 (10)
(1) (2) (4) (4) (4) (9) 
line 185: inorderTraversal
(1) (2) (4) (4) (4) (9) 
line 186: nearestNeighbour (3)
(2) 
line 187: inorderTraversal
(1) (2) (4) (4) (4) (9) 
line 188: remove (2)
line 189: inorderTraversal
(1) (4) (4) (4) (9) 
line 190: insert (8)
line 191: inorderTraversal
(1) (4) (4) (4) (8) (9) 
line 192: insert (3)
line 193: inorderTraversal
(1) (3) (4) (4) (4) (8) (9) 
line 194: nodeCount_height_leafCount
nodeCount=7;height=5;leafCount=2
line 195: inorderTraversal
(1) (3) (4) (4) (4) (8) (9) 
line 196: insert (3)
line 197: inorderTraversal
(1) (3) (3) (4) (4) (4) (8) (9) 
line 198: insert (2)
line 199: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (8) (9) 
line 200: insert (7)
line 201: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (7) (8) (9) 
line 202: nearestNeighbour (8)
(8) 
line 203: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (7) (8) (9) 
line 204: kNearestNeighbour 5 (3)
(2) (3) (3) (4) (4) 
line 205: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (7) (8) (9) 
line 206: insert (8)
line 207: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (7) (8) (8) (9) 
line 208: remove (5)
line 209: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (7) (8) (8) (9) 
line 210: kNearestNeighbour 2 (8)
(8) (8) 
line 211: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (7) (8) (8) (9) 
line 212: clear
line 213: buildTree 4
(9) (10) (3) (4) 
line 214: inorderTraversal
(3) (4) (9) (10) 
line 215: search (4)
TRUE
line 216: inorderTraversal
(3) (4) (9) (10) 
line 217: nearestNeighbour (8)
(9) 
line 218: inorderTraversal
(3) (4) (9) (10) 
line 219: insert (1)
line 220: inorderTraversal
(1) (3) (4) (9) (10) 
line 221: insert (4)
line 222: inorderTraversal
(1) (3) (4) (4) (9) (10) 
line 223: remove (4)
line 224: inorderTraversal
(1) (3) (4) (9) (10) 
line 225: clear
line 226: buildTree 7
(8) (7) (8) (1) (5) (9) (9) 
line 227: inorderTraversal
(1) (5) (7) (8) (8) (9) (9) 
line 228: insert (6)
line 229: inorderTraversal
(1) (5) (6) (7) (8) (8) (9) (9) 
line 230: remove (9)
line 231: inorderTraversal
(1) (5) (6) (7) (8) (8) (9) 
line 232: postorderTraversal
(1) (6) (7) (5) (8) (9) (8) 
line 233: inorderTraversal
(1) (5) (6) (7) (8) (8) (9) 
line 234: insert (6)
line 235: inorderTraversal
(1) (5) (6) (6) (7) (8) (8) (9) 
line 236: insert (3)
line 237: inorderTraversal
(1) (3) (5) (6) (6) (7) (8) (8) (9) 
line 238: nearestNeighbour (5)
(5) 
line 239: inorderTraversal
(1) (3) (5) (6) (6) (7) (8) (8) (9) 
line 240: clear
line 241: buildTree 9
(4) (9) (1) (4) (9) (4) (9) (2) (2) 
line 242: inorderTraversal
(1) (2) (2) (4) (4) (4) (9) (9) (9) 
line 243: insert (3)
line 244: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (9) (9) (9) 
line 245: preorderTraversal
(4) (2) (1) (2) (3) (9) (4) (4) (9) (9) 
line 246: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (9) (9) (9) 
line 247: kNearestNeighbour 4 (4)
(3) (4) (4) (4) 
line 248: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (9) (9) (9) 
line 249: insert (5)
line 250: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (5) (9) (9) (9) 
line 251: insert (7)
line 252: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (5) (7) (9) (9) (9) 
line 253: nearestNeighbour (1)
(1) 
line 254: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (5) (7) (9) (9) (9) 
line 255: nearestNeighbour (5)
(5) 
line 256: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (5) (7) (9) (9) (9) 
line 257: insert (1)
line 258: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (9) (9) (9) 
line 259: nearestNeighbour (5)
(5) 
line 260: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (9) (9) (9) 
line 261: insert (9)
line 262: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (9) (9) (9) (9) 
line 263: nearestNeighbour (2)
(2) 
line 264: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (9) (9) (9) (9) 
line 265: clear
line 266: buildTree 17
(9) (10) (6) (6) (9) (8) (1) (9) (5) (8) (8) (9) (7) (2) (2) (2) (3) 
line 267: inorderTraversal
(1) (2) (2) (2) (3) (5) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 268: insert (6)
line 269: inorderTraversal
(1) (2) (2) (2) (3) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 270: clear
line 271: buildTree 12
(5) (5) (9) (3) (4) (7) (2) (1) (2) (3) (8) (9) 
line 272: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) 
line 273: nearestNeighbour (1)
(1) 
line 274: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) 
line 275: nearestNeighbour (5)
(5) 
line 276: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) 
line 277: insert (10)
line 278: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) (10) 
line 279: remove (8)
line 280: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (9) (9) (10) 
line 281: nearestNeighbour (8)
(9) 
line 282: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (9) (9) (10) 
line 283: kNearestNeighbour 5 (1)
(1) (2) (2) (3) (3) 
line 284: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (9) (9) (10) 
line 285: insert (9)
line 286: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (9) (9) (9) (10) 
line 287: insert (8)
line 288: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) (9) (10) 
line 289: remove (10)
line 290: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) (9) 
line 291: kNearestNeighbour 7 (9)
(5) (5) (7) (8) (9) (9) (9) 
line 292: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) (9) 
line 293: kNearestNeighbour 7 (2)
(1) (2) (2) (3) (3) (4) (5) 
line 294: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) (9) 
line 295: preorderTraversal
(4) (2) (1) (3) (2) (3) (7) (5) (5) (9) (8) (9) (9) 
line 296: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (8) (9) (9) (9) 
line 297: insert (4)
line 298: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (9) (9) (9) 
line 299: remove (3)
line 300: inorderTraversal
(1) (2) (2) (3) (4) (4) (5) (5) (7) (8) (9) (9) (9) 
line 301: insert (2)
line 302: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (9) (9) (9) 
line 303: remove (9)
line 304: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (9) (9) 
line 305: insert (8)
line 306: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (9) (9) 
line 307: insert (2)
line 308: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (9) (9) 
line 309: remove (10)
line 310: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (9) (9) 
line 311: clear
line 312: buildTree 9
(6) (8) (8) (10) (4) (6) (1) (9) (3) 
line 313: inorderTraversal
(1) (3) (4) (6) (6) (8) (8) (9) (10) 
line 314: insert (1)
line 315: inorderTraversal
(1) (1) (3) (4) (6) (6) (8) (8) (9) (10) 
line 316: insert (7)
line 317: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (8) (8) (9) (10) 
line 318: nearestNeighbour (10)
(10) 
line 319: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (8) (8) (9) (10) 
line 320: kNearestNeighbour 3 (9)
(8) (9) (10) 
line 321: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (8) (8) (9) (10) 
line 322: nearestNeighbour (7)
(7) 
line 323: inorderTraversal
(1) (1) (3) (4) (6) (6) (7) (8) (8) (9) (10) 
line 324: clear
line 325: buildTree 3
(5) (2) (7) 
line 326: inorderTraversal
(2) (5) (7) 
line 327: kNearestNeighbour 6 (8)
(2) (5) (7) 
line 328: inorderTraversal
(2) (5) (7) 
line 329: nearestNeighbour (7)
(7) 
line 330: inorderTraversal
(2) (5) (7) 
line 331: clear
line 332: buildTree 4
(9) (1) (2) (10) 
line 333: inorderTraversal
(1) (2) (9) (10) 
line 334: kNearestNeighbour 10 (8)
(1) (2) (9) (10) 
line 335: inorderTraversal
(1) (2) (9) (10) 
line 336: kNearestNeighbour 7 (5)
(1) (2) (9) (10) 
line 337: inorderTraversal
(1) (2) (9) (10) 
line 338: nearestNeighbour (2)
(2) 
line 339: inorderTraversal
(1) (2) (9) (10) 
line 340: kNearestNeighbour 6 (7)
(1) (2) (9) (10) 
line 341: inorderTraversal
(1) (2) (9) (10) 
line 342: insert (4)
line 343: inorderTraversal
(1) (2) (4) (9) (10) 
line 344: search (10)
TRUE
line 345: inorderTraversal
(1) (2) (4) (9) (10) 
line 346: nearestNeighbour (2)
(2) 
line 347: inorderTraversal
(1) (2) (4) (9) (10) 
line 348: insert (2)
line 349: inorderTraversal
(1) (2) (2) (4) (9) (10) 
line 350: insert (6)
line 351: inorderTraversal
(1) (2) (2) (4) (6) (9) (10) 
line 352: insert (5)
line 353: inorderTraversal
(1) (2) (2) (4) (5) (6) (9) (10) 
line 354: postorderTraversal
(1) (2) (5) (6) (4) (10) (9) (2) 
line 355: inorderTraversal
(1) (2) (2) (4) (5) (6) (9) (10) 
line 356: nearestNeighbour (7)
(6) 
line 357: inorderTraversal
(1) (2) (2) (4) (5) (6) (9) (10) 
line 358: clear
line 359: buildTree 11
(5) (6) (10) (7) (1) (7) (6) (4) (8) (9) (8) 
line 360: inorderTraversal
(1) (4) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 361: remove (7)
line 362: inorderTraversal
(1) (4) (5) (6) (6) (7) (8) (8) (9) (10) 
line 363: insert (8)
line 364: inorderTraversal
(1) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 365: nearestNeighbour (5)
(5) 
line 366: inorderTraversal
(1) (4) (5) (6) (6) (7) (8) (8) (8) (9) (10) 
line 367: insert (8)
line 368: inorderTraversal
(1) (4) (5) (6) (6) (7) (8) (8) (8) (8) (9) (10) 
line 369: clear
line 370: buildTree 9
(6) (2) (7) (4) (8) (5) (1) (3) (10) 
line 371: inorderTraversal
(1) (2) (3) (4) (5) (6) (7) (8) (10) 
line 372: insert (6)
line 373: inorderTraversal
(1) (2) (3) (4) (5) (6) (6) (7) (8) (10) 
line 374: clear
line 375: buildTree 1
(6) 
line 376: inorderTraversal
(6) 
line 377: insert (7)
line 378: inorderTraversal
(6) (7) 
line 379: insert (8)
line 380: inorderTraversal
(6) (7) (8) 
line 381: remove (6)
line 382: inorderTraversal
(7) (8) 
line 383: insert (5)
line 384: inorderTraversal
(5) (7) (8) 
line 385: nearestNeighbour (5)
(5) 
line 386: inorderTraversal
(5) (7) (8) 
line 387: insert (1)
line 388: inorderTraversal
(1) (5) (7) (8) 
line 389: remove (1)
line 390: inorderTraversal
(5) (7) (8) 
line 391: kNearestNeighbour 9 (2)
(5) (7) (8) 
line 392: inorderTraversal
(5) (7) (8) 
line 393: insert (1)
line 394: inorderTraversal
(1) (5) (7) (8) 
line 395: search (1)
TRUE
line 396: inorderTraversal
(1) (5) (7) (8) 
line 397: insert (8)
line 398: inorderTraversal
(1) (5) (7) (8) (8) 
line 399: insert (1)
line 400: inorderTraversal
(1) (1) (5) (7) (8) (8) 
line 401: preorderTraversal
(7) (5) (1) (1) (8) (8) 
line 402: inorderTraversal
(1) (1) (5) (7) (8) (8) 
line 403: search (1)
TRUE
line 404: inorderTraversal
(1) (1) (5) (7) (8) (8) 
line 405: insert (7)
line 406: inorderTraversal
(1) (1) (5) (7) (7) (8) (8) 
line 407: kNearestNeighbour 1 (6)
(5) 
line 408: inorderTraversal
(1) (1) (5) (7) (7) (8) (8) 
line 409: remove (1)
line 410: inorderTraversal
(1) (5) (7) (7) (8) (8) 
line 411: insert (4)
line 412: inorderTraversal
(1) (4) (5) (7) (7) (8) (8) 
line 413: remove (4)
line 414: inorderTraversal
(1) (5) (7) (7) (8) (8) 
line 415: remove (8)
line 416: inorderTraversal
(1) (5) (7) (7) (8) 
line 417: insert (7)
line 418: inorderTraversal
(1) (5) (7) (7) (7) (8) 
line 419: kNearestNeighbour 4 (6)
(5) (7) (7) (7) 
line 420: inorderTraversal
(1) (5) (7) (7) (7) (8) 
line 421: nodeCount_height_leafCount
nodeCount=6;height=4;leafCount=2
line 422: inorderTraversal
(1) (5) (7) (7) (7) (8) 
line 423: insert (6)
line 424: inorderTraversal
(1) (5) (6) (7) (7) (7) (8) 
line 425: insert (3)
line 426: inorderTraversal
(1) (3) (5) (6) (7) (7) (7) (8) 
line 427: nodeCount_height_leafCount
nodeCount=8;height=4;leafCount=3
line 428: inorderTraversal
(1) (3) (5) (6) (7) (7) (7) (8) 
line 429: preorderTraversal
(7) (5) (1) (3) (6) (8) (7) (7) 
line 430: postorderTraversal
(3) (1) (6) (5) (7) (7) (8) (7) 
line 431: clear
