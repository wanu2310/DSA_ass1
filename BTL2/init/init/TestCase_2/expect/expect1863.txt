line 1: k=1
line 2: insert (9)
line 3: inorderTraversal
(9) 
line 4: insert (3)
line 5: inorderTraversal
(3) (9) 
line 6: clear
line 7: buildTree 14
(2) (8) (7) (1) (4) (9) (2) (2) (10) (5) (9) (7) (1) (4) 
line 8: inorderTraversal
(1) (1) (2) (2) (2) (4) (4) (5) (7) (7) (8) (9) (9) (10) 
line 9: clear
line 10: buildTree 1
(4) 
line 11: inorderTraversal
(4) 
line 12: insert (10)
line 13: inorderTraversal
(4) (10) 
line 14: kNearestNeighbour 8 (10)
(4) (10) 
line 15: inorderTraversal
(4) (10) 
line 16: nearestNeighbour (1)
(4) 
line 17: inorderTraversal
(4) (10) 
line 18: insert (10)
line 19: inorderTraversal
(4) (10) (10) 
line 20: clear
line 21: buildTree 18
(4) (6) (5) (10) (1) (1) (9) (4) (3) (1) (10) (7) (8) (3) (6) (5) (10) (8) 
line 22: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 23: kNearestNeighbour 6 (6)
(5) (5) (6) (6) (7) (8) 
line 24: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 25: remove (6)
line 26: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (9) (10) (10) (10) 
line 27: insert (6)
line 28: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 29: nodeCount_height_leafCount
nodeCount=18;height=5;leafCount=7
line 30: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) (10) (10) 
line 31: clear
line 32: buildTree 11
(7) (1) (4) (4) (3) (6) (8) (1) (10) (5) (10) 
line 33: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (8) (10) (10) 
line 34: nearestNeighbour (5)
(5) 
line 35: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (8) (10) (10) 
line 36: nearestNeighbour (8)
(8) 
line 37: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (8) (10) (10) 
line 38: insert (10)
line 39: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (8) (10) (10) (10) 
line 40: remove (8)
line 41: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (10) (10) (10) 
line 42: insert (5)
line 43: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (10) (10) (10) 
line 44: insert (10)
line 45: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (6) (7) (10) (10) (10) (10) 
line 46: insert (4)
line 47: inorderTraversal
(1) (1) (3) (4) (4) (4) (5) (5) (6) (7) (10) (10) (10) (10) 
line 48: insert (3)
line 49: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (10) (10) (10) (10) 
line 50: nearestNeighbour (9)
(10) 
line 51: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (10) (10) (10) (10) 
line 52: insert (1)
line 53: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (10) (10) (10) (10) 
line 54: kNearestNeighbour 5 (8)
(6) (7) (10) (10) (10) 
line 55: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (10) (10) (10) (10) 
line 56: nearestNeighbour (6)
(6) 
line 57: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (5) (5) (6) (7) (10) (10) (10) (10) 
line 58: insert (5)
line 59: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (10) (10) (10) (10) 
line 60: clear
line 61: buildTree 10
(1) (9) (8) (6) (7) (9) (8) (4) (1) (8) 
line 62: inorderTraversal
(1) (1) (4) (6) (7) (8) (8) (8) (9) (9) 
line 63: preorderTraversal
(7) (1) (4) (1) (6) (8) (8) (9) (8) (9) 
line 64: inorderTraversal
(1) (1) (4) (6) (7) (8) (8) (8) (9) (9) 
line 65: nearestNeighbour (4)
(4) 
line 66: inorderTraversal
(1) (1) (4) (6) (7) (8) (8) (8) (9) (9) 
line 67: clear
line 68: buildTree 10
(4) (7) (7) (10) (5) (4) (8) (3) (9) (4) 
line 69: inorderTraversal
(3) (4) (4) (4) (5) (7) (7) (8) (9) (10) 
line 70: insert (10)
line 71: inorderTraversal
(3) (4) (4) (4) (5) (7) (7) (8) (9) (10) (10) 
line 72: insert (9)
line 73: inorderTraversal
(3) (4) (4) (4) (5) (7) (7) (8) (9) (9) (10) (10) 
line 74: insert (1)
line 75: inorderTraversal
(1) (3) (4) (4) (4) (5) (7) (7) (8) (9) (9) (10) (10) 
line 76: kNearestNeighbour 7 (6)
(4) (4) (4) (5) (7) (7) (8) 
line 77: inorderTraversal
(1) (3) (4) (4) (4) (5) (7) (7) (8) (9) (9) (10) (10) 
line 78: insert (7)
line 79: inorderTraversal
(1) (3) (4) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 80: kNearestNeighbour 10 (7)
(4) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 81: inorderTraversal
(1) (3) (4) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 82: kNearestNeighbour 8 (3)
(1) (3) (4) (4) (4) (5) (7) (7) 
line 83: inorderTraversal
(1) (3) (4) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 84: kNearestNeighbour 8 (8)
(7) (7) (7) (8) (9) (9) (10) (10) 
line 85: inorderTraversal
(1) (3) (4) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 86: nearestNeighbour (9)
(9) 
line 87: inorderTraversal
(1) (3) (4) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 88: insert (5)
line 89: inorderTraversal
(1) (3) (4) (4) (4) (5) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 90: insert (6)
line 91: inorderTraversal
(1) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 92: nodeCount_height_leafCount
nodeCount=16;height=5;leafCount=6
line 93: inorderTraversal
(1) (3) (4) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 94: clear
line 95: buildTree 4
(1) (7) (9) (10) 
line 96: inorderTraversal
(1) (7) (9) (10) 
line 97: remove (1)
line 98: inorderTraversal
(7) (9) (10) 
line 99: insert (5)
line 100: inorderTraversal
(5) (7) (9) (10) 
line 101: insert (4)
line 102: inorderTraversal
(4) (5) (7) (9) (10) 
line 103: nearestNeighbour (2)
(4) 
line 104: inorderTraversal
(4) (5) (7) (9) (10) 
line 105: insert (1)
line 106: inorderTraversal
(1) (4) (5) (7) (9) (10) 
line 107: insert (1)
line 108: inorderTraversal
(1) (1) (4) (5) (7) (9) (10) 
line 109: nearestNeighbour (9)
(9) 
line 110: inorderTraversal
(1) (1) (4) (5) (7) (9) (10) 
line 111: clear
line 112: buildTree 10
(10) (10) (5) (1) (9) (8) (7) (7) (8) (3) 
line 113: inorderTraversal
(1) (3) (5) (7) (7) (8) (8) (9) (10) (10) 
line 114: nearestNeighbour (9)
(9) 
line 115: inorderTraversal
(1) (3) (5) (7) (7) (8) (8) (9) (10) (10) 
line 116: insert (1)
line 117: inorderTraversal
(1) (1) (3) (5) (7) (7) (8) (8) (9) (10) (10) 
line 118: kNearestNeighbour 1 (8)
(8) 
line 119: inorderTraversal
(1) (1) (3) (5) (7) (7) (8) (8) (9) (10) (10) 
line 120: insert (9)
line 121: inorderTraversal
(1) (1) (3) (5) (7) (7) (8) (8) (9) (9) (10) (10) 
line 122: remove (4)
line 123: inorderTraversal
(1) (1) (3) (5) (7) (7) (8) (8) (9) (9) (10) (10) 
line 124: nearestNeighbour (10)
(10) 
line 125: inorderTraversal
(1) (1) (3) (5) (7) (7) (8) (8) (9) (9) (10) (10) 
line 126: insert (9)
line 127: inorderTraversal
(1) (1) (3) (5) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 128: nearestNeighbour (2)
(1) 
line 129: inorderTraversal
(1) (1) (3) (5) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 130: insert (9)
line 131: inorderTraversal
(1) (1) (3) (5) (7) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 132: remove (7)
line 133: inorderTraversal
(1) (1) (3) (5) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 134: nearestNeighbour (8)
(8) 
line 135: inorderTraversal
(1) (1) (3) (5) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 136: insert (6)
line 137: inorderTraversal
(1) (1) (3) (5) (6) (7) (8) (8) (9) (9) (9) (9) (10) (10) 
line 138: clear
line 139: buildTree 10
(3) (8) (6) (3) (1) (9) (9) (1) (9) (7) 
line 140: inorderTraversal
(1) (1) (3) (3) (6) (7) (8) (9) (9) (9) 
line 141: insert (6)
line 142: inorderTraversal
(1) (1) (3) (3) (6) (6) (7) (8) (9) (9) (9) 
line 143: clear
line 144: buildTree 4
(4) (10) (10) (10) 
line 145: inorderTraversal
(4) (10) (10) (10) 
line 146: clear
line 147: buildTree 13
(5) (10) (4) (2) (9) (4) (3) (7) (1) (1) (7) (9) (4) 
line 148: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (7) (7) (9) (9) (10) 
line 149: insert (9)
line 150: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (7) (7) (9) (9) (9) (10) 
line 151: postorderTraversal
(1) (3) (2) (1) (5) (4) (4) (7) (9) (10) (9) (9) (7) (4) 
line 152: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (7) (7) (9) (9) (9) (10) 
line 153: kNearestNeighbour 2 (7)
(7) (7) 
line 154: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (5) (7) (7) (9) (9) (9) (10) 
line 155: clear
line 156: buildTree 14
(5) (2) (4) (10) (5) (2) (2) (2) (2) (1) (8) (7) (8) (8) 
line 157: inorderTraversal
(1) (2) (2) (2) (2) (2) (4) (5) (5) (7) (8) (8) (8) (10) 
line 158: kNearestNeighbour 2 (6)
(5) (7) 
line 159: inorderTraversal
(1) (2) (2) (2) (2) (2) (4) (5) (5) (7) (8) (8) (8) (10) 
line 160: clear
line 161: buildTree 19
(6) (8) (4) (4) (7) (10) (6) (3) (5) (8) (1) (5) (5) (7) (8) (8) (9) (8) (9) 
line 162: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 163: remove (5)
line 164: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 165: insert (8)
line 166: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (10) 
line 167: nearestNeighbour (8)
(8) 
line 168: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (10) 
line 169: insert (9)
line 170: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 171: insert (2)
line 172: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 173: insert (6)
line 174: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 175: remove (5)
line 176: inorderTraversal
(1) (2) (3) (4) (4) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (8) (9) (9) (9) (10) 
line 177: clear
line 178: buildTree 17
(9) (7) (9) (7) (8) (1) (6) (6) (6) (3) (5) (8) (4) (6) (9) (3) (6) 
line 179: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) 
line 180: insert (9)
line 181: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) 
line 182: nodeCount_height_leafCount
nodeCount=18;height=7;leafCount=7
line 183: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) 
line 184: nearestNeighbour (7)
(7) 
line 185: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) 
line 186: remove (6)
line 187: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (9) (9) 
line 188: insert (8)
line 189: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) 
line 190: insert (4)
line 191: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) 
line 192: search (9)
TRUE
line 193: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) 
line 194: insert (3)
line 195: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) 
line 196: kNearestNeighbour 6 (8)
(8) (8) (8) (9) (9) (9) 
line 197: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (9) 
line 198: clear
line 199: buildTree 1
(3) 
line 200: inorderTraversal
(3) 
line 201: kNearestNeighbour 8 (5)
(3) 
line 202: inorderTraversal
(3) 
line 203: insert (8)
line 204: inorderTraversal
(3) (8) 
line 205: remove (3)
line 206: inorderTraversal
(8) 
line 207: postorderTraversal
(8) 
line 208: inorderTraversal
(8) 
line 209: insert (9)
line 210: inorderTraversal
(8) (9) 
line 211: clear
line 212: buildTree 12
(7) (8) (8) (7) (1) (10) (3) (10) (10) (1) (8) (10) 
line 213: inorderTraversal
(1) (1) (3) (7) (7) (8) (8) (8) (10) (10) (10) (10) 
line 214: kNearestNeighbour 3 (4)
(3) (7) (7) 
line 215: inorderTraversal
(1) (1) (3) (7) (7) (8) (8) (8) (10) (10) (10) (10) 
line 216: insert (1)
line 217: inorderTraversal
(1) (1) (1) (3) (7) (7) (8) (8) (8) (10) (10) (10) (10) 
line 218: search (7)
TRUE
line 219: inorderTraversal
(1) (1) (1) (3) (7) (7) (8) (8) (8) (10) (10) (10) (10) 
line 220: postorderTraversal
(1) (1) (1) (7) (7) (3) (8) (8) (10) (10) (10) (10) (8) 
line 221: inorderTraversal
(1) (1) (1) (3) (7) (7) (8) (8) (8) (10) (10) (10) (10) 
line 222: nearestNeighbour (8)
(8) 
line 223: inorderTraversal
(1) (1) (1) (3) (7) (7) (8) (8) (8) (10) (10) (10) (10) 
line 224: postorderTraversal
(1) (1) (1) (7) (7) (3) (8) (8) (10) (10) (10) (10) (8) 
line 225: inorderTraversal
(1) (1) (1) (3) (7) (7) (8) (8) (8) (10) (10) (10) (10) 
line 226: insert (7)
line 227: inorderTraversal
(1) (1) (1) (3) (7) (7) (7) (8) (8) (8) (10) (10) (10) (10) 
line 228: clear
line 229: buildTree 15
(4) (9) (8) (4) (4) (1) (1) (8) (10) (3) (4) (5) (10) (1) (3) 
line 230: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (4) (5) (8) (8) (9) (10) (10) 
line 231: remove (1)
line 232: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (4) (5) (8) (8) (9) (10) (10) 
line 233: nearestNeighbour (5)
(5) 
line 234: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (4) (5) (8) (8) (9) (10) (10) 
line 235: nearestNeighbour (6)
(5) 
line 236: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (4) (5) (8) (8) (9) (10) (10) 
line 237: search (4)
TRUE
line 238: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (4) (5) (8) (8) (9) (10) (10) 
line 239: clear
line 240: buildTree 2
(5) (5) 
line 241: inorderTraversal
(5) (5) 
line 242: kNearestNeighbour 10 (6)
(5) (5) 
line 243: inorderTraversal
(5) (5) 
line 244: insert (7)
line 245: inorderTraversal
(5) (5) (7) 
line 246: nodeCount_height_leafCount
nodeCount=3;height=3;leafCount=1
line 247: inorderTraversal
(5) (5) (7) 
line 248: insert (4)
line 249: inorderTraversal
(4) (5) (5) (7) 
line 250: insert (3)
line 251: inorderTraversal
(3) (4) (5) (5) (7) 
line 252: insert (10)
line 253: inorderTraversal
(3) (4) (5) (5) (7) (10) 
line 254: kNearestNeighbour 10 (1)
(3) (4) (5) (5) (7) (10) 
line 255: inorderTraversal
(3) (4) (5) (5) (7) (10) 
line 256: nearestNeighbour (6)
(7) 
line 257: inorderTraversal
(3) (4) (5) (5) (7) (10) 
line 258: postorderTraversal
(3) (4) (10) (7) (5) (5) 
line 259: inorderTraversal
(3) (4) (5) (5) (7) (10) 
line 260: remove (4)
line 261: inorderTraversal
(3) (5) (5) (7) (10) 
line 262: remove (5)
line 263: inorderTraversal
(3) (5) (7) (10) 
line 264: remove (4)
line 265: inorderTraversal
(3) (5) (7) (10) 
line 266: clear
line 267: buildTree 10
(8) (4) (2) (2) (4) (3) (9) (2) (9) (5) 
line 268: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (8) (9) (9) 
line 269: insert (8)
line 270: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (8) (8) (9) (9) 
line 271: insert (7)
line 272: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (7) (8) (8) (9) (9) 
line 273: nearestNeighbour (3)
(3) 
line 274: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (7) (8) (8) (9) (9) 
line 275: insert (3)
line 276: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (7) (8) (8) (9) (9) 
line 277: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=4
line 278: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (7) (8) (8) (9) (9) 
line 279: nearestNeighbour (8)
(8) 
line 280: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (7) (8) (8) (9) (9) 
line 281: nearestNeighbour (2)
(2) 
line 282: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (7) (8) (8) (9) (9) 
line 283: clear
line 284: buildTree 12
(2) (3) (8) (10) (1) (3) (7) (1) (1) (5) (3) (1) 
line 285: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (5) (7) (8) (10) 
line 286: insert (1)
line 287: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (3) (5) (7) (8) (10) 
line 288: nodeCount_height_leafCount
nodeCount=13;height=7;leafCount=4
line 289: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (3) (5) (7) (8) (10) 
line 290: remove (8)
line 291: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (3) (5) (7) (10) 
line 292: insert (3)
line 293: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (3) (3) (5) (7) (10) 
line 294: insert (2)
line 295: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (5) (7) (10) 
line 296: nearestNeighbour (8)
(7) 
line 297: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (5) (7) (10) 
line 298: insert (1)
line 299: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (5) (7) (10) 
line 300: nearestNeighbour (4)
(3) 
line 301: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (5) (7) (10) 
line 302: remove (1)
line 303: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (5) (7) (10) 
line 304: insert (2)
line 305: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (5) (7) (10) 
line 306: nearestNeighbour (7)
(7) 
line 307: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (5) (7) (10) 
line 308: insert (1)
line 309: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (5) (7) (10) 
line 310: nearestNeighbour (2)
(2) 
line 311: inorderTraversal
(1) (1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (5) (7) (10) 
line 312: clear
line 313: buildTree 20
(7) (3) (4) (5) (1) (3) (1) (4) (3) (6) (3) (10) (5) (9) (10) (6) (7) (3) (8) (10) 
line 314: inorderTraversal
(1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) (10) 
line 315: insert (3)
line 316: inorderTraversal
(1) (1) (3) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) (10) 
line 317: nearestNeighbour (4)
(4) 
line 318: inorderTraversal
(1) (1) (3) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) (10) 
line 319: clear
line 320: buildTree 4
(7) (3) (1) (5) 
line 321: inorderTraversal
(1) (3) (5) (7) 
line 322: clear
line 323: buildTree 15
(6) (9) (4) (7) (8) (2) (5) (1) (5) (3) (4) (1) (5) (2) (1) 
line 324: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (5) (5) (5) (6) (7) (8) (9) 
line 325: clear
line 326: buildTree 12
(4) (5) (9) (4) (8) (4) (7) (1) (5) (10) (6) (5) 
line 327: inorderTraversal
(1) (4) (4) (4) (5) (5) (5) (6) (7) (8) (9) (10) 
line 328: insert (9)
line 329: inorderTraversal
(1) (4) (4) (4) (5) (5) (5) (6) (7) (8) (9) (9) (10) 
line 330: clear
line 331: buildTree 8
(7) (5) (3) (9) (1) (7) (2) (9) 
line 332: inorderTraversal
(1) (2) (3) (5) (7) (7) (9) (9) 
line 333: nearestNeighbour (10)
(9) 
line 334: inorderTraversal
(1) (2) (3) (5) (7) (7) (9) (9) 
line 335: insert (4)
line 336: inorderTraversal
(1) (2) (3) (4) (5) (7) (7) (9) (9) 
line 337: insert (5)
line 338: inorderTraversal
(1) (2) (3) (4) (5) (5) (7) (7) (9) (9) 
line 339: insert (3)
line 340: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (7) (9) (9) 
line 341: nearestNeighbour (1)
(1) 
line 342: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (7) (9) (9) 
line 343: insert (10)
line 344: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (7) (9) (9) (10) 
line 345: insert (8)
line 346: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (7) (8) (9) (9) (10) 
line 347: nodeCount_height_leafCount
nodeCount=13;height=5;leafCount=5
line 348: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (7) (7) (8) (9) (9) (10) 
line 349: insert (2)
line 350: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (7) (8) (9) (9) (10) 
line 351: insert (8)
line 352: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (9) (10) 
line 353: nearestNeighbour (7)
(7) 
line 354: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (9) (10) 
line 355: nearestNeighbour (2)
(2) 
line 356: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (9) (10) 
line 357: insert (5)
line 358: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (7) (7) (8) (8) (9) (9) (10) 
line 359: insert (7)
line 360: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (9) (10) 
line 361: clear
line 362: buildTree 8
(9) (9) (10) (9) (4) (5) (5) (1) 
line 363: inorderTraversal
(1) (4) (5) (5) (9) (9) (9) (10) 
line 364: remove (5)
line 365: inorderTraversal
(1) (4) (5) (9) (9) (9) (10) 
line 366: insert (5)
line 367: inorderTraversal
(1) (4) (5) (5) (9) (9) (9) (10) 
line 368: insert (3)
line 369: inorderTraversal
(1) (3) (4) (5) (5) (9) (9) (9) (10) 
line 370: kNearestNeighbour 4 (5)
(3) (4) (5) (5) 
line 371: inorderTraversal
(1) (3) (4) (5) (5) (9) (9) (9) (10) 
line 372: nearestNeighbour (5)
(5) 
line 373: inorderTraversal
(1) (3) (4) (5) (5) (9) (9) (9) (10) 
line 374: search (4)
TRUE
line 375: inorderTraversal
(1) (3) (4) (5) (5) (9) (9) (9) (10) 
line 376: remove (9)
line 377: inorderTraversal
(1) (3) (4) (5) (5) (9) (9) (10) 
line 378: insert (9)
line 379: inorderTraversal
(1) (3) (4) (5) (5) (9) (9) (9) (10) 
line 380: insert (6)
line 381: inorderTraversal
(1) (3) (4) (5) (5) (6) (9) (9) (9) (10) 
line 382: insert (1)
line 383: inorderTraversal
(1) (1) (3) (4) (5) (5) (6) (9) (9) (9) (10) 
line 384: kNearestNeighbour 10 (7)
(1) (3) (4) (5) (5) (6) (9) (9) (9) (10) 
line 385: inorderTraversal
(1) (1) (3) (4) (5) (5) (6) (9) (9) (9) (10) 
line 386: kNearestNeighbour 4 (7)
(5) (6) (9) (9) 
line 387: inorderTraversal
(1) (1) (3) (4) (5) (5) (6) (9) (9) (9) (10) 
line 388: nearestNeighbour (1)
(1) 
line 389: inorderTraversal
(1) (1) (3) (4) (5) (5) (6) (9) (9) (9) (10) 
line 390: kNearestNeighbour 2 (10)
(9) (10) 
line 391: inorderTraversal
(1) (1) (3) (4) (5) (5) (6) (9) (9) (9) (10) 
line 392: insert (6)
line 393: inorderTraversal
(1) (1) (3) (4) (5) (5) (6) (6) (9) (9) (9) (10) 
line 394: insert (9)
line 395: inorderTraversal
(1) (1) (3) (4) (5) (5) (6) (6) (9) (9) (9) (9) (10) 
line 396: clear
line 397: buildTree 3
(6) (7) (2) 
line 398: inorderTraversal
(2) (6) (7) 
line 399: remove (2)
line 400: inorderTraversal
(6) (7) 
line 401: kNearestNeighbour 1 (2)
(6) 
line 402: inorderTraversal
(6) (7) 
line 403: kNearestNeighbour 4 (7)
(6) (7) 
line 404: inorderTraversal
(6) (7) 
line 405: kNearestNeighbour 7 (2)
(6) (7) 
line 406: inorderTraversal
(6) (7) 
line 407: preorderTraversal
(6) (7) 
line 408: inorderTraversal
(6) (7) 
line 409: search (7)
TRUE
line 410: inorderTraversal
(6) (7) 
line 411: kNearestNeighbour 8 (1)
(6) (7) 
line 412: inorderTraversal
(6) (7) 
line 413: insert (5)
line 414: inorderTraversal
(5) (6) (7) 
line 415: nearestNeighbour (4)
(5) 
line 416: inorderTraversal
(5) (6) (7) 
line 417: remove (6)
line 418: inorderTraversal
(5) (7) 
line 419: insert (7)
line 420: inorderTraversal
(5) (7) (7) 
line 421: insert (4)
line 422: inorderTraversal
(4) (5) (7) (7) 
line 423: insert (6)
line 424: inorderTraversal
(4) (5) (6) (7) (7) 
line 425: insert (2)
line 426: inorderTraversal
(2) (4) (5) (6) (7) (7) 
line 427: insert (1)
line 428: inorderTraversal
(1) (2) (4) (5) (6) (7) (7) 
line 429: nodeCount_height_leafCount
nodeCount=7;height=5;leafCount=3
line 430: inorderTraversal
(1) (2) (4) (5) (6) (7) (7) 
line 431: preorderTraversal
(7) (5) (4) (2) (1) (6) (7) 
line 432: postorderTraversal
(1) (2) (4) (6) (5) (7) (7) 
line 433: clear
