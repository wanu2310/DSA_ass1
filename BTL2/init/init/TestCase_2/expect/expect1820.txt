line 1: k=1
line 2: search (3)
FALSE
line 3: inorderTraversal

line 4: clear
line 5: buildTree 12
(4) (3) (1) (1) (5) (6) (4) (3) (9) (6) (9) (1) 
line 6: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (6) (6) (9) (9) 
line 7: insert (5)
line 8: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (5) (5) (6) (6) (9) (9) 
line 9: insert (3)
line 10: inorderTraversal
(1) (1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (9) (9) 
line 11: insert (3)
line 12: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (9) (9) 
line 13: insert (3)
line 14: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (9) (9) 
line 15: nearestNeighbour (1)
(1) 
line 16: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (9) (9) 
line 17: nearestNeighbour (1)
(1) 
line 18: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (9) (9) 
line 19: remove (10)
line 20: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (3) (4) (4) (5) (5) (6) (6) (9) (9) 
line 21: clear
line 22: buildTree 10
(9) (8) (10) (1) (9) (5) (2) (10) (3) (1) 
line 23: inorderTraversal
(1) (1) (2) (3) (5) (8) (9) (9) (10) (10) 
line 24: kNearestNeighbour 6 (6)
(3) (5) (8) (9) (9) (10) 
line 25: inorderTraversal
(1) (1) (2) (3) (5) (8) (9) (9) (10) (10) 
line 26: insert (4)
line 27: inorderTraversal
(1) (1) (2) (3) (4) (5) (8) (9) (9) (10) (10) 
line 28: nearestNeighbour (1)
(1) 
line 29: inorderTraversal
(1) (1) (2) (3) (4) (5) (8) (9) (9) (10) (10) 
line 30: nearestNeighbour (2)
(2) 
line 31: inorderTraversal
(1) (1) (2) (3) (4) (5) (8) (9) (9) (10) (10) 
line 32: remove (10)
line 33: inorderTraversal
(1) (1) (2) (3) (4) (5) (8) (9) (9) (10) 
line 34: nodeCount_height_leafCount
nodeCount=10;height=5;leafCount=4
line 35: inorderTraversal
(1) (1) (2) (3) (4) (5) (8) (9) (9) (10) 
line 36: clear
line 37: buildTree 9
(3) (10) (10) (3) (4) (2) (3) (10) (6) 
line 38: inorderTraversal
(2) (3) (3) (3) (4) (6) (10) (10) (10) 
line 39: search (3)
TRUE
line 40: inorderTraversal
(2) (3) (3) (3) (4) (6) (10) (10) (10) 
line 41: insert (4)
line 42: inorderTraversal
(2) (3) (3) (3) (4) (4) (6) (10) (10) (10) 
line 43: insert (8)
line 44: inorderTraversal
(2) (3) (3) (3) (4) (4) (6) (8) (10) (10) (10) 
line 45: insert (10)
line 46: inorderTraversal
(2) (3) (3) (3) (4) (4) (6) (8) (10) (10) (10) (10) 
line 47: nearestNeighbour (1)
(2) 
line 48: inorderTraversal
(2) (3) (3) (3) (4) (4) (6) (8) (10) (10) (10) (10) 
line 49: kNearestNeighbour 8 (5)
(2) (3) (3) (3) (4) (4) (6) (8) 
line 50: inorderTraversal
(2) (3) (3) (3) (4) (4) (6) (8) (10) (10) (10) (10) 
line 51: kNearestNeighbour 2 (5)
(4) (6) 
line 52: inorderTraversal
(2) (3) (3) (3) (4) (4) (6) (8) (10) (10) (10) (10) 
line 53: clear
line 54: buildTree 15
(7) (8) (4) (9) (9) (10) (10) (1) (4) (4) (7) (4) (2) (5) (7) 
line 55: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 56: insert (2)
line 57: inorderTraversal
(1) (2) (2) (4) (4) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) (10) 
line 58: insert (7)
line 59: inorderTraversal
(1) (2) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 60: remove (1)
line 61: inorderTraversal
(2) (2) (4) (4) (4) (4) (5) (7) (7) (7) (7) (8) (9) (9) (10) (10) 
line 62: clear
line 63: buildTree 6
(2) (9) (7) (7) (6) (9) 
line 64: inorderTraversal
(2) (6) (7) (7) (9) (9) 
line 65: remove (7)
line 66: inorderTraversal
(2) (6) (7) (9) (9) 
line 67: insert (2)
line 68: inorderTraversal
(2) (2) (6) (7) (9) (9) 
line 69: remove (9)
line 70: inorderTraversal
(2) (2) (6) (7) (9) 
line 71: kNearestNeighbour 8 (9)
(2) (2) (6) (7) (9) 
line 72: inorderTraversal
(2) (2) (6) (7) (9) 
line 73: remove (9)
line 74: inorderTraversal
(2) (2) (6) (7) 
line 75: insert (5)
line 76: inorderTraversal
(2) (2) (5) (6) (7) 
line 77: remove (5)
line 78: inorderTraversal
(2) (2) (6) (7) 
line 79: nearestNeighbour (6)
(6) 
line 80: inorderTraversal
(2) (2) (6) (7) 
line 81: kNearestNeighbour 1 (5)
(6) 
line 82: inorderTraversal
(2) (2) (6) (7) 
line 83: insert (10)
line 84: inorderTraversal
(2) (2) (6) (7) (10) 
line 85: insert (6)
line 86: inorderTraversal
(2) (2) (6) (6) (7) (10) 
line 87: kNearestNeighbour 9 (5)
(2) (2) (6) (6) (7) (10) 
line 88: inorderTraversal
(2) (2) (6) (6) (7) (10) 
line 89: insert (10)
line 90: inorderTraversal
(2) (2) (6) (6) (7) (10) (10) 
line 91: search (9)
FALSE
line 92: inorderTraversal
(2) (2) (6) (6) (7) (10) (10) 
line 93: kNearestNeighbour 4 (1)
(2) (2) (6) (6) 
line 94: inorderTraversal
(2) (2) (6) (6) (7) (10) (10) 
line 95: kNearestNeighbour 5 (10)
(6) (6) (7) (10) (10) 
line 96: inorderTraversal
(2) (2) (6) (6) (7) (10) (10) 
line 97: remove (1)
line 98: inorderTraversal
(2) (2) (6) (6) (7) (10) (10) 
line 99: clear
line 100: buildTree 7
(10) (5) (5) (10) (3) (7) (9) 
line 101: inorderTraversal
(3) (5) (5) (7) (9) (10) (10) 
line 102: nearestNeighbour (1)
(3) 
line 103: inorderTraversal
(3) (5) (5) (7) (9) (10) (10) 
line 104: kNearestNeighbour 6 (9)
(5) (5) (7) (9) (10) (10) 
line 105: inorderTraversal
(3) (5) (5) (7) (9) (10) (10) 
line 106: clear
line 107: buildTree 3
(6) (5) (10) 
line 108: inorderTraversal
(5) (6) (10) 
line 109: insert (3)
line 110: inorderTraversal
(3) (5) (6) (10) 
line 111: insert (7)
line 112: inorderTraversal
(3) (5) (6) (7) (10) 
line 113: clear
line 114: buildTree 18
(7) (6) (2) (3) (10) (1) (9) (3) (8) (1) (6) (3) (7) (1) (3) (3) (8) (9) 
line 115: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 116: insert (3)
line 117: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 118: insert (9)
line 119: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 120: postorderTraversal
(2) (1) (1) (1) (3) (3) (6) (6) (3) (3) (3) (7) (8) (9) (10) (9) (9) (8) (7) (3) 
line 121: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (3) (6) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 122: clear
line 123: buildTree 9
(1) (3) (9) (1) (1) (10) (10) (4) (6) 
line 124: inorderTraversal
(1) (1) (1) (3) (4) (6) (9) (10) (10) 
line 125: remove (6)
line 126: inorderTraversal
(1) (1) (1) (3) (4) (9) (10) (10) 
line 127: nearestNeighbour (1)
(1) 
line 128: inorderTraversal
(1) (1) (1) (3) (4) (9) (10) (10) 
line 129: insert (5)
line 130: inorderTraversal
(1) (1) (1) (3) (4) (5) (9) (10) (10) 
line 131: preorderTraversal
(4) (1) (1) (1) (3) (9) (5) (10) (10) 
line 132: inorderTraversal
(1) (1) (1) (3) (4) (5) (9) (10) (10) 
line 133: nearestNeighbour (1)
(1) 
line 134: inorderTraversal
(1) (1) (1) (3) (4) (5) (9) (10) (10) 
line 135: nearestNeighbour (2)
(3) 
line 136: inorderTraversal
(1) (1) (1) (3) (4) (5) (9) (10) (10) 
line 137: kNearestNeighbour 1 (8)
(9) 
line 138: inorderTraversal
(1) (1) (1) (3) (4) (5) (9) (10) (10) 
line 139: insert (6)
line 140: inorderTraversal
(1) (1) (1) (3) (4) (5) (6) (9) (10) (10) 
line 141: nearestNeighbour (5)
(5) 
line 142: inorderTraversal
(1) (1) (1) (3) (4) (5) (6) (9) (10) (10) 
line 143: nearestNeighbour (3)
(3) 
line 144: inorderTraversal
(1) (1) (1) (3) (4) (5) (6) (9) (10) (10) 
line 145: insert (7)
line 146: inorderTraversal
(1) (1) (1) (3) (4) (5) (6) (7) (9) (10) (10) 
line 147: remove (8)
line 148: inorderTraversal
(1) (1) (1) (3) (4) (5) (6) (7) (9) (10) (10) 
line 149: insert (9)
line 150: inorderTraversal
(1) (1) (1) (3) (4) (5) (6) (7) (9) (9) (10) (10) 
line 151: kNearestNeighbour 10 (2)
(1) (1) (1) (3) (4) (5) (6) (7) (9) (9) 
line 152: inorderTraversal
(1) (1) (1) (3) (4) (5) (6) (7) (9) (9) (10) (10) 
line 153: insert (1)
line 154: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (6) (7) (9) (9) (10) (10) 
line 155: nearestNeighbour (3)
(3) 
line 156: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (6) (7) (9) (9) (10) (10) 
line 157: insert (3)
line 158: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (5) (6) (7) (9) (9) (10) (10) 
line 159: remove (5)
line 160: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (6) (7) (9) (9) (10) (10) 
line 161: insert (2)
line 162: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (6) (7) (9) (9) (10) (10) 
line 163: insert (4)
line 164: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (6) (7) (9) (9) (10) (10) 
line 165: kNearestNeighbour 8 (6)
(3) (3) (4) (4) (6) (7) (9) (9) 
line 166: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (6) (7) (9) (9) (10) (10) 
line 167: clear
line 168: buildTree 20
(1) (3) (9) (5) (9) (1) (5) (2) (2) (7) (8) (6) (3) (6) (7) (5) (6) (2) (2) (3) 
line 169: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (9) (9) 
line 170: insert (7)
line 171: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 172: insert (3)
line 173: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 174: insert (8)
line 175: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 176: insert (2)
line 177: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 178: kNearestNeighbour 7 (6)
(5) (6) (6) (6) (7) (7) (7) 
line 179: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 180: kNearestNeighbour 4 (9)
(8) (8) (9) (9) 
line 181: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 182: insert (4)
line 183: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 184: remove (4)
line 185: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 186: insert (4)
line 187: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 188: remove (6)
line 189: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 190: insert (1)
line 191: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) 
line 192: clear
line 193: buildTree 8
(8) (6) (2) (8) (9) (2) (10) (7) 
line 194: inorderTraversal
(2) (2) (6) (7) (8) (8) (9) (10) 
line 195: insert (8)
line 196: inorderTraversal
(2) (2) (6) (7) (8) (8) (8) (9) (10) 
line 197: kNearestNeighbour 1 (4)
(6) 
line 198: inorderTraversal
(2) (2) (6) (7) (8) (8) (8) (9) (10) 
line 199: remove (7)
line 200: inorderTraversal
(2) (2) (6) (8) (8) (8) (9) (10) 
line 201: nearestNeighbour (5)
(6) 
line 202: inorderTraversal
(2) (2) (6) (8) (8) (8) (9) (10) 
line 203: insert (2)
line 204: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (9) (10) 
line 205: kNearestNeighbour 3 (5)
(2) (2) (6) 
line 206: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (9) (10) 
line 207: insert (10)
line 208: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (9) (10) (10) 
line 209: nearestNeighbour (4)
(2) 
line 210: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (9) (10) (10) 
line 211: postorderTraversal
(2) (6) (2) (2) (8) (10) (10) (9) (8) (8) 
line 212: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (9) (10) (10) 
line 213: insert (8)
line 214: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (8) (9) (10) (10) 
line 215: insert (6)
line 216: inorderTraversal
(2) (2) (2) (6) (6) (8) (8) (8) (8) (9) (10) (10) 
line 217: kNearestNeighbour 4 (9)
(8) (9) (10) (10) 
line 218: inorderTraversal
(2) (2) (2) (6) (6) (8) (8) (8) (8) (9) (10) (10) 
line 219: remove (6)
line 220: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (8) (9) (10) (10) 
line 221: nodeCount_height_leafCount
nodeCount=11;height=5;leafCount=3
line 222: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (8) (9) (10) (10) 
line 223: kNearestNeighbour 3 (7)
(6) (8) (8) 
line 224: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (8) (9) (10) (10) 
line 225: insert (10)
line 226: inorderTraversal
(2) (2) (2) (6) (8) (8) (8) (8) (9) (10) (10) (10) 
line 227: insert (4)
line 228: inorderTraversal
(2) (2) (2) (4) (6) (8) (8) (8) (8) (9) (10) (10) (10) 
line 229: insert (7)
line 230: inorderTraversal
(2) (2) (2) (4) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 231: insert (4)
line 232: inorderTraversal
(2) (2) (2) (4) (4) (6) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 233: insert (9)
line 234: inorderTraversal
(2) (2) (2) (4) (4) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 235: postorderTraversal
(4) (4) (2) (7) (6) (2) (2) (8) (8) (9) (10) (10) (10) (9) (8) (8) 
line 236: inorderTraversal
(2) (2) (2) (4) (4) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 237: nodeCount_height_leafCount
nodeCount=16;height=7;leafCount=5
line 238: inorderTraversal
(2) (2) (2) (4) (4) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 239: clear
line 240: buildTree 5
(6) (2) (6) (10) (10) 
line 241: inorderTraversal
(2) (6) (6) (10) (10) 
line 242: insert (8)
line 243: inorderTraversal
(2) (6) (6) (8) (10) (10) 
line 244: kNearestNeighbour 10 (9)
(2) (6) (6) (8) (10) (10) 
line 245: inorderTraversal
(2) (6) (6) (8) (10) (10) 
line 246: remove (7)
line 247: inorderTraversal
(2) (6) (6) (8) (10) (10) 
line 248: kNearestNeighbour 8 (1)
(2) (6) (6) (8) (10) (10) 
line 249: inorderTraversal
(2) (6) (6) (8) (10) (10) 
line 250: search (1)
FALSE
line 251: inorderTraversal
(2) (6) (6) (8) (10) (10) 
line 252: kNearestNeighbour 3 (8)
(6) (8) (10) 
line 253: inorderTraversal
(2) (6) (6) (8) (10) (10) 
line 254: nearestNeighbour (4)
(2) 
line 255: inorderTraversal
(2) (6) (6) (8) (10) (10) 
line 256: insert (10)
line 257: inorderTraversal
(2) (6) (6) (8) (10) (10) (10) 
line 258: kNearestNeighbour 8 (1)
(2) (6) (6) (8) (10) (10) (10) 
line 259: inorderTraversal
(2) (6) (6) (8) (10) (10) (10) 
line 260: nearestNeighbour (3)
(2) 
line 261: inorderTraversal
(2) (6) (6) (8) (10) (10) (10) 
line 262: remove (2)
line 263: inorderTraversal
(6) (6) (8) (10) (10) (10) 
line 264: insert (5)
line 265: inorderTraversal
(5) (6) (6) (8) (10) (10) (10) 
line 266: insert (4)
line 267: inorderTraversal
(4) (5) (6) (6) (8) (10) (10) (10) 
line 268: clear
line 269: buildTree 1
(3) 
line 270: inorderTraversal
(3) 
line 271: insert (2)
line 272: inorderTraversal
(2) (3) 
line 273: kNearestNeighbour 1 (1)
(2) 
line 274: inorderTraversal
(2) (3) 
line 275: kNearestNeighbour 1 (8)
(3) 
line 276: inorderTraversal
(2) (3) 
line 277: insert (6)
line 278: inorderTraversal
(2) (3) (6) 
line 279: nearestNeighbour (8)
(6) 
line 280: inorderTraversal
(2) (3) (6) 
line 281: insert (4)
line 282: inorderTraversal
(2) (3) (4) (6) 
line 283: remove (4)
line 284: inorderTraversal
(2) (3) (6) 
line 285: insert (9)
line 286: inorderTraversal
(2) (3) (6) (9) 
line 287: clear
line 288: buildTree 15
(4) (2) (4) (7) (4) (9) (1) (9) (2) (1) (6) (8) (5) (10) (3) 
line 289: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (8) (9) (9) (10) 
line 290: insert (3)
line 291: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (6) (7) (8) (9) (9) (10) 
line 292: insert (5)
line 293: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (10) 
line 294: insert (6)
line 295: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) 
line 296: insert (9)
line 297: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) 
line 298: insert (10)
line 299: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 300: insert (1)
line 301: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) (10) (10) 
line 302: clear
line 303: buildTree 3
(4) (4) (6) 
line 304: inorderTraversal
(4) (4) (6) 
line 305: nodeCount_height_leafCount
nodeCount=3;height=3;leafCount=1
line 306: inorderTraversal
(4) (4) (6) 
line 307: insert (10)
line 308: inorderTraversal
(4) (4) (6) (10) 
line 309: preorderTraversal
(4) (4) (6) (10) 
line 310: inorderTraversal
(4) (4) (6) (10) 
line 311: remove (6)
line 312: inorderTraversal
(4) (4) (10) 
line 313: nearestNeighbour (5)
(4) 
line 314: inorderTraversal
(4) (4) (10) 
line 315: insert (5)
line 316: inorderTraversal
(4) (4) (5) (10) 
line 317: postorderTraversal
(5) (10) (4) (4) 
line 318: inorderTraversal
(4) (4) (5) (10) 
line 319: kNearestNeighbour 10 (10)
(4) (4) (5) (10) 
line 320: inorderTraversal
(4) (4) (5) (10) 
line 321: nearestNeighbour (1)
(4) 
line 322: inorderTraversal
(4) (4) (5) (10) 
line 323: insert (5)
line 324: inorderTraversal
(4) (4) (5) (5) (10) 
line 325: insert (2)
line 326: inorderTraversal
(2) (4) (4) (5) (5) (10) 
line 327: kNearestNeighbour 7 (3)
(2) (4) (4) (5) (5) (10) 
line 328: inorderTraversal
(2) (4) (4) (5) (5) (10) 
line 329: insert (5)
line 330: inorderTraversal
(2) (4) (4) (5) (5) (5) (10) 
line 331: insert (4)
line 332: inorderTraversal
(2) (4) (4) (4) (5) (5) (5) (10) 
line 333: clear
line 334: buildTree 2
(8) (1) 
line 335: inorderTraversal
(1) (8) 
line 336: remove (8)
line 337: inorderTraversal
(1) 
line 338: insert (9)
line 339: inorderTraversal
(1) (9) 
line 340: insert (9)
line 341: inorderTraversal
(1) (9) (9) 
line 342: remove (8)
line 343: inorderTraversal
(1) (9) (9) 
line 344: clear
line 345: buildTree 15
(6) (5) (2) (1) (9) (7) (2) (10) (2) (3) (8) (3) (8) (4) (9) 
line 346: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (10) 
line 347: remove (4)
line 348: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (6) (7) (8) (8) (9) (9) (10) 
line 349: insert (2)
line 350: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (7) (8) (8) (9) (9) (10) 
line 351: kNearestNeighbour 3 (3)
(2) (3) (3) 
line 352: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (7) (8) (8) (9) (9) (10) 
line 353: nearestNeighbour (4)
(3) 
line 354: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (7) (8) (8) (9) (9) (10) 
line 355: insert (9)
line 356: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (7) (8) (8) (9) (9) (9) (10) 
line 357: search (10)
TRUE
line 358: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (7) (8) (8) (9) (9) (9) (10) 
line 359: insert (3)
line 360: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (5) (6) (7) (8) (8) (9) (9) (9) (10) 
line 361: insert (4)
line 362: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (9) (10) 
line 363: remove (2)
line 364: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (9) (10) 
line 365: remove (10)
line 366: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (8) (8) (9) (9) (9) 
line 367: insert (7)
line 368: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 369: postorderTraversal
(1) (2) (2) (4) (3) (3) (3) (2) (7) (7) (6) (8) (9) (9) (9) (8) (5) 
line 370: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 371: search (2)
TRUE
line 372: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 373: nearestNeighbour (2)
(2) 
line 374: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 375: kNearestNeighbour 5 (3)
(2) (3) (3) (3) (4) 
line 376: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 377: insert (1)
line 378: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 379: nearestNeighbour (4)
(4) 
line 380: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 381: kNearestNeighbour 5 (7)
(6) (7) (7) (8) (8) 
line 382: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 383: insert (3)
line 384: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 385: insert (5)
line 386: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) 
line 387: clear
line 388: buildTree 20
(1) (9) (5) (5) (9) (4) (3) (4) (7) (3) (6) (6) (1) (1) (4) (2) (1) (7) (1) (8) 
line 389: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) 
line 390: kNearestNeighbour 3 (4)
(4) (4) (4) 
line 391: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) 
line 392: search (3)
TRUE
line 393: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) 
line 394: remove (4)
line 395: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (9) (9) 
line 396: remove (6)
line 397: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) 
line 398: kNearestNeighbour 1 (5)
(5) 
line 399: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) 
line 400: insert (3)
line 401: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) 
line 402: kNearestNeighbour 10 (10)
(4) (4) (5) (5) (6) (7) (7) (8) (9) (9) 
line 403: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (7) (7) (8) (9) (9) 
line 404: clear
line 405: buildTree 11
(7) (8) (3) (9) (3) (8) (10) (9) (1) (6) (9) 
line 406: inorderTraversal
(1) (3) (3) (6) (7) (8) (8) (9) (9) (9) (10) 
line 407: insert (10)
line 408: inorderTraversal
(1) (3) (3) (6) (7) (8) (8) (9) (9) (9) (10) (10) 
line 409: insert (7)
line 410: inorderTraversal
(1) (3) (3) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 411: kNearestNeighbour 4 (8)
(8) (8) (9) (9) 
line 412: inorderTraversal
(1) (3) (3) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 413: search (7)
TRUE
line 414: inorderTraversal
(1) (3) (3) (6) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 415: insert (7)
line 416: inorderTraversal
(1) (3) (3) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 417: insert (5)
line 418: inorderTraversal
(1) (3) (3) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 419: insert (3)
line 420: inorderTraversal
(1) (3) (3) (3) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 421: nodeCount_height_leafCount
nodeCount=16;height=6;leafCount=5
line 422: inorderTraversal
(1) (3) (3) (3) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 423: preorderTraversal
(8) (3) (1) (6) (3) (5) (3) (7) (7) (7) (9) (8) (9) (9) (10) (10) 
line 424: postorderTraversal
(1) (3) (5) (3) (7) (7) (7) (6) (3) (8) (10) (10) (9) (9) (9) (8) 
line 425: clear
