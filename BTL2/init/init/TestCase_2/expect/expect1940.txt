line 1: k=1
line 2: insert (10)
line 3: inorderTraversal
(10) 
line 4: kNearestNeighbour 5 (9)
(10) 
line 5: inorderTraversal
(10) 
line 6: nodeCount_height_leafCount
nodeCount=1;height=1;leafCount=1
line 7: inorderTraversal
(10) 
line 8: clear
line 9: buildTree 9
(5) (6) (2) (10) (9) (3) (7) (8) (7) 
line 10: inorderTraversal
(2) (3) (5) (6) (7) (7) (8) (9) (10) 
line 11: kNearestNeighbour 7 (5)
(2) (3) (5) (6) (7) (7) (8) 
line 12: inorderTraversal
(2) (3) (5) (6) (7) (7) (8) (9) (10) 
line 13: insert (1)
line 14: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) (8) (9) (10) 
line 15: nearestNeighbour (7)
(7) 
line 16: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) (8) (9) (10) 
line 17: clear
line 18: buildTree 19
(5) (5) (7) (10) (3) (7) (5) (10) (9) (7) (8) (1) (9) (10) (1) (3) (4) (6) (8) 
line 19: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 20: nodeCount_height_leafCount
nodeCount=19;height=6;leafCount=7
line 21: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 22: nearestNeighbour (8)
(8) 
line 23: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 24: preorderTraversal
(7) (4) (1) (3) (1) (3) (5) (5) (5) (6) (9) (7) (8) (7) (8) (10) (9) (10) (10) 
line 25: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 26: nearestNeighbour (8)
(8) 
line 27: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 28: nearestNeighbour (5)
(5) 
line 29: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 30: clear
line 31: buildTree 5
(3) (9) (8) (3) (8) 
line 32: inorderTraversal
(3) (3) (8) (8) (9) 
line 33: insert (4)
line 34: inorderTraversal
(3) (3) (4) (8) (8) (9) 
line 35: kNearestNeighbour 8 (2)
(3) (3) (4) (8) (8) (9) 
line 36: inorderTraversal
(3) (3) (4) (8) (8) (9) 
line 37: postorderTraversal
(4) (3) (3) (9) (8) (8) 
line 38: inorderTraversal
(3) (3) (4) (8) (8) (9) 
line 39: clear
line 40: buildTree 10
(7) (1) (7) (3) (7) (2) (1) (9) (6) (9) 
line 41: inorderTraversal
(1) (1) (2) (3) (6) (7) (7) (7) (9) (9) 
line 42: kNearestNeighbour 10 (8)
(1) (1) (2) (3) (6) (7) (7) (7) (9) (9) 
line 43: inorderTraversal
(1) (1) (2) (3) (6) (7) (7) (7) (9) (9) 
line 44: insert (6)
line 45: inorderTraversal
(1) (1) (2) (3) (6) (6) (7) (7) (7) (9) (9) 
line 46: clear
line 47: buildTree 14
(5) (3) (4) (9) (9) (9) (10) (8) (9) (1) (9) (10) (5) (9) 
line 48: inorderTraversal
(1) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 49: nearestNeighbour (10)
(10) 
line 50: inorderTraversal
(1) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 51: nearestNeighbour (2)
(3) 
line 52: inorderTraversal
(1) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 53: nearestNeighbour (8)
(8) 
line 54: inorderTraversal
(1) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 55: nodeCount_height_leafCount
nodeCount=14;height=7;leafCount=4
line 56: inorderTraversal
(1) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 57: insert (3)
line 58: inorderTraversal
(1) (3) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 59: nearestNeighbour (5)
(5) 
line 60: inorderTraversal
(1) (3) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 61: nearestNeighbour (8)
(8) 
line 62: inorderTraversal
(1) (3) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 63: kNearestNeighbour 9 (5)
(1) (3) (3) (4) (5) (5) (8) (9) (9) 
line 64: inorderTraversal
(1) (3) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 65: insert (2)
line 66: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 67: search (10)
TRUE
line 68: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 69: insert (4)
line 70: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (8) (9) (9) (9) (9) (9) (9) (10) (10) 
line 71: clear
line 72: buildTree 12
(5) (6) (7) (10) (2) (9) (6) (4) (3) (5) (6) (8) 
line 73: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (10) 
line 74: nearestNeighbour (9)
(9) 
line 75: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (10) 
line 76: nearestNeighbour (9)
(9) 
line 77: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (10) 
line 78: nearestNeighbour (4)
(4) 
line 79: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (6) (7) (8) (9) (10) 
line 80: remove (6)
line 81: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (7) (8) (9) (10) 
line 82: kNearestNeighbour 6 (3)
(2) (3) (4) (5) (5) (6) 
line 83: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (7) (8) (9) (10) 
line 84: insert (9)
line 85: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (7) (8) (9) (9) (10) 
line 86: clear
line 87: buildTree 10
(5) (9) (6) (8) (5) (8) (2) (4) (1) (1) 
line 88: inorderTraversal
(1) (1) (2) (4) (5) (5) (6) (8) (8) (9) 
line 89: nearestNeighbour (5)
(5) 
line 90: inorderTraversal
(1) (1) (2) (4) (5) (5) (6) (8) (8) (9) 
line 91: kNearestNeighbour 8 (7)
(2) (4) (5) (5) (6) (8) (8) (9) 
line 92: inorderTraversal
(1) (1) (2) (4) (5) (5) (6) (8) (8) (9) 
line 93: insert (8)
line 94: inorderTraversal
(1) (1) (2) (4) (5) (5) (6) (8) (8) (8) (9) 
line 95: kNearestNeighbour 3 (3)
(1) (2) (4) 
line 96: inorderTraversal
(1) (1) (2) (4) (5) (5) (6) (8) (8) (8) (9) 
line 97: insert (3)
line 98: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (6) (8) (8) (8) (9) 
line 99: nearestNeighbour (4)
(4) 
line 100: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (6) (8) (8) (8) (9) 
line 101: insert (4)
line 102: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (5) (6) (8) (8) (8) (9) 
line 103: clear
line 104: buildTree 2
(3) (6) 
line 105: inorderTraversal
(3) (6) 
line 106: clear
line 107: buildTree 11
(8) (6) (6) (7) (3) (10) (8) (9) (1) (10) (2) 
line 108: inorderTraversal
(1) (2) (3) (6) (6) (7) (8) (8) (9) (10) (10) 
line 109: insert (9)
line 110: inorderTraversal
(1) (2) (3) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 111: insert (1)
line 112: inorderTraversal
(1) (1) (2) (3) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 113: nearestNeighbour (10)
(10) 
line 114: inorderTraversal
(1) (1) (2) (3) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 115: kNearestNeighbour 1 (8)
(8) 
line 116: inorderTraversal
(1) (1) (2) (3) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 117: insert (1)
line 118: inorderTraversal
(1) (1) (1) (2) (3) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 119: kNearestNeighbour 3 (4)
(3) (6) (6) 
line 120: inorderTraversal
(1) (1) (1) (2) (3) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 121: remove (3)
line 122: inorderTraversal
(1) (1) (1) (2) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 123: clear
line 124: buildTree 1
(1) 
line 125: inorderTraversal
(1) 
line 126: insert (3)
line 127: inorderTraversal
(1) (3) 
line 128: kNearestNeighbour 7 (10)
(1) (3) 
line 129: inorderTraversal
(1) (3) 
line 130: insert (1)
line 131: inorderTraversal
(1) (1) (3) 
line 132: remove (1)
line 133: inorderTraversal
(1) (3) 
line 134: clear
line 135: buildTree 19
(4) (9) (2) (2) (4) (10) (7) (2) (6) (2) (10) (8) (4) (7) (8) (10) (9) (3) (4) 
line 136: inorderTraversal
(2) (2) (2) (2) (3) (4) (4) (4) (4) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 137: insert (3)
line 138: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 139: kNearestNeighbour 4 (10)
(9) (10) (10) (10) 
line 140: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 141: insert (8)
line 142: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 143: remove (6)
line 144: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 145: postorderTraversal
(2) (2) (2) (2) (3) (4) (4) (4) (4) (3) (8) (8) (8) (7) (9) (10) (10) (10) (9) (7) 
line 146: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 147: nearestNeighbour (3)
(3) 
line 148: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 149: kNearestNeighbour 1 (7)
(7) 
line 150: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 151: nearestNeighbour (3)
(3) 
line 152: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 153: remove (10)
line 154: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 155: kNearestNeighbour 9 (7)
(7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 156: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 157: nearestNeighbour (7)
(7) 
line 158: inorderTraversal
(2) (2) (2) (2) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 159: insert (3)
line 160: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 161: nearestNeighbour (2)
(2) 
line 162: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 163: insert (9)
line 164: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 165: insert (4)
line 166: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 167: kNearestNeighbour 7 (2)
(2) (2) (2) (2) (3) (3) (3) 
line 168: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 169: insert (8)
line 170: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) (10) 
line 171: nearestNeighbour (10)
(10) 
line 172: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) (10) 
line 173: remove (9)
line 174: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 175: search (10)
TRUE
line 176: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 177: insert (9)
line 178: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (4) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) (10) 
line 179: clear
line 180: buildTree 7
(8) (4) (1) (6) (9) (10) (5) 
line 181: inorderTraversal
(1) (4) (5) (6) (8) (9) (10) 
line 182: remove (1)
line 183: inorderTraversal
(4) (5) (6) (8) (9) (10) 
line 184: insert (2)
line 185: inorderTraversal
(2) (4) (5) (6) (8) (9) (10) 
line 186: search (2)
TRUE
line 187: inorderTraversal
(2) (4) (5) (6) (8) (9) (10) 
line 188: insert (10)
line 189: inorderTraversal
(2) (4) (5) (6) (8) (9) (10) (10) 
line 190: nearestNeighbour (2)
(2) 
line 191: inorderTraversal
(2) (4) (5) (6) (8) (9) (10) (10) 
line 192: nearestNeighbour (1)
(2) 
line 193: inorderTraversal
(2) (4) (5) (6) (8) (9) (10) (10) 
line 194: nearestNeighbour (3)
(2) 
line 195: inorderTraversal
(2) (4) (5) (6) (8) (9) (10) (10) 
line 196: insert (6)
line 197: inorderTraversal
(2) (4) (5) (6) (6) (8) (9) (10) (10) 
line 198: nearestNeighbour (4)
(4) 
line 199: inorderTraversal
(2) (4) (5) (6) (6) (8) (9) (10) (10) 
line 200: nearestNeighbour (6)
(6) 
line 201: inorderTraversal
(2) (4) (5) (6) (6) (8) (9) (10) (10) 
line 202: nearestNeighbour (2)
(2) 
line 203: inorderTraversal
(2) (4) (5) (6) (6) (8) (9) (10) (10) 
line 204: remove (8)
line 205: inorderTraversal
(2) (4) (5) (6) (6) (9) (10) (10) 
line 206: nearestNeighbour (1)
(2) 
line 207: inorderTraversal
(2) (4) (5) (6) (6) (9) (10) (10) 
line 208: search (9)
TRUE
line 209: inorderTraversal
(2) (4) (5) (6) (6) (9) (10) (10) 
line 210: search (10)
TRUE
line 211: inorderTraversal
(2) (4) (5) (6) (6) (9) (10) (10) 
line 212: kNearestNeighbour 6 (10)
(5) (6) (6) (9) (10) (10) 
line 213: inorderTraversal
(2) (4) (5) (6) (6) (9) (10) (10) 
line 214: insert (8)
line 215: inorderTraversal
(2) (4) (5) (6) (6) (8) (9) (10) (10) 
line 216: nodeCount_height_leafCount
nodeCount=9;height=4;leafCount=4
line 217: inorderTraversal
(2) (4) (5) (6) (6) (8) (9) (10) (10) 
line 218: insert (7)
line 219: inorderTraversal
(2) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 220: kNearestNeighbour 2 (6)
(6) (6) 
line 221: inorderTraversal
(2) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 222: clear
line 223: buildTree 12
(1) (8) (9) (9) (2) (10) (1) (3) (3) (2) (4) (1) 
line 224: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (8) (9) (9) (10) 
line 225: nearestNeighbour (3)
(3) 
line 226: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (8) (9) (9) (10) 
line 227: nearestNeighbour (8)
(8) 
line 228: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (8) (9) (9) (10) 
line 229: remove (1)
line 230: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) (10) 
line 231: remove (1)
line 232: inorderTraversal
(1) (2) (2) (3) (3) (4) (8) (9) (9) (10) 
line 233: remove (10)
line 234: inorderTraversal
(1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 235: nearestNeighbour (9)
(9) 
line 236: inorderTraversal
(1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 237: insert (1)
line 238: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 239: kNearestNeighbour 6 (9)
(3) (3) (4) (8) (9) (9) 
line 240: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 241: nearestNeighbour (4)
(4) 
line 242: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 243: kNearestNeighbour 7 (5)
(2) (2) (3) (3) (4) (8) (9) 
line 244: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 245: search (2)
TRUE
line 246: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 247: nearestNeighbour (6)
(4) 
line 248: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 249: nearestNeighbour (10)
(9) 
line 250: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 251: nearestNeighbour (6)
(4) 
line 252: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 253: nodeCount_height_leafCount
nodeCount=10;height=4;leafCount=4
line 254: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (9) 
line 255: remove (9)
line 256: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) 
line 257: insert (10)
line 258: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (8) (9) (10) 
line 259: insert (2)
line 260: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (8) (9) (10) 
line 261: kNearestNeighbour 5 (2)
(1) (1) (2) (2) (2) 
line 262: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (8) (9) (10) 
line 263: kNearestNeighbour 10 (3)
(1) (1) (2) (2) (2) (3) (3) (4) (8) (9) 
line 264: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (8) (9) (10) 
line 265: nearestNeighbour (10)
(10) 
line 266: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (8) (9) (10) 
line 267: kNearestNeighbour 4 (5)
(3) (3) (4) (8) 
line 268: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (8) (9) (10) 
line 269: insert (7)
line 270: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (7) (8) (9) (10) 
line 271: remove (9)
line 272: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (7) (8) (10) 
line 273: insert (4)
line 274: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (7) (8) (10) 
line 275: nearestNeighbour (6)
(7) 
line 276: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (7) (8) (10) 
line 277: insert (8)
line 278: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (7) (8) (8) (10) 
line 279: remove (10)
line 280: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (7) (8) (8) 
line 281: kNearestNeighbour 7 (5)
(3) (3) (4) (4) (7) (8) (8) 
line 282: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (7) (8) (8) 
line 283: kNearestNeighbour 3 (5)
(4) (4) (7) 
line 284: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (7) (8) (8) 
line 285: insert (1)
line 286: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (4) (7) (8) (8) 
line 287: remove (1)
line 288: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (7) (8) (8) 
line 289: kNearestNeighbour 5 (8)
(4) (4) (7) (8) (8) 
line 290: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (7) (8) (8) 
line 291: insert (3)
line 292: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (7) (8) (8) 
line 293: insert (4)
line 294: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (8) (8) 
line 295: remove (9)
line 296: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (8) (8) 
line 297: insert (9)
line 298: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (8) (8) (9) 
line 299: search (10)
FALSE
line 300: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (8) (8) (9) 
line 301: remove (1)
line 302: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (8) (8) (9) 
line 303: remove (8)
line 304: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (8) (9) 
line 305: insert (7)
line 306: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) 
line 307: kNearestNeighbour 1 (6)
(7) 
line 308: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) 
line 309: remove (10)
line 310: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) 
line 311: insert (10)
line 312: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) (10) 
line 313: kNearestNeighbour 4 (8)
(7) (7) (8) (9) 
line 314: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) (10) 
line 315: nearestNeighbour (3)
(3) 
line 316: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (9) (10) 
line 317: insert (8)
line 318: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (8) (9) (10) 
line 319: insert (9)
line 320: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (8) (9) (9) (10) 
line 321: insert (8)
line 322: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) 
line 323: nearestNeighbour (8)
(8) 
line 324: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) 
line 325: kNearestNeighbour 8 (8)
(7) (7) (8) (8) (8) (9) (9) (10) 
line 326: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (7) (7) (8) (8) (8) (9) (9) (10) 
line 327: clear
line 328: buildTree 7
(1) (5) (2) (8) (1) (5) (6) 
line 329: inorderTraversal
(1) (1) (2) (5) (5) (6) (8) 
line 330: insert (7)
line 331: inorderTraversal
(1) (1) (2) (5) (5) (6) (7) (8) 
line 332: nearestNeighbour (1)
(1) 
line 333: inorderTraversal
(1) (1) (2) (5) (5) (6) (7) (8) 
line 334: kNearestNeighbour 5 (6)
(5) (5) (6) (7) (8) 
line 335: inorderTraversal
(1) (1) (2) (5) (5) (6) (7) (8) 
line 336: nearestNeighbour (8)
(8) 
line 337: inorderTraversal
(1) (1) (2) (5) (5) (6) (7) (8) 
line 338: kNearestNeighbour 7 (10)
(1) (2) (5) (5) (6) (7) (8) 
line 339: inorderTraversal
(1) (1) (2) (5) (5) (6) (7) (8) 
line 340: clear
line 341: buildTree 9
(4) (9) (2) (5) (4) (10) (7) (6) (6) 
line 342: inorderTraversal
(2) (4) (4) (5) (6) (6) (7) (9) (10) 
line 343: clear
line 344: buildTree 18
(10) (8) (8) (9) (6) (7) (3) (7) (4) (9) (7) (2) (4) (7) (7) (5) (4) (4) 
line 345: inorderTraversal
(2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 346: insert (6)
line 347: inorderTraversal
(2) (3) (4) (4) (4) (4) (5) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 348: clear
line 349: buildTree 12
(2) (9) (1) (5) (2) (6) (10) (4) (7) (4) (4) (5) 
line 350: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (9) (10) 
line 351: insert (10)
line 352: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (7) (9) (10) (10) 
line 353: clear
line 354: buildTree 10
(3) (2) (9) (5) (1) (3) (10) (6) (5) (10) 
line 355: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (9) (10) (10) 
line 356: insert (8)
line 357: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (8) (9) (10) (10) 
line 358: nearestNeighbour (3)
(3) 
line 359: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (8) (9) (10) (10) 
line 360: insert (10)
line 361: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (8) (9) (10) (10) (10) 
line 362: clear
line 363: buildTree 15
(4) (6) (10) (2) (1) (9) (10) (7) (7) (4) (6) (9) (9) (3) (6) 
line 364: inorderTraversal
(1) (2) (3) (4) (4) (6) (6) (6) (7) (7) (9) (9) (9) (10) (10) 
line 365: insert (8)
line 366: inorderTraversal
(1) (2) (3) (4) (4) (6) (6) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 367: clear
line 368: buildTree 20
(8) (3) (7) (8) (6) (10) (3) (2) (5) (4) (3) (4) (4) (3) (9) (4) (4) (10) (4) (4) 
line 369: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (10) (10) 
line 370: kNearestNeighbour 6 (6)
(4) (5) (6) (7) (8) (8) 
line 371: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (10) (10) 
line 372: insert (9)
line 373: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 374: search (2)
TRUE
line 375: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 376: nearestNeighbour (5)
(5) 
line 377: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 378: nearestNeighbour (1)
(2) 
line 379: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 380: nearestNeighbour (9)
(9) 
line 381: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (10) (10) 
line 382: remove (9)
line 383: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (10) (10) 
line 384: nearestNeighbour (3)
(3) 
line 385: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (8) (8) (9) (10) (10) 
line 386: insert (5)
line 387: inorderTraversal
(2) (3) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (8) (9) (10) (10) 
line 388: remove (3)
line 389: inorderTraversal
(2) (3) (3) (3) (4) (4) (4) (4) (4) (4) (4) (5) (5) (6) (7) (8) (8) (9) (10) (10) 
line 390: clear
line 391: buildTree 11
(10) (10) (3) (6) (3) (5) (6) (2) (8) (7) (6) 
line 392: inorderTraversal
(2) (3) (3) (5) (6) (6) (6) (7) (8) (10) (10) 
line 393: nearestNeighbour (1)
(2) 
line 394: inorderTraversal
(2) (3) (3) (5) (6) (6) (6) (7) (8) (10) (10) 
line 395: search (2)
TRUE
line 396: inorderTraversal
(2) (3) (3) (5) (6) (6) (6) (7) (8) (10) (10) 
line 397: insert (5)
line 398: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (10) (10) 
line 399: kNearestNeighbour 6 (6)
(5) (5) (6) (6) (6) (7) 
line 400: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (10) (10) 
line 401: nearestNeighbour (6)
(6) 
line 402: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (10) (10) 
line 403: insert (10)
line 404: inorderTraversal
(2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (10) (10) (10) 
line 405: insert (1)
line 406: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (10) (10) (10) 
line 407: nearestNeighbour (4)
(5) 
line 408: inorderTraversal
(1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (10) (10) (10) 
line 409: clear
line 410: buildTree 4
(7) (6) (2) (4) 
line 411: inorderTraversal
(2) (4) (6) (7) 
line 412: kNearestNeighbour 4 (6)
(2) (4) (6) (7) 
line 413: inorderTraversal
(2) (4) (6) (7) 
line 414: nearestNeighbour (10)
(7) 
line 415: inorderTraversal
(2) (4) (6) (7) 
line 416: insert (9)
line 417: inorderTraversal
(2) (4) (6) (7) (9) 
line 418: insert (6)
line 419: inorderTraversal
(2) (4) (6) (6) (7) (9) 
line 420: kNearestNeighbour 5 (8)
(4) (6) (6) (7) (9) 
line 421: inorderTraversal
(2) (4) (6) (6) (7) (9) 
line 422: insert (4)
line 423: inorderTraversal
(2) (4) (4) (6) (6) (7) (9) 
line 424: nodeCount_height_leafCount
nodeCount=7;height=4;leafCount=4
line 425: inorderTraversal
(2) (4) (4) (6) (6) (7) (9) 
line 426: preorderTraversal
(4) (2) (6) (4) (7) (6) (9) 
line 427: postorderTraversal
(2) (4) (6) (9) (7) (6) (4) 
line 428: clear
