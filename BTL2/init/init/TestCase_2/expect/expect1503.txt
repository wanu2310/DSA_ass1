line 1: k=1
line 2: kNearestNeighbour 5 (2)

line 3: inorderTraversal

line 4: insert (1)
line 5: inorderTraversal
(1) 
line 6: insert (8)
line 7: inorderTraversal
(1) (8) 
line 8: nearestNeighbour (8)
(8) 
line 9: inorderTraversal
(1) (8) 
line 10: clear
line 11: buildTree 7
(2) (7) (1) (7) (6) (10) (3) 
line 12: inorderTraversal
(1) (2) (3) (6) (7) (7) (10) 
line 13: insert (4)
line 14: inorderTraversal
(1) (2) (3) (4) (6) (7) (7) (10) 
line 15: insert (2)
line 16: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (7) (10) 
line 17: kNearestNeighbour 9 (7)
(1) (2) (2) (3) (4) (6) (7) (7) (10) 
line 18: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (7) (10) 
line 19: insert (1)
line 20: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (10) 
line 21: insert (7)
line 22: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) (10) 
line 23: kNearestNeighbour 3 (1)
(1) (1) (2) 
line 24: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) (10) 
line 25: insert (7)
line 26: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) (7) (10) 
line 27: nearestNeighbour (6)
(6) 
line 28: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) (7) (10) 
line 29: nearestNeighbour (2)
(2) 
line 30: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) (7) (10) 
line 31: kNearestNeighbour 3 (5)
(3) (4) (6) 
line 32: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (7) (7) (10) 
line 33: insert (2)
line 34: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (6) (7) (7) (7) (7) (10) 
line 35: nodeCount_height_leafCount
nodeCount=13;height=6;leafCount=4
line 36: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (6) (7) (7) (7) (7) (10) 
line 37: insert (9)
line 38: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (6) (7) (7) (7) (7) (9) (10) 
line 39: preorderTraversal
(6) (2) (1) (1) (3) (2) (2) (4) (7) (7) (10) (7) (7) (9) 
line 40: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (6) (7) (7) (7) (7) (9) (10) 
line 41: insert (1)
line 42: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (6) (7) (7) (7) (7) (9) (10) 
line 43: kNearestNeighbour 8 (5)
(2) (3) (4) (6) (7) (7) (7) (7) 
line 44: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (6) (7) (7) (7) (7) (9) (10) 
line 45: insert (5)
line 46: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 47: insert (5)
line 48: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 49: nearestNeighbour (2)
(2) 
line 50: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 51: nearestNeighbour (3)
(3) 
line 52: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 53: kNearestNeighbour 10 (7)
(4) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 54: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 55: insert (5)
line 56: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 57: insert (2)
line 58: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 59: kNearestNeighbour 10 (1)
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) 
line 60: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 61: kNearestNeighbour 5 (5)
(4) (5) (5) (5) (6) 
line 62: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (3) (4) (5) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 63: remove (3)
line 64: inorderTraversal
(1) (1) (1) (2) (2) (2) (2) (4) (5) (5) (5) (6) (7) (7) (7) (7) (9) (10) 
line 65: clear
line 66: buildTree 18
(4) (4) (4) (5) (5) (4) (7) (7) (7) (6) (6) (9) (1) (8) (3) (9) (6) (4) 
line 67: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 68: insert (9)
line 69: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) 
line 70: insert (7)
line 71: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) 
line 72: clear
line 73: buildTree 12
(2) (6) (2) (1) (6) (1) (9) (1) (8) (7) (6) (6) 
line 74: inorderTraversal
(1) (1) (1) (2) (2) (6) (6) (6) (6) (7) (8) (9) 
line 75: remove (1)
line 76: inorderTraversal
(1) (1) (2) (2) (6) (6) (6) (6) (7) (8) (9) 
line 77: nearestNeighbour (2)
(2) 
line 78: inorderTraversal
(1) (1) (2) (2) (6) (6) (6) (6) (7) (8) (9) 
line 79: clear
line 80: buildTree 9
(1) (8) (8) (6) (6) (6) (5) (2) (5) 
line 81: inorderTraversal
(1) (2) (5) (5) (6) (6) (6) (8) (8) 
line 82: remove (2)
line 83: inorderTraversal
(1) (5) (5) (6) (6) (6) (8) (8) 
line 84: insert (3)
line 85: inorderTraversal
(1) (3) (5) (5) (6) (6) (6) (8) (8) 
line 86: clear
line 87: buildTree 18
(8) (7) (8) (10) (4) (2) (2) (9) (1) (4) (3) (9) (2) (2) (7) (7) (8) (5) 
line 88: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 89: insert (6)
line 90: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 91: preorderTraversal
(5) (2) (1) (2) (3) (2) (2) (4) (4) (8) (7) (6) (7) (7) (9) (8) (8) (9) (10) 
line 92: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 93: insert (8)
line 94: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 95: insert (2)
line 96: inorderTraversal
(1) (2) (2) (2) (2) (2) (3) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) 
line 97: clear
line 98: buildTree 11
(10) (1) (10) (7) (2) (7) (3) (7) (5) (1) (2) 
line 99: inorderTraversal
(1) (1) (2) (2) (3) (5) (7) (7) (7) (10) (10) 
line 100: kNearestNeighbour 3 (9)
(7) (10) (10) 
line 101: inorderTraversal
(1) (1) (2) (2) (3) (5) (7) (7) (7) (10) (10) 
line 102: insert (6)
line 103: inorderTraversal
(1) (1) (2) (2) (3) (5) (6) (7) (7) (7) (10) (10) 
line 104: insert (2)
line 105: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (7) (7) (7) (10) (10) 
line 106: insert (8)
line 107: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (7) (7) (7) (8) (10) (10) 
line 108: kNearestNeighbour 5 (10)
(7) (7) (8) (10) (10) 
line 109: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (7) (7) (7) (8) (10) (10) 
line 110: clear
line 111: buildTree 17
(7) (6) (3) (5) (6) (5) (1) (9) (7) (7) (4) (3) (1) (7) (8) (7) (6) 
line 112: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) 
line 113: kNearestNeighbour 4 (8)
(7) (7) (8) (9) 
line 114: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) 
line 115: insert (1)
line 116: inorderTraversal
(1) (1) (1) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) 
line 117: insert (2)
line 118: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) 
line 119: nearestNeighbour (7)
(7) 
line 120: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) 
line 121: preorderTraversal
(6) (3) (1) (1) (1) (2) (4) (3) (5) (5) (7) (6) (6) (7) (7) (7) (8) (7) (9) 
line 122: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) 
line 123: insert (9)
line 124: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 125: remove (3)
line 126: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 127: kNearestNeighbour 5 (8)
(7) (7) (8) (9) (9) 
line 128: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 129: nearestNeighbour (10)
(9) 
line 130: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 131: insert (5)
line 132: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 133: kNearestNeighbour 5 (5)
(4) (5) (5) (5) (6) 
line 134: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 135: clear
line 136: buildTree 9
(6) (7) (8) (1) (5) (8) (2) (7) (2) 
line 137: inorderTraversal
(1) (2) (2) (5) (6) (7) (7) (8) (8) 
line 138: nearestNeighbour (6)
(6) 
line 139: inorderTraversal
(1) (2) (2) (5) (6) (7) (7) (8) (8) 
line 140: clear
line 141: buildTree 12
(5) (8) (9) (6) (2) (2) (2) (9) (3) (3) (5) (3) 
line 142: inorderTraversal
(2) (2) (2) (3) (3) (3) (5) (5) (6) (8) (9) (9) 
line 143: remove (3)
line 144: inorderTraversal
(2) (2) (2) (3) (3) (5) (5) (6) (8) (9) (9) 
line 145: nearestNeighbour (4)
(3) 
line 146: inorderTraversal
(2) (2) (2) (3) (3) (5) (5) (6) (8) (9) (9) 
line 147: insert (3)
line 148: inorderTraversal
(2) (2) (2) (3) (3) (3) (5) (5) (6) (8) (9) (9) 
line 149: insert (3)
line 150: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (5) (5) (6) (8) (9) (9) 
line 151: insert (7)
line 152: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (5) (5) (6) (7) (8) (9) (9) 
line 153: insert (4)
line 154: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (9) 
line 155: insert (7)
line 156: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (9) (9) 
line 157: insert (3)
line 158: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (9) (9) 
line 159: clear
line 160: buildTree 18
(5) (6) (9) (7) (10) (3) (2) (7) (3) (2) (10) (10) (7) (3) (3) (10) (2) (2) 
line 161: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (9) (10) (10) (10) (10) 
line 162: nearestNeighbour (4)
(3) 
line 163: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (9) (10) (10) (10) (10) 
line 164: nearestNeighbour (8)
(7) 
line 165: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (9) (10) (10) (10) (10) 
line 166: nearestNeighbour (7)
(7) 
line 167: inorderTraversal
(2) (2) (2) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (9) (10) (10) (10) (10) 
line 168: remove (2)
line 169: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (9) (10) (10) (10) (10) 
line 170: nearestNeighbour (4)
(3) 
line 171: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (9) (10) (10) (10) (10) 
line 172: clear
line 173: buildTree 6
(9) (9) (9) (9) (6) (6) 
line 174: inorderTraversal
(6) (6) (9) (9) (9) (9) 
line 175: postorderTraversal
(6) (6) (9) (9) (9) (9) 
line 176: inorderTraversal
(6) (6) (9) (9) (9) (9) 
line 177: postorderTraversal
(6) (6) (9) (9) (9) (9) 
line 178: inorderTraversal
(6) (6) (9) (9) (9) (9) 
line 179: insert (2)
line 180: inorderTraversal
(2) (6) (6) (9) (9) (9) (9) 
line 181: kNearestNeighbour 2 (9)
(9) (9) 
line 182: inorderTraversal
(2) (6) (6) (9) (9) (9) (9) 
line 183: remove (9)
line 184: inorderTraversal
(2) (6) (6) (9) (9) (9) 
line 185: nearestNeighbour (5)
(6) 
line 186: inorderTraversal
(2) (6) (6) (9) (9) (9) 
line 187: remove (3)
line 188: inorderTraversal
(2) (6) (6) (9) (9) (9) 
line 189: clear
line 190: buildTree 13
(7) (8) (4) (5) (3) (3) (10) (3) (6) (9) (1) (8) (5) 
line 191: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (6) (7) (8) (8) (9) (10) 
line 192: insert (4)
line 193: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (9) (10) 
line 194: kNearestNeighbour 4 (6)
(5) (5) (6) (7) 
line 195: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (9) (10) 
line 196: remove (6)
line 197: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (7) (8) (8) (9) (10) 
line 198: insert (1)
line 199: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (7) (8) (8) (9) (10) 
line 200: nearestNeighbour (1)
(1) 
line 201: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (7) (8) (8) (9) (10) 
line 202: insert (7)
line 203: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (7) (7) (8) (8) (9) (10) 
line 204: insert (5)
line 205: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (9) (10) 
line 206: clear
line 207: buildTree 1
(2) 
line 208: inorderTraversal
(2) 
line 209: kNearestNeighbour 1 (1)
(2) 
line 210: inorderTraversal
(2) 
line 211: nearestNeighbour (4)
(2) 
line 212: inorderTraversal
(2) 
line 213: clear
line 214: buildTree 18
(5) (7) (9) (10) (1) (9) (6) (1) (1) (5) (10) (2) (8) (7) (3) (9) (5) (1) 
line 215: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 216: preorderTraversal
(5) (1) (1) (1) (2) (1) (3) (8) (6) (5) (5) (7) (7) (9) (9) (10) (9) (10) 
line 217: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 218: nearestNeighbour (6)
(6) 
line 219: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 220: kNearestNeighbour 10 (1)
(1) (1) (1) (1) (2) (3) (5) (5) (5) (6) 
line 221: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 222: kNearestNeighbour 1 (8)
(8) 
line 223: inorderTraversal
(1) (1) (1) (1) (2) (3) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 224: remove (2)
line 225: inorderTraversal
(1) (1) (1) (1) (3) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 226: nearestNeighbour (1)
(1) 
line 227: inorderTraversal
(1) (1) (1) (1) (3) (5) (5) (5) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 228: clear
line 229: buildTree 16
(9) (2) (6) (5) (3) (4) (5) (10) (1) (10) (9) (3) (7) (7) (2) (2) 
line 230: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (9) (9) (10) (10) 
line 231: insert (5)
line 232: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (7) (9) (9) (10) (10) 
line 233: nearestNeighbour (6)
(6) 
line 234: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (7) (9) (9) (10) (10) 
line 235: nearestNeighbour (4)
(4) 
line 236: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (7) (9) (9) (10) (10) 
line 237: kNearestNeighbour 3 (2)
(2) (2) (2) 
line 238: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (7) (9) (9) (10) (10) 
line 239: insert (8)
line 240: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) 
line 241: remove (5)
line 242: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) 
line 243: remove (6)
line 244: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 245: insert (3)
line 246: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (7) (7) (8) (9) (9) (10) (10) 
line 247: insert (9)
line 248: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (7) (7) (8) (9) (9) (9) (10) (10) 
line 249: insert (8)
line 250: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 251: clear
line 252: buildTree 9
(7) (7) (10) (8) (2) (5) (7) (9) (10) 
line 253: inorderTraversal
(2) (5) (7) (7) (7) (8) (9) (10) (10) 
line 254: insert (10)
line 255: inorderTraversal
(2) (5) (7) (7) (7) (8) (9) (10) (10) (10) 
line 256: remove (10)
line 257: inorderTraversal
(2) (5) (7) (7) (7) (8) (9) (10) (10) 
line 258: clear
line 259: buildTree 15
(2) (5) (10) (5) (2) (4) (2) (8) (4) (10) (3) (7) (10) (8) (8) 
line 260: inorderTraversal
(2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (8) (10) (10) (10) 
line 261: insert (1)
line 262: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (8) (10) (10) (10) 
line 263: kNearestNeighbour 4 (9)
(8) (8) (10) (10) 
line 264: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (8) (10) (10) (10) 
line 265: kNearestNeighbour 7 (4)
(2) (2) (3) (4) (4) (5) (5) 
line 266: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (7) (8) (8) (8) (10) (10) (10) 
line 267: insert (5)
line 268: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (7) (8) (8) (8) (10) (10) (10) 
line 269: insert (6)
line 270: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (7) (8) (8) (8) (10) (10) (10) 
line 271: insert (6)
line 272: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 273: kNearestNeighbour 4 (3)
(2) (3) (4) (4) 
line 274: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 275: kNearestNeighbour 9 (8)
(6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 276: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 277: nearestNeighbour (6)
(6) 
line 278: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 279: insert (2)
line 280: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 281: insert (10)
line 282: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 283: kNearestNeighbour 6 (2)
(1) (2) (2) (2) (2) (3) 
line 284: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 285: nearestNeighbour (1)
(1) 
line 286: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 287: remove (4)
line 288: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 289: insert (8)
line 290: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (10) (10) (10) (10) 
line 291: nearestNeighbour (4)
(4) 
line 292: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (10) (10) (10) (10) 
line 293: insert (6)
line 294: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (8) (10) (10) (10) (10) 
line 295: insert (7)
line 296: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) (10) (10) 
line 297: insert (10)
line 298: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) (10) (10) (10) 
line 299: clear
line 300: buildTree 18
(3) (2) (1) (2) (2) (3) (6) (1) (3) (3) (6) (7) (6) (9) (7) (8) (3) (9) 
line 301: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (3) (3) (6) (6) (6) (7) (7) (8) (9) (9) 
line 302: nearestNeighbour (3)
(3) 
line 303: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (3) (3) (6) (6) (6) (7) (7) (8) (9) (9) 
line 304: insert (2)
line 305: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (3) (6) (6) (6) (7) (7) (8) (9) (9) 
line 306: insert (3)
line 307: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (3) (3) (6) (6) (6) (7) (7) (8) (9) (9) 
line 308: kNearestNeighbour 9 (8)
(3) (6) (6) (6) (7) (7) (8) (9) (9) 
line 309: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (3) (3) (6) (6) (6) (7) (7) (8) (9) (9) 
line 310: insert (10)
line 311: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (3) (3) (3) (3) (6) (6) (6) (7) (7) (8) (9) (9) (10) 
line 312: clear
line 313: buildTree 8
(8) (3) (2) (10) (5) (2) (10) (2) 
line 314: inorderTraversal
(2) (2) (2) (3) (5) (8) (10) (10) 
line 315: insert (9)
line 316: inorderTraversal
(2) (2) (2) (3) (5) (8) (9) (10) (10) 
line 317: remove (10)
line 318: inorderTraversal
(2) (2) (2) (3) (5) (8) (9) (10) 
line 319: insert (6)
line 320: inorderTraversal
(2) (2) (2) (3) (5) (6) (8) (9) (10) 
line 321: clear
line 322: buildTree 18
(10) (10) (9) (3) (4) (10) (7) (10) (7) (10) (3) (4) (10) (5) (9) (6) (4) (6) 
line 323: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 324: nodeCount_height_leafCount
nodeCount=18;height=7;leafCount=6
line 325: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 326: nearestNeighbour (7)
(7) 
line 327: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 328: kNearestNeighbour 9 (10)
(7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 329: inorderTraversal
(3) (3) (4) (4) (4) (5) (6) (6) (7) (7) (9) (9) (10) (10) (10) (10) (10) (10) 
line 330: clear
line 331: buildTree 4
(1) (10) (3) (3) 
line 332: inorderTraversal
(1) (3) (3) (10) 
line 333: clear
line 334: buildTree 17
(6) (5) (3) (10) (5) (6) (3) (2) (1) (6) (8) (4) (6) (7) (9) (8) (10) 
line 335: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 336: kNearestNeighbour 10 (9)
(6) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 337: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 338: insert (7)
line 339: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 340: insert (3)
line 341: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 342: nearestNeighbour (6)
(6) 
line 343: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 344: nearestNeighbour (6)
(6) 
line 345: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (10) (10) 
line 346: insert (9)
line 347: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 348: nearestNeighbour (4)
(4) 
line 349: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 350: insert (8)
line 351: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 352: remove (5)
line 353: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (6) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 354: clear
line 355: buildTree 19
(1) (2) (3) (10) (9) (1) (8) (3) (7) (4) (10) (3) (3) (5) (10) (4) (9) (1) (1) 
line 356: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (8) (9) (9) (10) (10) (10) 
line 357: nearestNeighbour (1)
(1) 
line 358: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (7) (8) (9) (9) (10) (10) (10) 
line 359: insert (5)
line 360: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (7) (8) (9) (9) (10) (10) (10) 
line 361: insert (2)
line 362: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (7) (8) (9) (9) (10) (10) (10) 
line 363: insert (9)
line 364: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (7) (8) (9) (9) (9) (10) (10) (10) 
line 365: nearestNeighbour (3)
(3) 
line 366: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (7) (8) (9) (9) (9) (10) (10) (10) 
line 367: insert (6)
line 368: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 369: insert (4)
line 370: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 371: nearestNeighbour (10)
(10) 
line 372: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 373: insert (5)
line 374: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (8) (9) (9) (9) (10) (10) (10) 
line 375: remove (8)
line 376: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (10) (10) (10) 
line 377: nodeCount_height_leafCount
nodeCount=24;height=7;leafCount=7
line 378: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (10) (10) (10) 
line 379: insert (2)
line 380: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (10) (10) (10) 
line 381: kNearestNeighbour 4 (3)
(3) (3) (3) (3) 
line 382: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (10) (10) (10) 
line 383: insert (9)
line 384: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (9) (10) (10) (10) 
line 385: postorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (3) (2) (4) (4) (5) (6) (5) (7) (5) (9) (9) (9) (10) (10) (10) (9) (4) 
line 386: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (9) (10) (10) (10) 
line 387: insert (1)
line 388: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (9) (10) (10) (10) 
line 389: nearestNeighbour (5)
(5) 
line 390: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (9) (10) (10) (10) 
line 391: search (5)
TRUE
line 392: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (9) (10) (10) (10) 
line 393: kNearestNeighbour 3 (9)
(9) (9) (9) 
line 394: inorderTraversal
(1) (1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (9) (9) (9) (9) (10) (10) (10) 
line 395: clear
line 396: buildTree 17
(7) (6) (1) (2) (10) (2) (10) (10) (3) (8) (5) (6) (6) (6) (6) (2) (1) 
line 397: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (6) (6) (6) (6) (7) (8) (10) (10) (10) 
line 398: insert (6)
line 399: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (6) (6) (6) (6) (6) (7) (8) (10) (10) (10) 
line 400: insert (9)
line 401: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) 
line 402: insert (6)
line 403: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) 
line 404: kNearestNeighbour 2 (5)
(5) (6) 
line 405: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) 
line 406: insert (4)
line 407: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) 
line 408: nearestNeighbour (8)
(8) 
line 409: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) 
line 410: insert (10)
line 411: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) 
line 412: insert (1)
line 413: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) 
line 414: kNearestNeighbour 6 (3)
(2) (2) (2) (3) (4) (5) 
line 415: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) 
line 416: preorderTraversal
(6) (2) (1) (1) (1) (2) (3) (2) (5) (4) (7) (6) (6) (6) (6) (6) (6) (10) (8) (9) (10) (10) (10) 
line 417: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) 
line 418: kNearestNeighbour 1 (3)
(3) 
line 419: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) 
line 420: insert (4)
line 421: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (9) (10) (10) (10) (10) 
line 422: insert (8)
line 423: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) (10) 
line 424: kNearestNeighbour 3 (3)
(3) (4) (4) 
line 425: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) (10) 
line 426: nodeCount_height_leafCount
nodeCount=25;height=8;leafCount=6
line 427: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (4) (4) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) (10) 
line 428: preorderTraversal
(6) (2) (1) (1) (1) (2) (3) (2) (5) (4) (4) (7) (6) (6) (6) (6) (6) (6) (10) (8) (9) (8) (10) (10) (10) 
line 429: postorderTraversal
(1) (1) (1) (2) (4) (4) (5) (3) (2) (2) (6) (6) (6) (6) (6) (6) (8) (9) (8) (10) (10) (10) (10) (7) (6) 
line 430: clear
