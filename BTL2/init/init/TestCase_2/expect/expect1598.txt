line 1: k=1
line 2: nearestNeighbour (9)

line 3: inorderTraversal

line 4: insert (8)
line 5: inorderTraversal
(8) 
line 6: remove (8)
line 7: inorderTraversal

line 8: insert (7)
line 9: inorderTraversal
(7) 
line 10: insert (10)
line 11: inorderTraversal
(7) (10) 
line 12: postorderTraversal
(10) (7) 
line 13: inorderTraversal
(7) (10) 
line 14: search (10)
TRUE
line 15: inorderTraversal
(7) (10) 
line 16: search (10)
TRUE
line 17: inorderTraversal
(7) (10) 
line 18: kNearestNeighbour 1 (1)
(7) 
line 19: inorderTraversal
(7) (10) 
line 20: preorderTraversal
(7) (10) 
line 21: inorderTraversal
(7) (10) 
line 22: remove (9)
line 23: inorderTraversal
(7) (10) 
line 24: kNearestNeighbour 1 (1)
(7) 
line 25: inorderTraversal
(7) (10) 
line 26: nearestNeighbour (9)
(10) 
line 27: inorderTraversal
(7) (10) 
line 28: insert (5)
line 29: inorderTraversal
(5) (7) (10) 
line 30: kNearestNeighbour 1 (5)
(5) 
line 31: inorderTraversal
(5) (7) (10) 
line 32: kNearestNeighbour 4 (3)
(5) (7) (10) 
line 33: inorderTraversal
(5) (7) (10) 
line 34: kNearestNeighbour 10 (5)
(5) (7) (10) 
line 35: inorderTraversal
(5) (7) (10) 
line 36: remove (7)
line 37: inorderTraversal
(5) (10) 
line 38: preorderTraversal
(10) (5) 
line 39: inorderTraversal
(5) (10) 
line 40: search (8)
FALSE
line 41: inorderTraversal
(5) (10) 
line 42: insert (3)
line 43: inorderTraversal
(3) (5) (10) 
line 44: insert (8)
line 45: inorderTraversal
(3) (5) (8) (10) 
line 46: nearestNeighbour (3)
(3) 
line 47: inorderTraversal
(3) (5) (8) (10) 
line 48: insert (8)
line 49: inorderTraversal
(3) (5) (8) (8) (10) 
line 50: kNearestNeighbour 2 (6)
(5) (8) 
line 51: inorderTraversal
(3) (5) (8) (8) (10) 
line 52: kNearestNeighbour 7 (5)
(3) (5) (8) (8) (10) 
line 53: inorderTraversal
(3) (5) (8) (8) (10) 
line 54: search (7)
FALSE
line 55: inorderTraversal
(3) (5) (8) (8) (10) 
line 56: nearestNeighbour (7)
(8) 
line 57: inorderTraversal
(3) (5) (8) (8) (10) 
line 58: remove (7)
line 59: inorderTraversal
(3) (5) (8) (8) (10) 
line 60: remove (8)
line 61: inorderTraversal
(3) (5) (8) (10) 
line 62: kNearestNeighbour 2 (3)
(3) (5) 
line 63: inorderTraversal
(3) (5) (8) (10) 
line 64: clear
line 65: buildTree 10
(8) (6) (6) (6) (9) (8) (1) (9) (5) (9) 
line 66: inorderTraversal
(1) (5) (6) (6) (6) (8) (8) (9) (9) (9) 
line 67: insert (4)
line 68: inorderTraversal
(1) (4) (5) (6) (6) (6) (8) (8) (9) (9) (9) 
line 69: search (9)
TRUE
line 70: inorderTraversal
(1) (4) (5) (6) (6) (6) (8) (8) (9) (9) (9) 
line 71: kNearestNeighbour 5 (1)
(1) (4) (5) (6) (6) 
line 72: inorderTraversal
(1) (4) (5) (6) (6) (6) (8) (8) (9) (9) (9) 
line 73: kNearestNeighbour 8 (10)
(6) (6) (6) (8) (8) (9) (9) (9) 
line 74: inorderTraversal
(1) (4) (5) (6) (6) (6) (8) (8) (9) (9) (9) 
line 75: insert (4)
line 76: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (8) (8) (9) (9) (9) 
line 77: insert (6)
line 78: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (8) (9) (9) (9) 
line 79: nearestNeighbour (1)
(1) 
line 80: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (8) (9) (9) (9) 
line 81: nearestNeighbour (9)
(9) 
line 82: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (8) (9) (9) (9) 
line 83: insert (9)
line 84: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (8) (9) (9) (9) (9) 
line 85: insert (10)
line 86: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (8) (9) (9) (9) (9) (10) 
line 87: nearestNeighbour (5)
(5) 
line 88: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (8) (9) (9) (9) (9) (10) 
line 89: nearestNeighbour (2)
(1) 
line 90: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (8) (9) (9) (9) (9) (10) 
line 91: nodeCount_height_leafCount
nodeCount=15;height=7;leafCount=4
line 92: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (8) (9) (9) (9) (9) (10) 
line 93: nearestNeighbour (1)
(1) 
line 94: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (8) (9) (9) (9) (9) (10) 
line 95: remove (8)
line 96: inorderTraversal
(1) (4) (4) (5) (6) (6) (6) (6) (8) (9) (9) (9) (9) (10) 
line 97: insert (4)
line 98: inorderTraversal
(1) (4) (4) (4) (5) (6) (6) (6) (6) (8) (9) (9) (9) (9) (10) 
line 99: nearestNeighbour (4)
(4) 
line 100: inorderTraversal
(1) (4) (4) (4) (5) (6) (6) (6) (6) (8) (9) (9) (9) (9) (10) 
line 101: clear
line 102: buildTree 11
(9) (3) (10) (8) (5) (8) (1) (2) (3) (1) (2) 
line 103: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (8) (8) (9) (10) 
line 104: nodeCount_height_leafCount
nodeCount=11;height=4;leafCount=5
line 105: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (8) (8) (9) (10) 
line 106: insert (2)
line 107: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (8) (8) (9) (10) 
line 108: nearestNeighbour (1)
(1) 
line 109: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (8) (8) (9) (10) 
line 110: kNearestNeighbour 1 (3)
(3) 
line 111: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (8) (8) (9) (10) 
line 112: clear
line 113: buildTree 16
(6) (7) (3) (7) (6) (2) (2) (5) (8) (5) (5) (9) (9) (10) (1) (4) 
line 114: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 115: kNearestNeighbour 4 (5)
(5) (5) (5) (6) 
line 116: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 117: insert (7)
line 118: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) (10) 
line 119: nearestNeighbour (10)
(10) 
line 120: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) (10) 
line 121: nearestNeighbour (7)
(7) 
line 122: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) (10) 
line 123: insert (8)
line 124: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 125: remove (3)
line 126: inorderTraversal
(1) (2) (2) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 127: insert (4)
line 128: inorderTraversal
(1) (2) (2) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 129: insert (2)
line 130: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) 
line 131: clear
line 132: buildTree 17
(4) (9) (7) (10) (7) (8) (6) (8) (8) (1) (9) (6) (5) (10) (8) (1) (5) 
line 133: inorderTraversal
(1) (1) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) 
line 134: clear
line 135: buildTree 4
(6) (9) (4) (4) 
line 136: inorderTraversal
(4) (4) (6) (9) 
line 137: nearestNeighbour (2)
(4) 
line 138: inorderTraversal
(4) (4) (6) (9) 
line 139: insert (8)
line 140: inorderTraversal
(4) (4) (6) (8) (9) 
line 141: insert (4)
line 142: inorderTraversal
(4) (4) (4) (6) (8) (9) 
line 143: insert (8)
line 144: inorderTraversal
(4) (4) (4) (6) (8) (8) (9) 
line 145: nearestNeighbour (10)
(9) 
line 146: inorderTraversal
(4) (4) (4) (6) (8) (8) (9) 
line 147: insert (1)
line 148: inorderTraversal
(1) (4) (4) (4) (6) (8) (8) (9) 
line 149: insert (7)
line 150: inorderTraversal
(1) (4) (4) (4) (6) (7) (8) (8) (9) 
line 151: insert (9)
line 152: inorderTraversal
(1) (4) (4) (4) (6) (7) (8) (8) (9) (9) 
line 153: clear
line 154: buildTree 19
(8) (2) (8) (8) (5) (5) (10) (7) (5) (4) (10) (10) (9) (2) (6) (9) (8) (3) (3) 
line 155: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 156: insert (6)
line 157: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 158: insert (10)
line 159: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 160: nearestNeighbour (2)
(2) 
line 161: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 162: insert (9)
line 163: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) (10) (10) (10) 
line 164: remove (10)
line 165: inorderTraversal
(2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 166: clear
line 167: buildTree 18
(9) (5) (10) (1) (1) (4) (1) (4) (10) (8) (10) (4) (9) (2) (1) (9) (3) (1) 
line 168: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (4) (4) (4) (5) (8) (9) (9) (9) (10) (10) (10) 
line 169: nodeCount_height_leafCount
nodeCount=18;height=7;leafCount=6
line 170: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (4) (4) (4) (5) (8) (9) (9) (9) (10) (10) (10) 
line 171: clear
line 172: buildTree 5
(10) (9) (10) (1) (10) 
line 173: inorderTraversal
(1) (9) (10) (10) (10) 
line 174: insert (9)
line 175: inorderTraversal
(1) (9) (9) (10) (10) (10) 
line 176: kNearestNeighbour 4 (3)
(1) (9) (9) (10) 
line 177: inorderTraversal
(1) (9) (9) (10) (10) (10) 
line 178: nodeCount_height_leafCount
nodeCount=6;height=4;leafCount=2
line 179: inorderTraversal
(1) (9) (9) (10) (10) (10) 
line 180: insert (3)
line 181: inorderTraversal
(1) (3) (9) (9) (10) (10) (10) 
line 182: kNearestNeighbour 1 (6)
(3) 
line 183: inorderTraversal
(1) (3) (9) (9) (10) (10) (10) 
line 184: kNearestNeighbour 2 (2)
(1) (3) 
line 185: inorderTraversal
(1) (3) (9) (9) (10) (10) (10) 
line 186: nearestNeighbour (3)
(3) 
line 187: inorderTraversal
(1) (3) (9) (9) (10) (10) (10) 
line 188: insert (6)
line 189: inorderTraversal
(1) (3) (6) (9) (9) (10) (10) (10) 
line 190: nearestNeighbour (3)
(3) 
line 191: inorderTraversal
(1) (3) (6) (9) (9) (10) (10) (10) 
line 192: remove (10)
line 193: inorderTraversal
(1) (3) (6) (9) (9) (10) (10) 
line 194: search (3)
TRUE
line 195: inorderTraversal
(1) (3) (6) (9) (9) (10) (10) 
line 196: kNearestNeighbour 8 (6)
(1) (3) (6) (9) (9) (10) (10) 
line 197: inorderTraversal
(1) (3) (6) (9) (9) (10) (10) 
line 198: insert (7)
line 199: inorderTraversal
(1) (3) (6) (7) (9) (9) (10) (10) 
line 200: kNearestNeighbour 9 (6)
(1) (3) (6) (7) (9) (9) (10) (10) 
line 201: inorderTraversal
(1) (3) (6) (7) (9) (9) (10) (10) 
line 202: kNearestNeighbour 5 (8)
(6) (7) (9) (9) (10) 
line 203: inorderTraversal
(1) (3) (6) (7) (9) (9) (10) (10) 
line 204: preorderTraversal
(10) (1) (9) (3) (6) (7) (9) (10) 
line 205: inorderTraversal
(1) (3) (6) (7) (9) (9) (10) (10) 
line 206: search (10)
TRUE
line 207: inorderTraversal
(1) (3) (6) (7) (9) (9) (10) (10) 
line 208: insert (5)
line 209: inorderTraversal
(1) (3) (5) (6) (7) (9) (9) (10) (10) 
line 210: insert (10)
line 211: inorderTraversal
(1) (3) (5) (6) (7) (9) (9) (10) (10) (10) 
line 212: kNearestNeighbour 10 (8)
(1) (3) (5) (6) (7) (9) (9) (10) (10) (10) 
line 213: inorderTraversal
(1) (3) (5) (6) (7) (9) (9) (10) (10) (10) 
line 214: nearestNeighbour (4)
(5) 
line 215: inorderTraversal
(1) (3) (5) (6) (7) (9) (9) (10) (10) (10) 
line 216: insert (3)
line 217: inorderTraversal
(1) (3) (3) (5) (6) (7) (9) (9) (10) (10) (10) 
line 218: kNearestNeighbour 4 (8)
(6) (7) (9) (9) 
line 219: inorderTraversal
(1) (3) (3) (5) (6) (7) (9) (9) (10) (10) (10) 
line 220: clear
line 221: buildTree 20
(4) (9) (8) (6) (10) (2) (7) (9) (3) (9) (5) (7) (3) (5) (9) (6) (7) (4) (3) (1) 
line 222: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 223: insert (5)
line 224: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 225: insert (7)
line 226: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 227: kNearestNeighbour 7 (6)
(5) (6) (6) (7) (7) (7) (7) 
line 228: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 229: clear
line 230: buildTree 5
(1) (10) (8) (1) (5) 
line 231: inorderTraversal
(1) (1) (5) (8) (10) 
line 232: nearestNeighbour (7)
(8) 
line 233: inorderTraversal
(1) (1) (5) (8) (10) 
line 234: kNearestNeighbour 9 (5)
(1) (1) (5) (8) (10) 
line 235: inorderTraversal
(1) (1) (5) (8) (10) 
line 236: postorderTraversal
(1) (1) (10) (8) (5) 
line 237: inorderTraversal
(1) (1) (5) (8) (10) 
line 238: insert (6)
line 239: inorderTraversal
(1) (1) (5) (6) (8) (10) 
line 240: remove (8)
line 241: inorderTraversal
(1) (1) (5) (6) (10) 
line 242: remove (1)
line 243: inorderTraversal
(1) (5) (6) (10) 
line 244: insert (9)
line 245: inorderTraversal
(1) (5) (6) (9) (10) 
line 246: kNearestNeighbour 7 (2)
(1) (5) (6) (9) (10) 
line 247: inorderTraversal
(1) (5) (6) (9) (10) 
line 248: kNearestNeighbour 4 (1)
(1) (5) (6) (9) 
line 249: inorderTraversal
(1) (5) (6) (9) (10) 
line 250: insert (4)
line 251: inorderTraversal
(1) (4) (5) (6) (9) (10) 
line 252: nearestNeighbour (6)
(6) 
line 253: inorderTraversal
(1) (4) (5) (6) (9) (10) 
line 254: insert (5)
line 255: inorderTraversal
(1) (4) (5) (5) (6) (9) (10) 
line 256: clear
line 257: buildTree 3
(10) (4) (10) 
line 258: inorderTraversal
(4) (10) (10) 
line 259: preorderTraversal
(10) (4) (10) 
line 260: inorderTraversal
(4) (10) (10) 
line 261: insert (4)
line 262: inorderTraversal
(4) (4) (10) (10) 
line 263: kNearestNeighbour 9 (3)
(4) (4) (10) (10) 
line 264: inorderTraversal
(4) (4) (10) (10) 
line 265: kNearestNeighbour 10 (5)
(4) (4) (10) (10) 
line 266: inorderTraversal
(4) (4) (10) (10) 
line 267: kNearestNeighbour 7 (5)
(4) (4) (10) (10) 
line 268: inorderTraversal
(4) (4) (10) (10) 
line 269: insert (3)
line 270: inorderTraversal
(3) (4) (4) (10) (10) 
line 271: kNearestNeighbour 6 (10)
(3) (4) (4) (10) (10) 
line 272: inorderTraversal
(3) (4) (4) (10) (10) 
line 273: kNearestNeighbour 3 (9)
(4) (10) (10) 
line 274: inorderTraversal
(3) (4) (4) (10) (10) 
line 275: nearestNeighbour (7)
(4) 
line 276: inorderTraversal
(3) (4) (4) (10) (10) 
line 277: preorderTraversal
(10) (4) (3) (4) (10) 
line 278: inorderTraversal
(3) (4) (4) (10) (10) 
line 279: insert (8)
line 280: inorderTraversal
(3) (4) (4) (8) (10) (10) 
line 281: insert (4)
line 282: inorderTraversal
(3) (4) (4) (4) (8) (10) (10) 
line 283: postorderTraversal
(3) (4) (8) (4) (4) (10) (10) 
line 284: inorderTraversal
(3) (4) (4) (4) (8) (10) (10) 
line 285: kNearestNeighbour 7 (4)
(3) (4) (4) (4) (8) (10) (10) 
line 286: inorderTraversal
(3) (4) (4) (4) (8) (10) (10) 
line 287: insert (8)
line 288: inorderTraversal
(3) (4) (4) (4) (8) (8) (10) (10) 
line 289: kNearestNeighbour 2 (4)
(4) (4) 
line 290: inorderTraversal
(3) (4) (4) (4) (8) (8) (10) (10) 
line 291: kNearestNeighbour 10 (9)
(3) (4) (4) (4) (8) (8) (10) (10) 
line 292: inorderTraversal
(3) (4) (4) (4) (8) (8) (10) (10) 
line 293: remove (8)
line 294: inorderTraversal
(3) (4) (4) (4) (8) (10) (10) 
line 295: kNearestNeighbour 10 (10)
(3) (4) (4) (4) (8) (10) (10) 
line 296: inorderTraversal
(3) (4) (4) (4) (8) (10) (10) 
line 297: nearestNeighbour (3)
(3) 
line 298: inorderTraversal
(3) (4) (4) (4) (8) (10) (10) 
line 299: kNearestNeighbour 8 (10)
(3) (4) (4) (4) (8) (10) (10) 
line 300: inorderTraversal
(3) (4) (4) (4) (8) (10) (10) 
line 301: clear
line 302: buildTree 13
(2) (7) (3) (6) (4) (3) (2) (5) (10) (4) (9) (7) (7) 
line 303: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (9) (10) 
line 304: kNearestNeighbour 6 (5)
(4) (4) (5) (6) (7) (7) 
line 305: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (9) (10) 
line 306: insert (5)
line 307: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (10) 
line 308: kNearestNeighbour 1 (7)
(7) 
line 309: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (10) 
line 310: kNearestNeighbour 4 (5)
(4) (5) (5) (6) 
line 311: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (9) (10) 
line 312: insert (8)
line 313: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (10) 
line 314: insert (2)
line 315: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (10) 
line 316: search (5)
TRUE
line 317: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (10) 
line 318: kNearestNeighbour 4 (10)
(7) (8) (9) (10) 
line 319: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (10) 
line 320: kNearestNeighbour 1 (6)
(6) 
line 321: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (9) (10) 
line 322: insert (8)
line 323: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (8) (9) (10) 
line 324: postorderTraversal
(2) (2) (2) (3) (4) (4) (3) (5) (6) (8) (8) (7) (10) (9) (7) (7) (5) 
line 325: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (7) (7) (7) (8) (8) (9) (10) 
line 326: insert (6)
line 327: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 328: remove (7)
line 329: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 330: kNearestNeighbour 3 (8)
(8) (8) (9) 
line 331: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (9) (10) 
line 332: insert (7)
line 333: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 334: kNearestNeighbour 7 (7)
(6) (6) (7) (7) (7) (8) (8) 
line 335: inorderTraversal
(2) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (10) 
line 336: clear
line 337: buildTree 17
(10) (8) (5) (8) (1) (8) (7) (5) (5) (9) (2) (2) (8) (5) (2) (10) (4) 
line 338: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (5) (5) (7) (8) (8) (8) (8) (9) (10) (10) 
line 339: clear
line 340: buildTree 2
(7) (5) 
line 341: inorderTraversal
(5) (7) 
line 342: kNearestNeighbour 10 (4)
(5) (7) 
line 343: inorderTraversal
(5) (7) 
line 344: kNearestNeighbour 5 (2)
(5) (7) 
line 345: inorderTraversal
(5) (7) 
line 346: nearestNeighbour (8)
(7) 
line 347: inorderTraversal
(5) (7) 
line 348: insert (4)
line 349: inorderTraversal
(4) (5) (7) 
line 350: insert (4)
line 351: inorderTraversal
(4) (4) (5) (7) 
line 352: insert (9)
line 353: inorderTraversal
(4) (4) (5) (7) (9) 
line 354: kNearestNeighbour 6 (8)
(4) (4) (5) (7) (9) 
line 355: inorderTraversal
(4) (4) (5) (7) (9) 
line 356: insert (6)
line 357: inorderTraversal
(4) (4) (5) (6) (7) (9) 
line 358: clear
line 359: buildTree 17
(5) (4) (8) (2) (1) (2) (8) (10) (10) (5) (7) (2) (5) (3) (2) (4) (10) 
line 360: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) (10) 
line 361: nearestNeighbour (8)
(8) 
line 362: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) (10) 
line 363: nearestNeighbour (10)
(10) 
line 364: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) (10) 
line 365: insert (6)
line 366: inorderTraversal
(1) (2) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (7) (8) (8) (10) (10) (10) 
line 367: clear
line 368: buildTree 15
(3) (7) (6) (1) (10) (9) (1) (5) (8) (5) (8) (8) (5) (6) (9) 
line 369: inorderTraversal
(1) (1) (3) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) 
line 370: insert (6)
line 371: inorderTraversal
(1) (1) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (10) 
line 372: nearestNeighbour (5)
(5) 
line 373: inorderTraversal
(1) (1) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (10) 
line 374: remove (8)
line 375: inorderTraversal
(1) (1) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 376: nearestNeighbour (8)
(8) 
line 377: inorderTraversal
(1) (1) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 378: remove (4)
line 379: inorderTraversal
(1) (1) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 380: kNearestNeighbour 5 (10)
(8) (8) (9) (9) (10) 
line 381: inorderTraversal
(1) (1) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 382: insert (3)
line 383: inorderTraversal
(1) (1) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 384: insert (2)
line 385: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 386: nearestNeighbour (8)
(8) 
line 387: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 388: insert (7)
line 389: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 390: nodeCount_height_leafCount
nodeCount=18;height=5;leafCount=7
line 391: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 392: insert (2)
line 393: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 394: remove (5)
line 395: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) 
line 396: insert (10)
line 397: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) 
line 398: insert (10)
line 399: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 400: remove (6)
line 401: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 402: kNearestNeighbour 1 (3)
(3) 
line 403: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 404: nearestNeighbour (10)
(10) 
line 405: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 406: nearestNeighbour (7)
(7) 
line 407: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 408: insert (5)
line 409: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 410: clear
line 411: buildTree 15
(6) (10) (7) (6) (7) (7) (2) (6) (9) (8) (4) (8) (8) (1) (9) 
line 412: inorderTraversal
(1) (2) (4) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 413: nearestNeighbour (3)
(2) 
line 414: inorderTraversal
(1) (2) (4) (6) (6) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 415: insert (7)
line 416: inorderTraversal
(1) (2) (4) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 417: insert (4)
line 418: inorderTraversal
(1) (2) (4) (4) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 419: nodeCount_height_leafCount
nodeCount=17;height=5;leafCount=6
line 420: inorderTraversal
(1) (2) (4) (4) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 421: preorderTraversal
(7) (4) (1) (2) (6) (4) (6) (6) (8) (7) (7) (7) (9) (8) (8) (9) (10) 
line 422: postorderTraversal
(2) (1) (4) (6) (6) (6) (4) (7) (7) (7) (8) (8) (10) (9) (9) (8) (7) 
line 423: clear
