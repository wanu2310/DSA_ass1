line 1: k=1
line 2: remove (9)
line 3: inorderTraversal

line 4: search (2)
FALSE
line 5: inorderTraversal

line 6: search (7)
FALSE
line 7: inorderTraversal

line 8: kNearestNeighbour 8 (3)

line 9: inorderTraversal

line 10: nearestNeighbour (1)

line 11: inorderTraversal

line 12: insert (2)
line 13: inorderTraversal
(2) 
line 14: clear
line 15: buildTree 16
(3) (2) (6) (6) (6) (8) (1) (7) (8) (3) (3) (8) (2) (6) (4) (10) 
line 16: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (6) (6) (6) (6) (7) (8) (8) (8) (10) 
line 17: insert (3)
line 18: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (6) (6) (6) (6) (7) (8) (8) (8) (10) 
line 19: insert (10)
line 20: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) 
line 21: insert (8)
line 22: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (6) (6) (6) (6) (7) (8) (8) (8) (8) (10) (10) 
line 23: insert (3)
line 24: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (6) (6) (6) (6) (7) (8) (8) (8) (8) (10) (10) 
line 25: nodeCount_height_leafCount
nodeCount=20;height=7;leafCount=6
line 26: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (6) (6) (6) (6) (7) (8) (8) (8) (8) (10) (10) 
line 27: insert (7)
line 28: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) 
line 29: kNearestNeighbour 3 (4)
(3) (3) (4) 
line 30: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) 
line 31: insert (6)
line 32: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) 
line 33: insert (5)
line 34: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) 
line 35: nearestNeighbour (6)
(6) 
line 36: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) 
line 37: kNearestNeighbour 4 (5)
(4) (5) (6) (6) 
line 38: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) 
line 39: insert (1)
line 40: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) 
line 41: insert (10)
line 42: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 43: kNearestNeighbour 7 (10)
(8) (8) (8) (8) (10) (10) (10) 
line 44: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (8) (8) (8) (10) (10) (10) 
line 45: remove (7)
line 46: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (8) (8) (8) (8) (10) (10) (10) 
line 47: nearestNeighbour (8)
(8) 
line 48: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (8) (8) (8) (8) (10) (10) (10) 
line 49: insert (5)
line 50: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (5) (5) (6) (6) (6) (6) (6) (7) (8) (8) (8) (8) (10) (10) (10) 
line 51: clear
line 52: buildTree 15
(9) (7) (5) (2) (6) (2) (7) (1) (10) (7) (10) (3) (3) (2) (2) 
line 53: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (5) (6) (7) (7) (7) (9) (10) (10) 
line 54: clear
line 55: buildTree 6
(9) (6) (7) (3) (7) (2) 
line 56: inorderTraversal
(2) (3) (6) (7) (7) (9) 
line 57: nearestNeighbour (3)
(3) 
line 58: inorderTraversal
(2) (3) (6) (7) (7) (9) 
line 59: insert (4)
line 60: inorderTraversal
(2) (3) (4) (6) (7) (7) (9) 
line 61: nodeCount_height_leafCount
nodeCount=7;height=4;leafCount=2
line 62: inorderTraversal
(2) (3) (4) (6) (7) (7) (9) 
line 63: nearestNeighbour (3)
(3) 
line 64: inorderTraversal
(2) (3) (4) (6) (7) (7) (9) 
line 65: nearestNeighbour (1)
(2) 
line 66: inorderTraversal
(2) (3) (4) (6) (7) (7) (9) 
line 67: remove (9)
line 68: inorderTraversal
(2) (3) (4) (6) (7) (7) 
line 69: insert (4)
line 70: inorderTraversal
(2) (3) (4) (4) (6) (7) (7) 
line 71: clear
line 72: buildTree 1
(6) 
line 73: inorderTraversal
(6) 
line 74: insert (2)
line 75: inorderTraversal
(2) (6) 
line 76: nearestNeighbour (2)
(2) 
line 77: inorderTraversal
(2) (6) 
line 78: kNearestNeighbour 6 (10)
(2) (6) 
line 79: inorderTraversal
(2) (6) 
line 80: clear
line 81: buildTree 18
(7) (8) (1) (8) (3) (9) (4) (7) (9) (8) (6) (3) (5) (4) (8) (8) (7) (6) 
line 82: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 83: nearestNeighbour (10)
(9) 
line 84: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 85: nearestNeighbour (6)
(6) 
line 86: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 87: insert (6)
line 88: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 89: insert (3)
line 90: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 91: kNearestNeighbour 8 (3)
(1) (3) (3) (3) (4) (4) (5) (6) 
line 92: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 93: search (3)
TRUE
line 94: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 95: insert (5)
line 96: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 97: insert (9)
line 98: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) 
line 99: nearestNeighbour (8)
(8) 
line 100: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) (9) 
line 101: remove (8)
line 102: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) 
line 103: insert (1)
line 104: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) 
line 105: postorderTraversal
(1) (1) (3) (3) (3) (4) (5) (6) (6) (6) (5) (4) (7) (7) (9) (9) (9) (8) (8) (8) (8) (7) 
line 106: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) 
line 107: search (8)
TRUE
line 108: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) 
line 109: clear
line 110: buildTree 11
(2) (2) (9) (6) (10) (9) (7) (7) (8) (9) (10) 
line 111: inorderTraversal
(2) (2) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 112: remove (2)
line 113: inorderTraversal
(2) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 114: kNearestNeighbour 9 (3)
(2) (6) (7) (7) (8) (9) (9) (9) (10) 
line 115: inorderTraversal
(2) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 116: nearestNeighbour (1)
(2) 
line 117: inorderTraversal
(2) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 118: insert (3)
line 119: inorderTraversal
(2) (3) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 120: insert (2)
line 121: inorderTraversal
(2) (2) (3) (6) (7) (7) (8) (9) (9) (9) (10) (10) 
line 122: clear
line 123: buildTree 15
(6) (3) (8) (8) (4) (9) (4) (5) (7) (5) (8) (10) (10) (10) (1) 
line 124: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 125: remove (5)
line 126: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 127: kNearestNeighbour 4 (6)
(4) (5) (6) (7) 
line 128: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 129: nearestNeighbour (6)
(6) 
line 130: inorderTraversal
(1) (3) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 131: remove (3)
line 132: inorderTraversal
(1) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 133: nearestNeighbour (2)
(1) 
line 134: inorderTraversal
(1) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 135: insert (5)
line 136: inorderTraversal
(1) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 137: nearestNeighbour (5)
(5) 
line 138: inorderTraversal
(1) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 139: insert (3)
line 140: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) 
line 141: insert (10)
line 142: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 143: remove (1)
line 144: inorderTraversal
(3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 145: nearestNeighbour (7)
(7) 
line 146: inorderTraversal
(3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 147: nearestNeighbour (3)
(3) 
line 148: inorderTraversal
(3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 149: insert (3)
line 150: inorderTraversal
(3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 151: insert (1)
line 152: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 153: nearestNeighbour (3)
(3) 
line 154: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 155: kNearestNeighbour 8 (2)
(1) (3) (3) (4) (4) (5) (5) (6) 
line 156: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 157: kNearestNeighbour 7 (8)
(7) (8) (8) (8) (9) (10) (10) 
line 158: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 159: search (8)
TRUE
line 160: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 161: insert (3)
line 162: inorderTraversal
(1) (3) (3) (3) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 163: insert (4)
line 164: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 165: insert (9)
line 166: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 167: nearestNeighbour (5)
(5) 
line 168: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 169: kNearestNeighbour 2 (8)
(8) (8) 
line 170: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 171: insert (8)
line 172: inorderTraversal
(1) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 173: clear
line 174: buildTree 1
(1) 
line 175: inorderTraversal
(1) 
line 176: remove (8)
line 177: inorderTraversal
(1) 
line 178: nearestNeighbour (1)
(1) 
line 179: inorderTraversal
(1) 
line 180: insert (5)
line 181: inorderTraversal
(1) (5) 
line 182: search (1)
TRUE
line 183: inorderTraversal
(1) (5) 
line 184: kNearestNeighbour 5 (2)
(1) (5) 
line 185: inorderTraversal
(1) (5) 
line 186: insert (1)
line 187: inorderTraversal
(1) (1) (5) 
line 188: postorderTraversal
(1) (5) (1) 
line 189: inorderTraversal
(1) (1) (5) 
line 190: insert (8)
line 191: inorderTraversal
(1) (1) (5) (8) 
line 192: insert (9)
line 193: inorderTraversal
(1) (1) (5) (8) (9) 
line 194: nearestNeighbour (9)
(9) 
line 195: inorderTraversal
(1) (1) (5) (8) (9) 
line 196: preorderTraversal
(1) (5) (1) (8) (9) 
line 197: inorderTraversal
(1) (1) (5) (8) (9) 
line 198: kNearestNeighbour 8 (9)
(1) (1) (5) (8) (9) 
line 199: inorderTraversal
(1) (1) (5) (8) (9) 
line 200: insert (4)
line 201: inorderTraversal
(1) (1) (4) (5) (8) (9) 
line 202: insert (7)
line 203: inorderTraversal
(1) (1) (4) (5) (7) (8) (9) 
line 204: search (7)
TRUE
line 205: inorderTraversal
(1) (1) (4) (5) (7) (8) (9) 
line 206: insert (3)
line 207: inorderTraversal
(1) (1) (3) (4) (5) (7) (8) (9) 
line 208: insert (4)
line 209: inorderTraversal
(1) (1) (3) (4) (4) (5) (7) (8) (9) 
line 210: kNearestNeighbour 1 (8)
(8) 
line 211: inorderTraversal
(1) (1) (3) (4) (4) (5) (7) (8) (9) 
line 212: insert (6)
line 213: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (8) (9) 
line 214: nearestNeighbour (3)
(3) 
line 215: inorderTraversal
(1) (1) (3) (4) (4) (5) (6) (7) (8) (9) 
line 216: insert (2)
line 217: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (8) (9) 
line 218: nearestNeighbour (7)
(7) 
line 219: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (7) (8) (9) 
line 220: remove (7)
line 221: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (8) (9) 
line 222: insert (10)
line 223: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (8) (9) (10) 
line 224: kNearestNeighbour 1 (9)
(9) 
line 225: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (8) (9) (10) 
line 226: insert (10)
line 227: inorderTraversal
(1) (1) (2) (3) (4) (4) (5) (6) (8) (9) (10) (10) 
line 228: clear
line 229: buildTree 15
(2) (6) (8) (5) (9) (7) (8) (1) (1) (3) (8) (5) (2) (5) (7) 
line 230: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) 
line 231: insert (1)
line 232: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) 
line 233: kNearestNeighbour 10 (1)
(1) (1) (1) (2) (2) (3) (5) (5) (5) (6) 
line 234: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) 
line 235: insert (9)
line 236: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) 
line 237: remove (9)
line 238: inorderTraversal
(1) (1) (1) (2) (2) (3) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) 
line 239: clear
line 240: buildTree 4
(3) (9) (4) (2) 
line 241: inorderTraversal
(2) (3) (4) (9) 
line 242: nearestNeighbour (8)
(9) 
line 243: inorderTraversal
(2) (3) (4) (9) 
line 244: insert (4)
line 245: inorderTraversal
(2) (3) (4) (4) (9) 
line 246: insert (5)
line 247: inorderTraversal
(2) (3) (4) (4) (5) (9) 
line 248: insert (5)
line 249: inorderTraversal
(2) (3) (4) (4) (5) (5) (9) 
line 250: nearestNeighbour (8)
(9) 
line 251: inorderTraversal
(2) (3) (4) (4) (5) (5) (9) 
line 252: kNearestNeighbour 2 (4)
(4) (4) 
line 253: inorderTraversal
(2) (3) (4) (4) (5) (5) (9) 
line 254: clear
line 255: buildTree 17
(3) (10) (10) (9) (2) (5) (4) (8) (7) (1) (1) (2) (3) (2) (6) (6) (2) 
line 256: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 257: search (4)
TRUE
line 258: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 259: remove (2)
line 260: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (8) (9) (10) (10) 
line 261: insert (7)
line 262: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 263: nearestNeighbour (10)
(10) 
line 264: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 265: kNearestNeighbour 8 (8)
(6) (6) (7) (7) (8) (9) (10) (10) 
line 266: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 267: kNearestNeighbour 7 (5)
(3) (4) (5) (6) (6) (7) (7) 
line 268: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 269: nearestNeighbour (7)
(7) 
line 270: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 271: insert (1)
line 272: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 273: remove (2)
line 274: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 275: clear
line 276: buildTree 16
(4) (4) (4) (10) (8) (4) (3) (4) (6) (7) (7) (5) (9) (7) (1) (10) 
line 277: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (10) (10) 
line 278: nearestNeighbour (2)
(3) 
line 279: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (10) (10) 
line 280: insert (9)
line 281: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 282: kNearestNeighbour 6 (1)
(1) (3) (4) (4) (4) (4) 
line 283: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 284: kNearestNeighbour 3 (1)
(1) (3) (4) 
line 285: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 286: nearestNeighbour (1)
(1) 
line 287: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (9) (9) (10) (10) 
line 288: remove (7)
line 289: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (8) (9) (9) (10) (10) 
line 290: search (6)
TRUE
line 291: inorderTraversal
(1) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (8) (9) (9) (10) (10) 
line 292: clear
line 293: buildTree 5
(4) (2) (8) (5) (3) 
line 294: inorderTraversal
(2) (3) (4) (5) (8) 
line 295: insert (2)
line 296: inorderTraversal
(2) (2) (3) (4) (5) (8) 
line 297: remove (5)
line 298: inorderTraversal
(2) (2) (3) (4) (8) 
line 299: nearestNeighbour (9)
(8) 
line 300: inorderTraversal
(2) (2) (3) (4) (8) 
line 301: insert (6)
line 302: inorderTraversal
(2) (2) (3) (4) (6) (8) 
line 303: kNearestNeighbour 1 (10)
(8) 
line 304: inorderTraversal
(2) (2) (3) (4) (6) (8) 
line 305: nearestNeighbour (9)
(8) 
line 306: inorderTraversal
(2) (2) (3) (4) (6) (8) 
line 307: insert (2)
line 308: inorderTraversal
(2) (2) (2) (3) (4) (6) (8) 
line 309: nearestNeighbour (1)
(2) 
line 310: inorderTraversal
(2) (2) (2) (3) (4) (6) (8) 
line 311: insert (9)
line 312: inorderTraversal
(2) (2) (2) (3) (4) (6) (8) (9) 
line 313: kNearestNeighbour 10 (5)
(2) (2) (2) (3) (4) (6) (8) (9) 
line 314: inorderTraversal
(2) (2) (2) (3) (4) (6) (8) (9) 
line 315: kNearestNeighbour 7 (3)
(2) (2) (2) (3) (4) (6) (8) 
line 316: inorderTraversal
(2) (2) (2) (3) (4) (6) (8) (9) 
line 317: clear
line 318: buildTree 9
(7) (7) (9) (6) (6) (1) (9) (4) (9) 
line 319: inorderTraversal
(1) (4) (6) (6) (7) (7) (9) (9) (9) 
line 320: clear
line 321: buildTree 13
(5) (3) (1) (2) (8) (5) (8) (9) (2) (9) (5) (7) (5) 
line 322: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (5) (7) (8) (8) (9) (9) 
line 323: nearestNeighbour (10)
(9) 
line 324: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (5) (7) (8) (8) (9) (9) 
line 325: insert (7)
line 326: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) 
line 327: insert (2)
line 328: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) 
line 329: insert (1)
line 330: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) 
line 331: nearestNeighbour (10)
(9) 
line 332: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) 
line 333: nearestNeighbour (10)
(9) 
line 334: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) 
line 335: insert (9)
line 336: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) 
line 337: kNearestNeighbour 7 (9)
(7) (7) (8) (8) (9) (9) (9) 
line 338: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) 
line 339: nearestNeighbour (3)
(3) 
line 340: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) 
line 341: kNearestNeighbour 8 (6)
(5) (5) (5) (5) (7) (7) (8) (8) 
line 342: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) 
line 343: insert (9)
line 344: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) 
line 345: nearestNeighbour (10)
(9) 
line 346: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) 
line 347: insert (2)
line 348: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) 
line 349: insert (10)
line 350: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 351: kNearestNeighbour 8 (7)
(7) (7) (8) (8) (9) (9) (9) (9) 
line 352: inorderTraversal
(1) (1) (2) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 353: remove (2)
line 354: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 355: insert (5)
line 356: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 357: kNearestNeighbour 10 (1)
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) 
line 358: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 359: insert (9)
line 360: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 361: kNearestNeighbour 8 (1)
(1) (1) (2) (2) (2) (3) (5) (5) 
line 362: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 363: kNearestNeighbour 2 (8)
(8) (8) 
line 364: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 365: remove (10)
line 366: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (9) (9) 
line 367: clear
line 368: buildTree 13
(5) (1) (10) (1) (1) (8) (2) (9) (8) (4) (3) (4) (2) 
line 369: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 370: nearestNeighbour (6)
(5) 
line 371: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (5) (8) (8) (9) (10) 
line 372: clear
line 373: buildTree 17
(1) (5) (6) (5) (9) (10) (3) (10) (1) (3) (4) (10) (7) (3) (7) (6) (3) 
line 374: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (9) (10) (10) (10) 
line 375: insert (5)
line 376: inorderTraversal
(1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (9) (10) (10) (10) 
line 377: clear
line 378: buildTree 5
(7) (1) (1) (7) (7) 
line 379: inorderTraversal
(1) (1) (7) (7) (7) 
line 380: nearestNeighbour (4)
(1) 
line 381: inorderTraversal
(1) (1) (7) (7) (7) 
line 382: nearestNeighbour (8)
(7) 
line 383: inorderTraversal
(1) (1) (7) (7) (7) 
line 384: remove (7)
line 385: inorderTraversal
(1) (1) (7) (7) 
line 386: kNearestNeighbour 5 (5)
(1) (1) (7) (7) 
line 387: inorderTraversal
(1) (1) (7) (7) 
line 388: nearestNeighbour (10)
(7) 
line 389: inorderTraversal
(1) (1) (7) (7) 
line 390: remove (1)
line 391: inorderTraversal
(1) (7) (7) 
line 392: insert (1)
line 393: inorderTraversal
(1) (1) (7) (7) 
line 394: clear
line 395: buildTree 4
(8) (3) (8) (3) 
line 396: inorderTraversal
(3) (3) (8) (8) 
line 397: insert (8)
line 398: inorderTraversal
(3) (3) (8) (8) (8) 
line 399: postorderTraversal
(3) (8) (8) (8) (3) 
line 400: inorderTraversal
(3) (3) (8) (8) (8) 
line 401: insert (1)
line 402: inorderTraversal
(1) (3) (3) (8) (8) (8) 
line 403: insert (8)
line 404: inorderTraversal
(1) (3) (3) (8) (8) (8) (8) 
line 405: clear
line 406: buildTree 10
(5) (5) (4) (3) (4) (1) (6) (6) (8) (6) 
line 407: inorderTraversal
(1) (3) (4) (4) (5) (5) (6) (6) (6) (8) 
line 408: clear
line 409: buildTree 16
(1) (6) (10) (10) (5) (6) (9) (7) (6) (6) (2) (5) (4) (10) (7) (5) 
line 410: inorderTraversal
(1) (2) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (9) (10) (10) (10) 
line 411: insert (6)
line 412: inorderTraversal
(1) (2) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (9) (10) (10) (10) 
line 413: nearestNeighbour (1)
(1) 
line 414: inorderTraversal
(1) (2) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (9) (10) (10) (10) 
line 415: nearestNeighbour (8)
(9) 
line 416: inorderTraversal
(1) (2) (4) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (9) (10) (10) (10) 
line 417: clear
line 418: buildTree 2
(2) (3) 
line 419: inorderTraversal
(2) (3) 
line 420: nearestNeighbour (4)
(3) 
line 421: inorderTraversal
(2) (3) 
line 422: insert (3)
line 423: inorderTraversal
(2) (3) (3) 
line 424: nodeCount_height_leafCount
nodeCount=3;height=3;leafCount=1
line 425: inorderTraversal
(2) (3) (3) 
line 426: preorderTraversal
(2) (3) (3) 
line 427: postorderTraversal
(3) (3) (2) 
line 428: clear
