line 1: k=1
line 2: clear
line 3: buildTree 2
(6) (9) 
line 4: inorderTraversal
(6) (9) 
line 5: kNearestNeighbour 9 (6)
(6) (9) 
line 6: inorderTraversal
(6) (9) 
line 7: kNearestNeighbour 1 (5)
(6) 
line 8: inorderTraversal
(6) (9) 
line 9: clear
line 10: buildTree 12
(5) (9) (10) (9) (4) (5) (8) (5) (3) (1) (10) (8) 
line 11: inorderTraversal
(1) (3) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 12: insert (4)
line 13: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 14: search (10)
TRUE
line 15: inorderTraversal
(1) (3) (4) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 16: insert (2)
line 17: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 18: kNearestNeighbour 2 (4)
(4) (4) 
line 19: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 20: kNearestNeighbour 9 (9)
(5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 21: inorderTraversal
(1) (2) (3) (4) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 22: remove (3)
line 23: inorderTraversal
(1) (2) (4) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 24: search (2)
TRUE
line 25: inorderTraversal
(1) (2) (4) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 26: nearestNeighbour (5)
(5) 
line 27: inorderTraversal
(1) (2) (4) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 28: nearestNeighbour (8)
(8) 
line 29: inorderTraversal
(1) (2) (4) (4) (5) (5) (5) (8) (8) (9) (9) (10) (10) 
line 30: remove (8)
line 31: inorderTraversal
(1) (2) (4) (4) (5) (5) (5) (8) (9) (9) (10) (10) 
line 32: remove (4)
line 33: inorderTraversal
(1) (2) (4) (5) (5) (5) (8) (9) (9) (10) (10) 
line 34: remove (8)
line 35: inorderTraversal
(1) (2) (4) (5) (5) (5) (9) (9) (10) (10) 
line 36: remove (1)
line 37: inorderTraversal
(2) (4) (5) (5) (5) (9) (9) (10) (10) 
line 38: clear
line 39: buildTree 16
(10) (5) (3) (2) (2) (3) (6) (8) (2) (5) (9) (2) (5) (4) (1) (8) 
line 40: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (8) (8) (9) (10) 
line 41: kNearestNeighbour 3 (8)
(8) (8) (9) 
line 42: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (8) (8) (9) (10) 
line 43: insert (2)
line 44: inorderTraversal
(1) (2) (2) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (8) (8) (9) (10) 
line 45: insert (2)
line 46: inorderTraversal
(1) (2) (2) (2) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (8) (8) (9) (10) 
line 47: nearestNeighbour (7)
(8) 
line 48: inorderTraversal
(1) (2) (2) (2) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (8) (8) (9) (10) 
line 49: insert (1)
line 50: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (8) (8) (9) (10) 
line 51: nearestNeighbour (3)
(3) 
line 52: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (8) (8) (9) (10) 
line 53: insert (10)
line 54: inorderTraversal
(1) (1) (2) (2) (2) (2) (2) (2) (3) (3) (4) (5) (5) (5) (6) (8) (8) (9) (10) (10) 
line 55: clear
line 56: buildTree 8
(7) (10) (4) (6) (8) (1) (8) (5) 
line 57: inorderTraversal
(1) (4) (5) (6) (7) (8) (8) (10) 
line 58: insert (4)
line 59: inorderTraversal
(1) (4) (4) (5) (6) (7) (8) (8) (10) 
line 60: insert (9)
line 61: inorderTraversal
(1) (4) (4) (5) (6) (7) (8) (8) (9) (10) 
line 62: insert (6)
line 63: inorderTraversal
(1) (4) (4) (5) (6) (6) (7) (8) (8) (9) (10) 
line 64: insert (9)
line 65: inorderTraversal
(1) (4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 66: nearestNeighbour (8)
(8) 
line 67: inorderTraversal
(1) (4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 68: remove (1)
line 69: inorderTraversal
(4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 70: nearestNeighbour (3)
(4) 
line 71: inorderTraversal
(4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 72: insert (4)
line 73: inorderTraversal
(4) (4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 74: nearestNeighbour (7)
(7) 
line 75: inorderTraversal
(4) (4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 76: nodeCount_height_leafCount
nodeCount=12;height=6;leafCount=3
line 77: inorderTraversal
(4) (4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 78: nearestNeighbour (3)
(4) 
line 79: inorderTraversal
(4) (4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 80: kNearestNeighbour 5 (10)
(8) (8) (9) (9) (10) 
line 81: inorderTraversal
(4) (4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 82: nodeCount_height_leafCount
nodeCount=12;height=6;leafCount=3
line 83: inorderTraversal
(4) (4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 84: clear
line 85: buildTree 2
(4) (10) 
line 86: inorderTraversal
(4) (10) 
line 87: clear
line 88: buildTree 1
(8) 
line 89: inorderTraversal
(8) 
line 90: nearestNeighbour (6)
(8) 
line 91: inorderTraversal
(8) 
line 92: kNearestNeighbour 7 (4)
(8) 
line 93: inorderTraversal
(8) 
line 94: search (8)
TRUE
line 95: inorderTraversal
(8) 
line 96: search (8)
TRUE
line 97: inorderTraversal
(8) 
line 98: insert (3)
line 99: inorderTraversal
(3) (8) 
line 100: kNearestNeighbour 1 (3)
(3) 
line 101: inorderTraversal
(3) (8) 
line 102: insert (4)
line 103: inorderTraversal
(3) (4) (8) 
line 104: kNearestNeighbour 4 (1)
(3) (4) (8) 
line 105: inorderTraversal
(3) (4) (8) 
line 106: nearestNeighbour (5)
(4) 
line 107: inorderTraversal
(3) (4) (8) 
line 108: remove (4)
line 109: inorderTraversal
(3) (8) 
line 110: insert (9)
line 111: inorderTraversal
(3) (8) (9) 
line 112: clear
line 113: buildTree 10
(10) (6) (6) (2) (1) (10) (2) (7) (7) (6) 
line 114: inorderTraversal
(1) (2) (2) (6) (6) (6) (7) (7) (10) (10) 
line 115: insert (1)
line 116: inorderTraversal
(1) (1) (2) (2) (6) (6) (6) (7) (7) (10) (10) 
line 117: nearestNeighbour (8)
(7) 
line 118: inorderTraversal
(1) (1) (2) (2) (6) (6) (6) (7) (7) (10) (10) 
line 119: clear
line 120: buildTree 10
(7) (2) (8) (10) (4) (10) (7) (5) (4) (2) 
line 121: inorderTraversal
(2) (2) (4) (4) (5) (7) (7) (8) (10) (10) 
line 122: remove (7)
line 123: inorderTraversal
(2) (2) (4) (4) (5) (7) (8) (10) (10) 
line 124: insert (3)
line 125: inorderTraversal
(2) (2) (3) (4) (4) (5) (7) (8) (10) (10) 
line 126: nearestNeighbour (2)
(2) 
line 127: inorderTraversal
(2) (2) (3) (4) (4) (5) (7) (8) (10) (10) 
line 128: clear
line 129: buildTree 14
(6) (9) (3) (8) (1) (5) (10) (9) (9) (10) (1) (10) (5) (5) 
line 130: inorderTraversal
(1) (1) (3) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) (10) 
line 131: insert (3)
line 132: inorderTraversal
(1) (1) (3) (3) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) (10) 
line 133: kNearestNeighbour 10 (5)
(1) (1) (3) (3) (5) (5) (5) (6) (8) (9) 
line 134: inorderTraversal
(1) (1) (3) (3) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) (10) 
line 135: insert (2)
line 136: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) (10) 
line 137: clear
line 138: buildTree 16
(8) (2) (5) (4) (6) (3) (8) (10) (5) (4) (3) (5) (8) (10) (10) (2) 
line 139: inorderTraversal
(2) (2) (3) (3) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 140: insert (4)
line 141: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 142: kNearestNeighbour 1 (10)
(10) 
line 143: inorderTraversal
(2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 144: insert (3)
line 145: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 146: remove (10)
line 147: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) 
line 148: search (4)
TRUE
line 149: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) 
line 150: insert (4)
line 151: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) 
line 152: insert (8)
line 153: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (8) (10) (10) 
line 154: kNearestNeighbour 9 (9)
(5) (5) (6) (8) (8) (8) (8) (10) (10) 
line 155: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (8) (10) (10) 
line 156: insert (5)
line 157: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (8) (8) (8) (10) (10) 
line 158: kNearestNeighbour 9 (4)
(3) (3) (3) (4) (4) (4) (4) (5) (5) 
line 159: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (8) (8) (8) (10) (10) 
line 160: kNearestNeighbour 5 (5)
(5) (5) (5) (5) (6) 
line 161: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (8) (8) (8) (8) (10) (10) 
line 162: remove (5)
line 163: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (8) (10) (10) 
line 164: insert (8)
line 165: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (8) (8) (10) (10) 
line 166: insert (10)
line 167: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (8) (8) (10) (10) (10) 
line 168: remove (8)
line 169: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (8) (10) (10) (10) 
line 170: remove (8)
line 171: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 172: remove (4)
line 173: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 174: kNearestNeighbour 10 (7)
(5) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 175: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (8) (8) (8) (10) (10) (10) 
line 176: clear
line 177: buildTree 18
(9) (5) (9) (4) (4) (4) (1) (7) (2) (1) (2) (8) (9) (9) (10) (1) (3) (9) 
line 178: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (8) (9) (9) (9) (9) (9) (10) 
line 179: nodeCount_height_leafCount
nodeCount=18;height=7;leafCount=5
line 180: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (8) (9) (9) (9) (9) (9) (10) 
line 181: kNearestNeighbour 4 (3)
(2) (2) (3) (4) 
line 182: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (8) (9) (9) (9) (9) (9) (10) 
line 183: insert (8)
line 184: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 185: nearestNeighbour (1)
(1) 
line 186: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 187: nearestNeighbour (8)
(8) 
line 188: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 189: insert (6)
line 190: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 191: nearestNeighbour (8)
(8) 
line 192: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 193: insert (6)
line 194: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 195: insert (5)
line 196: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 197: insert (5)
line 198: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 199: clear
line 200: buildTree 12
(4) (8) (9) (2) (1) (3) (5) (10) (8) (9) (10) (6) 
line 201: inorderTraversal
(1) (2) (3) (4) (5) (6) (8) (8) (9) (9) (10) (10) 
line 202: nearestNeighbour (4)
(4) 
line 203: inorderTraversal
(1) (2) (3) (4) (5) (6) (8) (8) (9) (9) (10) (10) 
line 204: nearestNeighbour (2)
(2) 
line 205: inorderTraversal
(1) (2) (3) (4) (5) (6) (8) (8) (9) (9) (10) (10) 
line 206: insert (8)
line 207: inorderTraversal
(1) (2) (3) (4) (5) (6) (8) (8) (8) (9) (9) (10) (10) 
line 208: insert (10)
line 209: inorderTraversal
(1) (2) (3) (4) (5) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 210: remove (3)
line 211: inorderTraversal
(1) (2) (4) (5) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 212: kNearestNeighbour 9 (6)
(4) (5) (6) (8) (8) (8) (9) (9) (10) 
line 213: inorderTraversal
(1) (2) (4) (5) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 214: nearestNeighbour (7)
(8) 
line 215: inorderTraversal
(1) (2) (4) (5) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 216: nearestNeighbour (7)
(8) 
line 217: inorderTraversal
(1) (2) (4) (5) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 218: kNearestNeighbour 9 (4)
(1) (2) (4) (5) (6) (8) (8) (8) (9) 
line 219: inorderTraversal
(1) (2) (4) (5) (6) (8) (8) (8) (9) (9) (10) (10) (10) 
line 220: insert (9)
line 221: inorderTraversal
(1) (2) (4) (5) (6) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 222: remove (10)
line 223: inorderTraversal
(1) (2) (4) (5) (6) (8) (8) (8) (9) (9) (9) (10) (10) 
line 224: insert (8)
line 225: inorderTraversal
(1) (2) (4) (5) (6) (8) (8) (8) (8) (9) (9) (9) (10) (10) 
line 226: clear
line 227: buildTree 4
(1) (8) (7) (5) 
line 228: inorderTraversal
(1) (5) (7) (8) 
line 229: nearestNeighbour (5)
(5) 
line 230: inorderTraversal
(1) (5) (7) (8) 
line 231: insert (10)
line 232: inorderTraversal
(1) (5) (7) (8) (10) 
line 233: remove (7)
line 234: inorderTraversal
(1) (5) (8) (10) 
line 235: insert (8)
line 236: inorderTraversal
(1) (5) (8) (8) (10) 
line 237: insert (9)
line 238: inorderTraversal
(1) (5) (8) (8) (9) (10) 
line 239: insert (9)
line 240: inorderTraversal
(1) (5) (8) (8) (9) (9) (10) 
line 241: insert (5)
line 242: inorderTraversal
(1) (5) (5) (8) (8) (9) (9) (10) 
line 243: kNearestNeighbour 8 (3)
(1) (5) (5) (8) (8) (9) (9) (10) 
line 244: inorderTraversal
(1) (5) (5) (8) (8) (9) (9) (10) 
line 245: clear
line 246: buildTree 14
(2) (9) (8) (3) (1) (10) (8) (7) (10) (6) (2) (8) (5) (5) 
line 247: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (7) (8) (8) (8) (9) (10) (10) 
line 248: insert (9)
line 249: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 250: insert (10)
line 251: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 252: nearestNeighbour (8)
(8) 
line 253: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 254: insert (9)
line 255: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 256: remove (5)
line 257: inorderTraversal
(1) (2) (2) (3) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 258: nearestNeighbour (6)
(6) 
line 259: inorderTraversal
(1) (2) (2) (3) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 260: insert (3)
line 261: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 262: insert (7)
line 263: inorderTraversal
(1) (2) (2) (3) (3) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 264: insert (2)
line 265: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 266: nearestNeighbour (10)
(10) 
line 267: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 268: kNearestNeighbour 10 (2)
(1) (2) (2) (2) (3) (3) (5) (6) (7) (7) 
line 269: inorderTraversal
(1) (2) (2) (2) (3) (3) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 270: clear
line 271: buildTree 8
(1) (9) (8) (2) (3) (4) (8) (3) 
line 272: inorderTraversal
(1) (2) (3) (3) (4) (8) (8) (9) 
line 273: kNearestNeighbour 6 (10)
(3) (3) (4) (8) (8) (9) 
line 274: inorderTraversal
(1) (2) (3) (3) (4) (8) (8) (9) 
line 275: insert (7)
line 276: inorderTraversal
(1) (2) (3) (3) (4) (7) (8) (8) (9) 
line 277: insert (8)
line 278: inorderTraversal
(1) (2) (3) (3) (4) (7) (8) (8) (8) (9) 
line 279: nearestNeighbour (7)
(7) 
line 280: inorderTraversal
(1) (2) (3) (3) (4) (7) (8) (8) (8) (9) 
line 281: kNearestNeighbour 1 (4)
(4) 
line 282: inorderTraversal
(1) (2) (3) (3) (4) (7) (8) (8) (8) (9) 
line 283: remove (5)
line 284: inorderTraversal
(1) (2) (3) (3) (4) (7) (8) (8) (8) (9) 
line 285: kNearestNeighbour 9 (6)
(2) (3) (3) (4) (7) (8) (8) (8) (9) 
line 286: inorderTraversal
(1) (2) (3) (3) (4) (7) (8) (8) (8) (9) 
line 287: insert (5)
line 288: inorderTraversal
(1) (2) (3) (3) (4) (5) (7) (8) (8) (8) (9) 
line 289: clear
line 290: buildTree 15
(10) (6) (8) (8) (4) (4) (6) (6) (7) (9) (5) (2) (10) (5) (5) 
line 291: inorderTraversal
(2) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 292: insert (8)
line 293: inorderTraversal
(2) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 294: nearestNeighbour (8)
(8) 
line 295: inorderTraversal
(2) (4) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) 
line 296: clear
line 297: buildTree 7
(5) (4) (2) (1) (9) (9) (2) 
line 298: inorderTraversal
(1) (2) (2) (4) (5) (9) (9) 
line 299: insert (7)
line 300: inorderTraversal
(1) (2) (2) (4) (5) (7) (9) (9) 
line 301: kNearestNeighbour 6 (3)
(1) (2) (2) (4) (5) (7) 
line 302: inorderTraversal
(1) (2) (2) (4) (5) (7) (9) (9) 
line 303: preorderTraversal
(4) (2) (1) (2) (9) (5) (7) (9) 
line 304: inorderTraversal
(1) (2) (2) (4) (5) (7) (9) (9) 
line 305: kNearestNeighbour 5 (5)
(2) (2) (4) (5) (7) 
line 306: inorderTraversal
(1) (2) (2) (4) (5) (7) (9) (9) 
line 307: search (2)
TRUE
line 308: inorderTraversal
(1) (2) (2) (4) (5) (7) (9) (9) 
line 309: kNearestNeighbour 2 (9)
(9) (9) 
line 310: inorderTraversal
(1) (2) (2) (4) (5) (7) (9) (9) 
line 311: nearestNeighbour (8)
(7) 
line 312: inorderTraversal
(1) (2) (2) (4) (5) (7) (9) (9) 
line 313: nearestNeighbour (3)
(2) 
line 314: inorderTraversal
(1) (2) (2) (4) (5) (7) (9) (9) 
line 315: insert (6)
line 316: inorderTraversal
(1) (2) (2) (4) (5) (6) (7) (9) (9) 
line 317: insert (9)
line 318: inorderTraversal
(1) (2) (2) (4) (5) (6) (7) (9) (9) (9) 
line 319: insert (9)
line 320: inorderTraversal
(1) (2) (2) (4) (5) (6) (7) (9) (9) (9) (9) 
line 321: remove (4)
line 322: inorderTraversal
(1) (2) (2) (5) (6) (7) (9) (9) (9) (9) 
line 323: insert (10)
line 324: inorderTraversal
(1) (2) (2) (5) (6) (7) (9) (9) (9) (9) (10) 
line 325: kNearestNeighbour 6 (6)
(5) (6) (7) (9) (9) (9) 
line 326: inorderTraversal
(1) (2) (2) (5) (6) (7) (9) (9) (9) (9) (10) 
line 327: nearestNeighbour (10)
(10) 
line 328: inorderTraversal
(1) (2) (2) (5) (6) (7) (9) (9) (9) (9) (10) 
line 329: kNearestNeighbour 6 (9)
(7) (9) (9) (9) (9) (10) 
line 330: inorderTraversal
(1) (2) (2) (5) (6) (7) (9) (9) (9) (9) (10) 
line 331: insert (5)
line 332: inorderTraversal
(1) (2) (2) (5) (5) (6) (7) (9) (9) (9) (9) (10) 
line 333: insert (6)
line 334: inorderTraversal
(1) (2) (2) (5) (5) (6) (6) (7) (9) (9) (9) (9) (10) 
line 335: kNearestNeighbour 2 (6)
(6) (6) 
line 336: inorderTraversal
(1) (2) (2) (5) (5) (6) (6) (7) (9) (9) (9) (9) (10) 
line 337: insert (1)
line 338: inorderTraversal
(1) (1) (2) (2) (5) (5) (6) (6) (7) (9) (9) (9) (9) (10) 
line 339: insert (2)
line 340: inorderTraversal
(1) (1) (2) (2) (2) (5) (5) (6) (6) (7) (9) (9) (9) (9) (10) 
line 341: insert (9)
line 342: inorderTraversal
(1) (1) (2) (2) (2) (5) (5) (6) (6) (7) (9) (9) (9) (9) (9) (10) 
line 343: insert (8)
line 344: inorderTraversal
(1) (1) (2) (2) (2) (5) (5) (6) (6) (7) (8) (9) (9) (9) (9) (9) (10) 
line 345: clear
line 346: buildTree 18
(4) (10) (5) (4) (1) (1) (8) (8) (8) (4) (3) (7) (9) (6) (4) (3) (5) (3) 
line 347: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (8) (8) (8) (9) (10) 
line 348: remove (5)
line 349: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) 
line 350: kNearestNeighbour 2 (9)
(9) (10) 
line 351: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) 
line 352: remove (3)
line 353: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) 
line 354: nearestNeighbour (10)
(10) 
line 355: inorderTraversal
(1) (1) (3) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) 
line 356: insert (3)
line 357: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (4) (4) (5) (6) (7) (8) (8) (8) (9) (10) 
line 358: clear
line 359: buildTree 16
(2) (6) (6) (8) (1) (5) (3) (8) (2) (7) (4) (9) (4) (3) (1) (6) 
line 360: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 361: nearestNeighbour (8)
(8) 
line 362: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 363: kNearestNeighbour 4 (4)
(3) (4) (4) (5) 
line 364: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 365: kNearestNeighbour 4 (3)
(2) (2) (3) (3) 
line 366: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 367: nearestNeighbour (1)
(1) 
line 368: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 369: remove (4)
line 370: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 371: kNearestNeighbour 1 (5)
(5) 
line 372: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 373: kNearestNeighbour 2 (9)
(8) (9) 
line 374: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 375: nearestNeighbour (5)
(5) 
line 376: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 377: kNearestNeighbour 8 (9)
(5) (6) (6) (6) (7) (8) (8) (9) 
line 378: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 379: preorderTraversal
(4) (2) (1) (1) (3) (2) (3) (6) (5) (7) (6) (6) (8) (8) (9) 
line 380: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (8) (8) (9) 
line 381: insert (6)
line 382: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (6) (7) (8) (8) (9) 
line 383: remove (8)
line 384: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (6) (7) (8) (9) 
line 385: search (4)
TRUE
line 386: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (6) (7) (8) (9) 
line 387: kNearestNeighbour 3 (10)
(7) (8) (9) 
line 388: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (6) (7) (8) (9) 
line 389: insert (6)
line 390: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (5) (6) (6) (6) (6) (6) (7) (8) (9) 
line 391: insert (4)
line 392: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (8) (9) 
line 393: nearestNeighbour (6)
(6) 
line 394: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (8) (9) 
line 395: insert (3)
line 396: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (8) (9) 
line 397: insert (7)
line 398: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) 
line 399: insert (4)
line 400: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) 
line 401: remove (5)
line 402: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (6) (6) (6) (6) (6) (7) (7) (8) (9) 
line 403: insert (5)
line 404: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) 
line 405: nearestNeighbour (9)
(9) 
line 406: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) 
line 407: insert (9)
line 408: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 409: kNearestNeighbour 6 (8)
(6) (7) (7) (8) (9) (9) 
line 410: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 411: insert (5)
line 412: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 413: insert (6)
line 414: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 415: insert (5)
line 416: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 417: kNearestNeighbour 5 (7)
(6) (6) (7) (7) (8) 
line 418: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 419: kNearestNeighbour 5 (5)
(4) (4) (5) (5) (5) 
line 420: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 421: nodeCount_height_leafCount
nodeCount=24;height=8;leafCount=7
line 422: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (6) (7) (7) (8) (9) (9) 
line 423: preorderTraversal
(4) (2) (1) (1) (3) (2) (3) (3) (6) (4) (4) (5) (5) (5) (7) (6) (6) (6) (6) (6) (8) (7) (9) (9) 
line 424: postorderTraversal
(1) (1) (2) (3) (3) (3) (2) (5) (5) (5) (4) (4) (6) (6) (6) (6) (6) (7) (9) (9) (8) (7) (6) (4) 
line 425: clear
