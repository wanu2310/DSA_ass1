line 1: k=1
line 2: nearestNeighbour (4)

line 3: inorderTraversal

line 4: nearestNeighbour (5)

line 5: inorderTraversal

line 6: clear
line 7: buildTree 7
(7) (1) (1) (1) (9) (1) (6) 
line 8: inorderTraversal
(1) (1) (1) (1) (6) (7) (9) 
line 9: remove (6)
line 10: inorderTraversal
(1) (1) (1) (1) (7) (9) 
line 11: kNearestNeighbour 4 (4)
(1) (1) (1) (7) 
line 12: inorderTraversal
(1) (1) (1) (1) (7) (9) 
line 13: remove (5)
line 14: inorderTraversal
(1) (1) (1) (1) (7) (9) 
line 15: insert (5)
line 16: inorderTraversal
(1) (1) (1) (1) (5) (7) (9) 
line 17: nearestNeighbour (4)
(5) 
line 18: inorderTraversal
(1) (1) (1) (1) (5) (7) (9) 
line 19: insert (10)
line 20: inorderTraversal
(1) (1) (1) (1) (5) (7) (9) (10) 
line 21: insert (3)
line 22: inorderTraversal
(1) (1) (1) (1) (3) (5) (7) (9) (10) 
line 23: insert (7)
line 24: inorderTraversal
(1) (1) (1) (1) (3) (5) (7) (7) (9) (10) 
line 25: remove (1)
line 26: inorderTraversal
(1) (1) (1) (3) (5) (7) (7) (9) (10) 
line 27: search (3)
TRUE
line 28: inorderTraversal
(1) (1) (1) (3) (5) (7) (7) (9) (10) 
line 29: nearestNeighbour (3)
(3) 
line 30: inorderTraversal
(1) (1) (1) (3) (5) (7) (7) (9) (10) 
line 31: preorderTraversal
(1) (1) (7) (1) (3) (5) (9) (7) (10) 
line 32: inorderTraversal
(1) (1) (1) (3) (5) (7) (7) (9) (10) 
line 33: kNearestNeighbour 9 (1)
(1) (1) (1) (3) (5) (7) (7) (9) (10) 
line 34: inorderTraversal
(1) (1) (1) (3) (5) (7) (7) (9) (10) 
line 35: postorderTraversal
(5) (3) (1) (7) (10) (9) (7) (1) (1) 
line 36: inorderTraversal
(1) (1) (1) (3) (5) (7) (7) (9) (10) 
line 37: kNearestNeighbour 8 (7)
(1) (1) (3) (5) (7) (7) (9) (10) 
line 38: inorderTraversal
(1) (1) (1) (3) (5) (7) (7) (9) (10) 
line 39: insert (4)
line 40: inorderTraversal
(1) (1) (1) (3) (4) (5) (7) (7) (9) (10) 
line 41: insert (1)
line 42: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (7) (7) (9) (10) 
line 43: kNearestNeighbour 4 (9)
(7) (7) (9) (10) 
line 44: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (7) (7) (9) (10) 
line 45: insert (7)
line 46: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (7) (7) (7) (9) (10) 
line 47: insert (7)
line 48: inorderTraversal
(1) (1) (1) (1) (3) (4) (5) (7) (7) (7) (7) (9) (10) 
line 49: insert (2)
line 50: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (7) (7) (7) (7) (9) (10) 
line 51: insert (6)
line 52: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 53: kNearestNeighbour 7 (6)
(4) (5) (6) (7) (7) (7) (7) 
line 54: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 55: insert (10)
line 56: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (6) (7) (7) (7) (7) (9) (10) (10) 
line 57: nearestNeighbour (10)
(10) 
line 58: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (6) (7) (7) (7) (7) (9) (10) (10) 
line 59: kNearestNeighbour 10 (2)
(1) (1) (1) (1) (2) (3) (4) (5) (6) (7) 
line 60: inorderTraversal
(1) (1) (1) (1) (2) (3) (4) (5) (6) (7) (7) (7) (7) (9) (10) (10) 
line 61: insert (3)
line 62: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (9) (10) (10) 
line 63: nearestNeighbour (5)
(5) 
line 64: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (9) (10) (10) 
line 65: insert (9)
line 66: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) 
line 67: insert (4)
line 68: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) 
line 69: clear
line 70: buildTree 9
(7) (10) (6) (5) (5) (1) (2) (10) (4) 
line 71: inorderTraversal
(1) (2) (4) (5) (5) (6) (7) (10) (10) 
line 72: kNearestNeighbour 2 (4)
(4) (5) 
line 73: inorderTraversal
(1) (2) (4) (5) (5) (6) (7) (10) (10) 
line 74: nearestNeighbour (6)
(6) 
line 75: inorderTraversal
(1) (2) (4) (5) (5) (6) (7) (10) (10) 
line 76: nearestNeighbour (5)
(5) 
line 77: inorderTraversal
(1) (2) (4) (5) (5) (6) (7) (10) (10) 
line 78: clear
line 79: buildTree 16
(8) (8) (9) (5) (5) (2) (5) (3) (5) (3) (6) (4) (2) (8) (10) (1) 
line 80: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (8) (9) (10) 
line 81: remove (2)
line 82: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (8) (9) (10) 
line 83: kNearestNeighbour 6 (6)
(5) (5) (5) (5) (6) (8) 
line 84: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (5) (6) (8) (8) (8) (9) (10) 
line 85: insert (7)
line 86: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (5) (6) (7) (8) (8) (8) (9) (10) 
line 87: insert (7)
line 88: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) (10) 
line 89: insert (10)
line 90: inorderTraversal
(1) (2) (3) (3) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) (10) (10) 
line 91: clear
line 92: buildTree 10
(9) (4) (8) (9) (9) (1) (6) (1) (1) (8) 
line 93: inorderTraversal
(1) (1) (1) (4) (6) (8) (8) (9) (9) (9) 
line 94: insert (6)
line 95: inorderTraversal
(1) (1) (1) (4) (6) (6) (8) (8) (9) (9) (9) 
line 96: kNearestNeighbour 6 (8)
(6) (8) (8) (9) (9) (9) 
line 97: inorderTraversal
(1) (1) (1) (4) (6) (6) (8) (8) (9) (9) (9) 
line 98: postorderTraversal
(4) (1) (1) (1) (6) (8) (8) (9) (9) (9) (6) 
line 99: inorderTraversal
(1) (1) (1) (4) (6) (6) (8) (8) (9) (9) (9) 
line 100: nearestNeighbour (2)
(1) 
line 101: inorderTraversal
(1) (1) (1) (4) (6) (6) (8) (8) (9) (9) (9) 
line 102: kNearestNeighbour 9 (7)
(1) (4) (6) (6) (8) (8) (9) (9) (9) 
line 103: inorderTraversal
(1) (1) (1) (4) (6) (6) (8) (8) (9) (9) (9) 
line 104: remove (1)
line 105: inorderTraversal
(1) (1) (4) (6) (6) (8) (8) (9) (9) (9) 
line 106: clear
line 107: buildTree 17
(2) (3) (5) (4) (6) (6) (3) (4) (3) (6) (1) (7) (2) (3) (4) (6) (3) 
line 108: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) 
line 109: kNearestNeighbour 8 (4)
(3) (3) (3) (3) (4) (4) (4) (5) 
line 110: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) 
line 111: kNearestNeighbour 9 (2)
(1) (2) (2) (3) (3) (3) (3) (3) (4) 
line 112: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) 
line 113: insert (1)
line 114: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (6) (7) 
line 115: insert (4)
line 116: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (3) (4) (4) (4) (4) (5) (6) (6) (6) (6) (7) 
line 117: clear
line 118: buildTree 20
(4) (6) (6) (6) (7) (6) (2) (3) (2) (6) (5) (6) (10) (3) (5) (4) (10) (10) (1) (3) 
line 119: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (6) (6) (7) (10) (10) (10) 
line 120: remove (3)
line 121: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (6) (6) (7) (10) (10) (10) 
line 122: kNearestNeighbour 1 (8)
(7) 
line 123: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (6) (6) (6) (6) (6) (6) (7) (10) (10) (10) 
line 124: clear
line 125: buildTree 11
(3) (4) (6) (5) (9) (2) (9) (6) (5) (9) (7) 
line 126: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (7) (9) (9) (9) 
line 127: nearestNeighbour (1)
(2) 
line 128: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (7) (9) (9) (9) 
line 129: search (9)
TRUE
line 130: inorderTraversal
(2) (3) (4) (5) (5) (6) (6) (7) (9) (9) (9) 
line 131: insert (4)
line 132: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (6) (7) (9) (9) (9) 
line 133: search (4)
TRUE
line 134: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (6) (7) (9) (9) (9) 
line 135: remove (9)
line 136: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (6) (7) (9) (9) 
line 137: remove (6)
line 138: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (7) (9) (9) 
line 139: nearestNeighbour (4)
(4) 
line 140: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (7) (9) (9) 
line 141: nearestNeighbour (9)
(9) 
line 142: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (7) (9) (9) 
line 143: kNearestNeighbour 10 (8)
(2) (3) (4) (4) (5) (5) (6) (7) (9) (9) 
line 144: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (7) (9) (9) 
line 145: clear
line 146: buildTree 18
(2) (5) (10) (8) (10) (5) (10) (4) (9) (7) (3) (8) (6) (1) (10) (1) (10) (2) 
line 147: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (8) (8) (9) (10) (10) (10) (10) (10) 
line 148: insert (10)
line 149: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (8) (8) (9) (10) (10) (10) (10) (10) (10) 
line 150: kNearestNeighbour 2 (3)
(2) (3) 
line 151: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (8) (8) (9) (10) (10) (10) (10) (10) (10) 
line 152: kNearestNeighbour 5 (1)
(1) (1) (2) (2) (3) 
line 153: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (6) (7) (8) (8) (9) (10) (10) (10) (10) (10) (10) 
line 154: clear
line 155: buildTree 16
(6) (10) (8) (10) (7) (6) (8) (6) (5) (6) (2) (5) (10) (6) (3) (8) 
line 156: inorderTraversal
(2) (3) (5) (5) (6) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 157: insert (6)
line 158: inorderTraversal
(2) (3) (5) (5) (6) (6) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 159: insert (6)
line 160: inorderTraversal
(2) (3) (5) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 161: nearestNeighbour (9)
(8) 
line 162: inorderTraversal
(2) (3) (5) (5) (6) (6) (6) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 163: clear
line 164: buildTree 15
(1) (6) (5) (2) (3) (6) (5) (6) (6) (5) (1) (2) (9) (7) (3) 
line 165: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (6) (7) (9) 
line 166: nearestNeighbour (3)
(3) 
line 167: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (6) (7) (9) 
line 168: nearestNeighbour (1)
(1) 
line 169: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (5) (6) (6) (6) (6) (7) (9) 
line 170: insert (5)
line 171: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (5) (5) (6) (6) (6) (6) (7) (9) 
line 172: insert (7)
line 173: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (9) 
line 174: insert (3)
line 175: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (9) 
line 176: insert (3)
line 177: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (3) (5) (5) (5) (5) (6) (6) (6) (6) (7) (7) (9) 
line 178: clear
line 179: buildTree 1
(2) 
line 180: inorderTraversal
(2) 
line 181: insert (7)
line 182: inorderTraversal
(2) (7) 
line 183: insert (1)
line 184: inorderTraversal
(1) (2) (7) 
line 185: nearestNeighbour (5)
(7) 
line 186: inorderTraversal
(1) (2) (7) 
line 187: remove (1)
line 188: inorderTraversal
(2) (7) 
line 189: clear
line 190: buildTree 9
(9) (8) (3) (10) (7) (9) (4) (8) (3) 
line 191: inorderTraversal
(3) (3) (4) (7) (8) (8) (9) (9) (10) 
line 192: nearestNeighbour (8)
(8) 
line 193: inorderTraversal
(3) (3) (4) (7) (8) (8) (9) (9) (10) 
line 194: kNearestNeighbour 7 (8)
(4) (7) (8) (8) (9) (9) (10) 
line 195: inorderTraversal
(3) (3) (4) (7) (8) (8) (9) (9) (10) 
line 196: insert (7)
line 197: inorderTraversal
(3) (3) (4) (7) (7) (8) (8) (9) (9) (10) 
line 198: remove (9)
line 199: inorderTraversal
(3) (3) (4) (7) (7) (8) (8) (9) (10) 
line 200: remove (3)
line 201: inorderTraversal
(3) (4) (7) (7) (8) (8) (9) (10) 
line 202: kNearestNeighbour 10 (8)
(3) (4) (7) (7) (8) (8) (9) (10) 
line 203: inorderTraversal
(3) (4) (7) (7) (8) (8) (9) (10) 
line 204: kNearestNeighbour 4 (4)
(3) (4) (7) (7) 
line 205: inorderTraversal
(3) (4) (7) (7) (8) (8) (9) (10) 
line 206: insert (4)
line 207: inorderTraversal
(3) (4) (4) (7) (7) (8) (8) (9) (10) 
line 208: remove (5)
line 209: inorderTraversal
(3) (4) (4) (7) (7) (8) (8) (9) (10) 
line 210: kNearestNeighbour 4 (4)
(3) (4) (4) (7) 
line 211: inorderTraversal
(3) (4) (4) (7) (7) (8) (8) (9) (10) 
line 212: clear
line 213: buildTree 20
(3) (4) (1) (3) (10) (6) (4) (9) (8) (2) (7) (1) (6) (3) (8) (10) (6) (10) (4) (9) 
line 214: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 215: nearestNeighbour (2)
(2) 
line 216: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 217: search (5)
FALSE
line 218: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 219: kNearestNeighbour 9 (7)
(6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 220: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 221: kNearestNeighbour 1 (1)
(1) 
line 222: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 223: kNearestNeighbour 7 (1)
(1) (1) (2) (3) (3) (3) (4) 
line 224: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 225: insert (5)
line 226: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (4) (4) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 227: clear
line 228: buildTree 2
(1) (3) 
line 229: inorderTraversal
(1) (3) 
line 230: kNearestNeighbour 7 (9)
(1) (3) 
line 231: inorderTraversal
(1) (3) 
line 232: insert (7)
line 233: inorderTraversal
(1) (3) (7) 
line 234: insert (1)
line 235: inorderTraversal
(1) (1) (3) (7) 
line 236: nearestNeighbour (3)
(3) 
line 237: inorderTraversal
(1) (1) (3) (7) 
line 238: kNearestNeighbour 4 (9)
(1) (1) (3) (7) 
line 239: inorderTraversal
(1) (1) (3) (7) 
line 240: insert (2)
line 241: inorderTraversal
(1) (1) (2) (3) (7) 
line 242: kNearestNeighbour 2 (8)
(3) (7) 
line 243: inorderTraversal
(1) (1) (2) (3) (7) 
line 244: kNearestNeighbour 5 (10)
(1) (1) (2) (3) (7) 
line 245: inorderTraversal
(1) (1) (2) (3) (7) 
line 246: kNearestNeighbour 9 (10)
(1) (1) (2) (3) (7) 
line 247: inorderTraversal
(1) (1) (2) (3) (7) 
line 248: insert (2)
line 249: inorderTraversal
(1) (1) (2) (2) (3) (7) 
line 250: clear
line 251: buildTree 5
(1) (4) (4) (6) (3) 
line 252: inorderTraversal
(1) (3) (4) (4) (6) 
line 253: insert (6)
line 254: inorderTraversal
(1) (3) (4) (4) (6) (6) 
line 255: clear
line 256: buildTree 18
(7) (3) (4) (4) (6) (7) (1) (5) (8) (1) (8) (10) (8) (2) (2) (3) (5) (4) 
line 257: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 258: nearestNeighbour (4)
(4) 
line 259: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 260: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=7
line 261: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (10) 
line 262: insert (6)
line 263: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (10) 
line 264: insert (6)
line 265: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (8) (8) (8) (10) 
line 266: insert (7)
line 267: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) 
line 268: search (5)
TRUE
line 269: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) 
line 270: remove (1)
line 271: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) 
line 272: kNearestNeighbour 10 (5)
(4) (4) (4) (5) (5) (6) (6) (6) (7) (7) 
line 273: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) 
line 274: nearestNeighbour (10)
(10) 
line 275: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) 
line 276: nearestNeighbour (4)
(4) 
line 277: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) 
line 278: insert (10)
line 279: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 280: nearestNeighbour (4)
(4) 
line 281: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (8) (10) (10) 
line 282: clear
line 283: buildTree 7
(5) (3) (3) (10) (2) (6) (4) 
line 284: inorderTraversal
(2) (3) (3) (4) (5) (6) (10) 
line 285: remove (5)
line 286: inorderTraversal
(2) (3) (3) (4) (6) (10) 
line 287: kNearestNeighbour 6 (9)
(2) (3) (3) (4) (6) (10) 
line 288: inorderTraversal
(2) (3) (3) (4) (6) (10) 
line 289: kNearestNeighbour 4 (8)
(3) (4) (6) (10) 
line 290: inorderTraversal
(2) (3) (3) (4) (6) (10) 
line 291: insert (1)
line 292: inorderTraversal
(1) (2) (3) (3) (4) (6) (10) 
line 293: search (2)
TRUE
line 294: inorderTraversal
(1) (2) (3) (3) (4) (6) (10) 
line 295: insert (4)
line 296: inorderTraversal
(1) (2) (3) (3) (4) (4) (6) (10) 
line 297: insert (10)
line 298: inorderTraversal
(1) (2) (3) (3) (4) (4) (6) (10) (10) 
line 299: clear
line 300: buildTree 6
(2) (1) (5) (10) (3) (7) 
line 301: inorderTraversal
(1) (2) (3) (5) (7) (10) 
line 302: remove (10)
line 303: inorderTraversal
(1) (2) (3) (5) (7) 
line 304: insert (7)
line 305: inorderTraversal
(1) (2) (3) (5) (7) (7) 
line 306: kNearestNeighbour 8 (5)
(1) (2) (3) (5) (7) (7) 
line 307: inorderTraversal
(1) (2) (3) (5) (7) (7) 
line 308: insert (6)
line 309: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) 
line 310: insert (7)
line 311: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) (7) 
line 312: clear
line 313: buildTree 15
(4) (7) (7) (7) (8) (9) (8) (8) (8) (9) (6) (10) (9) (5) (6) 
line 314: inorderTraversal
(4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 315: insert (3)
line 316: inorderTraversal
(3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) 
line 317: clear
line 318: buildTree 2
(2) (7) 
line 319: inorderTraversal
(2) (7) 
line 320: insert (8)
line 321: inorderTraversal
(2) (7) (8) 
line 322: kNearestNeighbour 4 (4)
(2) (7) (8) 
line 323: inorderTraversal
(2) (7) (8) 
line 324: postorderTraversal
(8) (7) (2) 
line 325: inorderTraversal
(2) (7) (8) 
line 326: insert (2)
line 327: inorderTraversal
(2) (2) (7) (8) 
line 328: insert (1)
line 329: inorderTraversal
(1) (2) (2) (7) (8) 
line 330: remove (1)
line 331: inorderTraversal
(2) (2) (7) (8) 
line 332: insert (4)
line 333: inorderTraversal
(2) (2) (4) (7) (8) 
line 334: nearestNeighbour (9)
(8) 
line 335: inorderTraversal
(2) (2) (4) (7) (8) 
line 336: kNearestNeighbour 6 (9)
(2) (2) (4) (7) (8) 
line 337: inorderTraversal
(2) (2) (4) (7) (8) 
line 338: kNearestNeighbour 10 (7)
(2) (2) (4) (7) (8) 
line 339: inorderTraversal
(2) (2) (4) (7) (8) 
line 340: clear
line 341: buildTree 10
(1) (6) (3) (1) (5) (2) (9) (3) (1) (3) 
line 342: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (5) (6) (9) 
line 343: nearestNeighbour (8)
(9) 
line 344: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (5) (6) (9) 
line 345: remove (7)
line 346: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (5) (6) (9) 
line 347: insert (4)
line 348: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (5) (6) (9) 
line 349: clear
line 350: buildTree 15
(7) (9) (8) (6) (7) (7) (4) (4) (6) (4) (8) (8) (9) (7) (9) 
line 351: inorderTraversal
(4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 352: insert (3)
line 353: inorderTraversal
(3) (4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 354: insert (3)
line 355: inorderTraversal
(3) (3) (4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 356: kNearestNeighbour 6 (1)
(3) (3) (4) (4) (4) (6) 
line 357: inorderTraversal
(3) (3) (4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 358: nearestNeighbour (7)
(7) 
line 359: inorderTraversal
(3) (3) (4) (4) (4) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 360: insert (6)
line 361: inorderTraversal
(3) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 362: kNearestNeighbour 8 (4)
(3) (3) (4) (4) (4) (6) (6) (6) 
line 363: inorderTraversal
(3) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 364: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=6
line 365: inorderTraversal
(3) (3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 366: remove (3)
line 367: inorderTraversal
(3) (4) (4) (4) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 368: insert (5)
line 369: inorderTraversal
(3) (4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 370: postorderTraversal
(3) (5) (4) (6) (6) (6) (4) (4) (7) (7) (7) (8) (8) (9) (9) (9) (8) (7) 
line 371: inorderTraversal
(3) (4) (4) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) 
line 372: clear
line 373: buildTree 17
(3) (9) (6) (7) (9) (5) (1) (1) (9) (6) (8) (10) (9) (8) (5) (8) (6) 
line 374: inorderTraversal
(1) (1) (3) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 375: nearestNeighbour (10)
(10) 
line 376: inorderTraversal
(1) (1) (3) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 377: insert (3)
line 378: inorderTraversal
(1) (1) (3) (3) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 379: insert (2)
line 380: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) (9) (9) (10) 
line 381: insert (8)
line 382: inorderTraversal
(1) (1) (2) (3) (3) (5) (5) (6) (6) (6) (7) (8) (8) (8) (8) (9) (9) (9) (9) (10) 
line 383: clear
line 384: buildTree 1
(5) 
line 385: inorderTraversal
(5) 
line 386: kNearestNeighbour 2 (4)
(5) 
line 387: inorderTraversal
(5) 
line 388: insert (9)
line 389: inorderTraversal
(5) (9) 
line 390: insert (1)
line 391: inorderTraversal
(1) (5) (9) 
line 392: remove (9)
line 393: inorderTraversal
(1) (5) 
line 394: remove (9)
line 395: inorderTraversal
(1) (5) 
line 396: postorderTraversal
(1) (5) 
line 397: inorderTraversal
(1) (5) 
line 398: search (5)
TRUE
line 399: inorderTraversal
(1) (5) 
line 400: insert (3)
line 401: inorderTraversal
(1) (3) (5) 
line 402: kNearestNeighbour 6 (9)
(1) (3) (5) 
line 403: inorderTraversal
(1) (3) (5) 
line 404: insert (9)
line 405: inorderTraversal
(1) (3) (5) (9) 
line 406: kNearestNeighbour 6 (2)
(1) (3) (5) (9) 
line 407: inorderTraversal
(1) (3) (5) (9) 
line 408: preorderTraversal
(5) (1) (3) (9) 
line 409: inorderTraversal
(1) (3) (5) (9) 
line 410: insert (7)
line 411: inorderTraversal
(1) (3) (5) (7) (9) 
line 412: clear
line 413: buildTree 15
(8) (1) (3) (3) (1) (6) (6) (4) (3) (4) (9) (5) (8) (10) (5) 
line 414: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (8) (8) (9) (10) 
line 415: insert (7)
line 416: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) 
line 417: kNearestNeighbour 6 (3)
(1) (3) (3) (3) (4) (4) 
line 418: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) 
line 419: insert (9)
line 420: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (7) (8) (8) (9) (9) (10) 
line 421: insert (6)
line 422: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 423: kNearestNeighbour 6 (5)
(4) (5) (5) (6) (6) (6) 
line 424: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 425: search (5)
TRUE
line 426: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 427: nodeCount_height_leafCount
nodeCount=18;height=6;leafCount=7
line 428: inorderTraversal
(1) (1) (3) (3) (3) (4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) 
line 429: preorderTraversal
(5) (3) (1) (1) (3) (4) (3) (4) (8) (6) (5) (6) (7) (6) (9) (8) (10) (9) 
line 430: postorderTraversal
(1) (1) (3) (4) (4) (3) (3) (5) (6) (7) (6) (6) (8) (9) (10) (9) (8) (5) 
line 431: clear
