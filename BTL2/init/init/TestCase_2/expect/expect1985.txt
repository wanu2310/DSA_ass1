line 1: k=1
line 2: kNearestNeighbour 8 (8)

line 3: inorderTraversal

line 4: insert (4)
line 5: inorderTraversal
(4) 
line 6: clear
line 7: buildTree 7
(7) (8) (3) (6) (2) (2) (2) 
line 8: inorderTraversal
(2) (2) (2) (3) (6) (7) (8) 
line 9: nearestNeighbour (7)
(7) 
line 10: inorderTraversal
(2) (2) (2) (3) (6) (7) (8) 
line 11: remove (3)
line 12: inorderTraversal
(2) (2) (2) (6) (7) (8) 
line 13: insert (3)
line 14: inorderTraversal
(2) (2) (2) (3) (6) (7) (8) 
line 15: clear
line 16: buildTree 18
(8) (10) (8) (9) (10) (10) (5) (2) (4) (5) (9) (3) (5) (1) (7) (8) (9) (8) 
line 17: inorderTraversal
(1) (2) (3) (4) (5) (5) (5) (7) (8) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 18: clear
line 19: buildTree 19
(6) (2) (7) (3) (10) (8) (9) (7) (1) (5) (6) (1) (8) (8) (6) (8) (7) (6) (6) 
line 20: inorderTraversal
(1) (1) (2) (3) (5) (6) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 21: remove (1)
line 22: inorderTraversal
(1) (2) (3) (5) (6) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) 
line 23: insert (10)
line 24: inorderTraversal
(1) (2) (3) (5) (6) (6) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 25: clear
line 26: buildTree 11
(4) (9) (4) (8) (1) (4) (8) (6) (9) (3) (2) 
line 27: inorderTraversal
(1) (2) (3) (4) (4) (4) (6) (8) (8) (9) (9) 
line 28: kNearestNeighbour 3 (3)
(2) (3) (4) 
line 29: inorderTraversal
(1) (2) (3) (4) (4) (4) (6) (8) (8) (9) (9) 
line 30: insert (8)
line 31: inorderTraversal
(1) (2) (3) (4) (4) (4) (6) (8) (8) (8) (9) (9) 
line 32: nearestNeighbour (6)
(6) 
line 33: inorderTraversal
(1) (2) (3) (4) (4) (4) (6) (8) (8) (8) (9) (9) 
line 34: nodeCount_height_leafCount
nodeCount=12;height=5;leafCount=5
line 35: inorderTraversal
(1) (2) (3) (4) (4) (4) (6) (8) (8) (8) (9) (9) 
line 36: nearestNeighbour (7)
(6) 
line 37: inorderTraversal
(1) (2) (3) (4) (4) (4) (6) (8) (8) (8) (9) (9) 
line 38: insert (3)
line 39: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (8) (8) (8) (9) (9) 
line 40: remove (8)
line 41: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (8) (8) (9) (9) 
line 42: postorderTraversal
(1) (3) (3) (2) (6) (4) (4) (8) (9) (9) (8) (4) 
line 43: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (8) (8) (9) (9) 
line 44: nearestNeighbour (1)
(1) 
line 45: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (8) (8) (9) (9) 
line 46: kNearestNeighbour 6 (6)
(4) (4) (4) (6) (8) (8) 
line 47: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (8) (8) (9) (9) 
line 48: clear
line 49: buildTree 4
(10) (4) (3) (2) 
line 50: inorderTraversal
(2) (3) (4) (10) 
line 51: kNearestNeighbour 3 (1)
(2) (3) (4) 
line 52: inorderTraversal
(2) (3) (4) (10) 
line 53: kNearestNeighbour 2 (8)
(4) (10) 
line 54: inorderTraversal
(2) (3) (4) (10) 
line 55: insert (4)
line 56: inorderTraversal
(2) (3) (4) (4) (10) 
line 57: remove (4)
line 58: inorderTraversal
(2) (3) (4) (10) 
line 59: insert (5)
line 60: inorderTraversal
(2) (3) (4) (5) (10) 
line 61: insert (4)
line 62: inorderTraversal
(2) (3) (4) (4) (5) (10) 
line 63: kNearestNeighbour 5 (5)
(2) (3) (4) (4) (5) 
line 64: inorderTraversal
(2) (3) (4) (4) (5) (10) 
line 65: nearestNeighbour (4)
(4) 
line 66: inorderTraversal
(2) (3) (4) (4) (5) (10) 
line 67: nearestNeighbour (7)
(5) 
line 68: inorderTraversal
(2) (3) (4) (4) (5) (10) 
line 69: nearestNeighbour (6)
(5) 
line 70: inorderTraversal
(2) (3) (4) (4) (5) (10) 
line 71: insert (1)
line 72: inorderTraversal
(1) (2) (3) (4) (4) (5) (10) 
line 73: clear
line 74: buildTree 20
(10) (6) (5) (6) (2) (1) (7) (8) (6) (7) (1) (3) (6) (2) (3) (5) (7) (8) (10) (7) 
line 75: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (8) (10) (10) 
line 76: nearestNeighbour (4)
(3) 
line 77: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (8) (10) (10) 
line 78: insert (2)
line 79: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (8) (10) (10) 
line 80: remove (3)
line 81: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (8) (10) (10) 
line 82: insert (10)
line 83: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (8) (10) (10) (10) 
line 84: kNearestNeighbour 3 (10)
(10) (10) (10) 
line 85: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (8) (10) (10) (10) 
line 86: insert (10)
line 87: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (8) (10) (10) (10) (10) 
line 88: postorderTraversal
(1) (1) (2) (2) (5) (5) (3) (2) (6) (6) (6) (7) (7) (7) (8) (10) (10) (10) (10) (8) (7) (6) 
line 89: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (8) (10) (10) (10) (10) 
line 90: remove (10)
line 91: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (8) (8) (10) (10) (10) 
line 92: remove (7)
line 93: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) (10) 
line 94: insert (6)
line 95: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (6) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) (10) 
line 96: insert (5)
line 97: inorderTraversal
(1) (1) (2) (2) (2) (3) (5) (5) (5) (6) (6) (6) (6) (6) (7) (7) (7) (8) (8) (10) (10) (10) 
line 98: clear
line 99: buildTree 9
(9) (6) (3) (8) (5) (10) (10) (5) (3) 
line 100: inorderTraversal
(3) (3) (5) (5) (6) (8) (9) (10) (10) 
line 101: nearestNeighbour (8)
(8) 
line 102: inorderTraversal
(3) (3) (5) (5) (6) (8) (9) (10) (10) 
line 103: insert (2)
line 104: inorderTraversal
(2) (3) (3) (5) (5) (6) (8) (9) (10) (10) 
line 105: nearestNeighbour (10)
(10) 
line 106: inorderTraversal
(2) (3) (3) (5) (5) (6) (8) (9) (10) (10) 
line 107: kNearestNeighbour 1 (9)
(9) 
line 108: inorderTraversal
(2) (3) (3) (5) (5) (6) (8) (9) (10) (10) 
line 109: preorderTraversal
(6) (3) (2) (5) (3) (5) (9) (8) (10) (10) 
line 110: inorderTraversal
(2) (3) (3) (5) (5) (6) (8) (9) (10) (10) 
line 111: insert (4)
line 112: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (8) (9) (10) (10) 
line 113: remove (10)
line 114: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (8) (9) (10) 
line 115: nearestNeighbour (10)
(10) 
line 116: inorderTraversal
(2) (3) (3) (4) (5) (5) (6) (8) (9) (10) 
line 117: clear
line 118: buildTree 19
(4) (2) (5) (3) (7) (4) (2) (3) (3) (2) (1) (7) (3) (8) (9) (7) (5) (5) (9) 
line 119: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (9) (9) 
line 120: clear
line 121: buildTree 14
(5) (8) (9) (1) (9) (9) (10) (3) (7) (7) (1) (1) (6) (2) 
line 122: inorderTraversal
(1) (1) (1) (2) (3) (5) (6) (7) (7) (8) (9) (9) (9) (10) 
line 123: insert (8)
line 124: inorderTraversal
(1) (1) (1) (2) (3) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 125: nearestNeighbour (1)
(1) 
line 126: inorderTraversal
(1) (1) (1) (2) (3) (5) (6) (7) (7) (8) (8) (9) (9) (9) (10) 
line 127: insert (9)
line 128: inorderTraversal
(1) (1) (1) (2) (3) (5) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 129: kNearestNeighbour 1 (7)
(7) 
line 130: inorderTraversal
(1) (1) (1) (2) (3) (5) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 131: insert (5)
line 132: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 133: insert (7)
line 134: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 135: kNearestNeighbour 10 (2)
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) 
line 136: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 137: kNearestNeighbour 5 (4)
(2) (3) (5) (5) (6) 
line 138: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 139: kNearestNeighbour 8 (1)
(1) (1) (1) (2) (3) (5) (5) (6) 
line 140: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 141: kNearestNeighbour 6 (4)
(1) (2) (3) (5) (5) (6) 
line 142: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (10) 
line 143: insert (9)
line 144: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 145: nearestNeighbour (10)
(10) 
line 146: inorderTraversal
(1) (1) (1) (2) (3) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 147: insert (4)
line 148: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 149: search (8)
TRUE
line 150: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (9) (9) (10) 
line 151: insert (8)
line 152: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 153: kNearestNeighbour 10 (9)
(7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 154: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 155: nearestNeighbour (10)
(10) 
line 156: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 157: insert (5)
line 158: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 159: kNearestNeighbour 2 (6)
(6) (7) 
line 160: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 161: nearestNeighbour (2)
(2) 
line 162: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (9) (9) (10) 
line 163: clear
line 164: buildTree 6
(3) (5) (8) (4) (2) (8) 
line 165: inorderTraversal
(2) (3) (4) (5) (8) (8) 
line 166: clear
line 167: buildTree 13
(6) (7) (2) (9) (6) (4) (7) (10) (4) (4) (7) (5) (4) 
line 168: inorderTraversal
(2) (4) (4) (4) (4) (5) (6) (6) (7) (7) (7) (9) (10) 
line 169: preorderTraversal
(6) (4) (2) (4) (4) (4) (5) (7) (6) (7) (9) (7) (10) 
line 170: inorderTraversal
(2) (4) (4) (4) (4) (5) (6) (6) (7) (7) (7) (9) (10) 
line 171: nearestNeighbour (9)
(9) 
line 172: inorderTraversal
(2) (4) (4) (4) (4) (5) (6) (6) (7) (7) (7) (9) (10) 
line 173: insert (1)
line 174: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (6) (6) (7) (7) (7) (9) (10) 
line 175: search (4)
TRUE
line 176: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (6) (6) (7) (7) (7) (9) (10) 
line 177: remove (6)
line 178: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (6) (7) (7) (7) (9) (10) 
line 179: insert (7)
line 180: inorderTraversal
(1) (2) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 181: insert (4)
line 182: inorderTraversal
(1) (2) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 183: insert (1)
line 184: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 185: nearestNeighbour (2)
(2) 
line 186: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 187: insert (3)
line 188: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 189: kNearestNeighbour 5 (10)
(7) (7) (7) (9) (10) 
line 190: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 191: search (7)
TRUE
line 192: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) 
line 193: insert (10)
line 194: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) (10) 
line 195: kNearestNeighbour 10 (2)
(1) (1) (2) (3) (4) (4) (4) (4) (4) (5) 
line 196: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (10) (10) 
line 197: insert (9)
line 198: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) 
line 199: insert (4)
line 200: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) 
line 201: nearestNeighbour (4)
(4) 
line 202: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) 
line 203: kNearestNeighbour 5 (4)
(4) (4) (4) (4) (4) 
line 204: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) 
line 205: insert (4)
line 206: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) 
line 207: insert (6)
line 208: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (6) (7) (7) (7) (7) (9) (9) (10) (10) 
line 209: remove (6)
line 210: inorderTraversal
(1) (1) (2) (3) (4) (4) (4) (4) (4) (4) (4) (5) (6) (7) (7) (7) (7) (9) (9) (10) (10) 
line 211: clear
line 212: buildTree 16
(4) (4) (8) (4) (10) (6) (3) (8) (10) (9) (8) (7) (10) (5) (9) (10) 
line 213: inorderTraversal
(3) (4) (4) (4) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 214: nearestNeighbour (3)
(3) 
line 215: inorderTraversal
(3) (4) (4) (4) (5) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 216: insert (6)
line 217: inorderTraversal
(3) (4) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) (10) 
line 218: remove (10)
line 219: inorderTraversal
(3) (4) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 220: nearestNeighbour (7)
(7) 
line 221: inorderTraversal
(3) (4) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 222: kNearestNeighbour 3 (1)
(3) (4) (4) 
line 223: inorderTraversal
(3) (4) (4) (4) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 224: insert (5)
line 225: inorderTraversal
(3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 226: kNearestNeighbour 5 (10)
(9) (9) (10) (10) (10) 
line 227: inorderTraversal
(3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 228: insert (5)
line 229: inorderTraversal
(3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 230: remove (10)
line 231: inorderTraversal
(3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 232: kNearestNeighbour 8 (2)
(3) (4) (4) (4) (5) (5) (5) (6) 
line 233: inorderTraversal
(3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (10) (10) 
line 234: insert (9)
line 235: inorderTraversal
(3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 236: kNearestNeighbour 8 (5)
(4) (4) (4) (5) (5) (5) (6) (6) 
line 237: inorderTraversal
(3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 238: remove (2)
line 239: inorderTraversal
(3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 240: clear
line 241: buildTree 5
(9) (6) (6) (8) (9) 
line 242: inorderTraversal
(6) (6) (8) (9) (9) 
line 243: clear
line 244: buildTree 20
(2) (9) (8) (5) (3) (9) (9) (8) (6) (5) (10) (2) (7) (3) (2) (4) (3) (7) (6) (8) 
line 245: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) 
line 246: insert (10)
line 247: inorderTraversal
(2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 248: insert (3)
line 249: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 250: insert (10)
line 251: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 252: remove (6)
line 253: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 254: insert (1)
line 255: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 256: kNearestNeighbour 10 (10)
(7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 257: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 258: nearestNeighbour (8)
(8) 
line 259: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 260: nodeCount_height_leafCount
nodeCount=23;height=8;leafCount=7
line 261: inorderTraversal
(1) (2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 262: remove (2)
line 263: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 264: insert (7)
line 265: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 266: insert (8)
line 267: inorderTraversal
(1) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 268: clear
line 269: buildTree 20
(4) (9) (3) (1) (3) (10) (3) (5) (9) (7) (4) (3) (7) (9) (5) (3) (9) (5) (2) (8) 
line 270: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (9) (10) 
line 271: nodeCount_height_leafCount
nodeCount=20;height=7;leafCount=6
line 272: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (9) (10) 
line 273: nearestNeighbour (1)
(1) 
line 274: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (9) (10) 
line 275: kNearestNeighbour 6 (4)
(3) (3) (3) (3) (4) (4) 
line 276: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (9) (10) 
line 277: clear
line 278: buildTree 4
(6) (1) (9) (6) 
line 279: inorderTraversal
(1) (6) (6) (9) 
line 280: search (1)
TRUE
line 281: inorderTraversal
(1) (6) (6) (9) 
line 282: insert (7)
line 283: inorderTraversal
(1) (6) (6) (7) (9) 
line 284: nearestNeighbour (6)
(6) 
line 285: inorderTraversal
(1) (6) (6) (7) (9) 
line 286: insert (7)
line 287: inorderTraversal
(1) (6) (6) (7) (7) (9) 
line 288: preorderTraversal
(6) (1) (6) (9) (7) (7) 
line 289: inorderTraversal
(1) (6) (6) (7) (7) (9) 
line 290: clear
line 291: buildTree 11
(2) (8) (8) (1) (9) (4) (4) (1) (1) (3) (4) 
line 292: inorderTraversal
(1) (1) (1) (2) (3) (4) (4) (4) (8) (8) (9) 
line 293: clear
line 294: buildTree 15
(4) (10) (1) (4) (2) (4) (3) (10) (6) (10) (9) (10) (8) (4) (8) 
line 295: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (6) (8) (8) (9) (10) (10) (10) (10) 
line 296: remove (10)
line 297: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (6) (8) (8) (9) (10) (10) (10) 
line 298: insert (4)
line 299: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (6) (8) (8) (9) (10) (10) (10) 
line 300: insert (9)
line 301: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (6) (8) (8) (9) (9) (10) (10) (10) 
line 302: postorderTraversal
(1) (3) (2) (4) (4) (4) (4) (4) (9) (9) (8) (8) (10) (10) (10) (6) 
line 303: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (6) (8) (8) (9) (9) (10) (10) (10) 
line 304: kNearestNeighbour 1 (8)
(8) 
line 305: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (6) (8) (8) (9) (9) (10) (10) (10) 
line 306: insert (7)
line 307: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 308: kNearestNeighbour 2 (9)
(9) (9) 
line 309: inorderTraversal
(1) (2) (3) (4) (4) (4) (4) (4) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 310: clear
line 311: buildTree 4
(9) (8) (1) (9) 
line 312: inorderTraversal
(1) (8) (9) (9) 
line 313: nearestNeighbour (6)
(8) 
line 314: inorderTraversal
(1) (8) (9) (9) 
line 315: nearestNeighbour (5)
(8) 
line 316: inorderTraversal
(1) (8) (9) (9) 
line 317: insert (4)
line 318: inorderTraversal
(1) (4) (8) (9) (9) 
line 319: insert (10)
line 320: inorderTraversal
(1) (4) (8) (9) (9) (10) 
line 321: nearestNeighbour (9)
(9) 
line 322: inorderTraversal
(1) (4) (8) (9) (9) (10) 
line 323: nearestNeighbour (10)
(10) 
line 324: inorderTraversal
(1) (4) (8) (9) (9) (10) 
line 325: clear
line 326: buildTree 1
(4) 
line 327: inorderTraversal
(4) 
line 328: nearestNeighbour (5)
(4) 
line 329: inorderTraversal
(4) 
line 330: remove (7)
line 331: inorderTraversal
(4) 
line 332: insert (3)
line 333: inorderTraversal
(3) (4) 
line 334: search (2)
FALSE
line 335: inorderTraversal
(3) (4) 
line 336: nearestNeighbour (5)
(4) 
line 337: inorderTraversal
(3) (4) 
line 338: kNearestNeighbour 4 (7)
(3) (4) 
line 339: inorderTraversal
(3) (4) 
line 340: kNearestNeighbour 4 (1)
(3) (4) 
line 341: inorderTraversal
(3) (4) 
line 342: nearestNeighbour (5)
(4) 
line 343: inorderTraversal
(3) (4) 
line 344: clear
line 345: buildTree 4
(9) (3) (10) (7) 
line 346: inorderTraversal
(3) (7) (9) (10) 
line 347: clear
line 348: buildTree 4
(3) (1) (3) (6) 
line 349: inorderTraversal
(1) (3) (3) (6) 
line 350: insert (1)
line 351: inorderTraversal
(1) (1) (3) (3) (6) 
line 352: kNearestNeighbour 2 (5)
(3) (6) 
line 353: inorderTraversal
(1) (1) (3) (3) (6) 
line 354: nearestNeighbour (7)
(6) 
line 355: inorderTraversal
(1) (1) (3) (3) (6) 
line 356: remove (1)
line 357: inorderTraversal
(1) (3) (3) (6) 
line 358: remove (3)
line 359: inorderTraversal
(1) (3) (6) 
line 360: nodeCount_height_leafCount
nodeCount=3;height=2;leafCount=2
line 361: inorderTraversal
(1) (3) (6) 
line 362: insert (7)
line 363: inorderTraversal
(1) (3) (6) (7) 
line 364: insert (3)
line 365: inorderTraversal
(1) (3) (3) (6) (7) 
line 366: nearestNeighbour (3)
(3) 
line 367: inorderTraversal
(1) (3) (3) (6) (7) 
line 368: kNearestNeighbour 5 (7)
(1) (3) (3) (6) (7) 
line 369: inorderTraversal
(1) (3) (3) (6) (7) 
line 370: insert (6)
line 371: inorderTraversal
(1) (3) (3) (6) (6) (7) 
line 372: remove (3)
line 373: inorderTraversal
(1) (3) (6) (6) (7) 
line 374: kNearestNeighbour 4 (8)
(3) (6) (6) (7) 
line 375: inorderTraversal
(1) (3) (6) (6) (7) 
line 376: insert (5)
line 377: inorderTraversal
(1) (3) (5) (6) (6) (7) 
line 378: nearestNeighbour (10)
(7) 
line 379: inorderTraversal
(1) (3) (5) (6) (6) (7) 
line 380: kNearestNeighbour 10 (2)
(1) (3) (5) (6) (6) (7) 
line 381: inorderTraversal
(1) (3) (5) (6) (6) (7) 
line 382: nearestNeighbour (3)
(3) 
line 383: inorderTraversal
(1) (3) (5) (6) (6) (7) 
line 384: kNearestNeighbour 1 (1)
(1) 
line 385: inorderTraversal
(1) (3) (5) (6) (6) (7) 
line 386: remove (3)
line 387: inorderTraversal
(1) (5) (6) (6) (7) 
line 388: insert (7)
line 389: inorderTraversal
(1) (5) (6) (6) (7) (7) 
line 390: nearestNeighbour (8)
(7) 
line 391: inorderTraversal
(1) (5) (6) (6) (7) (7) 
line 392: remove (3)
line 393: inorderTraversal
(1) (5) (6) (6) (7) (7) 
line 394: nearestNeighbour (9)
(7) 
line 395: inorderTraversal
(1) (5) (6) (6) (7) (7) 
line 396: insert (7)
line 397: inorderTraversal
(1) (5) (6) (6) (7) (7) (7) 
line 398: insert (6)
line 399: inorderTraversal
(1) (5) (6) (6) (6) (7) (7) (7) 
line 400: nearestNeighbour (6)
(6) 
line 401: inorderTraversal
(1) (5) (6) (6) (6) (7) (7) (7) 
line 402: nearestNeighbour (10)
(7) 
line 403: inorderTraversal
(1) (5) (6) (6) (6) (7) (7) (7) 
line 404: remove (5)
line 405: inorderTraversal
(1) (6) (6) (6) (7) (7) (7) 
line 406: nearestNeighbour (1)
(1) 
line 407: inorderTraversal
(1) (6) (6) (6) (7) (7) (7) 
line 408: kNearestNeighbour 4 (2)
(1) (6) (6) (6) 
line 409: inorderTraversal
(1) (6) (6) (6) (7) (7) (7) 
line 410: insert (5)
line 411: inorderTraversal
(1) (5) (6) (6) (6) (7) (7) (7) 
line 412: clear
line 413: buildTree 8
(1) (4) (6) (4) (10) (9) (3) (3) 
line 414: inorderTraversal
(1) (3) (3) (4) (4) (6) (9) (10) 
line 415: clear
line 416: buildTree 10
(6) (9) (3) (10) (7) (7) (5) (7) (1) (8) 
line 417: inorderTraversal
(1) (3) (5) (6) (7) (7) (7) (8) (9) (10) 
line 418: insert (2)
line 419: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) (7) (8) (9) (10) 
line 420: kNearestNeighbour 2 (7)
(7) (7) 
line 421: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) (7) (8) (9) (10) 
line 422: kNearestNeighbour 7 (8)
(6) (7) (7) (7) (8) (9) (10) 
line 423: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) (7) (8) (9) (10) 
line 424: nearestNeighbour (3)
(3) 
line 425: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) (7) (8) (9) (10) 
line 426: nodeCount_height_leafCount
nodeCount=11;height=4;leafCount=4
line 427: inorderTraversal
(1) (2) (3) (5) (6) (7) (7) (7) (8) (9) (10) 
line 428: preorderTraversal
(7) (3) (1) (2) (5) (6) (8) (7) (7) (9) (10) 
line 429: postorderTraversal
(2) (1) (6) (5) (3) (7) (7) (10) (9) (8) (7) 
line 430: clear
