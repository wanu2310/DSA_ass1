line 1: k=1
line 2: insert (9)
line 3: inorderTraversal
(9) 
line 4: nearestNeighbour (9)
(9) 
line 5: inorderTraversal
(9) 
line 6: insert (5)
line 7: inorderTraversal
(5) (9) 
line 8: kNearestNeighbour 4 (7)
(5) (9) 
line 9: inorderTraversal
(5) (9) 
line 10: kNearestNeighbour 10 (10)
(5) (9) 
line 11: inorderTraversal
(5) (9) 
line 12: search (5)
TRUE
line 13: inorderTraversal
(5) (9) 
line 14: insert (8)
line 15: inorderTraversal
(5) (8) (9) 
line 16: remove (9)
line 17: inorderTraversal
(5) (8) 
line 18: nearestNeighbour (6)
(5) 
line 19: inorderTraversal
(5) (8) 
line 20: insert (9)
line 21: inorderTraversal
(5) (8) (9) 
line 22: kNearestNeighbour 6 (8)
(5) (8) (9) 
line 23: inorderTraversal
(5) (8) (9) 
line 24: remove (8)
line 25: inorderTraversal
(5) (9) 
line 26: kNearestNeighbour 4 (2)
(5) (9) 
line 27: inorderTraversal
(5) (9) 
line 28: kNearestNeighbour 1 (5)
(5) 
line 29: inorderTraversal
(5) (9) 
line 30: insert (6)
line 31: inorderTraversal
(5) (6) (9) 
line 32: insert (9)
line 33: inorderTraversal
(5) (6) (9) (9) 
line 34: kNearestNeighbour 4 (9)
(5) (6) (9) (9) 
line 35: inorderTraversal
(5) (6) (9) (9) 
line 36: kNearestNeighbour 5 (10)
(5) (6) (9) (9) 
line 37: inorderTraversal
(5) (6) (9) (9) 
line 38: insert (9)
line 39: inorderTraversal
(5) (6) (9) (9) (9) 
line 40: insert (5)
line 41: inorderTraversal
(5) (5) (6) (9) (9) (9) 
line 42: clear
line 43: buildTree 12
(1) (9) (4) (8) (7) (1) (7) (5) (9) (7) (4) (10) 
line 44: inorderTraversal
(1) (1) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) 
line 45: kNearestNeighbour 3 (2)
(1) (1) (4) 
line 46: inorderTraversal
(1) (1) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) 
line 47: kNearestNeighbour 10 (3)
(1) (1) (4) (4) (5) (7) (7) (7) (8) (9) 
line 48: inorderTraversal
(1) (1) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) 
line 49: nodeCount_height_leafCount
nodeCount=12;height=5;leafCount=4
line 50: inorderTraversal
(1) (1) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) 
line 51: nearestNeighbour (7)
(7) 
line 52: inorderTraversal
(1) (1) (4) (4) (5) (7) (7) (7) (8) (9) (9) (10) 
line 53: clear
line 54: buildTree 16
(5) (9) (8) (6) (4) (1) (10) (5) (4) (5) (6) (9) (6) (6) (3) (1) 
line 55: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (8) (9) (9) (10) 
line 56: remove (8)
line 57: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (9) (9) (10) 
line 58: nearestNeighbour (8)
(9) 
line 59: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (9) (9) (10) 
line 60: nodeCount_height_leafCount
nodeCount=15;height=6;leafCount=5
line 61: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (9) (9) (10) 
line 62: nearestNeighbour (4)
(4) 
line 63: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (9) (9) (10) 
line 64: kNearestNeighbour 4 (10)
(6) (9) (9) (10) 
line 65: inorderTraversal
(1) (1) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (9) (9) (10) 
line 66: insert (3)
line 67: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (9) (9) (10) 
line 68: insert (6)
line 69: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (5) (5) (6) (6) (6) (6) (6) (9) (9) (10) 
line 70: clear
line 71: buildTree 10
(7) (9) (6) (10) (8) (10) (6) (5) (3) (3) 
line 72: inorderTraversal
(3) (3) (5) (6) (6) (7) (8) (9) (10) (10) 
line 73: insert (8)
line 74: inorderTraversal
(3) (3) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 75: insert (1)
line 76: inorderTraversal
(1) (3) (3) (5) (6) (6) (7) (8) (8) (9) (10) (10) 
line 77: remove (9)
line 78: inorderTraversal
(1) (3) (3) (5) (6) (6) (7) (8) (8) (10) (10) 
line 79: kNearestNeighbour 8 (7)
(5) (6) (6) (7) (8) (8) (10) (10) 
line 80: inorderTraversal
(1) (3) (3) (5) (6) (6) (7) (8) (8) (10) (10) 
line 81: insert (1)
line 82: inorderTraversal
(1) (1) (3) (3) (5) (6) (6) (7) (8) (8) (10) (10) 
line 83: preorderTraversal
(6) (3) (1) (1) (3) (5) (8) (6) (7) (10) (8) (10) 
line 84: inorderTraversal
(1) (1) (3) (3) (5) (6) (6) (7) (8) (8) (10) (10) 
line 85: insert (2)
line 86: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (7) (8) (8) (10) (10) 
line 87: insert (6)
line 88: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (6) (7) (8) (8) (10) (10) 
line 89: nearestNeighbour (4)
(5) 
line 90: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (6) (7) (8) (8) (10) (10) 
line 91: nodeCount_height_leafCount
nodeCount=14;height=5;leafCount=5
line 92: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (6) (7) (8) (8) (10) (10) 
line 93: insert (10)
line 94: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (6) (7) (8) (8) (10) (10) (10) 
line 95: insert (6)
line 96: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (6) (6) (7) (8) (8) (10) (10) (10) 
line 97: insert (1)
line 98: inorderTraversal
(1) (1) (1) (2) (3) (3) (5) (6) (6) (6) (6) (7) (8) (8) (10) (10) (10) 
line 99: insert (8)
line 100: inorderTraversal
(1) (1) (1) (2) (3) (3) (5) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 101: search (8)
TRUE
line 102: inorderTraversal
(1) (1) (1) (2) (3) (3) (5) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 103: insert (3)
line 104: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (5) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 105: insert (3)
line 106: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) 
line 107: insert (10)
line 108: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (6) (6) (6) (6) (7) (8) (8) (8) (10) (10) (10) (10) 
line 109: insert (9)
line 110: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (6) (6) (6) (6) (7) (8) (8) (8) (9) (10) (10) (10) (10) 
line 111: remove (8)
line 112: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) (10) 
line 113: insert (5)
line 114: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) (10) 
line 115: remove (1)
line 116: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) (10) 
line 117: kNearestNeighbour 6 (5)
(5) (5) (6) (6) (6) (6) 
line 118: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) (10) 
line 119: nearestNeighbour (9)
(9) 
line 120: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (10) (10) (10) (10) 
line 121: insert (9)
line 122: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 123: nearestNeighbour (10)
(10) 
line 124: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 125: kNearestNeighbour 6 (5)
(5) (5) (6) (6) (6) (6) 
line 126: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 127: clear
line 128: buildTree 19
(10) (4) (8) (10) (2) (6) (4) (4) (4) (6) (8) (1) (4) (4) (3) (10) (2) (5) (6) 
line 129: inorderTraversal
(1) (2) (2) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (8) (8) (10) (10) (10) 
line 130: insert (1)
line 131: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (8) (8) (10) (10) (10) 
line 132: insert (3)
line 133: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (8) (8) (10) (10) (10) 
line 134: insert (6)
line 135: inorderTraversal
(1) (1) (2) (2) (3) (3) (4) (4) (4) (4) (4) (4) (5) (6) (6) (6) (6) (8) (8) (10) (10) (10) 
line 136: clear
line 137: buildTree 9
(7) (7) (6) (2) (3) (2) (4) (3) (8) 
line 138: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 139: kNearestNeighbour 1 (6)
(6) 
line 140: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 141: kNearestNeighbour 4 (10)
(6) (7) (7) (8) 
line 142: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 143: nearestNeighbour (6)
(6) 
line 144: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 145: preorderTraversal
(4) (2) (3) (2) (3) (7) (6) (7) (8) 
line 146: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 147: nearestNeighbour (1)
(2) 
line 148: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 149: kNearestNeighbour 7 (4)
(2) (2) (3) (3) (4) (6) (7) 
line 150: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 151: search (7)
TRUE
line 152: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 153: nearestNeighbour (1)
(2) 
line 154: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 155: nearestNeighbour (10)
(8) 
line 156: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 157: kNearestNeighbour 3 (1)
(2) (2) (3) 
line 158: inorderTraversal
(2) (2) (3) (3) (4) (6) (7) (7) (8) 
line 159: clear
line 160: buildTree 15
(2) (7) (1) (9) (4) (9) (2) (8) (9) (5) (7) (2) (5) (10) (5) 
line 161: inorderTraversal
(1) (2) (2) (2) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (10) 
line 162: insert (4)
line 163: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (10) 
line 164: nearestNeighbour (8)
(8) 
line 165: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (10) 
line 166: preorderTraversal
(5) (2) (1) (2) (2) (4) (4) (8) (5) (7) (5) (7) (9) (9) (9) (10) 
line 167: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (10) 
line 168: insert (8)
line 169: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (7) (7) (8) (8) (9) (9) (9) (10) 
line 170: remove (8)
line 171: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (9) (10) 
line 172: remove (9)
line 173: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (10) 
line 174: kNearestNeighbour 3 (1)
(1) (2) (2) 
line 175: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) (10) 
line 176: remove (10)
line 177: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (7) (7) (8) (9) (9) 
line 178: remove (7)
line 179: inorderTraversal
(1) (2) (2) (2) (4) (4) (5) (5) (5) (7) (8) (9) (9) 
line 180: clear
line 181: buildTree 18
(2) (3) (10) (5) (1) (7) (1) (10) (6) (1) (4) (1) (10) (8) (3) (2) (3) (5) 
line 182: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (10) (10) (10) 
line 183: nearestNeighbour (1)
(1) 
line 184: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (10) (10) (10) 
line 185: insert (9)
line 186: inorderTraversal
(1) (1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 187: remove (1)
line 188: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 189: insert (2)
line 190: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 191: kNearestNeighbour 10 (7)
(4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 192: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 193: kNearestNeighbour 10 (10)
(4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 194: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 195: kNearestNeighbour 7 (3)
(2) (2) (2) (3) (3) (3) (4) 
line 196: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 197: nearestNeighbour (9)
(9) 
line 198: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 199: kNearestNeighbour 3 (10)
(10) (10) (10) 
line 200: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (5) (5) (6) (7) (8) (9) (10) (10) (10) 
line 201: clear
line 202: buildTree 18
(3) (10) (4) (9) (9) (9) (6) (5) (5) (4) (5) (7) (8) (4) (2) (6) (9) (7) 
line 203: inorderTraversal
(2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (8) (9) (9) (9) (9) (10) 
line 204: clear
line 205: buildTree 4
(3) (4) (7) (6) 
line 206: inorderTraversal
(3) (4) (6) (7) 
line 207: insert (1)
line 208: inorderTraversal
(1) (3) (4) (6) (7) 
line 209: clear
line 210: buildTree 6
(9) (9) (8) (2) (1) (7) 
line 211: inorderTraversal
(1) (2) (7) (8) (9) (9) 
line 212: nearestNeighbour (6)
(7) 
line 213: inorderTraversal
(1) (2) (7) (8) (9) (9) 
line 214: kNearestNeighbour 10 (9)
(1) (2) (7) (8) (9) (9) 
line 215: inorderTraversal
(1) (2) (7) (8) (9) (9) 
line 216: kNearestNeighbour 4 (10)
(7) (8) (9) (9) 
line 217: inorderTraversal
(1) (2) (7) (8) (9) (9) 
line 218: insert (6)
line 219: inorderTraversal
(1) (2) (6) (7) (8) (9) (9) 
line 220: kNearestNeighbour 3 (10)
(8) (9) (9) 
line 221: inorderTraversal
(1) (2) (6) (7) (8) (9) (9) 
line 222: insert (10)
line 223: inorderTraversal
(1) (2) (6) (7) (8) (9) (9) (10) 
line 224: insert (3)
line 225: inorderTraversal
(1) (2) (3) (6) (7) (8) (9) (9) (10) 
line 226: insert (7)
line 227: inorderTraversal
(1) (2) (3) (6) (7) (7) (8) (9) (9) (10) 
line 228: nearestNeighbour (5)
(6) 
line 229: inorderTraversal
(1) (2) (3) (6) (7) (7) (8) (9) (9) (10) 
line 230: insert (6)
line 231: inorderTraversal
(1) (2) (3) (6) (6) (7) (7) (8) (9) (9) (10) 
line 232: insert (5)
line 233: inorderTraversal
(1) (2) (3) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 234: nearestNeighbour (4)
(5) 
line 235: inorderTraversal
(1) (2) (3) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 236: nearestNeighbour (4)
(5) 
line 237: inorderTraversal
(1) (2) (3) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 238: nearestNeighbour (10)
(10) 
line 239: inorderTraversal
(1) (2) (3) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 240: nearestNeighbour (10)
(10) 
line 241: inorderTraversal
(1) (2) (3) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 242: nearestNeighbour (10)
(10) 
line 243: inorderTraversal
(1) (2) (3) (5) (6) (6) (7) (7) (8) (9) (9) (10) 
line 244: clear
line 245: buildTree 5
(3) (1) (10) (10) (9) 
line 246: inorderTraversal
(1) (3) (9) (10) (10) 
line 247: nearestNeighbour (6)
(3) 
line 248: inorderTraversal
(1) (3) (9) (10) (10) 
line 249: preorderTraversal
(9) (1) (3) (10) (10) 
line 250: inorderTraversal
(1) (3) (9) (10) (10) 
line 251: remove (5)
line 252: inorderTraversal
(1) (3) (9) (10) (10) 
line 253: kNearestNeighbour 6 (2)
(1) (3) (9) (10) (10) 
line 254: inorderTraversal
(1) (3) (9) (10) (10) 
line 255: insert (6)
line 256: inorderTraversal
(1) (3) (6) (9) (10) (10) 
line 257: nearestNeighbour (6)
(6) 
line 258: inorderTraversal
(1) (3) (6) (9) (10) (10) 
line 259: clear
line 260: buildTree 9
(4) (5) (8) (3) (1) (2) (10) (3) (8) 
line 261: inorderTraversal
(1) (2) (3) (3) (4) (5) (8) (8) (10) 
line 262: nearestNeighbour (4)
(4) 
line 263: inorderTraversal
(1) (2) (3) (3) (4) (5) (8) (8) (10) 
line 264: insert (9)
line 265: inorderTraversal
(1) (2) (3) (3) (4) (5) (8) (8) (9) (10) 
line 266: nearestNeighbour (1)
(1) 
line 267: inorderTraversal
(1) (2) (3) (3) (4) (5) (8) (8) (9) (10) 
line 268: nearestNeighbour (3)
(3) 
line 269: inorderTraversal
(1) (2) (3) (3) (4) (5) (8) (8) (9) (10) 
line 270: postorderTraversal
(1) (3) (3) (2) (5) (9) (10) (8) (8) (4) 
line 271: inorderTraversal
(1) (2) (3) (3) (4) (5) (8) (8) (9) (10) 
line 272: nearestNeighbour (9)
(9) 
line 273: inorderTraversal
(1) (2) (3) (3) (4) (5) (8) (8) (9) (10) 
line 274: kNearestNeighbour 7 (5)
(2) (3) (3) (4) (5) (8) (8) 
line 275: inorderTraversal
(1) (2) (3) (3) (4) (5) (8) (8) (9) (10) 
line 276: insert (1)
line 277: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (8) (8) (9) (10) 
line 278: insert (1)
line 279: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (5) (8) (8) (9) (10) 
line 280: insert (10)
line 281: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (5) (8) (8) (9) (10) (10) 
line 282: insert (9)
line 283: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (5) (8) (8) (9) (9) (10) (10) 
line 284: insert (3)
line 285: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (5) (8) (8) (9) (9) (10) (10) 
line 286: kNearestNeighbour 7 (9)
(5) (8) (8) (9) (9) (10) (10) 
line 287: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (5) (8) (8) (9) (9) (10) (10) 
line 288: remove (8)
line 289: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (4) (5) (8) (9) (9) (10) (10) 
line 290: clear
line 291: buildTree 6
(5) (7) (7) (6) (8) (8) 
line 292: inorderTraversal
(5) (6) (7) (7) (8) (8) 
line 293: nearestNeighbour (10)
(8) 
line 294: inorderTraversal
(5) (6) (7) (7) (8) (8) 
line 295: kNearestNeighbour 5 (5)
(5) (6) (7) (7) (8) 
line 296: inorderTraversal
(5) (6) (7) (7) (8) (8) 
line 297: kNearestNeighbour 5 (9)
(6) (7) (7) (8) (8) 
line 298: inorderTraversal
(5) (6) (7) (7) (8) (8) 
line 299: kNearestNeighbour 1 (3)
(5) 
line 300: inorderTraversal
(5) (6) (7) (7) (8) (8) 
line 301: insert (9)
line 302: inorderTraversal
(5) (6) (7) (7) (8) (8) (9) 
line 303: insert (9)
line 304: inorderTraversal
(5) (6) (7) (7) (8) (8) (9) (9) 
line 305: nodeCount_height_leafCount
nodeCount=8;height=5;leafCount=3
line 306: inorderTraversal
(5) (6) (7) (7) (8) (8) (9) (9) 
line 307: kNearestNeighbour 2 (1)
(5) (6) 
line 308: inorderTraversal
(5) (6) (7) (7) (8) (8) (9) (9) 
line 309: remove (7)
line 310: inorderTraversal
(5) (6) (7) (8) (8) (9) (9) 
line 311: remove (9)
line 312: inorderTraversal
(5) (6) (7) (8) (8) (9) 
line 313: insert (6)
line 314: inorderTraversal
(5) (6) (6) (7) (8) (8) (9) 
line 315: insert (7)
line 316: inorderTraversal
(5) (6) (6) (7) (7) (8) (8) (9) 
line 317: insert (4)
line 318: inorderTraversal
(4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 319: nearestNeighbour (3)
(4) 
line 320: inorderTraversal
(4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 321: kNearestNeighbour 2 (2)
(4) (5) 
line 322: inorderTraversal
(4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 323: nodeCount_height_leafCount
nodeCount=9;height=4;leafCount=4
line 324: inorderTraversal
(4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 325: kNearestNeighbour 10 (4)
(4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 326: inorderTraversal
(4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 327: nearestNeighbour (2)
(4) 
line 328: inorderTraversal
(4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 329: insert (2)
line 330: inorderTraversal
(2) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 331: preorderTraversal
(7) (5) (4) (2) (6) (6) (8) (7) (8) (9) 
line 332: inorderTraversal
(2) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 333: kNearestNeighbour 2 (2)
(2) (4) 
line 334: inorderTraversal
(2) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 335: search (6)
TRUE
line 336: inorderTraversal
(2) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 337: nodeCount_height_leafCount
nodeCount=10;height=4;leafCount=4
line 338: inorderTraversal
(2) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 339: nearestNeighbour (2)
(2) 
line 340: inorderTraversal
(2) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 341: kNearestNeighbour 5 (6)
(5) (6) (6) (7) (7) 
line 342: inorderTraversal
(2) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 343: kNearestNeighbour 3 (6)
(5) (6) (6) 
line 344: inorderTraversal
(2) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 345: insert (3)
line 346: inorderTraversal
(2) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 347: insert (3)
line 348: inorderTraversal
(2) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (9) 
line 349: clear
line 350: buildTree 3
(7) (5) (8) 
line 351: inorderTraversal
(5) (7) (8) 
line 352: kNearestNeighbour 7 (6)
(5) (7) (8) 
line 353: inorderTraversal
(5) (7) (8) 
line 354: insert (10)
line 355: inorderTraversal
(5) (7) (8) (10) 
line 356: insert (3)
line 357: inorderTraversal
(3) (5) (7) (8) (10) 
line 358: kNearestNeighbour 3 (7)
(5) (7) (8) 
line 359: inorderTraversal
(3) (5) (7) (8) (10) 
line 360: kNearestNeighbour 7 (4)
(3) (5) (7) (8) (10) 
line 361: inorderTraversal
(3) (5) (7) (8) (10) 
line 362: insert (6)
line 363: inorderTraversal
(3) (5) (6) (7) (8) (10) 
line 364: clear
line 365: buildTree 18
(7) (3) (5) (7) (2) (5) (7) (1) (3) (4) (8) (3) (4) (1) (5) (6) (1) (3) 
line 366: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) 
line 367: insert (7)
line 368: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) 
line 369: kNearestNeighbour 1 (4)
(4) 
line 370: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) 
line 371: insert (7)
line 372: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) 
line 373: insert (8)
line 374: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (8) 
line 375: remove (7)
line 376: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) (8) 
line 377: kNearestNeighbour 6 (3)
(2) (3) (3) (3) (3) (4) 
line 378: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) (8) 
line 379: insert (5)
line 380: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (8) (8) 
line 381: remove (1)
line 382: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (8) (8) 
line 383: nodeCount_height_leafCount
nodeCount=20;height=7;leafCount=6
line 384: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (8) (8) 
line 385: insert (7)
line 386: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (8) 
line 387: kNearestNeighbour 5 (2)
(2) (3) (3) (3) (3) 
line 388: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (8) 
line 389: nearestNeighbour (2)
(2) 
line 390: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (8) 
line 391: kNearestNeighbour 10 (4)
(3) (3) (3) (3) (4) (4) (5) (5) (5) (5) 
line 392: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (8) 
line 393: insert (5)
line 394: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (8) 
line 395: insert (4)
line 396: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (8) 
line 397: clear
line 398: buildTree 10
(10) (4) (2) (2) (9) (9) (6) (6) (3) (6) 
line 399: inorderTraversal
(2) (2) (3) (4) (6) (6) (6) (9) (9) (10) 
line 400: clear
line 401: buildTree 19
(8) (6) (7) (5) (9) (10) (4) (1) (6) (2) (7) (2) (7) (4) (6) (9) (4) (5) (9) 
line 402: inorderTraversal
(1) (2) (2) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (10) 
line 403: remove (2)
line 404: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (10) 
line 405: kNearestNeighbour 9 (2)
(1) (2) (4) (4) (4) (5) (5) (6) (6) 
line 406: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (10) 
line 407: insert (6)
line 408: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (10) 
line 409: nearestNeighbour (1)
(1) 
line 410: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (10) 
line 411: kNearestNeighbour 10 (1)
(1) (2) (4) (4) (4) (5) (5) (6) (6) (6) 
line 412: inorderTraversal
(1) (2) (4) (4) (4) (5) (5) (6) (6) (6) (6) (7) (7) (7) (8) (9) (9) (9) (10) 
line 413: clear
line 414: buildTree 15
(4) (2) (6) (9) (7) (9) (1) (4) (4) (8) (3) (8) (7) (8) (3) 
line 415: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (8) (9) (9) 
line 416: insert (10)
line 417: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (7) (7) (8) (8) (8) (9) (9) (10) 
line 418: insert (7)
line 419: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 420: nodeCount_height_leafCount
nodeCount=17;height=6;leafCount=6
line 421: inorderTraversal
(1) (2) (3) (3) (4) (4) (4) (6) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 422: preorderTraversal
(6) (3) (1) (2) (4) (3) (4) (4) (8) (7) (7) (7) (8) (9) (8) (9) (10) 
line 423: postorderTraversal
(2) (1) (3) (4) (4) (4) (3) (7) (7) (7) (8) (10) (9) (9) (8) (8) (6) 
line 424: clear
