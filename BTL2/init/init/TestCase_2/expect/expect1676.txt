line 1: k=1
line 2: kNearestNeighbour 6 (6)

line 3: inorderTraversal

line 4: kNearestNeighbour 1 (1)

line 5: inorderTraversal

line 6: remove (7)
line 7: inorderTraversal

line 8: insert (10)
line 9: inorderTraversal
(10) 
line 10: kNearestNeighbour 8 (8)
(10) 
line 11: inorderTraversal
(10) 
line 12: search (10)
TRUE
line 13: inorderTraversal
(10) 
line 14: postorderTraversal
(10) 
line 15: inorderTraversal
(10) 
line 16: insert (10)
line 17: inorderTraversal
(10) (10) 
line 18: clear
line 19: buildTree 19
(5) (4) (5) (3) (4) (10) (7) (8) (7) (9) (2) (9) (7) (2) (2) (5) (7) (6) (1) 
line 20: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 21: kNearestNeighbour 3 (6)
(5) (5) (6) 
line 22: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 23: remove (7)
line 24: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) (9) (10) 
line 25: search (6)
TRUE
line 26: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) (9) (10) 
line 27: insert (7)
line 28: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 29: kNearestNeighbour 2 (4)
(4) (4) 
line 30: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 31: insert (5)
line 32: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 33: insert (7)
line 34: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) (10) 
line 35: remove (10)
line 36: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 37: kNearestNeighbour 2 (6)
(5) (6) 
line 38: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 39: insert (1)
line 40: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 41: nearestNeighbour (10)
(9) 
line 42: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 43: remove (1)
line 44: inorderTraversal
(1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 45: insert (1)
line 46: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 47: nearestNeighbour (8)
(8) 
line 48: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 49: insert (4)
line 50: inorderTraversal
(1) (1) (2) (2) (2) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (7) (7) (7) (8) (9) (9) 
line 51: clear
line 52: buildTree 3
(7) (7) (7) 
line 53: inorderTraversal
(7) (7) (7) 
line 54: insert (1)
line 55: inorderTraversal
(1) (7) (7) (7) 
line 56: search (7)
TRUE
line 57: inorderTraversal
(1) (7) (7) (7) 
line 58: kNearestNeighbour 5 (3)
(1) (7) (7) (7) 
line 59: inorderTraversal
(1) (7) (7) (7) 
line 60: insert (5)
line 61: inorderTraversal
(1) (5) (7) (7) (7) 
line 62: clear
line 63: buildTree 3
(9) (8) (3) 
line 64: inorderTraversal
(3) (8) (9) 
line 65: insert (1)
line 66: inorderTraversal
(1) (3) (8) (9) 
line 67: insert (8)
line 68: inorderTraversal
(1) (3) (8) (8) (9) 
line 69: clear
line 70: buildTree 19
(2) (9) (10) (8) (6) (1) (3) (3) (1) (10) (6) (3) (7) (5) (8) (9) (7) (8) (10) 
line 71: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 72: postorderTraversal
(2) (1) (1) (3) (3) (6) (6) (5) (3) (7) (8) (8) (8) (9) (10) (10) (10) (9) (7) 
line 73: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 74: nearestNeighbour (8)
(8) 
line 75: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 76: insert (4)
line 77: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 78: insert (8)
line 79: inorderTraversal
(1) (1) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 80: remove (1)
line 81: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 82: nearestNeighbour (2)
(2) 
line 83: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 84: insert (7)
line 85: inorderTraversal
(1) (2) (3) (3) (3) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 86: insert (4)
line 87: inorderTraversal
(1) (2) (3) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 88: insert (3)
line 89: inorderTraversal
(1) (2) (3) (3) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (8) (8) (8) (8) (9) (9) (10) (10) (10) 
line 90: clear
line 91: buildTree 17
(4) (8) (5) (4) (1) (3) (10) (1) (1) (3) (1) (3) (4) (8) (5) (6) (7) 
line 92: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (10) 
line 93: search (1)
TRUE
line 94: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (10) 
line 95: nodeCount_height_leafCount
nodeCount=17;height=6;leafCount=6
line 96: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (8) (8) (10) 
line 97: insert (7)
line 98: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (6) (7) (7) (8) (8) (10) 
line 99: insert (5)
line 100: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (10) 
line 101: clear
line 102: buildTree 19
(2) (3) (10) (4) (3) (7) (10) (1) (6) (2) (4) (5) (8) (4) (7) (4) (2) (1) (5) 
line 103: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (10) (10) 
line 104: postorderTraversal
(1) (1) (2) (3) (3) (2) (2) (4) (5) (5) (4) (4) (7) (7) (10) (10) (8) (6) (4) 
line 105: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (10) (10) 
line 106: insert (9)
line 107: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 108: insert (1)
line 109: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 110: nearestNeighbour (8)
(8) 
line 111: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 112: insert (3)
line 113: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 114: nearestNeighbour (5)
(5) 
line 115: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 116: insert (5)
line 117: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) 
line 118: remove (10)
line 119: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (10) 
line 120: clear
line 121: buildTree 15
(3) (7) (1) (4) (10) (1) (5) (2) (4) (10) (8) (5) (2) (1) (3) 
line 122: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) 
line 123: remove (3)
line 124: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (5) (5) (7) (8) (10) (10) 
line 125: nearestNeighbour (3)
(3) 
line 126: inorderTraversal
(1) (1) (1) (2) (2) (3) (4) (4) (5) (5) (7) (8) (10) (10) 
line 127: insert (3)
line 128: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) 
line 129: nearestNeighbour (10)
(10) 
line 130: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) 
line 131: kNearestNeighbour 5 (2)
(1) (2) (2) (3) (3) 
line 132: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) 
line 133: insert (10)
line 134: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 135: nearestNeighbour (6)
(5) 
line 136: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 137: nearestNeighbour (9)
(8) 
line 138: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (10) (10) (10) 
line 139: insert (8)
line 140: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (7) (8) (8) (10) (10) (10) 
line 141: insert (5)
line 142: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) (10) 
line 143: kNearestNeighbour 7 (10)
(5) (7) (8) (8) (10) (10) (10) 
line 144: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) (10) 
line 145: kNearestNeighbour 8 (6)
(4) (4) (5) (5) (5) (7) (8) (8) 
line 146: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) (10) 
line 147: nearestNeighbour (10)
(10) 
line 148: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (8) (8) (10) (10) (10) 
line 149: insert (7)
line 150: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (10) (10) (10) 
line 151: kNearestNeighbour 7 (8)
(7) (7) (8) (8) (10) (10) (10) 
line 152: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (10) (10) (10) 
line 153: kNearestNeighbour 2 (7)
(7) (7) 
line 154: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (10) (10) (10) 
line 155: nearestNeighbour (3)
(3) 
line 156: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (10) (10) (10) 
line 157: nearestNeighbour (4)
(4) 
line 158: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (10) (10) (10) 
line 159: insert (8)
line 160: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) (10) (10) (10) 
line 161: nearestNeighbour (7)
(7) 
line 162: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (8) (8) (8) (10) (10) (10) 
line 163: insert (6)
line 164: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 165: nearestNeighbour (9)
(8) 
line 166: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 167: insert (4)
line 168: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 169: insert (5)
line 170: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 171: kNearestNeighbour 6 (3)
(2) (2) (3) (3) (4) (4) 
line 172: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 173: nearestNeighbour (1)
(1) 
line 174: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (10) (10) (10) 
line 175: insert (9)
line 176: inorderTraversal
(1) (1) (1) (2) (2) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (8) (9) (10) (10) (10) 
line 177: clear
line 178: buildTree 13
(7) (5) (7) (3) (10) (8) (5) (7) (2) (2) (10) (8) (2) 
line 179: inorderTraversal
(2) (2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (10) (10) 
line 180: remove (2)
line 181: inorderTraversal
(2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (10) (10) 
line 182: insert (8)
line 183: inorderTraversal
(2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 184: kNearestNeighbour 6 (7)
(7) (7) (7) (8) (8) (8) 
line 185: inorderTraversal
(2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 186: search (8)
TRUE
line 187: inorderTraversal
(2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 188: insert (5)
line 189: inorderTraversal
(2) (2) (3) (5) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 190: insert (1)
line 191: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 192: kNearestNeighbour 1 (3)
(3) 
line 193: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 194: insert (8)
line 195: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (7) (7) (7) (8) (8) (8) (8) (10) (10) 
line 196: remove (5)
line 197: inorderTraversal
(1) (2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (8) (8) (10) (10) 
line 198: postorderTraversal
(1) (2) (5) (5) (3) (2) (7) (7) (8) (8) (8) (10) (10) (8) (7) 
line 199: inorderTraversal
(1) (2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (8) (8) (10) (10) 
line 200: remove (8)
line 201: inorderTraversal
(1) (2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 202: preorderTraversal
(7) (2) (1) (3) (2) (5) (5) (8) (7) (7) (10) (8) (8) (10) 
line 203: inorderTraversal
(1) (2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 204: kNearestNeighbour 6 (1)
(1) (2) (2) (3) (5) (5) 
line 205: inorderTraversal
(1) (2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 206: nearestNeighbour (10)
(10) 
line 207: inorderTraversal
(1) (2) (2) (3) (5) (5) (7) (7) (7) (8) (8) (8) (10) (10) 
line 208: remove (7)
line 209: inorderTraversal
(1) (2) (2) (3) (5) (5) (7) (7) (8) (8) (8) (10) (10) 
line 210: nearestNeighbour (8)
(8) 
line 211: inorderTraversal
(1) (2) (2) (3) (5) (5) (7) (7) (8) (8) (8) (10) (10) 
line 212: insert (5)
line 213: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (7) (7) (8) (8) (8) (10) (10) 
line 214: nearestNeighbour (2)
(2) 
line 215: inorderTraversal
(1) (2) (2) (3) (5) (5) (5) (7) (7) (8) (8) (8) (10) (10) 
line 216: clear
line 217: buildTree 16
(8) (3) (3) (8) (5) (3) (4) (7) (10) (10) (2) (2) (4) (8) (9) (10) 
line 218: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (7) (8) (8) (8) (9) (10) (10) (10) 
line 219: kNearestNeighbour 3 (4)
(3) (4) (4) 
line 220: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (7) (8) (8) (8) (9) (10) (10) (10) 
line 221: kNearestNeighbour 3 (4)
(3) (4) (4) 
line 222: inorderTraversal
(2) (2) (3) (3) (3) (4) (4) (5) (7) (8) (8) (8) (9) (10) (10) (10) 
line 223: remove (2)
line 224: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (7) (8) (8) (8) (9) (10) (10) (10) 
line 225: insert (8)
line 226: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (7) (8) (8) (8) (8) (9) (10) (10) (10) 
line 227: insert (8)
line 228: inorderTraversal
(2) (3) (3) (3) (4) (4) (5) (7) (8) (8) (8) (8) (8) (9) (10) (10) (10) 
line 229: clear
line 230: buildTree 16
(6) (9) (1) (7) (3) (3) (8) (7) (7) (3) (3) (3) (2) (1) (9) (7) 
line 231: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (6) (7) (7) (7) (7) (8) (9) (9) 
line 232: insert (9)
line 233: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (6) (7) (7) (7) (7) (8) (9) (9) (9) 
line 234: nodeCount_height_leafCount
nodeCount=17;height=7;leafCount=4
line 235: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (6) (7) (7) (7) (7) (8) (9) (9) (9) 
line 236: remove (3)
line 237: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (6) (7) (7) (7) (7) (8) (9) (9) (9) 
line 238: insert (10)
line 239: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 240: insert (1)
line 241: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 242: kNearestNeighbour 4 (7)
(7) (7) (7) (7) 
line 243: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 244: insert (5)
line 245: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 246: insert (8)
line 247: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 248: remove (8)
line 249: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 250: kNearestNeighbour 3 (10)
(9) (9) (10) 
line 251: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 252: nearestNeighbour (8)
(8) 
line 253: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 254: insert (3)
line 255: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 256: insert (9)
line 257: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 258: nearestNeighbour (4)
(3) 
line 259: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 260: remove (1)
line 261: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 262: kNearestNeighbour 10 (2)
(1) (1) (2) (3) (3) (3) (3) (3) (5) (6) 
line 263: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (9) (10) 
line 264: remove (9)
line 265: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 266: kNearestNeighbour 9 (8)
(7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 267: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 268: insert (6)
line 269: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 270: nodeCount_height_leafCount
nodeCount=20;height=8;leafCount=5
line 271: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 272: kNearestNeighbour 1 (10)
(10) 
line 273: inorderTraversal
(1) (1) (2) (3) (3) (3) (3) (3) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 274: remove (1)
line 275: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 276: nearestNeighbour (3)
(3) 
line 277: inorderTraversal
(1) (2) (3) (3) (3) (3) (3) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 278: clear
line 279: buildTree 16
(2) (1) (1) (4) (8) (10) (5) (10) (7) (1) (5) (9) (7) (10) (5) (5) 
line 280: inorderTraversal
(1) (1) (1) (2) (4) (5) (5) (5) (5) (7) (7) (8) (9) (10) (10) (10) 
line 281: kNearestNeighbour 10 (2)
(1) (1) (1) (2) (4) (5) (5) (5) (5) (7) 
line 282: inorderTraversal
(1) (1) (1) (2) (4) (5) (5) (5) (5) (7) (7) (8) (9) (10) (10) (10) 
line 283: insert (6)
line 284: inorderTraversal
(1) (1) (1) (2) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) 
line 285: kNearestNeighbour 8 (4)
(1) (2) (4) (5) (5) (5) (5) (6) 
line 286: inorderTraversal
(1) (1) (1) (2) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) 
line 287: nodeCount_height_leafCount
nodeCount=17;height=6;leafCount=5
line 288: inorderTraversal
(1) (1) (1) (2) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) 
line 289: nearestNeighbour (8)
(8) 
line 290: inorderTraversal
(1) (1) (1) (2) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (10) (10) (10) 
line 291: insert (8)
line 292: inorderTraversal
(1) (1) (1) (2) (4) (5) (5) (5) (5) (6) (7) (7) (8) (8) (9) (10) (10) (10) 
line 293: clear
line 294: buildTree 11
(1) (6) (4) (2) (6) (10) (8) (7) (9) (8) (4) 
line 295: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (8) (8) (9) (10) 
line 296: insert (7)
line 297: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (9) (10) 
line 298: kNearestNeighbour 9 (1)
(1) (2) (4) (4) (6) (6) (7) (7) (8) 
line 299: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (9) (10) 
line 300: insert (8)
line 301: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 302: nearestNeighbour (2)
(2) 
line 303: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 304: kNearestNeighbour 8 (6)
(4) (6) (6) (7) (7) (8) (8) (8) 
line 305: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 306: nearestNeighbour (6)
(6) 
line 307: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 308: kNearestNeighbour 10 (9)
(4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 309: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 310: nearestNeighbour (6)
(6) 
line 311: inorderTraversal
(1) (2) (4) (4) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 312: insert (5)
line 313: inorderTraversal
(1) (2) (4) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 314: insert (2)
line 315: inorderTraversal
(1) (2) (2) (4) (4) (5) (6) (6) (7) (7) (8) (8) (8) (9) (10) 
line 316: clear
line 317: buildTree 8
(7) (7) (10) (10) (7) (1) (2) (5) 
line 318: inorderTraversal
(1) (2) (5) (7) (7) (7) (10) (10) 
line 319: kNearestNeighbour 5 (10)
(7) (7) (7) (10) (10) 
line 320: inorderTraversal
(1) (2) (5) (7) (7) (7) (10) (10) 
line 321: insert (5)
line 322: inorderTraversal
(1) (2) (5) (5) (7) (7) (7) (10) (10) 
line 323: clear
line 324: buildTree 7
(9) (1) (4) (1) (5) (6) (9) 
line 325: inorderTraversal
(1) (1) (4) (5) (6) (9) (9) 
line 326: insert (7)
line 327: inorderTraversal
(1) (1) (4) (5) (6) (7) (9) (9) 
line 328: remove (2)
line 329: inorderTraversal
(1) (1) (4) (5) (6) (7) (9) (9) 
line 330: nearestNeighbour (3)
(4) 
line 331: inorderTraversal
(1) (1) (4) (5) (6) (7) (9) (9) 
line 332: clear
line 333: buildTree 6
(4) (8) (9) (3) (9) (9) 
line 334: inorderTraversal
(3) (4) (8) (9) (9) (9) 
line 335: kNearestNeighbour 9 (5)
(3) (4) (8) (9) (9) (9) 
line 336: inorderTraversal
(3) (4) (8) (9) (9) (9) 
line 337: insert (10)
line 338: inorderTraversal
(3) (4) (8) (9) (9) (9) (10) 
line 339: kNearestNeighbour 3 (2)
(3) (4) (8) 
line 340: inorderTraversal
(3) (4) (8) (9) (9) (9) (10) 
line 341: insert (9)
line 342: inorderTraversal
(3) (4) (8) (9) (9) (9) (9) (10) 
line 343: insert (10)
line 344: inorderTraversal
(3) (4) (8) (9) (9) (9) (9) (10) (10) 
line 345: kNearestNeighbour 6 (7)
(4) (8) (9) (9) (9) (9) 
line 346: inorderTraversal
(3) (4) (8) (9) (9) (9) (9) (10) (10) 
line 347: insert (1)
line 348: inorderTraversal
(1) (3) (4) (8) (9) (9) (9) (9) (10) (10) 
line 349: nodeCount_height_leafCount
nodeCount=10;height=6;leafCount=4
line 350: inorderTraversal
(1) (3) (4) (8) (9) (9) (9) (9) (10) (10) 
line 351: kNearestNeighbour 4 (3)
(1) (3) (4) (8) 
line 352: inorderTraversal
(1) (3) (4) (8) (9) (9) (9) (9) (10) (10) 
line 353: preorderTraversal
(8) (3) (1) (4) (9) (9) (9) (10) (9) (10) 
line 354: inorderTraversal
(1) (3) (4) (8) (9) (9) (9) (9) (10) (10) 
line 355: nearestNeighbour (9)
(9) 
line 356: inorderTraversal
(1) (3) (4) (8) (9) (9) (9) (9) (10) (10) 
line 357: search (10)
TRUE
line 358: inorderTraversal
(1) (3) (4) (8) (9) (9) (9) (9) (10) (10) 
line 359: insert (5)
line 360: inorderTraversal
(1) (3) (4) (5) (8) (9) (9) (9) (9) (10) (10) 
line 361: nearestNeighbour (2)
(1) 
line 362: inorderTraversal
(1) (3) (4) (5) (8) (9) (9) (9) (9) (10) (10) 
line 363: kNearestNeighbour 3 (1)
(1) (3) (4) 
line 364: inorderTraversal
(1) (3) (4) (5) (8) (9) (9) (9) (9) (10) (10) 
line 365: insert (8)
line 366: inorderTraversal
(1) (3) (4) (5) (8) (8) (9) (9) (9) (9) (10) (10) 
line 367: insert (3)
line 368: inorderTraversal
(1) (3) (3) (4) (5) (8) (8) (9) (9) (9) (9) (10) (10) 
line 369: insert (10)
line 370: inorderTraversal
(1) (3) (3) (4) (5) (8) (8) (9) (9) (9) (9) (10) (10) (10) 
line 371: clear
line 372: buildTree 11
(3) (7) (4) (3) (2) (6) (10) (10) (5) (3) (2) 
line 373: inorderTraversal
(2) (2) (3) (3) (3) (4) (5) (6) (7) (10) (10) 
line 374: insert (3)
line 375: inorderTraversal
(2) (2) (3) (3) (3) (3) (4) (5) (6) (7) (10) (10) 
line 376: insert (2)
line 377: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (6) (7) (10) (10) 
line 378: insert (5)
line 379: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (10) (10) 
line 380: kNearestNeighbour 5 (10)
(5) (6) (7) (10) (10) 
line 381: inorderTraversal
(2) (2) (2) (3) (3) (3) (3) (4) (5) (5) (6) (7) (10) (10) 
line 382: clear
line 383: buildTree 16
(2) (6) (7) (9) (5) (6) (8) (2) (6) (2) (9) (4) (7) (7) (3) (3) 
line 384: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 385: kNearestNeighbour 3 (4)
(3) (4) (5) 
line 386: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 387: nearestNeighbour (7)
(7) 
line 388: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (8) (9) (9) 
line 389: insert (7)
line 390: inorderTraversal
(2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) 
line 391: insert (1)
line 392: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) 
line 393: insert (8)
line 394: inorderTraversal
(1) (2) (2) (2) (3) (3) (4) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) 
line 395: clear
line 396: buildTree 4
(7) (3) (5) (1) 
line 397: inorderTraversal
(1) (3) (5) (7) 
line 398: kNearestNeighbour 7 (8)
(1) (3) (5) (7) 
line 399: inorderTraversal
(1) (3) (5) (7) 
line 400: insert (7)
line 401: inorderTraversal
(1) (3) (5) (7) (7) 
line 402: search (1)
TRUE
line 403: inorderTraversal
(1) (3) (5) (7) (7) 
line 404: insert (2)
line 405: inorderTraversal
(1) (2) (3) (5) (7) (7) 
line 406: kNearestNeighbour 5 (7)
(2) (3) (5) (7) (7) 
line 407: inorderTraversal
(1) (2) (3) (5) (7) (7) 
line 408: insert (9)
line 409: inorderTraversal
(1) (2) (3) (5) (7) (7) (9) 
line 410: insert (1)
line 411: inorderTraversal
(1) (1) (2) (3) (5) (7) (7) (9) 
line 412: kNearestNeighbour 3 (6)
(5) (7) (7) 
line 413: inorderTraversal
(1) (1) (2) (3) (5) (7) (7) (9) 
line 414: postorderTraversal
(1) (2) (1) (9) (7) (7) (5) (3) 
line 415: inorderTraversal
(1) (1) (2) (3) (5) (7) (7) (9) 
line 416: nearestNeighbour (8)
(9) 
line 417: inorderTraversal
(1) (1) (2) (3) (5) (7) (7) (9) 
line 418: clear
line 419: buildTree 7
(2) (9) (4) (9) (10) (6) (5) 
line 420: inorderTraversal
(2) (4) (5) (6) (9) (9) (10) 
line 421: nodeCount_height_leafCount
nodeCount=7;height=4;leafCount=3
line 422: inorderTraversal
(2) (4) (5) (6) (9) (9) (10) 
line 423: preorderTraversal
(6) (4) (2) (5) (9) (9) (10) 
line 424: postorderTraversal
(2) (5) (4) (10) (9) (9) (6) 
line 425: clear
