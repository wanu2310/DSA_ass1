line 1: k=1
line 2: insert (3)
line 3: inorderTraversal
(3) 
line 4: nearestNeighbour (5)
(3) 
line 5: inorderTraversal
(3) 
line 6: insert (4)
line 7: inorderTraversal
(3) (4) 
line 8: postorderTraversal
(4) (3) 
line 9: inorderTraversal
(3) (4) 
line 10: search (3)
TRUE
line 11: inorderTraversal
(3) (4) 
line 12: remove (3)
line 13: inorderTraversal
(4) 
line 14: nearestNeighbour (2)
(4) 
line 15: inorderTraversal
(4) 
line 16: insert (6)
line 17: inorderTraversal
(4) (6) 
line 18: insert (1)
line 19: inorderTraversal
(1) (4) (6) 
line 20: kNearestNeighbour 9 (5)
(1) (4) (6) 
line 21: inorderTraversal
(1) (4) (6) 
line 22: search (6)
TRUE
line 23: inorderTraversal
(1) (4) (6) 
line 24: nearestNeighbour (3)
(4) 
line 25: inorderTraversal
(1) (4) (6) 
line 26: remove (6)
line 27: inorderTraversal
(1) (4) 
line 28: kNearestNeighbour 2 (10)
(1) (4) 
line 29: inorderTraversal
(1) (4) 
line 30: insert (8)
line 31: inorderTraversal
(1) (4) (8) 
line 32: clear
line 33: buildTree 11
(6) (9) (7) (6) (7) (1) (3) (7) (10) (8) (9) 
line 34: inorderTraversal
(1) (3) (6) (6) (7) (7) (7) (8) (9) (9) (10) 
line 35: kNearestNeighbour 7 (7)
(6) (6) (7) (7) (7) (8) (9) 
line 36: inorderTraversal
(1) (3) (6) (6) (7) (7) (7) (8) (9) (9) (10) 
line 37: insert (7)
line 38: inorderTraversal
(1) (3) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 39: insert (8)
line 40: inorderTraversal
(1) (3) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 41: insert (3)
line 42: inorderTraversal
(1) (3) (3) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 43: insert (4)
line 44: inorderTraversal
(1) (3) (3) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 45: search (7)
TRUE
line 46: inorderTraversal
(1) (3) (3) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 47: kNearestNeighbour 7 (9)
(7) (7) (8) (8) (9) (9) (10) 
line 48: inorderTraversal
(1) (3) (3) (4) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 49: insert (5)
line 50: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 51: nearestNeighbour (2)
(1) 
line 52: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 53: remove (8)
line 54: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 55: kNearestNeighbour 1 (9)
(9) 
line 56: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 57: nearestNeighbour (8)
(8) 
line 58: inorderTraversal
(1) (3) (3) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 59: insert (4)
line 60: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 61: nearestNeighbour (9)
(9) 
line 62: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 63: postorderTraversal
(1) (4) (5) (4) (3) (6) (6) (3) (7) (7) (7) (10) (9) (9) (8) (7) 
line 64: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 65: insert (9)
line 66: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 67: postorderTraversal
(1) (4) (5) (4) (3) (6) (6) (3) (7) (7) (7) (9) (10) (9) (9) (8) (7) 
line 68: inorderTraversal
(1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 69: insert (1)
line 70: inorderTraversal
(1) (1) (3) (3) (4) (4) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (9) (10) 
line 71: clear
line 72: buildTree 7
(6) (6) (5) (7) (1) (9) (2) 
line 73: inorderTraversal
(1) (2) (5) (6) (6) (7) (9) 
line 74: insert (6)
line 75: inorderTraversal
(1) (2) (5) (6) (6) (6) (7) (9) 
line 76: preorderTraversal
(6) (2) (1) (5) (7) (6) (6) (9) 
line 77: inorderTraversal
(1) (2) (5) (6) (6) (6) (7) (9) 
line 78: kNearestNeighbour 4 (1)
(1) (2) (5) (6) 
line 79: inorderTraversal
(1) (2) (5) (6) (6) (6) (7) (9) 
line 80: insert (6)
line 81: inorderTraversal
(1) (2) (5) (6) (6) (6) (6) (7) (9) 
line 82: clear
line 83: buildTree 5
(9) (8) (7) (5) (5) 
line 84: inorderTraversal
(5) (5) (7) (8) (9) 
line 85: insert (4)
line 86: inorderTraversal
(4) (5) (5) (7) (8) (9) 
line 87: kNearestNeighbour 10 (10)
(4) (5) (5) (7) (8) (9) 
line 88: inorderTraversal
(4) (5) (5) (7) (8) (9) 
line 89: nearestNeighbour (10)
(9) 
line 90: inorderTraversal
(4) (5) (5) (7) (8) (9) 
line 91: kNearestNeighbour 3 (4)
(4) (5) (5) 
line 92: inorderTraversal
(4) (5) (5) (7) (8) (9) 
line 93: kNearestNeighbour 4 (1)
(4) (5) (5) (7) 
line 94: inorderTraversal
(4) (5) (5) (7) (8) (9) 
line 95: remove (6)
line 96: inorderTraversal
(4) (5) (5) (7) (8) (9) 
line 97: kNearestNeighbour 2 (5)
(5) (5) 
line 98: inorderTraversal
(4) (5) (5) (7) (8) (9) 
line 99: postorderTraversal
(4) (5) (5) (9) (8) (7) 
line 100: inorderTraversal
(4) (5) (5) (7) (8) (9) 
line 101: insert (4)
line 102: inorderTraversal
(4) (4) (5) (5) (7) (8) (9) 
line 103: preorderTraversal
(7) (5) (4) (4) (5) (8) (9) 
line 104: inorderTraversal
(4) (4) (5) (5) (7) (8) (9) 
line 105: insert (9)
line 106: inorderTraversal
(4) (4) (5) (5) (7) (8) (9) (9) 
line 107: kNearestNeighbour 1 (2)
(4) 
line 108: inorderTraversal
(4) (4) (5) (5) (7) (8) (9) (9) 
line 109: insert (1)
line 110: inorderTraversal
(1) (4) (4) (5) (5) (7) (8) (9) (9) 
line 111: kNearestNeighbour 9 (1)
(1) (4) (4) (5) (5) (7) (8) (9) (9) 
line 112: inorderTraversal
(1) (4) (4) (5) (5) (7) (8) (9) (9) 
line 113: insert (3)
line 114: inorderTraversal
(1) (3) (4) (4) (5) (5) (7) (8) (9) (9) 
line 115: insert (3)
line 116: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (7) (8) (9) (9) 
line 117: nearestNeighbour (2)
(3) 
line 118: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (7) (8) (9) (9) 
line 119: insert (10)
line 120: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (7) (8) (9) (9) (10) 
line 121: kNearestNeighbour 1 (7)
(7) 
line 122: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (7) (8) (9) (9) (10) 
line 123: insert (6)
line 124: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (10) 
line 125: kNearestNeighbour 8 (9)
(5) (5) (6) (7) (8) (9) (9) (10) 
line 126: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (10) 
line 127: insert (10)
line 128: inorderTraversal
(1) (3) (3) (4) (4) (5) (5) (6) (7) (8) (9) (9) (10) (10) 
line 129: clear
line 130: buildTree 14
(10) (6) (6) (6) (8) (9) (1) (2) (6) (3) (6) (1) (3) (10) 
line 131: inorderTraversal
(1) (1) (2) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) 
line 132: search (9)
TRUE
line 133: inorderTraversal
(1) (1) (2) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) 
line 134: kNearestNeighbour 2 (10)
(10) (10) 
line 135: inorderTraversal
(1) (1) (2) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) 
line 136: nearestNeighbour (7)
(6) 
line 137: inorderTraversal
(1) (1) (2) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) 
line 138: kNearestNeighbour 10 (1)
(1) (1) (2) (3) (3) (6) (6) (6) (6) (6) 
line 139: inorderTraversal
(1) (1) (2) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) 
line 140: insert (10)
line 141: inorderTraversal
(1) (1) (2) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) (10) 
line 142: kNearestNeighbour 7 (1)
(1) (1) (2) (3) (3) (6) (6) 
line 143: inorderTraversal
(1) (1) (2) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) (10) 
line 144: nearestNeighbour (4)
(3) 
line 145: inorderTraversal
(1) (1) (2) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) (10) 
line 146: insert (2)
line 147: inorderTraversal
(1) (1) (2) (2) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) (10) 
line 148: insert (3)
line 149: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (6) (6) (6) (6) (6) (8) (9) (10) (10) (10) 
line 150: insert (5)
line 151: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (6) (6) (6) (8) (9) (10) (10) (10) 
line 152: insert (9)
line 153: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (5) (6) (6) (6) (6) (6) (8) (9) (9) (10) (10) (10) 
line 154: insert (5)
line 155: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (6) (8) (9) (9) (10) (10) (10) 
line 156: kNearestNeighbour 1 (5)
(5) 
line 157: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (6) (8) (9) (9) (10) (10) (10) 
line 158: kNearestNeighbour 1 (3)
(3) 
line 159: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (6) (8) (9) (9) (10) (10) (10) 
line 160: nearestNeighbour (6)
(6) 
line 161: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (6) (8) (9) (9) (10) (10) (10) 
line 162: clear
line 163: buildTree 4
(10) (5) (5) (2) 
line 164: inorderTraversal
(2) (5) (5) (10) 
line 165: remove (5)
line 166: inorderTraversal
(2) (5) (10) 
line 167: nearestNeighbour (5)
(5) 
line 168: inorderTraversal
(2) (5) (10) 
line 169: insert (10)
line 170: inorderTraversal
(2) (5) (10) (10) 
line 171: insert (3)
line 172: inorderTraversal
(2) (3) (5) (10) (10) 
line 173: insert (5)
line 174: inorderTraversal
(2) (3) (5) (5) (10) (10) 
line 175: insert (1)
line 176: inorderTraversal
(1) (2) (3) (5) (5) (10) (10) 
line 177: kNearestNeighbour 10 (1)
(1) (2) (3) (5) (5) (10) (10) 
line 178: inorderTraversal
(1) (2) (3) (5) (5) (10) (10) 
line 179: search (2)
TRUE
line 180: inorderTraversal
(1) (2) (3) (5) (5) (10) (10) 
line 181: nearestNeighbour (2)
(2) 
line 182: inorderTraversal
(1) (2) (3) (5) (5) (10) (10) 
line 183: nearestNeighbour (1)
(1) 
line 184: inorderTraversal
(1) (2) (3) (5) (5) (10) (10) 
line 185: insert (1)
line 186: inorderTraversal
(1) (1) (2) (3) (5) (5) (10) (10) 
line 187: insert (7)
line 188: inorderTraversal
(1) (1) (2) (3) (5) (5) (7) (10) (10) 
line 189: nearestNeighbour (10)
(10) 
line 190: inorderTraversal
(1) (1) (2) (3) (5) (5) (7) (10) (10) 
line 191: kNearestNeighbour 5 (10)
(5) (5) (7) (10) (10) 
line 192: inorderTraversal
(1) (1) (2) (3) (5) (5) (7) (10) (10) 
line 193: insert (2)
line 194: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (10) (10) 
line 195: remove (8)
line 196: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (10) (10) 
line 197: insert (9)
line 198: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (9) (10) (10) 
line 199: insert (5)
line 200: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (5) (7) (9) (10) (10) 
line 201: remove (5)
line 202: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (9) (10) (10) 
line 203: insert (10)
line 204: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (9) (10) (10) (10) 
line 205: remove (10)
line 206: inorderTraversal
(1) (1) (2) (2) (3) (5) (5) (7) (9) (10) (10) 
line 207: insert (4)
line 208: inorderTraversal
(1) (1) (2) (2) (3) (4) (5) (5) (7) (9) (10) (10) 
line 209: remove (1)
line 210: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (7) (9) (10) (10) 
line 211: nearestNeighbour (1)
(1) 
line 212: inorderTraversal
(1) (2) (2) (3) (4) (5) (5) (7) (9) (10) (10) 
line 213: remove (2)
line 214: inorderTraversal
(1) (2) (3) (4) (5) (5) (7) (9) (10) (10) 
line 215: clear
line 216: buildTree 7
(3) (5) (4) (10) (8) (3) (2) 
line 217: inorderTraversal
(2) (3) (3) (4) (5) (8) (10) 
line 218: insert (8)
line 219: inorderTraversal
(2) (3) (3) (4) (5) (8) (8) (10) 
line 220: nearestNeighbour (9)
(8) 
line 221: inorderTraversal
(2) (3) (3) (4) (5) (8) (8) (10) 
line 222: nearestNeighbour (5)
(5) 
line 223: inorderTraversal
(2) (3) (3) (4) (5) (8) (8) (10) 
line 224: remove (8)
line 225: inorderTraversal
(2) (3) (3) (4) (5) (8) (10) 
line 226: insert (6)
line 227: inorderTraversal
(2) (3) (3) (4) (5) (6) (8) (10) 
line 228: insert (3)
line 229: inorderTraversal
(2) (3) (3) (3) (4) (5) (6) (8) (10) 
line 230: insert (7)
line 231: inorderTraversal
(2) (3) (3) (3) (4) (5) (6) (7) (8) (10) 
line 232: remove (5)
line 233: inorderTraversal
(2) (3) (3) (3) (4) (6) (7) (8) (10) 
line 234: kNearestNeighbour 9 (5)
(2) (3) (3) (3) (4) (6) (7) (8) (10) 
line 235: inorderTraversal
(2) (3) (3) (3) (4) (6) (7) (8) (10) 
line 236: kNearestNeighbour 1 (8)
(8) 
line 237: inorderTraversal
(2) (3) (3) (3) (4) (6) (7) (8) (10) 
line 238: insert (9)
line 239: inorderTraversal
(2) (3) (3) (3) (4) (6) (7) (8) (9) (10) 
line 240: nearestNeighbour (5)
(6) 
line 241: inorderTraversal
(2) (3) (3) (3) (4) (6) (7) (8) (9) (10) 
line 242: kNearestNeighbour 6 (7)
(4) (6) (7) (8) (9) (10) 
line 243: inorderTraversal
(2) (3) (3) (3) (4) (6) (7) (8) (9) (10) 
line 244: remove (4)
line 245: inorderTraversal
(2) (3) (3) (3) (6) (7) (8) (9) (10) 
line 246: insert (7)
line 247: inorderTraversal
(2) (3) (3) (3) (6) (7) (7) (8) (9) (10) 
line 248: nearestNeighbour (7)
(7) 
line 249: inorderTraversal
(2) (3) (3) (3) (6) (7) (7) (8) (9) (10) 
line 250: remove (8)
line 251: inorderTraversal
(2) (3) (3) (3) (6) (7) (7) (9) (10) 
line 252: clear
line 253: buildTree 15
(10) (3) (6) (8) (6) (4) (1) (3) (7) (8) (1) (5) (2) (10) (5) 
line 254: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (10) (10) 
line 255: insert (6)
line 256: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (10) (10) 
line 257: insert (9)
line 258: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 259: nodeCount_height_leafCount
nodeCount=17;height=6;leafCount=6
line 260: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 261: kNearestNeighbour 6 (5)
(4) (5) (5) (6) (6) (6) 
line 262: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 263: insert (5)
line 264: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (10) (10) 
line 265: remove (7)
line 266: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (8) (8) (9) (10) (10) 
line 267: insert (9)
line 268: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (8) (8) (9) (9) (10) (10) 
line 269: kNearestNeighbour 1 (10)
(10) 
line 270: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (8) (8) (9) (9) (10) (10) 
line 271: insert (7)
line 272: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 273: kNearestNeighbour 3 (3)
(3) (3) (4) 
line 274: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 275: preorderTraversal
(5) (2) (1) (1) (3) (3) (4) (8) (6) (5) (5) (6) (6) (7) (8) (10) (9) (9) (10) 
line 276: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) 
line 277: insert (10)
line 278: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 279: nearestNeighbour (7)
(7) 
line 280: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 281: insert (9)
line 282: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 283: postorderTraversal
(1) (1) (4) (3) (3) (2) (5) (5) (7) (6) (6) (6) (9) (9) (9) (10) (10) (10) (8) (8) (5) 
line 284: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (9) (10) (10) (10) 
line 285: remove (9)
line 286: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 287: kNearestNeighbour 9 (8)
(6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 288: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (8) (8) (9) (9) (10) (10) (10) 
line 289: insert (7)
line 290: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 291: insert (7)
line 292: inorderTraversal
(1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (7) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 293: clear
line 294: buildTree 8
(8) (1) (10) (3) (5) (2) (1) (3) 
line 295: inorderTraversal
(1) (1) (2) (3) (3) (5) (8) (10) 
line 296: kNearestNeighbour 10 (4)
(1) (1) (2) (3) (3) (5) (8) (10) 
line 297: inorderTraversal
(1) (1) (2) (3) (3) (5) (8) (10) 
line 298: clear
line 299: buildTree 11
(5) (1) (6) (7) (1) (4) (3) (7) (9) (2) (8) 
line 300: inorderTraversal
(1) (1) (2) (3) (4) (5) (6) (7) (7) (8) (9) 
line 301: remove (5)
line 302: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (8) (9) 
line 303: insert (10)
line 304: inorderTraversal
(1) (1) (2) (3) (4) (6) (7) (7) (8) (9) (10) 
line 305: insert (2)
line 306: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (8) (9) (10) 
line 307: nearestNeighbour (8)
(8) 
line 308: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (7) (7) (8) (9) (10) 
line 309: remove (1)
line 310: inorderTraversal
(1) (2) (2) (3) (4) (6) (7) (7) (8) (9) (10) 
line 311: remove (6)
line 312: inorderTraversal
(1) (2) (2) (3) (4) (7) (7) (8) (9) (10) 
line 313: clear
line 314: buildTree 19
(1) (9) (6) (1) (3) (9) (5) (3) (3) (5) (8) (1) (5) (9) (7) (10) (8) (3) (4) 
line 315: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (9) (9) (9) (10) 
line 316: insert (9)
line 317: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (6) (7) (8) (8) (9) (9) (9) (9) (10) 
line 318: remove (8)
line 319: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (6) (7) (8) (9) (9) (9) (9) (10) 
line 320: insert (9)
line 321: inorderTraversal
(1) (1) (1) (3) (3) (3) (3) (4) (5) (5) (5) (6) (7) (8) (9) (9) (9) (9) (9) (10) 
line 322: clear
line 323: buildTree 14
(5) (10) (5) (3) (5) (5) (4) (1) (3) (6) (8) (10) (9) (5) 
line 324: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (10) (10) 
line 325: insert (3)
line 326: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (10) (10) 
line 327: insert (9)
line 328: inorderTraversal
(1) (3) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (10) (10) 
line 329: remove (3)
line 330: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (10) (10) 
line 331: nearestNeighbour (8)
(8) 
line 332: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (10) (10) 
line 333: insert (9)
line 334: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) 
line 335: insert (1)
line 336: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) 
line 337: nearestNeighbour (4)
(4) 
line 338: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) 
line 339: postorderTraversal
(1) (1) (4) (3) (3) (5) (5) (5) (5) (8) (9) (9) (10) (10) (9) (6) (5) 
line 340: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) 
line 341: postorderTraversal
(1) (1) (4) (3) (3) (5) (5) (5) (5) (8) (9) (9) (10) (10) (9) (6) (5) 
line 342: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) 
line 343: kNearestNeighbour 2 (9)
(9) (9) 
line 344: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) 
line 345: preorderTraversal
(5) (3) (1) (1) (3) (4) (6) (5) (5) (5) (5) (9) (8) (10) (9) (9) (10) 
line 346: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (9) (9) (9) (10) (10) 
line 347: insert (8)
line 348: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 349: nearestNeighbour (7)
(8) 
line 350: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 351: insert (5)
line 352: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 353: nearestNeighbour (7)
(8) 
line 354: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 355: kNearestNeighbour 6 (10)
(8) (9) (9) (9) (10) (10) 
line 356: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 357: remove (1)
line 358: inorderTraversal
(1) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 359: insert (1)
line 360: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 361: postorderTraversal
(1) (1) (4) (3) (3) (5) (5) (5) (5) (5) (8) (8) (9) (9) (10) (10) (9) (6) (5) 
line 362: inorderTraversal
(1) (1) (3) (3) (4) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 363: remove (4)
line 364: inorderTraversal
(1) (1) (3) (3) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 365: nearestNeighbour (7)
(8) 
line 366: inorderTraversal
(1) (1) (3) (3) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 367: nearestNeighbour (7)
(8) 
line 368: inorderTraversal
(1) (1) (3) (3) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) 
line 369: insert (10)
line 370: inorderTraversal
(1) (1) (3) (3) (5) (5) (5) (5) (5) (5) (6) (8) (8) (9) (9) (9) (10) (10) (10) 
line 371: clear
line 372: buildTree 11
(9) (6) (9) (2) (4) (2) (1) (9) (9) (9) (1) 
line 373: inorderTraversal
(1) (1) (2) (2) (4) (6) (9) (9) (9) (9) (9) 
line 374: kNearestNeighbour 4 (10)
(9) (9) (9) (9) 
line 375: inorderTraversal
(1) (1) (2) (2) (4) (6) (9) (9) (9) (9) (9) 
line 376: insert (3)
line 377: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (9) (9) (9) (9) (9) 
line 378: insert (6)
line 379: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (6) (9) (9) (9) (9) (9) 
line 380: remove (9)
line 381: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (6) (9) (9) (9) (9) 
line 382: postorderTraversal
(1) (1) (3) (4) (2) (2) (6) (9) (9) (9) (9) (6) 
line 383: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (6) (9) (9) (9) (9) 
line 384: insert (8)
line 385: inorderTraversal
(1) (1) (2) (2) (3) (4) (6) (6) (8) (9) (9) (9) (9) 
line 386: clear
line 387: buildTree 2
(10) (5) 
line 388: inorderTraversal
(5) (10) 
line 389: remove (8)
line 390: inorderTraversal
(5) (10) 
line 391: kNearestNeighbour 8 (5)
(5) (10) 
line 392: inorderTraversal
(5) (10) 
line 393: kNearestNeighbour 2 (9)
(5) (10) 
line 394: inorderTraversal
(5) (10) 
line 395: insert (2)
line 396: inorderTraversal
(2) (5) (10) 
line 397: insert (9)
line 398: inorderTraversal
(2) (5) (9) (10) 
line 399: kNearestNeighbour 9 (5)
(2) (5) (9) (10) 
line 400: inorderTraversal
(2) (5) (9) (10) 
line 401: insert (8)
line 402: inorderTraversal
(2) (5) (8) (9) (10) 
line 403: kNearestNeighbour 1 (9)
(9) 
line 404: inorderTraversal
(2) (5) (8) (9) (10) 
line 405: clear
line 406: buildTree 17
(7) (5) (10) (8) (5) (4) (4) (3) (3) (5) (8) (2) (7) (10) (7) (9) (10) 
line 407: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 408: nearestNeighbour (8)
(8) 
line 409: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 410: kNearestNeighbour 1 (2)
(2) 
line 411: inorderTraversal
(2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 412: insert (1)
line 413: inorderTraversal
(1) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 414: insert (2)
line 415: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 416: nodeCount_height_leafCount
nodeCount=19;height=5;leafCount=8
line 417: inorderTraversal
(1) (2) (2) (3) (3) (4) (4) (5) (5) (5) (7) (7) (7) (8) (8) (9) (10) (10) (10) 
line 418: preorderTraversal
(7) (4) (3) (2) (1) (2) (3) (5) (4) (5) (5) (8) (7) (7) (10) (8) (9) (10) (10) 
line 419: postorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (4) (7) (7) (9) (8) (10) (10) (10) (8) (7) 
line 420: clear
