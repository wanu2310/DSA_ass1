line 1: k=1
line 2: nearestNeighbour (4)

line 3: inorderTraversal

line 4: postorderTraversal

line 5: inorderTraversal

line 6: insert (4)
line 7: inorderTraversal
(4) 
line 8: insert (1)
line 9: inorderTraversal
(1) (4) 
line 10: insert (2)
line 11: inorderTraversal
(1) (2) (4) 
line 12: insert (4)
line 13: inorderTraversal
(1) (2) (4) (4) 
line 14: insert (7)
line 15: inorderTraversal
(1) (2) (4) (4) (7) 
line 16: nearestNeighbour (2)
(2) 
line 17: inorderTraversal
(1) (2) (4) (4) (7) 
line 18: nearestNeighbour (7)
(7) 
line 19: inorderTraversal
(1) (2) (4) (4) (7) 
line 20: nearestNeighbour (9)
(7) 
line 21: inorderTraversal
(1) (2) (4) (4) (7) 
line 22: nodeCount_height_leafCount
nodeCount=5;height=3;leafCount=2
line 23: inorderTraversal
(1) (2) (4) (4) (7) 
line 24: nearestNeighbour (1)
(1) 
line 25: inorderTraversal
(1) (2) (4) (4) (7) 
line 26: insert (1)
line 27: inorderTraversal
(1) (1) (2) (4) (4) (7) 
line 28: nearestNeighbour (1)
(1) 
line 29: inorderTraversal
(1) (1) (2) (4) (4) (7) 
line 30: nearestNeighbour (8)
(7) 
line 31: inorderTraversal
(1) (1) (2) (4) (4) (7) 
line 32: insert (5)
line 33: inorderTraversal
(1) (1) (2) (4) (4) (5) (7) 
line 34: kNearestNeighbour 4 (1)
(1) (1) (2) (4) 
line 35: inorderTraversal
(1) (1) (2) (4) (4) (5) (7) 
line 36: remove (7)
line 37: inorderTraversal
(1) (1) (2) (4) (4) (5) 
line 38: nearestNeighbour (10)
(5) 
line 39: inorderTraversal
(1) (1) (2) (4) (4) (5) 
line 40: nearestNeighbour (6)
(5) 
line 41: inorderTraversal
(1) (1) (2) (4) (4) (5) 
line 42: clear
line 43: buildTree 16
(7) (7) (5) (10) (8) (9) (5) (8) (6) (3) (2) (4) (4) (10) (8) (8) 
line 44: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 45: nearestNeighbour (9)
(9) 
line 46: inorderTraversal
(2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 47: insert (2)
line 48: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 49: kNearestNeighbour 10 (5)
(2) (2) (3) (4) (4) (5) (5) (6) (7) (7) 
line 50: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 51: insert (6)
line 52: inorderTraversal
(2) (2) (3) (4) (4) (5) (5) (6) (6) (7) (7) (8) (8) (8) (8) (9) (10) (10) 
line 53: clear
line 54: buildTree 7
(9) (3) (5) (7) (4) (3) (4) 
line 55: inorderTraversal
(3) (3) (4) (4) (5) (7) (9) 
line 56: remove (3)
line 57: inorderTraversal
(3) (4) (4) (5) (7) (9) 
line 58: nearestNeighbour (2)
(3) 
line 59: inorderTraversal
(3) (4) (4) (5) (7) (9) 
line 60: remove (9)
line 61: inorderTraversal
(3) (4) (4) (5) (7) 
line 62: nearestNeighbour (4)
(4) 
line 63: inorderTraversal
(3) (4) (4) (5) (7) 
line 64: nearestNeighbour (6)
(7) 
line 65: inorderTraversal
(3) (4) (4) (5) (7) 
line 66: nearestNeighbour (1)
(3) 
line 67: inorderTraversal
(3) (4) (4) (5) (7) 
line 68: insert (9)
line 69: inorderTraversal
(3) (4) (4) (5) (7) (9) 
line 70: insert (2)
line 71: inorderTraversal
(2) (3) (4) (4) (5) (7) (9) 
line 72: clear
line 73: buildTree 8
(8) (9) (9) (8) (5) (4) (6) (7) 
line 74: inorderTraversal
(4) (5) (6) (7) (8) (8) (9) (9) 
line 75: insert (6)
line 76: inorderTraversal
(4) (5) (6) (6) (7) (8) (8) (9) (9) 
line 77: nearestNeighbour (2)
(4) 
line 78: inorderTraversal
(4) (5) (6) (6) (7) (8) (8) (9) (9) 
line 79: nearestNeighbour (5)
(5) 
line 80: inorderTraversal
(4) (5) (6) (6) (7) (8) (8) (9) (9) 
line 81: insert (8)
line 82: inorderTraversal
(4) (5) (6) (6) (7) (8) (8) (8) (9) (9) 
line 83: insert (6)
line 84: inorderTraversal
(4) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) 
line 85: insert (5)
line 86: inorderTraversal
(4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) 
line 87: search (6)
TRUE
line 88: inorderTraversal
(4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) 
line 89: nearestNeighbour (6)
(6) 
line 90: inorderTraversal
(4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) 
line 91: insert (4)
line 92: inorderTraversal
(4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (9) (9) 
line 93: insert (8)
line 94: inorderTraversal
(4) (4) (5) (5) (6) (6) (6) (7) (8) (8) (8) (8) (9) (9) 
line 95: clear
line 96: buildTree 4
(7) (9) (8) (8) 
line 97: inorderTraversal
(7) (8) (8) (9) 
line 98: nearestNeighbour (9)
(9) 
line 99: inorderTraversal
(7) (8) (8) (9) 
line 100: nearestNeighbour (9)
(9) 
line 101: inorderTraversal
(7) (8) (8) (9) 
line 102: insert (8)
line 103: inorderTraversal
(7) (8) (8) (8) (9) 
line 104: remove (3)
line 105: inorderTraversal
(7) (8) (8) (8) (9) 
line 106: remove (9)
line 107: inorderTraversal
(7) (8) (8) (8) 
line 108: nearestNeighbour (4)
(7) 
line 109: inorderTraversal
(7) (8) (8) (8) 
line 110: insert (3)
line 111: inorderTraversal
(3) (7) (8) (8) (8) 
line 112: insert (3)
line 113: inorderTraversal
(3) (3) (7) (8) (8) (8) 
line 114: nodeCount_height_leafCount
nodeCount=6;height=4;leafCount=2
line 115: inorderTraversal
(3) (3) (7) (8) (8) (8) 
line 116: nearestNeighbour (2)
(3) 
line 117: inorderTraversal
(3) (3) (7) (8) (8) (8) 
line 118: nearestNeighbour (2)
(3) 
line 119: inorderTraversal
(3) (3) (7) (8) (8) (8) 
line 120: insert (5)
line 121: inorderTraversal
(3) (3) (5) (7) (8) (8) (8) 
line 122: kNearestNeighbour 9 (1)
(3) (3) (5) (7) (8) (8) (8) 
line 123: inorderTraversal
(3) (3) (5) (7) (8) (8) (8) 
line 124: insert (6)
line 125: inorderTraversal
(3) (3) (5) (6) (7) (8) (8) (8) 
line 126: search (7)
TRUE
line 127: inorderTraversal
(3) (3) (5) (6) (7) (8) (8) (8) 
line 128: insert (3)
line 129: inorderTraversal
(3) (3) (3) (5) (6) (7) (8) (8) (8) 
line 130: nearestNeighbour (5)
(5) 
line 131: inorderTraversal
(3) (3) (3) (5) (6) (7) (8) (8) (8) 
line 132: insert (1)
line 133: inorderTraversal
(1) (3) (3) (3) (5) (6) (7) (8) (8) (8) 
line 134: remove (6)
line 135: inorderTraversal
(1) (3) (3) (3) (5) (7) (8) (8) (8) 
line 136: insert (7)
line 137: inorderTraversal
(1) (3) (3) (3) (5) (7) (7) (8) (8) (8) 
line 138: nearestNeighbour (6)
(5) 
line 139: inorderTraversal
(1) (3) (3) (3) (5) (7) (7) (8) (8) (8) 
line 140: insert (9)
line 141: inorderTraversal
(1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) 
line 142: insert (10)
line 143: inorderTraversal
(1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (10) 
line 144: insert (1)
line 145: inorderTraversal
(1) (1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (10) 
line 146: search (8)
TRUE
line 147: inorderTraversal
(1) (1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (10) 
line 148: nearestNeighbour (10)
(10) 
line 149: inorderTraversal
(1) (1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (10) 
line 150: insert (9)
line 151: inorderTraversal
(1) (1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) 
line 152: nearestNeighbour (4)
(3) 
line 153: inorderTraversal
(1) (1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) 
line 154: nearestNeighbour (3)
(3) 
line 155: inorderTraversal
(1) (1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) 
line 156: insert (10)
line 157: inorderTraversal
(1) (1) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 158: insert (2)
line 159: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 160: kNearestNeighbour 1 (6)
(5) 
line 161: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 162: nearestNeighbour (4)
(3) 
line 163: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 164: nearestNeighbour (2)
(2) 
line 165: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 166: kNearestNeighbour 9 (9)
(7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 167: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 168: nearestNeighbour (1)
(1) 
line 169: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 170: kNearestNeighbour 3 (6)
(5) (7) (7) 
line 171: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 172: insert (10)
line 173: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 174: insert (5)
line 175: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 176: nodeCount_height_leafCount
nodeCount=18;height=7;leafCount=6
line 177: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 178: nearestNeighbour (10)
(10) 
line 179: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 180: kNearestNeighbour 2 (7)
(7) (7) 
line 181: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) (10) 
line 182: remove (10)
line 183: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 184: nearestNeighbour (1)
(1) 
line 185: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 186: kNearestNeighbour 1 (6)
(5) 
line 187: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 188: search (8)
TRUE
line 189: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 190: preorderTraversal
(8) (7) (3) (1) (1) (2) (3) (5) (3) (5) (7) (8) (8) (9) (10) (9) (10) 
line 191: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 192: kNearestNeighbour 3 (1)
(1) (1) (2) 
line 193: inorderTraversal
(1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 194: insert (1)
line 195: inorderTraversal
(1) (1) (1) (2) (3) (3) (3) (5) (5) (7) (7) (8) (8) (8) (9) (9) (10) (10) 
line 196: clear
line 197: buildTree 11
(1) (5) (3) (5) (5) (8) (2) (4) (1) (1) (6) 
line 198: inorderTraversal
(1) (1) (1) (2) (3) (4) (5) (5) (5) (6) (8) 
line 199: insert (3)
line 200: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (8) 
line 201: insert (6)
line 202: inorderTraversal
(1) (1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (8) 
line 203: insert (1)
line 204: inorderTraversal
(1) (1) (1) (1) (2) (3) (3) (4) (5) (5) (5) (6) (6) (8) 
line 205: remove (2)
line 206: inorderTraversal
(1) (1) (1) (1) (3) (3) (4) (5) (5) (5) (6) (6) (8) 
line 207: insert (3)
line 208: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (4) (5) (5) (5) (6) (6) (8) 
line 209: remove (4)
line 210: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (5) (5) (5) (6) (6) (8) 
line 211: kNearestNeighbour 4 (6)
(5) (5) (6) (6) 
line 212: inorderTraversal
(1) (1) (1) (1) (3) (3) (3) (5) (5) (5) (6) (6) (8) 
line 213: insert (1)
line 214: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (3) (5) (5) (5) (6) (6) (8) 
line 215: insert (10)
line 216: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (3) (5) (5) (5) (6) (6) (8) (10) 
line 217: insert (10)
line 218: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (3) (5) (5) (5) (6) (6) (8) (10) (10) 
line 219: insert (2)
line 220: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (5) (6) (6) (8) (10) (10) 
line 221: postorderTraversal
(2) (1) (1) (1) (3) (3) (3) (1) (1) (6) (10) (10) (8) (6) (5) (5) (5) 
line 222: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (5) (6) (6) (8) (10) (10) 
line 223: insert (6)
line 224: inorderTraversal
(1) (1) (1) (1) (1) (2) (3) (3) (3) (5) (5) (5) (6) (6) (6) (8) (10) (10) 
line 225: remove (2)
line 226: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (3) (5) (5) (5) (6) (6) (6) (8) (10) (10) 
line 227: nearestNeighbour (5)
(5) 
line 228: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (3) (5) (5) (5) (6) (6) (6) (8) (10) (10) 
line 229: insert (7)
line 230: inorderTraversal
(1) (1) (1) (1) (1) (3) (3) (3) (5) (5) (5) (6) (6) (6) (7) (8) (10) (10) 
line 231: clear
line 232: buildTree 14
(8) (6) (6) (2) (3) (8) (8) (3) (8) (1) (9) (4) (6) (7) 
line 233: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (6) (7) (8) (8) (8) (8) (9) 
line 234: insert (7)
line 235: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (8) (8) (8) (8) (9) 
line 236: kNearestNeighbour 7 (9)
(7) (7) (8) (8) (8) (8) (9) 
line 237: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (8) (8) (8) (8) (9) 
line 238: insert (8)
line 239: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) 
line 240: postorderTraversal
(2) (1) (4) (3) (3) (7) (7) (6) (6) (8) (9) (8) (8) (8) (8) (6) 
line 241: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (8) (8) (8) (8) (8) (9) 
line 242: insert (7)
line 243: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) 
line 244: insert (8)
line 245: inorderTraversal
(1) (2) (3) (3) (4) (6) (6) (6) (7) (7) (7) (8) (8) (8) (8) (8) (8) (9) 
line 246: clear
line 247: buildTree 11
(3) (2) (8) (2) (2) (1) (10) (6) (9) (6) (1) 
line 248: inorderTraversal
(1) (1) (2) (2) (2) (3) (6) (6) (8) (9) (10) 
line 249: clear
line 250: buildTree 18
(6) (4) (7) (2) (7) (2) (7) (3) (10) (5) (3) (6) (6) (10) (5) (1) (6) (5) 
line 251: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (10) (10) 
line 252: nearestNeighbour (10)
(10) 
line 253: inorderTraversal
(1) (2) (2) (3) (3) (4) (5) (5) (5) (6) (6) (6) (6) (7) (7) (7) (10) (10) 
line 254: clear
line 255: buildTree 17
(9) (9) (3) (7) (2) (4) (2) (6) (8) (3) (1) (5) (4) (2) (9) (6) (2) 
line 256: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) 
line 257: nearestNeighbour (1)
(1) 
line 258: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) 
line 259: insert (4)
line 260: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (4) (4) (5) (6) (6) (7) (8) (9) (9) (9) 
line 261: insert (5)
line 262: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) 
line 263: kNearestNeighbour 5 (5)
(4) (5) (5) (6) (6) 
line 264: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) 
line 265: nearestNeighbour (2)
(2) 
line 266: inorderTraversal
(1) (2) (2) (2) (2) (3) (3) (4) (4) (4) (5) (5) (6) (6) (7) (8) (9) (9) (9) 
line 267: clear
line 268: buildTree 19
(3) (7) (5) (10) (5) (2) (3) (4) (7) (10) (2) (9) (9) (6) (4) (10) (1) (5) (3) 
line 269: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (9) (9) (10) (10) (10) 
line 270: nearestNeighbour (10)
(10) 
line 271: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (9) (9) (10) (10) (10) 
line 272: insert (10)
line 273: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (9) (9) (10) (10) (10) (10) 
line 274: nearestNeighbour (7)
(7) 
line 275: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (9) (9) (10) (10) (10) (10) 
line 276: nearestNeighbour (8)
(7) 
line 277: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (9) (9) (10) (10) (10) (10) 
line 278: insert (8)
line 279: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 280: search (10)
TRUE
line 281: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 282: nearestNeighbour (2)
(2) 
line 283: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 284: nearestNeighbour (2)
(2) 
line 285: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 286: insert (5)
line 287: inorderTraversal
(1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 288: insert (1)
line 289: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 290: insert (4)
line 291: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 292: preorderTraversal
(5) (3) (2) (1) (1) (2) (3) (4) (3) (4) (4) (7) (5) (5) (6) (5) (9) (7) (8) (10) (9) (10) (10) (10) 
line 293: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 294: nearestNeighbour (1)
(1) 
line 295: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 296: nearestNeighbour (10)
(10) 
line 297: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 298: insert (5)
line 299: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 300: kNearestNeighbour 5 (5)
(5) (5) (5) (5) (5) 
line 301: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 302: kNearestNeighbour 7 (4)
(3) (3) (3) (4) (4) (4) (5) 
line 303: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 304: kNearestNeighbour 4 (3)
(3) (3) (3) (4) 
line 305: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (8) (9) (9) (10) (10) (10) (10) 
line 306: insert (8)
line 307: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 308: search (8)
TRUE
line 309: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) (10) 
line 310: remove (10)
line 311: inorderTraversal
(1) (1) (2) (2) (3) (3) (3) (4) (4) (4) (5) (5) (5) (5) (5) (6) (7) (7) (8) (8) (9) (9) (10) (10) (10) 
line 312: clear
line 313: buildTree 13
(5) (5) (10) (2) (3) (7) (4) (6) (6) (8) (10) (5) (3) 
line 314: inorderTraversal
(2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (10) (10) 
line 315: postorderTraversal
(2) (4) (3) (3) (5) (5) (7) (6) (10) (10) (8) (6) (5) 
line 316: inorderTraversal
(2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (10) (10) 
line 317: kNearestNeighbour 10 (10)
(4) (5) (5) (5) (6) (6) (7) (8) (10) (10) 
line 318: inorderTraversal
(2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (8) (10) (10) 
line 319: insert (7)
line 320: inorderTraversal
(2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (10) (10) 
line 321: kNearestNeighbour 1 (8)
(8) 
line 322: inorderTraversal
(2) (3) (3) (4) (5) (5) (5) (6) (6) (7) (7) (8) (10) (10) 
line 323: clear
line 324: buildTree 15
(7) (3) (8) (1) (8) (5) (3) (1) (2) (6) (7) (6) (7) (7) (7) 
line 325: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (7) (7) (7) (7) (7) (8) (8) 
line 326: nearestNeighbour (7)
(7) 
line 327: inorderTraversal
(1) (1) (2) (3) (3) (5) (6) (6) (7) (7) (7) (7) (7) (8) (8) 
line 328: insert (2)
line 329: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (7) (7) (7) (7) (7) (8) (8) 
line 330: remove (7)
line 331: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (7) (7) (7) (7) (8) (8) 
line 332: kNearestNeighbour 9 (5)
(3) (3) (5) (6) (6) (7) (7) (7) (7) 
line 333: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (7) (7) (7) (7) (8) (8) 
line 334: insert (7)
line 335: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (7) (7) (7) (7) (7) (8) (8) 
line 336: insert (9)
line 337: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) 
line 338: kNearestNeighbour 5 (1)
(1) (1) (2) (2) (3) 
line 339: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) 
line 340: insert (6)
line 341: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) 
line 342: kNearestNeighbour 6 (4)
(2) (2) (3) (3) (5) (6) 
line 343: inorderTraversal
(1) (1) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) 
line 344: insert (2)
line 345: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) 
line 346: nearestNeighbour (8)
(8) 
line 347: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) 
line 348: nearestNeighbour (6)
(6) 
line 349: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (9) 
line 350: insert (8)
line 351: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) 
line 352: insert (6)
line 353: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) 
line 354: nearestNeighbour (10)
(9) 
line 355: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) 
line 356: kNearestNeighbour 2 (6)
(6) (6) 
line 357: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) 
line 358: nearestNeighbour (7)
(7) 
line 359: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) 
line 360: insert (10)
line 361: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 362: nearestNeighbour (8)
(8) 
line 363: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 364: search (3)
TRUE
line 365: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 366: nearestNeighbour (3)
(3) 
line 367: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 368: kNearestNeighbour 9 (6)
(6) (6) (6) (6) (7) (7) (7) (7) (7) 
line 369: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 370: search (6)
TRUE
line 371: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 372: nearestNeighbour (4)
(5) 
line 373: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 374: kNearestNeighbour 2 (2)
(2) (2) 
line 375: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 376: kNearestNeighbour 9 (10)
(7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 377: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 378: insert (9)
line 379: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 380: insert (3)
line 381: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 382: remove (9)
line 383: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (10) 
line 384: insert (9)
line 385: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 386: insert (5)
line 387: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 388: insert (6)
line 389: inorderTraversal
(1) (1) (2) (2) (2) (3) (3) (3) (5) (5) (6) (6) (6) (6) (6) (7) (7) (7) (7) (7) (8) (8) (8) (9) (9) (10) 
line 390: clear
line 391: buildTree 5
(10) (2) (9) (6) (9) 
line 392: inorderTraversal
(2) (6) (9) (9) (10) 
line 393: insert (10)
line 394: inorderTraversal
(2) (6) (9) (9) (10) (10) 
line 395: insert (1)
line 396: inorderTraversal
(1) (2) (6) (9) (9) (10) (10) 
line 397: kNearestNeighbour 1 (7)
(6) 
line 398: inorderTraversal
(1) (2) (6) (9) (9) (10) (10) 
line 399: insert (6)
line 400: inorderTraversal
(1) (2) (6) (6) (9) (9) (10) (10) 
line 401: nearestNeighbour (3)
(2) 
line 402: inorderTraversal
(1) (2) (6) (6) (9) (9) (10) (10) 
line 403: nearestNeighbour (1)
(1) 
line 404: inorderTraversal
(1) (2) (6) (6) (9) (9) (10) (10) 
line 405: search (6)
TRUE
line 406: inorderTraversal
(1) (2) (6) (6) (9) (9) (10) (10) 
line 407: insert (1)
line 408: inorderTraversal
(1) (1) (2) (6) (6) (9) (9) (10) (10) 
line 409: kNearestNeighbour 1 (8)
(9) 
line 410: inorderTraversal
(1) (1) (2) (6) (6) (9) (9) (10) (10) 
line 411: postorderTraversal
(1) (1) (6) (6) (2) (10) (10) (9) (9) 
line 412: inorderTraversal
(1) (1) (2) (6) (6) (9) (9) (10) (10) 
line 413: kNearestNeighbour 7 (6)
(2) (6) (6) (9) (9) (10) (10) 
line 414: inorderTraversal
(1) (1) (2) (6) (6) (9) (9) (10) (10) 
line 415: nodeCount_height_leafCount
nodeCount=9;height=4;leafCount=3
line 416: inorderTraversal
(1) (1) (2) (6) (6) (9) (9) (10) (10) 
line 417: preorderTraversal
(9) (2) (1) (1) (6) (6) (9) (10) (10) 
line 418: postorderTraversal
(1) (1) (6) (6) (2) (10) (10) (9) (9) 
line 419: clear
