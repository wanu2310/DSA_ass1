line 1: k=1
line 2: clear
line 3: buildTree 1
(10) 
line 4: inorderTraversal
(10) 
line 5: postorderTraversal
(10) 
line 6: inorderTraversal
(10) 
line 7: insert (2)
line 8: inorderTraversal
(2) (10) 
line 9: insert (8)
line 10: inorderTraversal
(2) (8) (10) 
line 11: insert (5)
line 12: inorderTraversal
(2) (5) (8) (10) 
line 13: insert (10)
line 14: inorderTraversal
(2) (5) (8) (10) (10) 
line 15: insert (5)
line 16: inorderTraversal
(2) (5) (5) (8) (10) (10) 
line 17: kNearestNeighbour 10 (8)
(2) (5) (5) (8) (10) (10) 
line 18: inorderTraversal
(2) (5) (5) (8) (10) (10) 
line 19: clear
line 20: buildTree 11
(2) (9) (9) (8) (2) (5) (5) (9) (9) (4) (8) 
line 21: inorderTraversal
(2) (2) (4) (5) (5) (8) (8) (9) (9) (9) (9) 
line 22: nodeCount_height_leafCount
nodeCount=11;height=5;leafCount=4
line 23: inorderTraversal
(2) (2) (4) (5) (5) (8) (8) (9) (9) (9) (9) 
line 24: clear
line 25: buildTree 15
(8) (8) (1) (6) (4) (4) (1) (10) (7) (8) (9) (4) (4) (8) (8) 
line 26: inorderTraversal
(1) (1) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) (10) 
line 27: remove (10)
line 28: inorderTraversal
(1) (1) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) 
line 29: kNearestNeighbour 8 (2)
(1) (1) (4) (4) (4) (4) (6) (7) 
line 30: inorderTraversal
(1) (1) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) 
line 31: insert (2)
line 32: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) 
line 33: insert (10)
line 34: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) (10) 
line 35: nearestNeighbour (10)
(10) 
line 36: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) (10) 
line 37: kNearestNeighbour 8 (8)
(7) (8) (8) (8) (8) (8) (9) (10) 
line 38: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) (10) 
line 39: remove (7)
line 40: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (6) (8) (8) (8) (8) (8) (9) (10) 
line 41: nearestNeighbour (3)
(2) 
line 42: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (6) (8) (8) (8) (8) (8) (9) (10) 
line 43: kNearestNeighbour 4 (7)
(6) (8) (8) (8) 
line 44: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (6) (8) (8) (8) (8) (8) (9) (10) 
line 45: insert (9)
line 46: inorderTraversal
(1) (1) (2) (4) (4) (4) (4) (6) (8) (8) (8) (8) (8) (9) (9) (10) 
line 47: insert (2)
line 48: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (6) (8) (8) (8) (8) (8) (9) (9) (10) 
line 49: insert (7)
line 50: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 51: nearestNeighbour (9)
(9) 
line 52: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 53: nearestNeighbour (5)
(6) 
line 54: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (6) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 55: insert (7)
line 56: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 57: insert (5)
line 58: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) (10) 
line 59: remove (10)
line 60: inorderTraversal
(1) (1) (2) (2) (4) (4) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 61: insert (3)
line 62: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 63: nearestNeighbour (3)
(3) 
line 64: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 65: search (9)
TRUE
line 66: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 67: nodeCount_height_leafCount
nodeCount=20;height=8;leafCount=4
line 68: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 69: kNearestNeighbour 7 (9)
(8) (8) (8) (8) (8) (9) (9) 
line 70: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 71: insert (7)
line 72: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 73: insert (5)
line 74: inorderTraversal
(1) (1) (2) (2) (3) (4) (4) (4) (4) (5) (5) (6) (7) (7) (7) (8) (8) (8) (8) (8) (9) (9) 
line 75: clear
line 76: buildTree 9
(9) (8) (1) (2) (3) (7) (5) (8) (5) 
line 77: inorderTraversal
(1) (2) (3) (5) (5) (7) (8) (8) (9) 
line 78: insert (6)
line 79: inorderTraversal
(1) (2) (3) (5) (5) (6) (7) (8) (8) (9) 
line 80: kNearestNeighbour 5 (1)
(1) (2) (3) (5) (5) 
line 81: inorderTraversal
(1) (2) (3) (5) (5) (6) (7) (8) (8) (9) 
line 82: remove (7)
line 83: inorderTraversal
(1) (2) (3) (5) (5) (6) (8) (8) (9) 
line 84: kNearestNeighbour 5 (1)
(1) (2) (3) (5) (5) 
line 85: inorderTraversal
(1) (2) (3) (5) (5) (6) (8) (8) (9) 
line 86: remove (7)
line 87: inorderTraversal
(1) (2) (3) (5) (5) (6) (8) (8) (9) 
line 88: insert (4)
line 89: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (8) (8) (9) 
line 90: nearestNeighbour (2)
(2) 
line 91: inorderTraversal
(1) (2) (3) (4) (5) (5) (6) (8) (8) (9) 
line 92: clear
line 93: buildTree 15
(6) (2) (9) (10) (7) (5) (10) (5) (1) (7) (9) (6) (3) (8) (2) 
line 94: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 95: nearestNeighbour (9)
(9) 
line 96: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 97: kNearestNeighbour 8 (10)
(6) (7) (7) (8) (9) (9) (10) (10) 
line 98: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 99: kNearestNeighbour 4 (10)
(9) (9) (10) (10) 
line 100: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 101: remove (9)
line 102: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 103: kNearestNeighbour 8 (6)
(5) (5) (6) (6) (7) (7) (8) (9) 
line 104: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 105: nearestNeighbour (8)
(8) 
line 106: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 107: insert (2)
line 108: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 109: kNearestNeighbour 1 (1)
(1) 
line 110: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (10) (10) 
line 111: insert (9)
line 112: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 113: search (9)
TRUE
line 114: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 115: kNearestNeighbour 8 (10)
(6) (7) (7) (8) (9) (9) (10) (10) 
line 116: inorderTraversal
(1) (2) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 117: remove (2)
line 118: inorderTraversal
(1) (2) (2) (3) (5) (5) (6) (6) (7) (7) (8) (9) (9) (10) (10) 
line 119: clear
line 120: buildTree 13
(6) (9) (3) (6) (6) (1) (5) (8) (2) (5) (5) (8) (1) 
line 121: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (8) (8) (9) 
line 122: insert (6)
line 123: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 124: nearestNeighbour (10)
(9) 
line 125: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 126: nearestNeighbour (4)
(3) 
line 127: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 128: kNearestNeighbour 4 (8)
(6) (8) (8) (9) 
line 129: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 130: nearestNeighbour (4)
(3) 
line 131: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 132: nearestNeighbour (7)
(6) 
line 133: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 134: kNearestNeighbour 6 (4)
(2) (3) (5) (5) (5) (6) 
line 135: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 136: insert (4)
line 137: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 138: remove (4)
line 139: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 140: kNearestNeighbour 3 (7)
(6) (6) (6) 
line 141: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (6) (8) (8) (9) 
line 142: remove (6)
line 143: inorderTraversal
(1) (1) (2) (3) (5) (5) (5) (6) (6) (6) (8) (8) (9) 
line 144: insert (4)
line 145: inorderTraversal
(1) (1) (2) (3) (4) (5) (5) (5) (6) (6) (6) (8) (8) (9) 
line 146: clear
line 147: buildTree 20
(4) (4) (10) (3) (2) (2) (4) (7) (3) (4) (10) (1) (3) (1) (1) (2) (8) (8) (5) (10) 
line 148: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (10) (10) (10) 
line 149: kNearestNeighbour 6 (3)
(2) (2) (2) (3) (3) (3) 
line 150: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (10) (10) (10) 
line 151: nearestNeighbour (2)
(2) 
line 152: inorderTraversal
(1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (10) (10) (10) 
line 153: insert (1)
line 154: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (10) (10) (10) 
line 155: nearestNeighbour (3)
(3) 
line 156: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (10) (10) (10) 
line 157: insert (10)
line 158: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (10) (10) (10) (10) 
line 159: kNearestNeighbour 8 (1)
(1) (1) (1) (1) (2) (2) (2) (3) 
line 160: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (10) (10) (10) (10) 
line 161: kNearestNeighbour 1 (6)
(5) 
line 162: inorderTraversal
(1) (1) (1) (1) (2) (2) (2) (3) (3) (3) (4) (4) (4) (4) (5) (7) (8) (8) (10) (10) (10) (10) 
line 163: clear
line 164: buildTree 1
(7) 
line 165: inorderTraversal
(7) 
line 166: search (7)
TRUE
line 167: inorderTraversal
(7) 
line 168: insert (5)
line 169: inorderTraversal
(5) (7) 
line 170: insert (8)
line 171: inorderTraversal
(5) (7) (8) 
line 172: insert (10)
line 173: inorderTraversal
(5) (7) (8) (10) 
line 174: remove (5)
line 175: inorderTraversal
(7) (8) (10) 
line 176: kNearestNeighbour 6 (3)
(7) (8) (10) 
line 177: inorderTraversal
(7) (8) (10) 
line 178: nearestNeighbour (8)
(8) 
line 179: inorderTraversal
(7) (8) (10) 
line 180: clear
line 181: buildTree 15
(8) (2) (2) (1) (6) (6) (1) (6) (2) (6) (5) (4) (8) (6) (5) 
line 182: inorderTraversal
(1) (1) (2) (2) (2) (4) (5) (5) (6) (6) (6) (6) (6) (8) (8) 
line 183: insert (4)
line 184: inorderTraversal
(1) (1) (2) (2) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (8) (8) 
line 185: insert (1)
line 186: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (8) (8) 
line 187: kNearestNeighbour 2 (7)
(6) (8) 
line 188: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (8) (8) 
line 189: nearestNeighbour (9)
(8) 
line 190: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (8) (8) 
line 191: postorderTraversal
(1) (1) (1) (4) (4) (2) (2) (2) (5) (6) (8) (8) (6) (6) (6) (6) (5) 
line 192: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (8) (8) 
line 193: insert (8)
line 194: inorderTraversal
(1) (1) (1) (2) (2) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (8) (8) (8) 
line 195: remove (2)
line 196: inorderTraversal
(1) (1) (1) (2) (2) (4) (4) (5) (5) (6) (6) (6) (6) (6) (8) (8) (8) 
line 197: clear
line 198: buildTree 11
(8) (4) (6) (10) (7) (2) (4) (2) (2) (10) (4) 
line 199: inorderTraversal
(2) (2) (2) (4) (4) (4) (6) (7) (8) (10) (10) 
line 200: kNearestNeighbour 2 (5)
(4) (6) 
line 201: inorderTraversal
(2) (2) (2) (4) (4) (4) (6) (7) (8) (10) (10) 
line 202: kNearestNeighbour 9 (3)
(2) (2) (2) (4) (4) (4) (6) (7) (8) 
line 203: inorderTraversal
(2) (2) (2) (4) (4) (4) (6) (7) (8) (10) (10) 
line 204: insert (5)
line 205: inorderTraversal
(2) (2) (2) (4) (4) (4) (5) (6) (7) (8) (10) (10) 
line 206: remove (8)
line 207: inorderTraversal
(2) (2) (2) (4) (4) (4) (5) (6) (7) (10) (10) 
line 208: clear
line 209: buildTree 8
(7) (5) (5) (8) (3) (3) (8) (6) 
line 210: inorderTraversal
(3) (3) (5) (5) (6) (7) (8) (8) 
line 211: kNearestNeighbour 2 (9)
(8) (8) 
line 212: inorderTraversal
(3) (3) (5) (5) (6) (7) (8) (8) 
line 213: insert (3)
line 214: inorderTraversal
(3) (3) (3) (5) (5) (6) (7) (8) (8) 
line 215: insert (9)
line 216: inorderTraversal
(3) (3) (3) (5) (5) (6) (7) (8) (8) (9) 
line 217: kNearestNeighbour 9 (9)
(3) (3) (5) (5) (6) (7) (8) (8) (9) 
line 218: inorderTraversal
(3) (3) (3) (5) (5) (6) (7) (8) (8) (9) 
line 219: insert (3)
line 220: inorderTraversal
(3) (3) (3) (3) (5) (5) (6) (7) (8) (8) (9) 
line 221: insert (4)
line 222: inorderTraversal
(3) (3) (3) (3) (4) (5) (5) (6) (7) (8) (8) (9) 
line 223: kNearestNeighbour 2 (5)
(5) (5) 
line 224: inorderTraversal
(3) (3) (3) (3) (4) (5) (5) (6) (7) (8) (8) (9) 
line 225: insert (10)
line 226: inorderTraversal
(3) (3) (3) (3) (4) (5) (5) (6) (7) (8) (8) (9) (10) 
line 227: insert (3)
line 228: inorderTraversal
(3) (3) (3) (3) (3) (4) (5) (5) (6) (7) (8) (8) (9) (10) 
line 229: kNearestNeighbour 5 (2)
(3) (3) (3) (3) (3) 
line 230: inorderTraversal
(3) (3) (3) (3) (3) (4) (5) (5) (6) (7) (8) (8) (9) (10) 
line 231: insert (6)
line 232: inorderTraversal
(3) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) 
line 233: remove (10)
line 234: inorderTraversal
(3) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (9) 
line 235: nearestNeighbour (9)
(9) 
line 236: inorderTraversal
(3) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (9) 
line 237: insert (10)
line 238: inorderTraversal
(3) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) 
line 239: postorderTraversal
(3) (4) (3) (3) (3) (3) (6) (6) (5) (10) (9) (8) (8) (7) (5) 
line 240: inorderTraversal
(3) (3) (3) (3) (3) (4) (5) (5) (6) (6) (7) (8) (8) (9) (10) 
line 241: clear
line 242: buildTree 5
(4) (6) (7) (1) (7) 
line 243: inorderTraversal
(1) (4) (6) (7) (7) 
line 244: remove (4)
line 245: inorderTraversal
(1) (6) (7) (7) 
line 246: nearestNeighbour (9)
(7) 
line 247: inorderTraversal
(1) (6) (7) (7) 
line 248: kNearestNeighbour 9 (9)
(1) (6) (7) (7) 
line 249: inorderTraversal
(1) (6) (7) (7) 
line 250: kNearestNeighbour 10 (1)
(1) (6) (7) (7) 
line 251: inorderTraversal
(1) (6) (7) (7) 
line 252: insert (2)
line 253: inorderTraversal
(1) (2) (6) (7) (7) 
line 254: remove (6)
line 255: inorderTraversal
(1) (2) (7) (7) 
line 256: kNearestNeighbour 10 (4)
(1) (2) (7) (7) 
line 257: inorderTraversal
(1) (2) (7) (7) 
line 258: remove (7)
line 259: inorderTraversal
(1) (2) (7) 
line 260: kNearestNeighbour 5 (9)
(1) (2) (7) 
line 261: inorderTraversal
(1) (2) (7) 
line 262: nearestNeighbour (2)
(2) 
line 263: inorderTraversal
(1) (2) (7) 
line 264: insert (10)
line 265: inorderTraversal
(1) (2) (7) (10) 
line 266: insert (5)
line 267: inorderTraversal
(1) (2) (5) (7) (10) 
line 268: kNearestNeighbour 3 (9)
(5) (7) (10) 
line 269: inorderTraversal
(1) (2) (5) (7) (10) 
line 270: kNearestNeighbour 9 (8)
(1) (2) (5) (7) (10) 
line 271: inorderTraversal
(1) (2) (5) (7) (10) 
line 272: insert (8)
line 273: inorderTraversal
(1) (2) (5) (7) (8) (10) 
line 274: clear
line 275: buildTree 5
(5) (3) (10) (9) (5) 
line 276: inorderTraversal
(3) (5) (5) (9) (10) 
line 277: insert (10)
line 278: inorderTraversal
(3) (5) (5) (9) (10) (10) 
line 279: insert (3)
line 280: inorderTraversal
(3) (3) (5) (5) (9) (10) (10) 
line 281: insert (4)
line 282: inorderTraversal
(3) (3) (4) (5) (5) (9) (10) (10) 
line 283: nearestNeighbour (3)
(3) 
line 284: inorderTraversal
(3) (3) (4) (5) (5) (9) (10) (10) 
line 285: kNearestNeighbour 1 (6)
(5) 
line 286: inorderTraversal
(3) (3) (4) (5) (5) (9) (10) (10) 
line 287: nearestNeighbour (8)
(9) 
line 288: inorderTraversal
(3) (3) (4) (5) (5) (9) (10) (10) 
line 289: insert (10)
line 290: inorderTraversal
(3) (3) (4) (5) (5) (9) (10) (10) (10) 
line 291: insert (3)
line 292: inorderTraversal
(3) (3) (3) (4) (5) (5) (9) (10) (10) (10) 
line 293: remove (10)
line 294: inorderTraversal
(3) (3) (3) (4) (5) (5) (9) (10) (10) 
line 295: preorderTraversal
(5) (3) (3) (4) (3) (9) (5) (10) (10) 
line 296: inorderTraversal
(3) (3) (3) (4) (5) (5) (9) (10) (10) 
line 297: insert (6)
line 298: inorderTraversal
(3) (3) (3) (4) (5) (5) (6) (9) (10) (10) 
line 299: nearestNeighbour (10)
(10) 
line 300: inorderTraversal
(3) (3) (3) (4) (5) (5) (6) (9) (10) (10) 
line 301: search (6)
TRUE
line 302: inorderTraversal
(3) (3) (3) (4) (5) (5) (6) (9) (10) (10) 
line 303: clear
line 304: buildTree 20
(9) (5) (10) (9) (4) (5) (10) (5) (4) (6) (4) (3) (1) (9) (5) (6) (1) (4) (3) (1) 
line 305: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) 
line 306: nodeCount_height_leafCount
nodeCount=20;height=6;leafCount=7
line 307: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (9) (9) (9) (10) (10) 
line 308: insert (7)
line 309: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (9) (9) (9) (10) (10) 
line 310: kNearestNeighbour 7 (6)
(5) (5) (5) (5) (6) (6) (7) 
line 311: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (9) (9) (9) (10) (10) 
line 312: nearestNeighbour (7)
(7) 
line 313: inorderTraversal
(1) (1) (1) (3) (3) (4) (4) (4) (4) (5) (5) (5) (5) (6) (6) (7) (9) (9) (9) (10) (10) 
line 314: clear
line 315: buildTree 14
(7) (5) (9) (1) (2) (10) (1) (7) (6) (6) (2) (7) (7) (2) 
line 316: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (7) (7) (7) (7) (9) (10) 
line 317: insert (9)
line 318: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (7) (7) (7) (7) (9) (9) (10) 
line 319: nodeCount_height_leafCount
nodeCount=15;height=7;leafCount=5
line 320: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (7) (7) (7) (7) (9) (9) (10) 
line 321: insert (8)
line 322: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 323: nearestNeighbour (7)
(7) 
line 324: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 325: search (5)
TRUE
line 326: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 327: kNearestNeighbour 3 (2)
(2) (2) (2) 
line 328: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 329: nodeCount_height_leafCount
nodeCount=16;height=7;leafCount=5
line 330: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 331: insert (6)
line 332: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 333: kNearestNeighbour 1 (9)
(9) 
line 334: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 335: kNearestNeighbour 4 (1)
(1) (1) (2) (2) 
line 336: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 337: kNearestNeighbour 7 (2)
(1) (1) (2) (2) (2) (5) (6) 
line 338: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 339: nearestNeighbour (3)
(2) 
line 340: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 341: nodeCount_height_leafCount
nodeCount=17;height=7;leafCount=5
line 342: inorderTraversal
(1) (1) (2) (2) (2) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 343: remove (2)
line 344: inorderTraversal
(1) (1) (2) (2) (5) (6) (6) (6) (7) (7) (7) (7) (8) (9) (9) (10) 
line 345: insert (8)
line 346: inorderTraversal
(1) (1) (2) (2) (5) (6) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (10) 
line 347: clear
line 348: buildTree 5
(6) (2) (2) (2) (10) 
line 349: inorderTraversal
(2) (2) (2) (6) (10) 
line 350: nearestNeighbour (5)
(6) 
line 351: inorderTraversal
(2) (2) (2) (6) (10) 
line 352: kNearestNeighbour 8 (8)
(2) (2) (2) (6) (10) 
line 353: inorderTraversal
(2) (2) (2) (6) (10) 
line 354: remove (2)
line 355: inorderTraversal
(2) (2) (6) (10) 
line 356: clear
line 357: buildTree 17
(3) (8) (7) (4) (6) (5) (5) (9) (7) (9) (2) (2) (4) (9) (7) (4) (5) 
line 358: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (9) (9) (9) 
line 359: insert (8)
line 360: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) 
line 361: nearestNeighbour (6)
(6) 
line 362: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) 
line 363: insert (10)
line 364: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 365: insert (6)
line 366: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 367: kNearestNeighbour 4 (2)
(2) (2) (3) (4) 
line 368: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) 
line 369: insert (10)
line 370: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 371: kNearestNeighbour 3 (9)
(9) (9) (9) 
line 372: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 373: insert (7)
line 374: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 375: nearestNeighbour (9)
(9) 
line 376: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (9) (9) (9) (10) (10) 
line 377: insert (8)
line 378: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 379: postorderTraversal
(2) (2) (4) (4) (4) (3) (6) (6) (5) (5) (7) (7) (7) (8) (8) (10) (10) (9) (9) (9) (8) (7) (5) 
line 380: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) 
line 381: insert (10)
line 382: inorderTraversal
(2) (2) (3) (4) (4) (4) (5) (5) (5) (6) (6) (7) (7) (7) (7) (8) (8) (8) (9) (9) (9) (10) (10) (10) 
line 383: clear
line 384: buildTree 17
(1) (5) (1) (1) (9) (8) (4) (4) (8) (10) (2) (9) (5) (1) (1) (7) (9) 
line 385: inorderTraversal
(1) (1) (1) (1) (1) (2) (4) (4) (5) (5) (7) (8) (8) (9) (9) (9) (10) 
line 386: nearestNeighbour (2)
(2) 
line 387: inorderTraversal
(1) (1) (1) (1) (1) (2) (4) (4) (5) (5) (7) (8) (8) (9) (9) (9) (10) 
line 388: insert (5)
line 389: inorderTraversal
(1) (1) (1) (1) (1) (2) (4) (4) (5) (5) (5) (7) (8) (8) (9) (9) (9) (10) 
line 390: clear
line 391: buildTree 2
(2) (6) 
line 392: inorderTraversal
(2) (6) 
line 393: remove (2)
line 394: inorderTraversal
(6) 
line 395: nearestNeighbour (5)
(6) 
line 396: inorderTraversal
(6) 
line 397: nearestNeighbour (10)
(6) 
line 398: inorderTraversal
(6) 
line 399: insert (2)
line 400: inorderTraversal
(2) (6) 
line 401: insert (5)
line 402: inorderTraversal
(2) (5) (6) 
line 403: insert (8)
line 404: inorderTraversal
(2) (5) (6) (8) 
line 405: insert (9)
line 406: inorderTraversal
(2) (5) (6) (8) (9) 
line 407: insert (8)
line 408: inorderTraversal
(2) (5) (6) (8) (8) (9) 
line 409: insert (2)
line 410: inorderTraversal
(2) (2) (5) (6) (8) (8) (9) 
line 411: insert (7)
line 412: inorderTraversal
(2) (2) (5) (6) (7) (8) (8) (9) 
line 413: clear
line 414: buildTree 7
(7) (7) (9) (5) (10) (10) (2) 
line 415: inorderTraversal
(2) (5) (7) (7) (9) (10) (10) 
line 416: clear
line 417: buildTree 3
(8) (6) (3) 
line 418: inorderTraversal
(3) (6) (8) 
line 419: insert (8)
line 420: inorderTraversal
(3) (6) (8) (8) 
line 421: insert (1)
line 422: inorderTraversal
(1) (3) (6) (8) (8) 
line 423: nodeCount_height_leafCount
nodeCount=5;height=3;leafCount=2
line 424: inorderTraversal
(1) (3) (6) (8) (8) 
line 425: preorderTraversal
(6) (3) (1) (8) (8) 
line 426: postorderTraversal
(1) (3) (8) (8) (6) 
line 427: clear
